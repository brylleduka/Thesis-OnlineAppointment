{"version":3,"sources":["serviceWorker.js","context/auth.js","util/graphql.js","components/styled/navigation.js","components/main/navigation/Burger.js","components/main/navigation/Navigation.js","components/main/navigation/navHook.js","components/styled/containers.js","components/main/home/Showcase.js","components/main/home/CategoryCards.js","components/main/home/Team.js","components/main/home/Section2.js","components/main/home/Section3.js","pages/main/Home.js","pages/main/About.js","util/hooks.js","components/styled/utils.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/styled/loader.js","components/Spinner.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","components/main/user/AccountDetails.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/styled/skeleton.js","components/Skeleton.js","pages/main/MyAccount.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","components/main/user/AppointmentCancel.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/Accordion.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","pages/admin/Dashboard.js","pages/admin/Appointments.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","FETCH_USER_ACCOUNT","gql","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_ALL_CATEGORIES_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_CATEGORY_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","FETCH_EMPLOYEE_QUERY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","DNavigation","styled","nav","DMenu","ul","theme","secondary","DMainMenu","primary","blue","open","dark","DRightMenu","DBurger","Burger","setOpen","onClick","Navigation","ref","handler","node","useRef","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","history","useHistory","useContext","useQuery","variables","userId","userInfo","data","trigger","loading","style","fontSize","Icon","name","firstName","className","src","alt","to","Dropdown","Menu","Item","_id","push","columns","rows","DContainer","div","DShowCase","header","height","background","bgcolor","Overlay","bg","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","DCard","imgHeight","DSection","width","fixed","Content","fluid","rounded","imgWidth","DFooterLinks","DFooter","footer","Showcase","CategoryCards","cards","Team","Section2","Section3","Home","card1","About","useForm","callback","useState","values","setValues","handleChange","handleSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","ripple","keyframes","DButton","button","fSize","size","text","border","basic","color","light","DButtonCancel","red","DButtonConfirm","green","DLabel","label","ls","weight","m","tt","hover","NavItem","bluer","DAccordion","fs","uc","lc","Toasted","status","REGISTER_USER","SignupForm","hist","from","errors","setErrors","register","lastName","email","password","confirmPassword","useMutation","update","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","error","Label","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","zIndex","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","result","console","log","loginUser","userX","general","Signin","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","as","timeSlot","startTimeMoment","i","add","format","styles","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","selectedTime","times","appointmentTimes","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","date","toLocaleDateString","data_appointments","workStart","employee","schedule","breakStart","day","map","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","key","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","loading_categories","data_categories","useLazyQuery","categoryId","category","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","padding","inverted","e","categories","cursor","position","outline","visibility","textAlign","services","employees","servEmp","keyring","SpinnerRing","small","medium","Spinner","large","CREATE_NEW_APPOINTMENT","diplay","justifyContent","alignItems","Confirmation","addInfo","setAddInfo","cache","readQuery","newAppointment","createAppointment","writeQuery","myAppointments","toaster","notify","onClose","expiredLog","check","start","message","Modal","Header","readOnly","title","toDateString","Actions","Appointment","setCategories","setService","setServiceEmp","disabled","VERRIFIED_APPOINTMENT","ThankYou","emailToken","params","go","appointmentId","verifiedAppointment","onload","Link","VerifyNotice","UPDATE_USER","AccountDetails","myDetails","updateUser","contact","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","CurrentAppointment","currentAppointData","currentAppointLoading","selector","sortable","wrap","row","parseInt","cell","myCurrentAppointment","currentAppoint","responsive","highlightOnHover","pointerOnHover","pagination","paginationRowsPerPageOptions","MyAppointmentHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","historyAppoint","paginationPerPage","placeholderAnimate","DSkeleton","wid","Skeleton","UPLOAD_USER_PHOTO","MyAccount","userLoading","addUserPhoto","onDrop","useCallback","file","useDropzone","getRootProps","getInputProps","isDragActive","photo","AdminAuthRoute","Component","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","CANCEL_APPOINTMENT_MUTATION","AppointmentCancel","invalidCancellation","cancelAppointment","field","display","jusitfyContent","input","AppointmentDetails","setMyAppoint","appointment","margn","jusitfy","goBack","Main","path","exact","UpcommingAppointments","appointments","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","Accordion","setActive","contentRef","maxHeight","scrollHeight","icon","children","SideNav","activeClassName","Layout","Dashboard","setAppointments","setpercentage","chartData","setChartData","labels","datasets","borderColor","borderWidth","options","scales","xAxes","gridLines","yAxes","legend","Appointments","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","role","workLength","breakLength","newEmployee","aestheticiansReceps","Checkbox","class","Employees","setEmployeesAR","data_employeesAR","loading_employeesAR","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","bio","content","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","setServices","dataCategory","loadingCategory","addService","flexDirection","close","marginLeft","EmployeeServices","overflow","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","borderBottom","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","description","newCategory","Categories","html","DOMParser","parseFromString","documentElement","textContent","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","price","newService","serviceExist","ServiceList","progressComponent","UPLOAD_CATEGORY_PHOTO","Category","setCategory","dataLoading","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","Service","serviceData","serviceLoading","addServicePhoto","replace","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","letterSpacing","Admin","yellow","App","uploadLink","createUploadLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.294c3fc5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps {\r\n    aestheticiansReceps {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  FETCH_USER_ACCOUNT,\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: #fff;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 12vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 17px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      // flex-direction: column;\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n  }\r\n\r\n  li a:hover,\r\n  &.active {\r\n    border-bottom: 2px solid ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.primary};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.blue};\r\n    transform: ${({ open }) =>\r\n      open ? \"skewX(-15deg) translateX(0%)\" : \"translateX(100%)\"};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \"skewX(15deg) translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.dark};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import React, { useRef, useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { DNavigation, DMainMenu, DRightMenu } from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n\r\n  let history = useHistory();\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/zessence\");\r\n  };\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: user ? user.userId : \"\"\r\n      }\r\n    }\r\n  );\r\n\r\n  const trigger = (\r\n    <>\r\n      {userInfo ? (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {userInfo.user.firstName}\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <DNavigation ref={node}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open}>\r\n          <li>\r\n            <Link to=\"/zessence\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/services&rates\">Services & Rates</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/about\">About Us</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/testimonials\">Testimonials</Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>\r\n                    {!userInfo ? (\r\n                      <h6>Loading...</h6>\r\n                    ) : (\r\n                      <Link to={`/zessence/myaccount/${userInfo.user._id}`}>\r\n                        My Account\r\n                      </Link>\r\n                    )}\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired\r\n};\r\n\r\nexport default Navigation;\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 90%;\r\n  max-width: 90%;\r\n  margin: auto;\r\n`;\r\n\r\nexport const DShowCase = styled.header`\r\n  width: 100%;\r\n  height: ${props => (props.height ? props.height : \"90vh\")};\r\n  position: relative;\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  margin-top: 10vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding-bottom: 50px;\r\n  margin-bottom: 20px;\r\n\r\n  h2,\r\n  p {\r\n    margin-bottom: 10px;\r\n  }\r\n  .btn {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${props => (props.bg ? props.bg : \"rgba(0, 0, 0, 0.15)\")};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  padding: ${props => props.pad && props.pad};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  opacity: ${props => props.opac && props.opac};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hovOpac && props.hovOpac};\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: ${props =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${props => props.gap && props.gap};\r\n  grid-template-rows: ${props =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${props => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${props => (props.circle ? \"40% 40% 10px 10px\" : \"20px\")};\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 300px;\r\n      object-fit: cover;\r\n      border-radius: ${props => (props.circle ? \"50%\" : \"20px\")};\r\n    }\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n    0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n    0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n  img {\r\n    width: 100%;\r\n    height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    object-fit: cover;\r\n    border-radius: inherit;\r\n  }\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${props => (props.height ? props.height : \"400px\")};\r\n  width:  ${props => (props.width ? props.width : \"100%\")};;\r\n  margin: ${props => props.margin && props.margin};\r\n  padding: ${props => props.pad && props.pad};\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${props => props.fixed && \"fixed\"};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  position: relative;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${props => props.height && props.height};\r\n  width: ${props => (props.width ? props.width : props.fluid ? \"100%\" : \"50%\")};\r\n  padding: ${props => props.pad && props.pad};\r\n\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${props => props.margin && props.margin};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  z-index: 2;\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n  p {\r\n    margin: 10px 0 20px;\r\n  }\r\n\r\n  img {\r\n    max-height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${props => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\n\r\nconst Showcase = () => {\r\n  return (\r\n    <DShowCase\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2>Surface</h2>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam,\r\n        doloribus.\r\n      </p>\r\n      <Link to=\"/zessence\" className=\"btn\">\r\n        Book Appointment\r\n      </Link>\r\n      <Overlay />\r\n    </DShowCase>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid } from \"../../styled/containers\";\r\n\r\nconst CategoryCards = ({ cards }) => {\r\n  return (\r\n    <>\r\n      <h1>Our Services</h1>\r\n      <DGrid four margin=\"0 0 40px 0\" gap=\"20px\" circle>\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Facial Treatment</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"card 1\"\r\n          />\r\n          <div className=\"card-details\">\r\n            <h3>Diamond Peeling</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Body Treatment</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Permanent Makeup</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid } from \"../../styled/containers\";\r\n\r\nconst Team = ({ cards }) => {\r\n  return (\r\n    <>\r\n      <h1>Our Team</h1>\r\n      <DGrid four margin=\"40px 0 40px 0\" gap=\"20px\">\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"card 1\"\r\n          />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section2 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      pad=\"100px 0 0 30px\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategoryCards from \"../../components/main/home/CategoryCards\";\r\nimport Team from \"../../components/main/home/Team\";\r\nimport Section2 from \"../../components/main/home/Section2\";\r\nimport Section3 from \"../../components/main/home/Section3\";\r\n\r\nimport { DContainer } from \"../../components/styled/containers\";\r\n\r\nconst Home = () => {\r\n  const card1 = \"/images/card1.jpg\";\r\n  return (\r\n    <DContainer>\r\n      {/* SHOWCASE */}\r\n\r\n      <Showcase />\r\n      {/* Home Cards 1 */}\r\n      <CategoryCards cards={card1} />\r\n\r\n      {/* SECTION 2 */}\r\n      <Section2 />\r\n\r\n      {/* Home Cards 2 */}\r\n      <Team cards={card1} />\r\n      {/* Carbon */}\r\n      <Section3 />\r\n      <section className=\"follow\">\r\n        <p>Follow Z Essence</p>\r\n        <Link to=\"/\">\r\n          <h4>Facebook</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>Twitter</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>LinkedIn</h4>\r\n        </Link>\r\n      </section>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <DContainer>\r\n      <DSection bgcolor=\"#d3d3d3\" height=\"100vh\" push>\r\n        <Content flex justify=\"center\" align=\"center\" fluid height=\"100%\">\r\n          <h3>Hello</h3>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${props => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${props => (props.size ? props.size : \"36px\")};\r\n  width: ${props =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: 6px 16px;\r\n  line-height: 1.42857143;\r\n  margin: 1.5%;\r\n  text-align: center;\r\n  text-transform: ${props => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #1CA7EC\"\r\n      : \"0\"};\r\n\r\n  border-radius: 5px;\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.blue};\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.blue)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.blue}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonCancel = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.red};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #f12711\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.red)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n`;\r\n\r\nexport const DButtonConfirm = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.green};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #0f9b0f\"\r\n      : props.basic\r\n      ? \"2px solid #0f9b0f\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n`;\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${props => (props.size ? props.size : \"12px\")};\r\n  color: ${props => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${props => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${props => props.weight && props.weight};\r\n  padding: ${props => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${props => (props.m ? props.m : \"1%\")};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  text-transform: ${props => props.tt && props.tt};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hover && \"0.8\"};\r\n    cursor: ${props => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${props => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${props => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${props => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${props => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${props =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.6s ease;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${props =>\r\n    props.status === \"error\"\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.status === \"success\"\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.status === \"warning\"\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(69, 170, 242,1.0)\"};\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .close {\r\n    height: 100%;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signin\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/signin\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DGrid two className=\"signup-custom\">\r\n      <DSection height=\"100%\" flex justify=\"center\" align=\"center\" width=\"100%\">\r\n        <SignupForm from={from} hist={hist} />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        margin=\"0\"\r\n        background={\r\n          \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n          <h2>Sign Up</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n            magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n            est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n            repudiandae tempore alias ratione.\r\n          </p>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n    \r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted(result) {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      console.log(err);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport { DGrid, Content, DSection } from \"../../components/styled/containers\";\r\n\r\nconst Signin = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/appointment\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DGrid two className=\"signin-custom\">\r\n      <DSection\r\n        height=\"100vh\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        margin=\"0\"\r\n        background={\r\n          \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"signin-left\"\r\n      >\r\n        <Content width=\"90%\">\r\n          <h2>Sign In</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n            magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n            est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n            repudiandae tempore alias ratione.\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100vh\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        className=\"signin-right\"\r\n      >\r\n        <SigninForm from={from} hist={hist} />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS\r\n} from \"../../../util/graphql\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue,\r\n  selectedTime\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two>\r\n      <Content\r\n        height=\"70vh\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        pad=\"0\"\r\n      >\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n        {!data_employee ? (\r\n          <h2>No available time slot</h2>\r\n        ) : loading_employee ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <DGrid three gap=\"20px\">\r\n            {times &&\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql\";\r\nimport { Dimmer, Loader, Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\n\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"80vh\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <Dimmer active inverted>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <Dimmer active inverted>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <Dimmer active inverted>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n  height: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    height: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    margin: ${props => (props.small ? \"3px\" : props.medium ? \"6px\" : \"8px\")};\r\n    border: ${props =>\r\n      props.small\r\n        ? \"3px solid #fff\"\r\n        : props.medium\r\n        ? \"6px solid #fff\"\r\n        : \"8px  solid #fff\"};\r\n\r\n    border-radius: 50%;\r\n    animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: ${props =>\r\n      props.inverted\r\n        ? \"#fff transparent transparent transparent\"\r\n        : \" #000 transparent transparent transparent\"};\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = ({ small, large, medium, inverted }) => {\r\n  return (\r\n    <SpinnerRing\r\n      small={small}\r\n      large={large}\r\n      medium={medium}\r\n      inverted={inverted}\r\n    >\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_MY_APPOINTMENTS\r\n} from \"../../../util/graphql\";\r\nimport { Modal, Form, Input } from \"semantic-ui-react\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/zessence/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.name}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      ></DSection>\r\n      <DSection height=\"100%\" pad=\"0 20px\">\r\n        <DGrid custom=\"500px 1fr\">\r\n          <AppointmentInputs\r\n            user={user}\r\n            values={values}\r\n            setValues={setValues}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n          />\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DGrid>\r\n              <AppointDate\r\n                setStartDate={setStartDate}\r\n                setSelectedTime={setSelectedTime}\r\n                selectedTime={selectedTime}\r\n                startDate={startDate}\r\n                employeeVal={employeeVal}\r\n                serviceValue={serviceValue}\r\n              />\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DButton\r\n                  size=\"50px\"\r\n                  onClick={() => setOpen(true)}\r\n                  basic={\r\n                    (values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\") &&\r\n                    true\r\n                  }\r\n                  disabled={\r\n                    values.category === \"\" ||\r\n                    serviceValue === \"\" ||\r\n                    employeeVal === \"\" ||\r\n                    selectedTime === \"\"\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  Book an Appointment\r\n                </DButton>\r\n                <Confirmation\r\n                  open={open}\r\n                  setOpen={setOpen}\r\n                  serviceValue={serviceValue}\r\n                  employeeVal={employeeVal}\r\n                  startDate={startDate}\r\n                  selectedTime={selectedTime}\r\n                />\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} to=\"/zessence/MyAccount\" basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DShowCase\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport {useMutation } from \"@apollo/react-hooks\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountDetails = ({ myDetails, userId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const { handleChange, handleSubmit, values } = useForm(updateUserCallBack, {\r\n    firstName: myDetails.firstName,\r\n    lastName: myDetails.lastName,\r\n    email: myDetails.email,\r\n    contact: myDetails.contact\r\n  });\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  function updateUserCallBack() {\r\n    updateUser();\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      flex\r\n      align=\"flex-start\"\r\n      justify=\"flex-start\"\r\n      bgcolor=\"white\"\r\n      pad=\"20px\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>ID</DLabel>\r\n          <input value={userId} readOnly />\r\n        </Form.Field>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n            <input\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n            <input\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n          <input name=\"email\" value={values.email} onChange={handleChange} />\r\n        </Form.Field>\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Content flex justify=\"flex-end\" width=\"100%\">\r\n          <DButton type=\"submit\">\r\n            {loading ? <Spinner small inverted /> : \"Save\"}\r\n          </DButton>\r\n        </Content>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountDetails;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [currentAppoint, setCurrentAppoint] = useState([]);\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zessence/myappointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"50vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      bgcolor=\"#eee\"\r\n      width=\"100%\"\r\n      pad=\"10px\"\r\n      rounded\r\n    >\r\n      <DLabel size=\"16px\" tt=\"uppercase\" weight=\"700\" pad=\"10px 25px\" rounded>\r\n        My Appointment\r\n      </DLabel>\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  }\r\n};\r\n\r\n// const title = (\r\n\r\n// );\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zessence/myappointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"50vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      bgcolor=\"#eee\"\r\n      width=\"100%\"\r\n      pad=\"10px\"\r\n      rounded\r\n    >\r\n      <DLabel size=\"16px\" tt=\"uppercase\" weight=\"700\" pad=\"10px 25px\" rounded>\r\n        My Appointment History\r\n      </DLabel>\r\n      {appointHistoryLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={appointHistoryData.myAppointmentHistory.map(\r\n            historyAppoint => historyAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport AccountDetails from \"../../components/main/user/AccountDetails\";\r\nimport CurrentAppointment from \"../../components/main/user/CurrentAppointment\";\r\nimport MyAppointmentHistory from \"../../components/main/user/MyAppointmentHistory\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst MyAccount = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n  // const [account, setAccount] = useState({});\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (userInfo) {\r\n  //     setAccount(userInfo.user);\r\n  //   }\r\n  // }, [userInfo]);\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      margin=\"20vh auto 10vh auto\"\r\n      width=\"90%\"\r\n      pad=\"40px 50px\"\r\n      background={\r\n        \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Account</h2>\r\n      {userLoading ? (\r\n        <DSection height=\"70vh\">\r\n          <Skeleton />\r\n        </DSection>\r\n      ) : (\r\n        <DGrid gap=\"10px\">\r\n          <Content\r\n            height=\"50vh\"\r\n            flex\r\n            align=\"center\"\r\n            pad=\"10px 15px\"\r\n            bgcolor=\"#eee\"\r\n            width=\"100%\"\r\n            rounded\r\n          >\r\n            <DGrid custom=\"30% 1fr\" gap=\"20px\">\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h4>Drop Image</h4>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          userInfo.user.photo !== null\r\n                            ? `/images/users/${userInfo.user.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n\r\n              <AccountDetails myDetails={userInfo.user} userId={userId} />\r\n            </DGrid>\r\n          </Content>\r\n          <CurrentAppointment />\r\n          <MyAppointmentHistory />\r\n        </DGrid>\r\n      )}\r\n      <Overlay bg=\"rgba(rgba(52, 152, 219,0.3))\" />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default MyAccount;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Redirect to=\"/zessence\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zessence/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ open, setOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel your appointment?</h2>\r\n        <p>Cancellation may result your appointment process in the future</p>\r\n        <h1>{appointmentId}</h1>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton, DButtonCancel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport AppointmentCancel from \"../../components/main/user/AppointmentCancel\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {!data ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input\r\n                  value={data.appointment._id}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={data.appointment.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={data.appointment.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${data.appointment.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={data.appointment.status}\r\n                  readOnly\r\n                  style={\r\n                    data.appointment.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : data.appointment.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : data.appointment.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {data.appointment.status === \"CANCELLED\" ||\r\n            data.appointment.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Cancel\r\n                </DButtonCancel>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n      <AppointmentCancel\r\n        open={open}\r\n        setOpen={setOpen}\r\n        appointmentId={appointmentId}\r\n      />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Services from \"./main/Services\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport MyAccount from \"./main/MyAccount\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/`} component={Home} exact />\r\n        <Route path={`${match.path}/about`} component={About} exact />\r\n        <Route\r\n          path={`${match.path}/verified/:emailToken`}\r\n          component={ThankYou}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`${match.path}/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`${match.path}/login`} component={Signin} exact />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myaccount/:_id`}\r\n          component={MyAccount}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/appointment`}\r\n          component={Appointment}\r\n          exact\r\n        />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst UpcommingAppointments = ({ appointments }) => {\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map(appointment => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\n\r\nconst Header = () => {\r\n  return <HeaderLayout>header</HeaderLayout>;\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion fs={props.fs} uc={props.uc}>\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion\r\n        title={\"Accounts\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            About Us\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/testimonials\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../util/graphql\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [percentage, setpercentage] = useState(1);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setpercentage(80);\r\n\r\n    setChartData({\r\n      labels: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"# of Appointments\",\r\n          data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.7)\",\r\n            \"rgba(54, 162, 235, 0.7)\",\r\n            \"rgba(255, 206, 86, 0.7)\",\r\n            \"rgba(75, 192, 192, 0.7)\",\r\n            \"rgba(153, 102, 255, 0.7)\",\r\n            \"rgba(234, 103, 64, 0.7)\",\r\n            \"rgba(75, 59, 64, 0.7)\",\r\n            \"rgba(75, 159, 64, 0.7)\",\r\n            \"rgba(55, 15, 64, 0.7)\",\r\n            \"rgba(55, 59, 44, 0.7)\",\r\n            \"rgba(25, 59, 34, 0.7)\",\r\n            \"rgba(25, 159, 64, 0.7)\"\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n            \"rgba(255, 159, 64, 1)\"\r\n          ],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    });\r\n  }, [setpercentage, setChartData]);\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          display: false\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          display: false\r\n        }\r\n      ]\r\n    },\r\n    legend: {\r\n      display: false\r\n    }\r\n  };\r\n\r\n  const { loading, data } = useQuery(FETCH_APPOINTMENTS_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.appointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"20vh\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        margin=\"20px 0\"\r\n      >\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.3)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Members</h3>\r\n            <h2>20</h2>\r\n          </Overlay>\r\n        </Content>\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.2)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Appointments</h3>\r\n            <h2>70</h2>\r\n          </Overlay>\r\n        </Content>\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.2)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Inquiries</h3>\r\n            <h2>20</h2>\r\n          </Overlay>\r\n        </Content>\r\n      </DSection>\r\n      <DSection height=\"100%\" margin=\"20px 0 20px 0\">\r\n        <DGrid gap=\"40px\">\r\n          <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid>\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            {loading ? (\r\n              <Overlay flex justify=\"center\" align=\"center\">\r\n                <h2>Loading...</h2>\r\n              </Overlay>\r\n            ) : (\r\n              data.appointments && (\r\n                <UpcommingAppointments\r\n                  appointments={appointments}\r\n                  loading={loading}\r\n                />\r\n              )\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\n\r\n\r\n\r\n\r\nconst Appointments = () => {\r\n  return (\r\n    <Layout>\r\n     \r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"small\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton,\r\n  DButtonConfirm,\r\n  DButtonCancel\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  // if (employee) {\r\n  //   employee.schedule.day.filter(d => daay.push(d));\r\n  // }\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButtonConfirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButtonConfirm>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButtonCancel>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [erros, setErrors] = useState({});\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategory) {\r\n      setCategories(dataCategory.categories);\r\n    }\r\n  }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {dataCategory.categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Exit</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n            <DButtonConfirm type=\"submit\">Yes</DButtonConfirm>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard\r\n} from \"../../components/styled/containers\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection margin=\"20px 0\">\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <DGrid four gap=\"15px\" margin=\"40px 0\">\r\n          {loading ? (\r\n            <h2>Loading...</h2>\r\n          ) : (\r\n            data.categories &&\r\n            data.categories.map(category => (\r\n              <DCard imgHeight=\"200px\" key={category._id}>\r\n                <img\r\n                  src={\r\n                    category.photo !== null\r\n                      ? `/images/category/${category.photo}`\r\n                      : \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  alt=\"category\"\r\n                />\r\n                <div className=\"card-details\">\r\n                  <h3>{category.name}</h3>\r\n                  <p className=\"des\">{extractContent(category.description)}</p>\r\n                  <Link to={`/zeadmin/category/${category._id}`}>\r\n                    <DButton basic>View</DButton>\r\n                  </Link>\r\n                </div>\r\n              </DCard>\r\n            ))\r\n          )}\r\n        </DGrid>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButtonCancel width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButtonCancel>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\n\r\nfunction extractContent(html) {\r\n  return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n    .textContent;\r\n}\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (data_services) {\r\n  //     setServices(data_services.services);\r\n  //   }\r\n  // }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      cell: row => (\r\n        <p style={{ fontWeight: 500 }}>{extractContent(row.description)}</p>\r\n      )\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={data_services.services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY\r\n} from \"../../util/graphql\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = props => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Skeleton width=\"100%\" />\r\n        </>\r\n      ) : (\r\n        <DSection margin=\"20px 0\">\r\n          <h2>{data.category.name}</h2>\r\n          <DGrid>\r\n            <DSection width=\"100%\" height=\"100%\">\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\"\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/category/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </DSection>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_SERVICES_QUERY } from \"../../../util/graphql\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport {\r\n  Toasted,\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel\r\n} from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButtonConfirm onClick={handleSubmit}>Save</DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(true)}>Delete</DButtonCancel>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\n\r\nconst SigninForm = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId && (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId}\r\n            </Label>\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\n// import Appointment from \"./admin/Appointment\";\r\n// import NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Signin from \"./admin/Signin\";\r\n// import Home from \"./admin/cms/Home\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/signin\" exact />\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        {/* <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={Appointment}\r\n        /> */}\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        {/* <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/newappointment\"\r\n          component={NewAppointment}\r\n        /> */}\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        {/* <PrivateRoute exact path=\"/zeadmin/cms-home\" component={Home} /> */}\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#ECE9E6\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Admin from \"./pages/Admin\";\nimport Page404 from \"./pages/Page404\";\nimport { AuthProvider } from \"./context/auth\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./components/theme\";\nimport \"./App.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Redirect from=\"/\" to=\"/zessence\" exact />\n            <Route path=\"/zessence\" component={Main}  />\n            <Route path=\"/zeadmin\" component={Admin}  />\n            <Route component={Page404} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"toasted-notes/src/styles.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\n\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}