{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","util/hooks/useScroll.js","components/main/navigation/Navigation.js","util/graphql/cms.js","components/styled/containers.js","components/styled/button.js","components/styled/scroll.styled.js","components/MouseScroll.js","components/main/home/Showcase.js","util/graphql/service.js","components/styled/text.js","components/FancyText.js","components/styled/utils.js","components/main/utils/ReadMore.js","util/hooks/useWindowSize.js","components/main/home/CategorySection.js","util/graphql/employee.js","components/styled/card.js","components/main/home/TeamSection.js","components/styled/loader.js","components/Spinner.js","components/main/home/AboutSection.js","components/main/home/PromoSection1.js","util/graphql/testimonial.js","components/main/home/TestimonialSection.js","components/main/utils/ScrollButton.js","pages/main/Home.js","components/main/about/Story.js","components/main/about/TeamDetails.js","components/main/about/Team.js","util/useScrollDown.js","pages/main/About.js","util/hooks/useForm.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","components/styled/inputs.js","util/hooks/timeLineLabels.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","util/graphql/gallery.js","components/GalleryThumb.js","components/ImageSelected.js","pages/main/Gallery.js","pages/main/Contact.js","components/main/testimonial/ModalReview.js","components/main/testimonial/Review.js","components/main/testimonial/TestimonialCard.js","pages/main/Testimonials.js","pages/main/Services.js","pages/main/Service.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/Toasted.js","components/admin/employees/PhotoBooth.js","components/DTextArea.js","components/admin/employees/PersonalCard.js","components/admin/employees/EmployeeCard.js","components/admin/employees/RemoveService.js","components/admin/employees/ServiceCard.js","components/admin/employees/DetailsEmployee.js","components/admin/employees/ScheduleEmployee.js","components/admin/employees/Info.js","components/admin/employees/EmployeeDelete.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/MenuDots.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","components/FilterInput.js","components/admin/report/FilePrint.js","components/admin/appointment/HistoryAppointments.js","pages/admin/FileReport.js","util/hooks/useUploadFile.js","components/admin/cms/home/showcase/ImageSection.js","components/admin/cms/home/showcase/ModalSlide.js","components/admin/cms/home/showcase/NewSlide.js","components/admin/cms/home/showcase/EditSlide.js","components/admin/cms/home/showcase/RemoveSlide.js","components/admin/cms/home/showcase/Showcase.js","components/admin/cms/home/sectionabout/EditModal.js","components/admin/cms/home/sectionabout/SectionAbout.js","components/ReadMore.js","components/admin/cms/home/sectioncategory/CategoryCards.js","components/admin/cms/home/sectioncategory/UpdateSectCategory.js","components/admin/cms/home/sectioncategory/SectionCategory.js","pages/admin/cms/Home.js","components/admin/cms/about/ModalHeading.js","components/admin/cms/about/Heading.js","components/admin/cms/about/ModalStory.js","components/admin/cms/about/Story.js","components/admin/cms/about/ModalMissionVision.js","components/admin/cms/about/Mission.js","pages/admin/cms/About.js","components/admin/testimonial/ToggleView.js","components/admin/testimonial/ModalView.js","components/admin/testimonial/DeleteView.js","components/admin/testimonial/MenuView.js","pages/admin/cms/Testimonial.js","components/admin/cms/gallery/NewAlbum.js","pages/admin/cms/Gallery.js","components/admin/cms/gallery/NewPhotoDrop.js","pages/admin/cms/Album.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","DropdownCustomNav","Dropdown","Burger","setOpen","onClick","useScroll","scrollVal","useState","scrolling","setScrolling","scrollTop","setScrollTop","scrollH","undefined","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Navigation","ref","handler","node","useRef","listener","event","current","contains","document","useContext","handleLogout","trigger","style","fontSize","Icon","name","firstName","scrollBehavior","el","scrollIntoView","behavior","block","className","src","alt","to","userId","_id","scroll","simple","Menu","Item","as","Link","disabled","FETCH_THE_SHOWCASE","gql","FETCH_HOME_SECTION","FETCH_ABOUT_CMS","columns","rows","DContainer","div","DShowCase","height","bgcolor","background","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","med10","med7","med5","DSection","width","mcenter","pad","flex","justify","align","flow","direct","minh","css","maxh","Content","fluid","fixed","bordered","bordbtm","rounded","br1","bs","weight","color","size","bluer","imgHeight","imgWidth","invisible","hoverflow","Overlay","bgr","bgl","bgc","pointer","opac","hovOpac","initbox","cwidth","talign","cmarg","fs","DImage","dashed","m","objFit","grayscaling","DCard","rad","p","dh","dw","justifyCenter","justifyAround","justifyBetween","jusitfyEnd","alignCenter","alignAround","alignBetween","alignFend","fcol","overf","grayzoom","overlaying","DFooterLinks","DFooter","footer","Section2Styled","visible","JButton","button","keyframes","DMouseScroll","inverted","basic","MouseScroll","Showcase","nextSection","showcase","setShowcase","scrollDown","useQuery","variables","sectionName","showcaseData","data","dataLoading","loading","error","showcaseCMS","content","position","id","dots","infinite","fade","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","adaptiveHeight","responsive","breakpoint","settings","arrows","map","sc","key","bgColor","bgImg","title","subtitle","paragraph","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","DFancyText","h1","FancyText","children","ripple","colors","red","green","yellow","grey","getTxtColor","getNotifColor","default","alert","confirm","warning","DButton","fSize","center","text","radius","DButtonFree","top","left","bottom","right","DLabel","label","ls","textalign","tt","w","jusitfyFend","getBgColor","txtColor","hover","breakWord","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","success","ReadMore","ScrollUp","IconWrap","StyledIconBase","shadow","mini","tiny","small","medium","large","menu","bottomcenter","topright","DotsVertical","DotsVerticalRounded","DLink","borderb","DInput","input","textAlign","DSelect","select","CheckLabel","textt","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","CategorySection","setRef","wid","useWindowSize","isCategories","setIsCategories","categorySection","setCategorySection","active","dataCategories","loadingCategories","categories","sectionCategory","homeCMS","grid","category","photo","description","length","parser","substr","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","figure","titleSize","JCard2","oflow","JCard3","JCard4","DTestimonialCard","GalleryCard","styles","dloading","display","justifyContent","alignItems","flexDirection","lineHeight","TeamSection","cards","employeesAR","setEmployeesAR","limit","data_employeesAR","loading_employeesAR","aestheticiansReceps","count","employee","data-emp","lastName","role","bio","keyring","SpinnerRing","row","Spinner","AboutSection","isAboutSection","setIsAboutSection","about","setAbout","aboutChange","contentName","dataAbout","loadAbout","aboutUsCMS","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","visibility","from","y","ease","Power3","easeOut","scale","animate","story","missionvision","PromoSection1","FETCH_TESTIMONIALS","FETCH_USER_REVIEW","FETCH_VIEWS","TestimonialSection","reviews","setReviews","dataReviews","loadReviews","testimonialsView","rev","Rating","rating","maxRating","icon","message","ScrollButton","intervalId","pageYOffset","clearInterval","this","scrollPx","setInterval","scrollStep","bind","delay","setState","scrollToTop","React","Component","Home","card1","Story","aboutUS","mission","vision","maxHeight","letterSpacing","overflowWrap","overflow","padding","TeamDetails","href","Modal","onClose","closeIcon","Team","employees","setEmployees","dataEmployees","loadingEmployees","minHeight","emp","scrollView","About","minWidth","subtitles","overlay","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","push","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","border","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","Loader","marginTop","textTransform","fontWeight","Signup","pathname","history","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","console","log","loginUser","userX","general","Signin","RadioStyle","timeLineLabels","desiredStartTime","timeLength","interval","breakTimeLength","periodsInADay","moment","duration","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","calendarSize","days","times","appointmentTimes","isEmp","setIsEmp","isServ","setIsServ","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","loading_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","schedule","workLength","breakStart","breakLength","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","calendarClassName","inline","time","Page404","s","AppointmentInputs","categoryValue","setCategoryValue","setServiceValue","setEmployeeVal","setCategories","services","setServices","loading_categories","data_categories","useLazyQuery","categoryId","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","cursor","outline","servEmp","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","useHistory","addInfo","setAddInfo","setService","cache","result","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","toaster","notify","status","expiredLog","check","start","Header","readOnly","toDateString","Actions","Appointment","FETCH_GALLERIES","FETCH_GALLERY","GalleryThumb","link","ImageGalleryHover","grayscale","ImageSelected","index","setCurrentImage","setViewerIsOpen","Gallery","allPhotos","currentImage","viewerIsOpen","galleries","setGalleries","dataGalleries","loadGalleries","imageRenderer","useCallback","g","photos","gallery","renderImage","directions","currentIndex","views","srcset","srcSet","caption","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","ADD_REVIEW","UPDATE_REVIEW","ModalReview","openReview","setOpenReview","userReview","rate","setRate","setMessage","edit","setEdit","mutation","addOrUpdate","onRate","TextArea","Review","setUserReview","dataUserReview","loadUserReview","userTestimonial","slidesPerRow","TestimonialCard","isTestimonials","setIsTestimonials","dataTestimonials","loadTestimonials","testimonials","testimonial","parseInt","updatedAt","Testimonials","Services","sectionDown","Service","params","isReadMore","setIsReadMore","isServices","setIsServices","goBack","onPointerLeave","price","VERRIFIED_APPOINTMENT","ThankYou","emailToken","go","appointmentId","verifiedAppointment","onload","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","dateOfBirth","contact","updateUser","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","Accordion","setActive","contentRef","scrollHeight","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","CANCEL_APPOINTMENT_MUTATION","absoluteCenter","transform","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","new","Popup","circular","mouseEnterDelay","mouseLeaveDelay","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","currentAppoint","setCurrentAppoint","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","cell","fitted","wide","Grid","divided","Column","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","currentTarget","compact","historyAppoint","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","AppointmentDetails","schedDate","myAppoint","setMyAppoint","margn","jusitfy","Main","path","exact","UpcommingAppointments","marginBottom","progressPending","progressComponent","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","empLog","setEmpLog","dataEmpLog","loadEmpLog","pointing","SideNav","activeClassName","Layout","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","CurrentAppointments","isCurrentAppoint","setIsCurrentAppoint","currentAppointmentData","currAppoint","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","Divider","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","timelineLabels","NewDateTime","NewAppointmentDetails","setServiceEmp","CREATE_GUEST_APPOINTMENT","myAppointments","createGuestAppointment","NewAppointment","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","Checkbox","class","Employees","grow","hide","empId","level","aesrep","UPLOAD_EMPLOYEE_PHOTO","PhotoBooth","handleSchedule","addEmployeePhoto","DTextAreaStyled","par","DTextArea","regex","regexNum","UPDATE_EMPLOYEE_PERSONAL","PersonalCard","isEditPersonal","setIsEditPersonal","setContent","personalValue","setPersonalValue","dob","updatePersonalEmployee","handlePersonalValue","handleEditPersonal","trim","test","contactX","contactNum","onInit","editor","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","getData","DecoupledEditor","UPDATE_EMPLOYEE_ACCT","EmployeeCard","isEditEmpAcct","setIsEditEmpAcct","empAcctValue","setEmpAcctValue","notauth","updateEmpAcct","loadEmpAcct","handleEmpAcctValue","handleEditEmplAcct","REMOVE_SERVICE","RemoveService","categId","refetchCategories","categValue","setCategValue","removeService","loadRemoving","data-categid","onMouseOver","dataset","categid","ADD_SERVICES_MUTATION","ServiceCard","openAddService","setOpenAddService","categoryServices","categServ","categoryData","loadCategory","addService","loadAdd","categ","DetailsEmployee","UPDATE_EMPLOYEE_SCHEDULE","ScheduleEmployee","isEditSched","setIsEditSched","schedValues","setSchedValues","parseFloat","updateSchedule","loadSchedule","handleEditSched","handleSchedChange","borderRight","Info","isEmpInfo","ARCHIVE_EMPLOYEE","EmployeeDelete","isDlt","setIsDlt","archiveEmployee","loadArchived","on","flowing","Employee","setEmployee","setIsEmpInfo","employeeLoading","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","Categories","MenuStyledDots","middle","topleft","bottomright","middleright","bottomleft","middleleft","MenuDots","ARCHIVE_CATEGORY","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","archivedCategory","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","isEdit","setIsEdit","updateCategory","CREATE_NEW_SERVICE","NewService","createService","serviceExist","ServiceList","UPLOAD_CATEGORY_PHOTO","Category","setCategory","addCategoryPhoto","ARCHIVE_SERVICE","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","archiveService","loadArchiveService","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","serviceData","serviceLoading","addServicePhoto","replace","REPLY_MESSAGE","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","loadingInq","inquiry","replyInquiry","column","READ_INQ","Inquiry","setInquiries","inqVal","setInqVal","data_inquiries","loading_inquiries","readInq","handleMouseOver","inqid","msg","trimString","substring","data-inqid","fetchEmployee","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","updateEmployee","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","setEmpPersonal","empData","empLoading","User","setUsers","data_users","loading_users","allowOverflow","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","FilterInput","filterText","onFilter","onClear","isPrint","columnsPrint","conditionalCellStyles","when","FilePrint","filteredItems","isPrintOpen","setIsPrintOpen","one","titleOne","titleTwo","author","setAuthor","handleAuthor","isEditPrint","setIsEditPrint","print","opacity","dense","Print","printOnly","omit","HistoryAppointments","historyAppointments","setFilterText","resetPaginationToggle","setResetPaginationToggle","toUpperCase","subHeaderComponentMemo","useMemo","NoPrint","force","paginationResetDefaultPage","subHeader","subHeaderComponent","FileReport","setHistoryAppointments","historyAppointmentData","appointmentHistory","useUploadFile","selectedFile","setSelectedFile","preview","setPreview","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectedFile","files","ImageSection","isDark","isPosition","isColor","fileInput","click","ADD_NEW_SLIDE","UPDATE_SLIDE","ModalSlide","setIsDark","setIsPosition","setIsColor","showcaseId","addOrUpdateSlide","handlePosition","maxLength","checked","triangle","hex","NewSlide","EditSlide","REMOVE_SLIDE","RemoveSlide","isOpenRemove","setIsOpenRemove","removeSlide","UPDATE_ABOUT_SECTION","EditModal","aboutBool","updateAboutSection","SectionAbout","isAbout","setIsAbout","dataAboutSection","loadingAboutSection","loadingAbout","CategoryCards","gridCount","UPDATE_CATEGORY_SECTION","UpdateSectCategory","setOpenCatSec","openCatSec","categorySectionInfo","setGridCount","updateSectionCategory","handleGrid","SectionCategory","sectCategory","setSectCategory","loadSectionCategory","paddingBottom","UPDATE_ABOUT_HEADER","ModalHeading","openHead","setOpenHead","isOverlay","setIsOverlay","headers","setHeaders","updateAboutUs","handleChangeHeaders","Heading","dataAboutContent","loadAboutContent","bgColors","UPDATE_ABOUT_STORY","ModalStory","isStory","openStory","setOpenStory","reverse","setReverse","stories","setStories","updateStory","handleChangeStory","setIsStory","dataStoryContent","loadStoryContent","UPDATE_ABOUT_MISSIONVISION","ModalMissionVision","isMissionVision","fileInputMV","openMission","setOpenMission","reverseMV","setReverseMV","mtitle","msubtitle","mparagraph","vtitle","vsubtitle","vparagraph","valuesMV","setValuesMV","previewMV","selectedFileMV","onSelectedFileMV","updateMission","handleChangeValues","horizontal","isMission","setIsMission","dataMissionVision","loadMissionVision","Mission","TOGGLE_REVIEW","popContent","ToggleView","swid","tggl","toggleValue","setToggleValue","toggleTestimonial","loadToggle","data-sid","sid","ModalView","ridd","ARCHIVED_REVIEW","DeleteView","rvw","isDltModal","setIsDltModal","wdth","unauth","archiveTestimonial","loadArchive","textIndent","MenuView","menuId","review","menuValue","setMenuValue","data-rid","rid","centered","Testimonial","NEW_ALBUM","NewAlbum","albumOpen","setAlbumOpen","setTitle","newAlbum","loadNewAlbum","containerWidth","ADD_PHOTOS","NewPhotoDrop","albumId","addGalleryPhoto","acceptedFiles","forEach","image","onabort","onerror","readAsArrayBuffer","base","Album","albumPhotos","setAlbumPhotos","dataGallery","blanket","positioner","Admin","PrintProvider","App","uploadLink","createUploadLink","uri","authLink","setContext","Authorization","client","ApolloClient","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ed8d5250.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null,\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: (userData) => {},\r\n  employeeLogin: (employeeData) => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {},\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload,\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData,\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData,\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${(props) => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 12vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"li a {color: #fff}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n      &:nth-child(7) {\r\n        transition-delay: 0s, 400ms;\r\n      }\r\n      &:nth-child(8) {\r\n        transition-delay: 0s, 450ms;\r\n      }\r\n      &:nth-child(9) {\r\n        transition-delay: 0s, 500ms;\r\n      }\r\n      &:nth-child(10) {\r\n        transition-delay: 0s, 550ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \".avatarLog {color: #fff}\"};\r\n\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const DropdownCustomNav = styled(Dropdown)`\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & a {\r\n    color: #232323;\r\n    font-weight: 700;\r\n  }\r\n  & a:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & .customDropMenu a {\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.primary} !important;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"color: #fff; a {color: #fff}\"};\r\n\r\n  @media (max-width: 1024px) {\r\n    a {\r\n      color: #ffff;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n    a:hover {\r\n      color: ${({ theme }) => theme.secondary};\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n  }\r\n\r\n  .customDropMenu .customDropMenuItem {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #232323 !important;\r\n    font-size: 14px !important;\r\n  }\r\n  .customDropMenu .customDropMenuItem:hover {\r\n    color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll(scrollVal) {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const scrollH = scrollVal !== undefined ? scrollVal : 100;\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > scrollH);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport {\r\n  DNavigation,\r\n  DMainMenu,\r\n  DRightMenu,\r\n  DropdownCustomNav,\r\n} from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  // let history = useHistory();\r\n\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    // history.push(\"\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const scrollBehavior = (el) =>\r\n    el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to={`/#home`} scroll={scrollBehavior}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/services&rates/#services\" scroll={scrollBehavior}>\r\n              Services\r\n            </Link>\r\n          </li>\r\n\r\n          {/* <Link to=\"/about\">About&nbsp;Us</Link> */}\r\n          <DropdownCustomNav\r\n            trigger={\r\n              <Link to=\"/about/#about\" scroll={scrollBehavior}>\r\n                About&nbsp;Us\r\n              </Link>\r\n            }\r\n            simple\r\n            scrolled={scrolling ? true : undefined}\r\n          >\r\n            <Dropdown.Menu className=\"customDropMenu\">\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#story\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Story\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#team\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Team\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </DropdownCustomNav>\r\n\r\n          <li>\r\n            <Link to=\"/gallery/#gallery\" scroll={scrollBehavior}>\r\n              Gallery\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/testimonials/#tstmnl\" scroll={scrollBehavior}>\r\n              Testimonials\r\n            </Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger} className=\"avatarLog\">\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_THE_SHOWCASE = gql`\r\n  query showcaseCMS($sectionName: String) {\r\n    showcaseCMS(sectionName: $sectionName) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HOME_SECTION = gql`\r\n  query homeCMS($sectionName: String) {\r\n    homeCMS(sectionName: $sectionName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      grid\r\n      dark\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_ABOUT_CMS = gql`\r\n  query aboutUsCMS($contentName: String) {\r\n    aboutUsCMS(contentName: $contentName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_THE_SHOWCASE, FETCH_HOME_SECTION, FETCH_ABOUT_CMS };\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n  margin-top: 12vh;\r\n`;\r\n\r\nexport const DShowCase = styled.div`\r\n  width: 100%;\r\n\r\n  height: ${(props) => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: calc(100% - 20%) calc(100% - 20%);\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n  h1,\r\n  h2,\r\n  p {\r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n\r\n  @media (max-width: 360px) {\r\n    width: 100%;\r\n    background-position: calc(100% - 30%) calc(100% - 30%);\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    h1,\r\n    h2,\r\n    p {\r\n      margin-left: 0px;\r\n    }\r\n    h1,\r\n    h2 {\r\n      font-size: 14px;\r\n    }\r\n    p {\r\n      font-size: 12px;\r\n    }\r\n    button {\r\n      margin-left: 0px;\r\n      font-size: 14px;\r\n      padding: 0.5em 0.8em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: ${(props) =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${(props) => props.gap && props.gap};\r\n  grid-template-rows: ${(props) =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${(props) => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${(props) => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med10 ? props.med10 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med7 ? props.med7 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: ${(props) => (props.med5 ? props.med5 : \"1fr\")};\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${(props) => (props.height ? props.height : \"400px\")};\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  margin: ${(props) =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  position: relative;\r\n\r\n  ${(props) =>\r\n    props.minh &&\r\n    css`\r\n      min-height: ${props.minh};\r\n    `};\r\n  ${(props) =>\r\n    props.maxh &&\r\n    css`\r\n      min-height: ${props.maxh};\r\n    `};\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${(props) => props.height && props.height};\r\n  width: ${(props) =>\r\n    props.width ? props.width : props.fluid ? \"100%\" : \"50%\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  display: ${(props) => (props.flex ? \"flex\" : \"block\")};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${(props) => props.margin && props.margin};\r\n  background: url('${(props) =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${(props) => props.fixed && \"fixed\"};\r\n  background-color: ${(props) => props.bgcolor && props.bgcolor};\r\n  border-width: ${(props) => props.bordered && \"1px\"};\r\n  border-style: ${(props) => props.bordered && \"solid\"};\r\n  border-color: ${(props) =>\r\n    props.bordbtm && \"transparent transparent #ccc transparent\"};\r\n  border-radius: ${(props) =>\r\n    props.rounded\r\n      ? \"10px\"\r\n      : props.br1\r\n      ? \"0% 24% 26% 39% / 20% 0% 100% 0% \"\r\n      : \"0\"};\r\n  box-shadow: ${(props) =>\r\n    props.bs &&\r\n    (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n    \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n    \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n    \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n    \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n  z-index: 2;\r\n  font-weight: ${(props) => props.weight && props.weight};\r\n\r\n  ${(props) =>\r\n    props.minh &&\r\n    css`\r\n      min-height: ${props.minh};\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.maxh &&\r\n    css`\r\n      max-height: ${props.maxh};\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.flow &&\r\n    css`\r\n      flex-flow: ${props.flow};\r\n    `};\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  span {\r\n    color: ${(props) => props.color && props.color};\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${(props) => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${(props) => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${(props) => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${(props) => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n\r\n  visibility: visible;\r\n  pointer-events: all;\r\n  transition: visibility 200ms, opacity 0.3s ease-in-out;\r\n\r\n  ${(props) =>\r\n    props.invisible &&\r\n    css`\r\n      visibility: hidden;\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.hoverflow &&\r\n    css`\r\n      &:hover {\r\n        overflow: auto;\r\n      }\r\n    `};\r\n\r\n\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${(props) =>\r\n    props.bg\r\n      ? props.bg\r\n      : props.bgr\r\n      ? \"linear-gradient(270deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgl\r\n      ? \"linear-gradient(90deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgc\r\n      ? \"rgba(0,0,0,0.4)\"\r\n      : \"rgba(0, 0, 0, 0)\"};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  opacity: ${(props) => props.opac && props.opac};\r\n  transition: opacity 0.6s ease;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${(props) => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: ${(props) => (props.initbox ? \"110%\" : \"0\")};\r\n    height: 110%;\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transform-origin: center;\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      height: 100%;\r\n      width: 85%;\r\n      text-align: center;\r\n      margin: auto;\r\n      transform: rotate(-45deg);\r\n\r\n      .title {\r\n        text-transform: uppercase;\r\n        margin: 1px auto;\r\n      }\r\n      p {\r\n        height: auto;\r\n        font-size: 11px;\r\n      }\r\n\r\n      .title,\r\n      p {\r\n        letter-spacing: 2px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${(props) => (props.cwidth ? props.cwidth : \"80%\")};\r\n    text-align: ${(props) => (props.talign ? props.talign : \"left\")};\r\n    height: auto;\r\n    margin: ${(props) => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    padding: 10px 40px;\r\n\r\n    h1,\r\n    h2,\r\n    p {\r\n      letter-spacing: 5px;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    h3,\r\n    h4,\r\n    .ps {\r\n      letter-spacing: 1px;\r\n      line-height: 1.4;\r\n    }\r\n    .ps {\r\n      font-size: 10px;\r\n    }\r\n\r\n    h1 {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"60px\")};\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${(props) => (props.height ? props.height : \"300px\")};\r\n  width: ${(props) => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${(props) =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  border: ${(props) =>\r\n    props.bordered\r\n      ? \"1px solid #000\"\r\n      : props.dashed\r\n      ? \"1px dashed #ccc\"\r\n      : \"none\"};\r\n  margin: ${(props) => (props.m ? props.m : \"0 auto\")};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: pointer;\r\n\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: ${(props) => (props.objFit ? props.objFit : \"cover\")};\r\n    transition: all 0.6s ease-in-out;\r\n    ${(props) =>\r\n      props.grayscaling &&\r\n      css`\r\n        filter: grayscale(100%);\r\n      `}\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: ${(props) =>\r\n    props.rad ? props.rad : props.circle ? \"50%\" : \"10px\"};\r\n  padding: ${(props) => (props.p ? props.p : \"10px\")};\r\n  height: ${(props) => (props.dh ? props.dh : \"300px\")};\r\n  width: ${(props) => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  margin: ${(props) => (props.mcenter ? \"0 auto\" : props.margin)};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyEnd\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => (props.fcol ? \"column\" : \"row\")};\r\n\r\n  ${(props) =>\r\n    props.maxh &&\r\n    css`\r\n      max-height: ${props.maxh};\r\n    `};\r\n\r\n  overflow: ${(props) => (props.overf ? \"visible\" : \"hidden\")};\r\n  background: ${(props) => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${(props) =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n        \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n        \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 3;\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n  ${(props) =>\r\n    props.grayzoom &&\r\n    css`\r\n      &:hover {\r\n        ${DImage} {\r\n          img {\r\n            filter: grayscale(0);\r\n            transform: scale(1.2);\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.overlaying &&\r\n    css`\r\n      &:hover {\r\n        ${Overlay} {\r\n          opacity: 0;\r\n          pointer-events: none;\r\n        }\r\n      }\r\n    `}\r\n\r\n    ${(props) =>\r\n      props.hoverflow &&\r\n      css`\r\n        &:hover {\r\n          overflow: auto;\r\n        }\r\n      `};\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  position: relative;\r\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\r\n  max-height: 100vh;\r\n  min-height: 30vh;\r\n  height: 100%;\r\n  width: ${(props) => (props.width ? props.width : \"90%\")};\r\n  margin: 24px auto;\r\n  text-align: center;\r\n\r\n  .switch {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: auto;\r\n    margin-bottom: 24px;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 24px;\r\n  }\r\n\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n    padding-top: 48px;\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: space-between;\r\n      ${(props) => props.alt && \"flex-direction: row-reverse\"};\r\n      margin: 0 auto;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 90%;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            text-align: left;\r\n            margin-bottom: 24px;\r\n            .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding: 12px;\r\n            margin-bottom: 56px;\r\n            text-align: justify;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 55%;\r\n        height: 100%;\r\n        position: relative;\r\n\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n              object-fit: cover;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    .sec2-container {\r\n      width: 100%;\r\n      .sec2-inner {\r\n        width: 100%;\r\n        justify-content: center;\r\n        margin: 0 auto;\r\n        .sec2-content {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .sec2-images {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 18px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const JButton = styled.button`\r\n  position: relative;\r\n  padding: 1em 1.5em;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 18px;\r\n  margin: 1em 0.8em;\r\n  color: ${({ theme }) => theme.secondary};\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n\r\n  &::after,\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 20%;\r\n    height: 20%;\r\n    border: 2px solid;\r\n    transition: all 0.6s ease;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  &::after {\r\n    bottom: -2px;\r\n    right: -2px;\r\n    border-top-color: transparent;\r\n    border-left-color: transparent;\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &::before {\r\n    top: -2px;\r\n    left: -2px;\r\n    border-bottom-color: transparent;\r\n    border-right-color: transparent;\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:hover:after,\r\n  &:hover:before {\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst scroll = keyframes`\r\n\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    10% {\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    }\r\n    100% {\r\n        transform: translateY(5px);\r\n        opacity: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const DMouseScroll = styled.div`\r\n  position: absolute;\r\n  top: 85%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n\r\n  &:hover {\r\n    .mousey {\r\n      opacity: 1;\r\n      left: 50%;\r\n    }\r\n    .scroll-downs {\r\n      &::before,\r\n      &::after {\r\n        top: 50%;\r\n        left: 50%;\r\n        border: 1px solid rgba(0, 0, 0, 0.5);\r\n      }\r\n    }\r\n  }\r\n\r\n  .scroll-downs {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      content: \"\";\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px solid rgba(0, 0, 0, 0.25);\r\n      transform: translate(-50%, -50%);\r\n      border-radius: 100%;\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n    &::before {\r\n      top: 48%;\r\n      left: 60%;\r\n    }\r\n\r\n    &::after {\r\n      top: 52%;\r\n      left: 52%;\r\n    }\r\n  }\r\n\r\n  .mousey {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 2px;\r\n    padding: 3px 5px;\r\n    height: 15px;\r\n    border: 2px solid #232323;\r\n    border-radius: 25px;\r\n    opacity: 0.75;\r\n    box-sizing: content-box;\r\n    background: #232323;\r\n  }\r\n\r\n  .scroller {\r\n    width: 2px;\r\n    height: 5px;\r\n    border-radius: 25%;\r\n    background-color: #fff;\r\n    animation-name: ${scroll};\r\n    animation-duration: 2.2s;\r\n    animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.inverted &&\r\n    \".mousey{background: #ffffff; border-color: #ffffff;} .scroller{background-color: #232323;} .scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.25)}} &:hover{.scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.5)}}}\"}\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \".mousey{background: transparent; border-width: 1px;} .scroller{background-color: #fff;} \"}\r\n`;\r\n","import React from \"react\";\r\nimport { DMouseScroll } from \"./styled/scroll.styled\";\r\n\r\nconst MouseScroll = props => {\r\n  return (\r\n    <DMouseScroll {...props}>\r\n      <div className=\"scroll-downs\">\r\n        <div className=\"mousey\">\r\n          <div className=\"scroller\"></div>\r\n        </div>\r\n      </div>\r\n    </DMouseScroll>\r\n  );\r\n};\r\n\r\nexport default MouseScroll;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { JButton } from \"../../styled/button\";\r\nimport Slider from \"react-slick\";\r\nimport MouseScroll from \"../../MouseScroll\";\r\n\r\nconst Showcase = ({ nextSection }) => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(nextSection);\r\n  };\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n    adaptiveHeight: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          arrows: false,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }} id=\"home\">\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"90vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcase.map((sc) => (\r\n            <DShowCase\r\n              height=\"90vh\"\r\n              key={sc._id}\r\n              bgcolor={sc.bgColor}\r\n              background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n            >\r\n              {/* {sc.bgImg && (\r\n                <DImage height=\"100%\">\r\n                  <img\r\n                    src={\r\n                      sc.bgImg !== null || sc.bgImg !== undefined\r\n                        ? `/images/cms/home/${sc.bgImg}`\r\n                        : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"showcase\"\r\n                  />\r\n                </DImage>\r\n              )} */}\r\n\r\n              <Overlay\r\n                flex\r\n                bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                justify={\r\n                  sc.position === \"left\"\r\n                    ? \"flex-start\"\r\n                    : sc.position === \"right\"\r\n                    ? \"flex-end\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                talign={\r\n                  sc.position === \"left\"\r\n                    ? \"left\"\r\n                    : sc.position === \"right\"\r\n                    ? \"right\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                align=\"center\"\r\n                className={sc.dark ? \"dark\" : \"\"}\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h1>{sc.title}</h1>\r\n                  <h2>{sc.subtitle}</h2>\r\n                  <p>{sc.paragraph}</p>\r\n                  <JButton\r\n                    className={sc.dark ? \"dark\" : \"\"}\r\n                    dark={sc.dark ? true : false}\r\n                  >\r\n                    Book Appointment\r\n                    <Link to=\"/appointment\" />\r\n                  </JButton>\r\n                </div>\r\n              </Overlay>\r\n              <MouseScroll\r\n                onClick={scrollDown}\r\n                inverted={sc.dark ? true : false}\r\n              />\r\n            </DShowCase>\r\n          ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  height: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  display: \"block\",\r\n};\r\n\r\nexport default Showcase;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories($active: Boolean) {\r\n    categories(active: $active) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n        active\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n        active\r\n      }\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices($active: Boolean) {\r\n    allServices(active: $active) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      active\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID, $active: Boolean) {\r\n    services(categoryId: $categoryId, active: $active) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      active\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      active\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DFancyText = styled.h1`\r\n  font-size: ${(props) => (props.size ? props.size : \"22px\")};\r\n  letter-spacing: 2px;\r\n  margin: 24px auto;\r\n  text-align: center;\r\n  font-family: \"Playfair Display\";\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  display: table;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  &:before,\r\n  &:after {\r\n    border-top-width: 2px;\r\n    border-top-style: solid;\r\n    border-top-color: ${(props) =>\r\n      props.color\r\n        ? props.color\r\n        : props.alt\r\n        ? ({ theme }) => theme.light\r\n        : ({ theme }) => theme.dark};\r\n    content: \"\";\r\n    display: table-cell;\r\n    position: relative;\r\n    top: 0.5em;\r\n    width: 100px;\r\n    min-width: 30px;\r\n  }\r\n  &:before {\r\n    right: 3%;\r\n  }\r\n  &:after {\r\n    left: 3%;\r\n  }\r\n  @media (max-width: 768px) {\r\n    margin: 0 auto;\r\n\r\n    font-size: 18px;\r\n  }\r\n\r\n  @media (max-width: 360px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DFancyText } from \"./styled/text\";\r\n\r\nconst FancyText = props => {\r\n  return <DFancyText {...props}>{props.children}</DFancyText>;\r\n};\r\n\r\nexport default FancyText;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\nimport { StyledIconBase } from \"@styled-icons/styled-icon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst colors = {\r\n  red: ({ theme }) => theme.red,\r\n  blue: ({ theme }) => theme.blue,\r\n  bluer: ({ theme }) => theme.bluer,\r\n  green: ({ theme }) => theme.green,\r\n  yellow: ({ theme }) => theme.yellow,\r\n  primary: ({ theme }) => theme.primary,\r\n  secondary: ({ theme }) => theme.secondary,\r\n  dark: ({ theme }) => theme.dark,\r\n  light: ({ theme }) => theme.light,\r\n  grey: ({ theme }) => theme.grey,\r\n};\r\n\r\nconst getBgColor = (props) => {\r\n  if (props.color === \"primary\") return colors.primary;\r\n  if (props.color === \"secondary\") return colors.secondary;\r\n  if (props.color === \"dark\") return colors.dark;\r\n  if (props.color === \"light\") return colors.light;\r\n  if (props.color === \"bluer\") return colors.bluer;\r\n  if (props.color === \"blue\") return colors.blue;\r\n  if (props.color === \"red\") return colors.red;\r\n  if (props.color === \"green\") return colors.green;\r\n  if (props.color === \"yellow\") return colors.yellow;\r\n\r\n  return \"transparent\";\r\n};\r\n\r\nconst getTxtColor = (props) => {\r\n  if (props.color === \"primary\") return colors.primary;\r\n  if (props.color === \"secondary\") return colors.secondary;\r\n  if (props.color === \"dark\") return colors.dark;\r\n  if (props.color === \"grey\") return colors.grey;\r\n  if (props.color === \"light\") return colors.light;\r\n  if (props.color === \"bluer\") return colors.bluer;\r\n  if (props.color === \"blue\") return colors.blue;\r\n  if (props.color === \"red\") return colors.red;\r\n  if (props.color === \"green\") return colors.green;\r\n  if (props.color === \"yellow\") return colors.yellow;\r\n\r\n  return colors.light;\r\n};\r\n\r\nconst getNotifColor = (props) => {\r\n  if (props.primary) return colors.primary;\r\n  if (props.secondary) return colors.secondary;\r\n  if (props.dark) return colors.dark;\r\n  if (props.grey) return colors.grey;\r\n  if (props.light) return colors.light;\r\n  if (props.bluer || props.default) return colors.bluer;\r\n  if (props.blue) return colors.blue;\r\n  if (props.alert) return colors.red;\r\n  if (props.confirm) return colors.green;\r\n  if (props.warning) return colors.yellow;\r\n  if (props.basic) return \"transparent\";\r\n  if (props.disabled) return \"#e9e4f0\";\r\n\r\n  return colors.blue;\r\n};\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${(props) => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${(props) => (props.size ? props.size : \"36px\")};\r\n  width: ${(props) =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${(props) => (props.pad ? props.pad : \"4px 10px\")};\r\n  line-height: 1.42857143;\r\n  margin: ${(props) =>\r\n    props.margin ? props.margin : props.center ? \"1.5% auto\" : \"1.5%\"};\r\n  text-align: center;\r\n  text-transform: ${(props) => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n\r\n\r\n\r\n  border-radius: ${(props) =>\r\n    props.radius ? props.radius : props.circle ? \"50%\" : \"5px\"};\r\n  border-width: ${(props) => (props.basic ? \"1px\" : \"0\")};\r\n  border-style: ${(props) => props.basic && \"solid\"};\r\n  border-color: ${(props) => getNotifColor(props)};\r\n      \r\n  color: ${(props) =>\r\n    props.red\r\n      ? colors.red\r\n      : props.yellow\r\n      ? colors.yellow\r\n      : props.green\r\n      ? colors.green\r\n      : props.primary\r\n      ? colors.primary\r\n      : props.bluer\r\n      ? colors.bluer\r\n      : colors.light};\r\n\r\n  background: ${(props) => getNotifColor(props)};\r\n\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      background: #e9e4f0;\r\n      color: #d3cce3;\r\n    `};\r\n\r\n\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n  \r\n  ${(props) =>\r\n    !props.disabled &&\r\n    css`\r\n      &:hover {\r\n        opacity: 0.8;\r\n        color: #fff;\r\n        background: ${(props) => getNotifColor(props)};\r\n      }\r\n    `};\r\n\r\n \r\n\r\n  &:focus {\r\n    background: darken(${colors.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n\r\n  ${(props) =>\r\n    props.flex &&\r\n    css`\r\n      display: flex;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n    `};\r\n`;\r\n\r\nexport const DButtonFree = styled(DButton)`\r\n  position: absolute;\r\n  top: ${(props) => props.top && props.top};\r\n  left: ${(props) => props.left && props.left};\r\n  bottom: ${(props) => props.bottom && props.bottom};\r\n  right: ${(props) => props.right && props.right};\r\n`;\r\n\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  position: relative;\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  letter-spacing: ${(props) => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${(props) => (props.weight ? props.weight : 500)};\r\n  padding: ${(props) => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${(props) => (props.m ? props.m : \"2%\")};\r\n  background: ${(props) => (props.bgcolor ? props.bgcolor : \"transparent\")};\r\n  border-radius: ${(props) => props.rounded && \"5px\"};\r\n  text-align: ${(props) => (props.textalign ? props.textalign : \"left\")};\r\n  text-transform: ${(props) => props.tt && props.tt};\r\n  width: ${(props) => (props.w ? props.w : \"auto\")};\r\n  display: ${(props) => (props.flex ? \"flex\" : \"inline-block\")};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n  }\r\n\r\n  ${(props) =>\r\n    props.color &&\r\n    css`\r\n      color: ${\r\n        props.color === \"grey\" || props.color === \"primary\"\r\n          ? colors.dark\r\n          : colors.light\r\n      };\r\n      font-weight: 700;\r\n      background-color: ${(props) => getBgColor(props)}};\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.txtColor &&\r\n    css`\r\n      font-weight: 700;\r\n      color: ${(props) => getTxtColor(props)};\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.hover &&\r\n    css`\r\n      opacity: 0.8;\r\n      cursor: pointer;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.breakWord &&\r\n    css`\r\n      overflow-wrap: break-word;\r\n      word-break: break-word;\r\n      hyphens: auto;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.pointer &&\r\n    css`\r\n      &:before {\r\n        position: absolute;\r\n        width: 8px;\r\n        height: 8px;\r\n        z-index: -1;\r\n        border: 1px solid ${(props) => getTxtColor(props)};\r\n        border-left: 1px solid transparent;\r\n        background: ${(props) => getTxtColor(props)};\r\n        filter: brightness(90%);\r\n\r\n        top: 100%;\r\n        left: 50%;\r\n        margin-left: -4px;\r\n        content: \"\";\r\n        transform: rotate(45deg);\r\n        margin-top: -4px;\r\n      }\r\n    `};\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${colors.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${colors.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${(props) => (props.bg ? props.bg : colors.dark)};\r\n    color: ${(props) => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${(props) =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${(props) => (props.activeBg ? props.activeBg : colors.blue)};\r\n      color: ${(props) =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${(props) => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${(props) =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${colors.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${colors.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${(props) =>\r\n    props.alert\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.success\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.warning\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(255, 255, 255,1.0)\"};\r\n  height: auto;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n  z-index: 5;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    min-width: 200px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 50px;\r\n\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .close {\r\n    height: 90%;\r\n    margin: 1% auto;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    fontweight: bold;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.p`\r\n  text-align: ${(props) =>\r\n    props.center ? \"center\" : props.left ? \"left\" : \"right\"};\r\n  cursor: pointer !important;\r\n\r\n  span {\r\n    color: ${(props) => (props.color ? props.color : colors.secondary)};\r\n    display: inline-block;\r\n    position: relative;\r\n    font-weight: 700;\r\n    font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n    &:after {\r\n      content: \"\\f061\";\r\n      font-family: FontAwesome;\r\n      ${(props) =>\r\n        props.hover\r\n          ? css`\r\n              margin-left: -10px;\r\n              opacity: 0;\r\n            `\r\n          : css`\r\n              margin-left: 5px;\r\n              opacity: 1;\r\n            `};\r\n      vertical-align: middle;\r\n      transition: margin 0.3s, opacity 0.3s;\r\n    }\r\n    a {\r\n      color: ${colors.secondary};\r\n    }\r\n    &:hover {\r\n      &:after {\r\n        margin-left: 5px;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollUp = styled(Icon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: block;\r\n`;\r\n\r\nexport const IconCustom = styled(Icon)`\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n  transition: all 0.5s ease;\r\n  margin: 2%;\r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const IconWrap = styled.div`\r\n  ${StyledIconBase} {\r\n    color: ${(props) => getTxtColor(props)};\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n    transition: all 0.5s ease;\r\n    margin: ${(props) =>\r\n      props.mcenter ? \"0 auto\" : props.margin ? props.margin : \"5px\"};\r\n    outline: none;\r\n    padding: ${(props) => (props.pad ? props.pad : \"0\")};\r\n    visibility: visible;\r\n    pointer-events: all;\r\n    transition: visibility 200ms, opacity 0.3s ease-in-out;\r\n\r\n    ${(props) =>\r\n      props.bgcolor &&\r\n      css`\r\n        background-color: ${props.bgcolor};\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.shadow &&\r\n      css`\r\n        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.12), 0 2px 2px rgba(0, 0, 0, 0.12),\r\n          0 4px 4px rgba(0, 0, 0, 0.12), 0 8px 8px rgba(0, 0, 0, 0.12),\r\n          0 16px 16px rgba(0, 0, 0, 0.12);\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.invisible &&\r\n      css`\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        pointer-events: none;\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.size &&\r\n      css`\r\n        width: ${props.size};\r\n        height: ${props.size};\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.mini\r\n        ? css`\r\n            width: 9px;\r\n            height: 9px;\r\n          `\r\n        : props.tiny\r\n        ? css`\r\n            width: 18px;\r\n            height: 18px;\r\n          `\r\n        : props.small\r\n        ? css`\r\n            width: 22px;\r\n            height: 22px;\r\n          `\r\n        : props.medium\r\n        ? css`\r\n            width: 26px;\r\n            height: 26px;\r\n          `\r\n        : props.large\r\n        ? css`\r\n            width: 32px;\r\n            height: 32px;\r\n          `\r\n        : css`\r\n            width: 25px;\r\n            height: 25px;\r\n          `};\r\n\r\n    ${(props) =>\r\n      props.circle &&\r\n      css`\r\n        border-radius: 100%;\r\n      `};\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      transform: scale(1.1);\r\n\r\n      ${(props) =>\r\n        props.menu &&\r\n        css`\r\n          border-radius: 100%;\r\n          background: #ccc;\r\n        `}\r\n    }\r\n\r\n    ${(props) =>\r\n      props.bottomcenter &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        bottom: 2%;\r\n        left: 0;\r\n        right: 0;\r\n        margin: 0 auto;\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.topright &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        top: 2%;\r\n        right: 0;\r\n        margin: 0 auto;\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.right &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        top: 2%;\r\n        right: 0;\r\n        bottom: 0;\r\n        margin: 0 auto;\r\n      `};\r\n  }\r\n`;\r\n\r\nexport const DotsVertical = styled(DotsVerticalRounded)`\r\n  color: #232323;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    border-radius: 100%;\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nexport const DLink = styled(Link)`\r\n  color: ${(props) => (props.color ? props.color : \"#232323\")} !important;\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  padding-bottom: 5px;\r\n  &:hover {\r\n    color: ${colors.secondary} !important;\r\n    border-bottom: ${(props) => props.borderb && \"1px solid #232323\"};\r\n    border-bottom-color: ${colors.secondary};\r\n  }\r\n`;\r\n\r\nexport const DInput = styled.input`\r\n  padding: 10px;\r\n  width: ${(props) => (props.width ? props.width : \"auto\")};\r\n  height: 100%;\r\n  border: 1px solid rgba(0, 0, 0, 0.4);\r\n  border-radius: ${(props) => (props.radius ? props.radius : \"5px\")};\r\n  outline: none;\r\n  ${(props) =>\r\n    props.margin &&\r\n    css`\r\n      margin: ${props.margin};\r\n    `};\r\n  ${(props) =>\r\n    props.textAlign &&\r\n    css`\r\n      text-align: ${props.textAlign};\r\n    `};\r\n  ${(props) =>\r\n    props.error &&\r\n    css`\r\n      background: #fff6f6;\r\n      color: #ce9a99;\r\n      font-weight: 700;\r\n      border-color: #ce9a99;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.fluid &&\r\n    css`\r\n      width: 100%;\r\n    `};\r\n  &:focus {\r\n    box-shadow: 0 0 2px 1px ${colors.primary};\r\n  }\r\n`;\r\n\r\nexport const DSelect = styled.select`\r\n  padding: 10px;\r\n  width: auto;\r\n  height: 100%;\r\n  border: 1px solid rgba(0, 0, 0, 0.4);\r\n  border-radius: 5px;\r\n  outline: none;\r\n\r\n  ${(props) =>\r\n    props.fluid &&\r\n    css`\r\n      width: 100%;\r\n    `};\r\n  &:focus {\r\n    box-shadow: 0 0 2px 1px ${colors.primary};\r\n  }\r\n`;\r\n\r\nexport const CheckLabel = styled.label`\r\n  font-weight: ${(props) =>\r\n    props.weight === \"fw500\" ? \"500 !important\" : \"700 !important\"};\r\n  color: ${(props) =>\r\n    props.color === \"green\"\r\n      ? colors.green\r\n      : props.color === \"bluer\"\r\n      ? colors.bluer\r\n      : props.color === \"blue\"\r\n      ? \"rgba(33, 147, 176, 0.7)\"\r\n      : props.color === \"dark\"\r\n      ? colors.dark\r\n      : props.color === \"grey\"\r\n      ? colors.grey\r\n      : colors.secondary};\r\n  text-transform: ${(props) => (props.textt ? props.textt : \"none\")};\r\n`;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"../../styled/utils\";\r\n\r\nconst ReadMore = (props) => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_HOME_SECTION } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DCard,\r\n  DImage,\r\n} from \"../../styled/containers\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst CategorySection = ({ setRef }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const [categorySection, setCategorySection] = useState({});\r\n\r\n  const {\r\n    data: dataCategories,\r\n    loading: loadingCategories,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataCategories) {\r\n      setIsCategories(dataCategories.categories);\r\n    }\r\n  }, [dataCategories]);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setCategorySection(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <DSection\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      pad=\"20px 0\"\r\n      bgcolor={categorySection.bgColor}\r\n      ref={setRef}\r\n    >\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n        className={categorySection.dark ? \"dark\" : \"\"}\r\n      >\r\n        {categorySection && (\r\n          <>\r\n            {categorySection.title !== \"\" && (\r\n              <FancyText size=\"28px\" alt={categorySection.dark ? true : false}>\r\n                {categorySection.title}\r\n              </FancyText>\r\n            )}\r\n            {categorySection.subtitle !== \"\" && (\r\n              <h3>{categorySection.subtitle}</h3>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <Content height=\"100%\" width=\"100%\">\r\n          {loadingCategories ? (\r\n            <DGrid four gap=\"20px\">\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n            </DGrid>\r\n          ) : (\r\n            <DGrid\r\n              two={categorySection.grid === 2 ? true : false}\r\n              three={categorySection.grid === 3 ? true : false}\r\n              four={categorySection.grid === 4 ? true : false}\r\n              gap=\"20px\"\r\n            >\r\n              {isCategories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/zeadmin/category/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategorySection;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees($active: Boolean) {\r\n    employees(active: $active) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      level\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      categoryServices {\r\n        _id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int, $active: Boolean) {\r\n    aestheticiansReceps(limit: $limit, active: $active) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      level\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      categoryServices {\r\n        _id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      level\r\n      dateOfBirth\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      categoryServices {\r\n        _id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const JCard = styled.figure`\r\n  background-color: #fff;\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  height: ${(props) => (props.height ? props.height : \"auto\")};\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  -webkit-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n  font-size: 12px;\r\n  margin: 24px auto;\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  img {\r\n    backface-visibility: hidden;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    background-color: #fe8c00;\r\n    opacity: 0.5;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  &:before {\r\n    -webkit-transform: skew(30deg) translateX(-80%);\r\n    transform: skew(30deg) translateX(-80%);\r\n  }\r\n\r\n  &:after {\r\n    -webkit-transform: skew(-30deg) translateX(-70%);\r\n    transform: skew(-30deg) translateX(-70%);\r\n  }\r\n\r\n  figcaption {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    padding: 25px 40% 25px 20px;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      background-color: #2193b0;\r\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\r\n      content: \"\";\r\n      opacity: 0.5;\r\n      z-index: -1;\r\n    }\r\n\r\n    &::before {\r\n      -webkit-transform: skew(30deg) translateX(-100%);\r\n      transform: skew(30deg) translateX(-100%);\r\n    }\r\n\r\n    &::after {\r\n      -webkit-transform: skew(-30deg) translateX(-90%);\r\n      transform: skew(-30deg) translateX(-90%);\r\n    }\r\n\r\n    h3,\r\n    p {\r\n      margin: 0;\r\n      opacity: 0;\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: ${(props) => (props.titleSize ? props.titleSize : \"36px\")};\r\n      font-weight: 700;\r\n      line-height: 1em;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n      font-size: 1em;\r\n    }\r\n  }\r\n\r\n  &:hover h3,\r\n  &.hover h3,\r\n  &:hover p,\r\n  &.hover p {\r\n    -webkit-transform: translateY(0);\r\n    transform: translateY(0);\r\n    opacity: 0.9;\r\n    -webkit-transition-delay: 0.2s;\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover:before,\r\n  &.hover:before {\r\n    -webkit-transform: skew(30deg) translateX(-20%);\r\n    transform: skew(30deg) translateX(-20%);\r\n    -webkit-transition-delay: 0.05s;\r\n    transition-delay: 0.05s;\r\n  }\r\n\r\n  &:hover:after,\r\n  &.hover:after {\r\n    -webkit-transform: skew(-30deg) translateX(-10%);\r\n    transform: skew(-30deg) translateX(-10%);\r\n  }\r\n\r\n  &:hover figcaption:before,\r\n  &.hover figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-40%);\r\n    transform: skew(30deg) translateX(-40%);\r\n    -webkit-transition-delay: 0.15s;\r\n    transition-delay: 0.15s;\r\n  }\r\n\r\n  &:hover figcaption:after,\r\n  &.hover figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-30%);\r\n    transform: skew(-30deg) translateX(-30%);\r\n    -webkit-transition-delay: 0.1s;\r\n    transition-delay: 0.1s;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nexport const JCard2 = styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    background: #fff;\r\n    max-width: 100%;\r\n    min-width: 240px;\r\n    height: 400px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n\r\n    .thumbnail {\r\n      width: 100%;\r\n      height:100%;\r\n      overflow: hidden;\r\n      border-radius: 10px 10px 0 0;\r\n      background: #eee;\r\n      img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n       object-fit: cover;\r\n      }\r\n    }\r\n\r\n \r\n    .post-content {\r\n      position: absolute;\r\n      bottom: 0;\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border-radius: 0 0 10px 10px;\r\n      .category {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 0;\r\n        background: ${({ theme }) => theme.secondary};\r\n        padding: 10px 15px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n      }\r\n      .title {\r\n        color: #ccc;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n      }\r\n      .sub_title {\r\n        margin: 0;\r\n        padding: 0 0 20px;\r\n        color: ${({ theme }) => theme.secondary};\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n      }\r\n\r\n      .description {\r\n          height: 10px;\r\n          margin-top: 12px;\r\n         \r\n          &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            background-color: #f5f5f5;\r\n          }\r\n\r\n          &::-webkit-scrollbar {\r\n            width: 10px;\r\n            background-color: #f5f5f5;\r\n          }\r\n          &::-webkit-scrollbar-thumb {\r\n            background-image: -webkit-gradient(\r\n              linear,\r\n              left bottom,\r\n              left top,\r\n              color-stop(0.44, rgb(122, 153, 217)),\r\n              color-stop(0.72, rgb(73, 125, 189)),\r\n              color-stop(0.86, rgb(28, 58, 148))\r\n            );\r\n          }\r\n        \r\n          p{\r\n            color: #232323;\r\n            font-size: 14px;\r\n            line-height: 1.8em;\r\n            opacity: 0;\r\n            \r\n            pointer-events: none;\r\n            transition: all 0.45s ease;\r\n            &:first-of-type {\r\n              margin-top: 1.25rem;\r\n              &:before {\r\n                content: \"\";\r\n                position: absolute;\r\n                height: 5px;\r\n                background: ${({ theme }) => theme.blue};\r\n                width: 35px;\r\n                top: -0.75rem;\r\n                border-radius: 3px;\r\n              }\r\n            }\r\n          }\r\n        \r\n        }\r\n     \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .thumbnail {\r\n        background-color: #000;\r\n    \r\n        img {\r\n          -webkit-transform: scale(1.1);\r\n          -moz-transform: scale(1.1);\r\n          transform: scale(1.1);\r\n          opacity: 0.8;\r\n          transition: all 0.8s ease-in;\r\n        }\r\n        transition: all 0.8s ease-in-out;\r\n\r\n      }\r\n      .post-content{\r\n        .description{\r\n          height: 175px;\r\n          transition: height 0.6s ease-in-out;\r\n          overflow: ${(props) => props.oflow && \"auto\"};\r\n          p{\r\n            cursor: default;\r\n            pointer-events: auto;\r\n            -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n            opacity: 0.9;\r\n            -webkit-transition-delay: 0.6s;\r\n            transition-delay: 0.6s;\r\n          }\r\n         \r\n        }\r\n        \r\n      }\r\n     \r\n\r\n    }\r\n  \r\n`;\r\n\r\nexport const JCard3 = styled.div`\r\n  .description {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #fff;\r\n    z-index: 1;\r\n\r\n    h1 {\r\n      line-height: 1;\r\n      margin: 0;\r\n      font-size: 1.7rem;\r\n    }\r\n    h4 {\r\n      font-size: 1rem;\r\n      font-weight: 300;\r\n      text-transform: capitalize;\r\n      color: #a2a2a2;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      margin: 1rem 0 0;\r\n      font-size: 16px;\r\n      &:first-of-type {\r\n        margin-top: 1.25rem;\r\n        &:before {\r\n          content: \"\";\r\n          position: absolute;\r\n          height: 5px;\r\n          background: ${({ theme }) => theme.blue};\r\n          width: 35px;\r\n          top: -0.75rem;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JCard4 = styled.figure`\r\n  position: relative;\r\n  margin: 10px;\r\n  min-width: 230px;\r\n  max-width: 315px;\r\n  width: 100%;\r\n  height: ${(props) => props.height && props.height};\r\n  color: #000000;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n  font-size: 14px;\r\n\r\n  & * {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .profile-image {\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 300px;\r\n    z-index: 1;\r\n    position: relative;\r\n    margin: ${(props) => props.margin && props.margin};\r\n    top: ${(props) => props.top && props.top};\r\n    right: ${(props) => props.right && props.right};\r\n    bottom: ${(props) => props.bottom && props.bottom};\r\n    left: ${(props) => props.left && props.left};\r\n    padding: 10px;\r\n    border: 2px solid #6dd5ed;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      vertical-align: top;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    .profile-image {\r\n      border-color: #2193b0;\r\n    }\r\n    figcaption {\r\n      box-shadow: ${(props) =>\r\n        props.bs\r\n          ? props.bs\r\n          : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n            \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n            \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n            \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n            \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n    }\r\n  }\r\n\r\n  figcaption {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    padding: 125px 25px 25px;\r\n    margin-top: -100px;\r\n    display: inline-block;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.11)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.11)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.11)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.11)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.11)\")};\r\n\r\n    h3,\r\n    h4,\r\n    p {\r\n      margin: 0 0 5px;\r\n    }\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    h4 {\r\n      color: #8c8c8c;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n      letter-spacing: 1px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .icons {\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .linkToPage {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const DTestimonialCard = styled.div`\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  outline: 0;\r\n  border: 0;\r\n  position: relative;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n\r\n  figure {\r\n    position: relative;\r\n    float: left;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    min-width: 90%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    color: #000000;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    background: #2193b0;\r\n    background: -webkit-linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n\r\n    padding: 15px;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n\r\n    & *,\r\n    & *::before,\r\n    & *::after {\r\n      -webkit-box-sizing: border-box;\r\n      box-sizing: border-box;\r\n      -webkit-transition: all 0.35s ease;\r\n      transition: all 0.35s ease;\r\n    }\r\n\r\n    .profile {\r\n      width: 100px;\r\n      height: 100px;\r\n      border-radius: 100%;\r\n      display: inline-block;\r\n      position: relative;\r\n      overflow: hidden;\r\n      -webkit-box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      margin-bottom: 10px;\r\n      border: solid 5px #fe8c00;\r\n      border-color: ${({ theme }) => theme.blue};\r\n\r\n      img {\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    figcaption {\r\n      position: relative;\r\n      width: 100%;\r\n\r\n      h5,\r\n      h4,\r\n      blockquote {\r\n        margin: 0;\r\n      }\r\n\r\n      h5,\r\n      h4 {\r\n        text-transform: uppercase;\r\n        font-weight: 500;\r\n      }\r\n\r\n      h4 {\r\n        color: #274046;\r\n      }\r\n\r\n      h4,\r\n      h5 {\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n      }\r\n\r\n      blockquote {\r\n        font-size: 1em;\r\n        padding: 45px 20px 40px 50px;\r\n        margin-top: 30px;\r\n        background: #ffffff;\r\n        border-radius: 5px;\r\n        -webkit-box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        text-align: left;\r\n        position: relative;\r\n\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n\r\n        &::before,\r\n        &::after {\r\n          font-family: \"FontAwesome\";\r\n          position: absolute;\r\n          font-size: 22px;\r\n          opacity: 0.25;\r\n          color: ${(props) =>\r\n            props.inverted\r\n              ? ({ theme }) => theme.light\r\n              : ({ theme }) => theme.dark};\r\n        }\r\n\r\n        &::before {\r\n          content: \"\\f10d\";\r\n          top: 20px;\r\n          left: 20px;\r\n        }\r\n        &::after {\r\n          content: \"\\f10e\";\r\n          bottom: 10px;\r\n          right: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \"figure{background: transparent; figcaption{blockquote{box-shadow: none; background: transparent}}}\"}\r\n`;\r\n\r\nexport const GalleryCard = styled.div`\r\n  position: relative;\r\n  flex: 0 1 15rem;\r\n  background-color: #fff;\r\n  padding-bottom: 5rem;\r\n  transition: background-color 0.2s cubic-bezier(0.5, 0.3, 0.8, 0.06);\r\n  color: #000;\r\n  margin: ${(props) => (props.margin ? props.margin : \"3px\")};\r\n\r\n  .thumb {\r\n    position: relative;\r\n    ${(props) =>\r\n      props.size === \"large\"\r\n        ? css`\r\n            width: 20rem;\r\n            height: 15rem;\r\n          `\r\n        : css`\r\n            width: 15rem;\r\n            height: 10rem;\r\n          `};\r\n\r\n    perspective-origin: 50% 0%;\r\n    ${(props) =>\r\n      props.size === \"large\"\r\n        ? css`\r\n            perspective: 900px;\r\n          `\r\n        : css`\r\n            perspective: 600px;\r\n          `};\r\n    z-index: 1;\r\n\r\n    &-image,\r\n    &-shadow {\r\n      position: absolute;\r\n      display: block;\r\n      ${(props) =>\r\n        props.size === \"large\"\r\n          ? css`\r\n              width: 20rem;\r\n              height: 15rem;\r\n            `\r\n          : css`\r\n              width: 15rem;\r\n              height: 10rem;\r\n            `};\r\n      transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1);\r\n    }\r\n\r\n    &-shadow {\r\n      opacity: 0.8;\r\n    }\r\n    &-shadow:nth-child(1) {\r\n      opacity: 0.6;\r\n      background-color: ${({ theme }) => theme.primary};\r\n      transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1) 0.07s;\r\n    }\r\n\r\n    &-shadow:nth-child(2) {\r\n      opacity: 0.7;\r\n      background-color: ${({ theme }) => theme.blue};\r\n      transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1) 0.05s;\r\n    }\r\n\r\n    &-shadow:nth-child(3) {\r\n      background-color: ${({ theme }) => theme.bluer};\r\n      transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1) 0.03s;\r\n    }\r\n\r\n    &-image {\r\n      position: relative;\r\n      background-image: url(${(props) => props.background && props.background});\r\n      background-size: auto 100%;\r\n      background-position: center;\r\n      background-repeat: no-repeat;\r\n      background-color: #607d8b;\r\n      &::before {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background-color: #3f51b5;\r\n        content: \"\";\r\n        opacity: 0;\r\n        transition: opacity 0.1s;\r\n      }\r\n    }\r\n  }\r\n\r\n  .title,\r\n  .explore {\r\n    position: absolute;\r\n    bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 5rem;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    transition: all 0.2s cubic-bezier(0.5, 0.3, 0.8, 0.06);\r\n  }\r\n\r\n  .title span,\r\n  .explore span {\r\n    padding: 0.5rem;\r\n    flex: 1 1 auto;\r\n    text-align: center;\r\n  }\r\n\r\n  .explore {\r\n    opacity: 0;\r\n    transform: translate(0, -1rem);\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: #673ab7;\r\n  }\r\n\r\n  .btn {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 5rem;\r\n    padding: 0.5rem 1rem;\r\n    background-color: #fff;\r\n    border-radius: 2rem;\r\n    border: 2px solid #3f51b5;\r\n    color: #fff;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    transform: translate(-50%, 2rem);\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    opacity: 0;\r\n    outline: none;\r\n    z-index: 4;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:hover .thumb {\r\n    z-index: 3;\r\n  }\r\n\r\n  &:hover .title {\r\n    opacity: 0;\r\n  }\r\n\r\n  &:hover .explore {\r\n    opacity: 1;\r\n    transform: translate(0, 1rem);\r\n    transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1) 0.1s;\r\n  }\r\n\r\n  &:hover .thumb-image {\r\n    transform: scale(1.05) translate(0, -1rem) rotateX(25deg);\r\n  }\r\n\r\n  &:hover .thumb-image::before {\r\n    opacity: 0.4;\r\n  }\r\n\r\n  &:hover .thumb-shadow:nth-child(3) {\r\n    transform: scale(1.02) translate(0, -0.3rem) rotateX(15deg);\r\n  }\r\n\r\n  &:hover .thumb-shadow:nth-child(2) {\r\n    transform: ${(props) =>\r\n        props.size === \"large\" ? \"scale(0.94)\" : \"scale(0.9)\"}\r\n      translate(0, 1rem) rotateX(15deg);\r\n  }\r\n\r\n  &:hover .thumb-shadow:nth-child(1) {\r\n    transform: ${(props) =>\r\n        props.size === \"large\" ? \"scale(0.88)\" : \"scale(0.82)\"}\r\n      translate(0, 2.4rem) rotateX(5deg);\r\n  }\r\n\r\n  &:hover .btn {\r\n    opacity: 1;\r\n    color: #3f51b5;\r\n    transform: translate(-50%, 0);\r\n  }\r\n\r\n  &:hover .btn:hover {\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 5;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport { JCard4 } from \"../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport FancyText from \"../../FancyText\";\r\n\r\nconst TeamSection = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <FancyText size=\"28px\">Our Team</FancyText>\r\n\r\n      <DGrid four gap=\"25px\">\r\n        {loading_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          employeesAR &&\r\n          employeesAR.map((employee) => (\r\n            <Content margin=\"0 auto\" width=\"90%\" height=\"100%\">\r\n              <JCard4 data-emp={employee._id} key={employee._id}>\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={\r\n                      employee.photo\r\n                        ? `/images/employees/${employee.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                    }\r\n                    alt={employee.photo}\r\n                  />\r\n                </div>\r\n                <figcaption>\r\n                  <h3>\r\n                    {employee.title} {employee.firstName} {employee.lastName}\r\n                  </h3>\r\n                  <h4>{employee.role}</h4>\r\n                  <p>\r\n                    {employee.bio.length > 50\r\n                      ? parser(employee.bio.substr(0, 50) + \"...\")\r\n                      : parser(employee.bio.substr(0, 50))}\r\n                  </p>\r\n                  <ReadMore hover={0}>Read More</ReadMore>\r\n                </figcaption>\r\n                <Link to=\"/about\" className=\"linkToPage\" />\r\n              </JCard4>\r\n            </Content>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n\r\n      <Link to=\"/about/#team\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2,\r\n    margin: \"0 auto\",\r\n  },\r\n};\r\n\r\nexport default TeamSection;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: flex;\r\n  justify-column: center;\r\n  align-items: center;\r\n  flex-direction: ${(props) => (props.row ? \"row\" : \"column\")};\r\n\r\n  .ring {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${(props) =>\r\n      props.mini\r\n        ? \"12px\"\r\n        : props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"90px\"\r\n        : \"10em\"};\r\n    height: ${(props) =>\r\n      props.mini\r\n        ? \"12px\"\r\n        : props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"90px\"\r\n        : \"12em\"};\r\n\r\n    div {\r\n      box-sizing: border-box;\r\n      display: block;\r\n      position: absolute;\r\n      width: ${(props) =>\r\n        props.mini\r\n          ? \"9px\"\r\n          : props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"72px\"\r\n          : \"10em\"};\r\n      height: ${(props) =>\r\n        props.mini\r\n          ? \"9px\"\r\n          : props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"72px\"\r\n          : \"10em\"};\r\n      margin: ${(props) =>\r\n        props.mini\r\n          ? \"1px\"\r\n          : props.tiny\r\n          ? \"2px\"\r\n          : props.small\r\n          ? \"3px\"\r\n          : props.medium\r\n          ? \"6px\"\r\n          : \"10px\"};\r\n      border: ${(props) =>\r\n        props.mini\r\n          ? \"1px solid rgba(255,255,255,0.7)\"\r\n          : props.tiny\r\n          ? \"1px solid #fff\"\r\n          : props.small\r\n          ? \"2px solid #fff\"\r\n          : props.medium\r\n          ? \"3px solid #fff\"\r\n          : \"4px  solid #fff\"};\r\n\r\n      border-radius: 50%;\r\n      animation: ${keyring} 1.2s infinite linear; //cubic-bezier(0.5, 0, 0.5, 1) infinite\r\n      border-color: ${(props) =>\r\n        props.inverted\r\n          ? \"#fff rgba(255, 255, 255, 0.2) rgba(255, 255, 255, 0.2) rgba(255, 255, 255, 0.2)\"\r\n          : \"#203A43 rgba(32, 58, 67, 0.2) rgba(32, 58, 67, 0.2) rgba(32, 58, 67, 0.2)\"};\r\n    }\r\n\r\n    div:nth-child(1) {\r\n      animation-delay: -0.45s;\r\n    }\r\n    div:nth-child(2) {\r\n      animation-delay: -0.3s;\r\n    }\r\n    div:nth-child(3) {\r\n      animation-delay: -0.15s;\r\n    }\r\n  }\r\n\r\n  .content-text {\r\n    margin: 0 2px;\r\n    letter-spacing: 2px;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    font-size: ${(props) =>\r\n      props.tiny\r\n        ? \"12px\"\r\n        : props.small\r\n        ? \"13px\"\r\n        : props.medium\r\n        ? \"14px\"\r\n        : \"16px\"};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = (props) => {\r\n  return (\r\n    <SpinnerRing {...props}>\r\n      <div className=\"ring\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"content-text\">{props.content}</div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { FETCH_HOME_SECTION, FETCH_ABOUT_CMS } from \"../../../util/graphql/cms\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Section2Styled, Content } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AboutSection = ({ nextSection }) => {\r\n  const [isAboutSection, setIsAboutSection] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const {\r\n    data: aboutChange,\r\n    loading: loadAboutChange,\r\n  } = useQuery(FETCH_HOME_SECTION, { variables: { sectionName: \"ABOUT\" } });\r\n\r\n  useEffect(() => {\r\n    if (aboutChange) {\r\n      setIsAboutSection(aboutChange.homeCMS);\r\n    }\r\n  }, [aboutChange]);\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled\r\n      ref={(el) => (section2 = el)}\r\n      alt={isAboutSection.alt === true ? true : false}\r\n    >\r\n      <div className=\"sec2-container\" ref={nextSection}>\r\n        <div className=\"sec2-inner\">\r\n          {loadAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner medium />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n                <ReadMore>\r\n                  <Link to=\"/about/#story\">Learn More</Link>\r\n                </ReadMore>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={(el) => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default AboutSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst PromoSection1 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/appointment\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default PromoSection1;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_TESTIMONIALS = gql`\r\n  query testimonials($active: Boolean) {\r\n    testimonials(active: $active) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USER_REVIEW = gql`\r\n  query userTestimonial($userId: ID) {\r\n    userTestimonial(userId: $userId) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_VIEWS = gql`\r\n  query testimonialsView($limit: Int) {\r\n    testimonialsView(limit: $limit) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_TESTIMONIALS, FETCH_USER_REVIEW, FETCH_VIEWS };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_VIEWS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, Overlay } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst TestimonialSection = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const { data: dataReviews, loading: loadReviews } = useQuery(FETCH_VIEWS, {\r\n    variables: {\r\n      limit: 0,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonialsView);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      width=\"100%\"\r\n      mcenter\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      {loadReviews ? (\r\n        <Spinner inverted medium />\r\n      ) : (\r\n        <Content width=\"80%\" height=\"auto\" margin=\"auto\" pad=\"50px 0\">\r\n          <Slider {...settings}>\r\n            {reviews &&\r\n              reviews.map((rev) => (\r\n                <DTestimonialCard basic inverted>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          rev.user.photo\r\n                            ? `/images/users/${rev.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n\r\n                    <figcaption>\r\n                      <h4>\r\n                        {rev.user.firstName} {rev.user.lastName}{\" \"}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={rev.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>{rev.message}</blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        </Content>\r\n      )}\r\n\r\n      <Overlay\r\n        bg={\"rgba(0,0,0,0.5)\"}\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        pad=\"20px\"\r\n      >\r\n        <FancyText size=\"28px\" alt>\r\n          What Our Client Say\r\n        </FancyText>\r\n      </Overlay>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  fade: true,\r\n  infinite: true,\r\n  autoplay: true,\r\n  speed: 1000,\r\n  autoplaySpeed: 4000,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nexport default TestimonialSection;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { ScrollUp, DButton } from \"../../styled/utils\";\r\nimport \"./scroll.css\";\r\n\r\nclass ScrollButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(\r\n      0,\r\n      window.pageYOffset - (this.props.scrollPx ? this.props.scrollPx : \"100\")\r\n    );\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delay ? this.props.delay : \"16.66\"\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        title=\"Back to top\"\r\n        className=\"scroll\"\r\n        onClick={() => {\r\n          this.scrollToTop();\r\n        }}\r\n      >\r\n        <ScrollUp name=\"chevron up\" size=\"large\" className=\"arrow-up\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ScrollButton;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategorySection from \"../../components/main/home/CategorySection\";\r\nimport TeamSection from \"../../components/main/home/TeamSection\";\r\nimport AboutSection from \"../../components/main/home/AboutSection\";\r\nimport PromoSection1 from \"../../components/main/home/PromoSection1\";\r\nimport TestimonialSection from \"../../components/main/home/TestimonialSection\";\r\nimport { DContainer } from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Home = () => {\r\n  const nextSection = useRef();\r\n  const card1 = \"/images/card1.jpg\";\r\n  const scrolling = useScroll(300);\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton />}\r\n      <Showcase nextSection={nextSection} />\r\n\r\n      <AboutSection nextSection={nextSection} />\r\n\r\n      <CategorySection cards={card1} />\r\n      <PromoSection1 />\r\n      <TeamSection cards={card1} />\r\n      <TestimonialSection />\r\n      <PromoSection1 />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { DSection, Content, DImage } from \"../../styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = ({ content, aboutUS }) => {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768\r\n            ? \"column\"\r\n            : aboutUS.missionvision.alt\r\n            ? \"row-reverse\"\r\n            : \"row\"\r\n        }\r\n        margin=\"24px auto 0 auto\"\r\n        ref={content}\r\n        id=\"story\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"24px\"\r\n        >\r\n          <h3>{aboutUS && aboutUS.missionvision.mission.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.mission.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.mission.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.mission.paragraph}</p>\r\n          <h3>{aboutUS && aboutUS.missionvision.vision.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.vision.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.vision.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.vision.paragraph}</p>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.missionvision.photo\r\n                  ? `/images/cms/about/${aboutUS.missionvision.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768 ? \"column\" : aboutUS.story.alt ? \"row-reverse\" : \"row\"\r\n        }\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"90%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.story.photo\r\n                  ? `/images/cms/about/${aboutUS.story.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"20px\"\r\n          style={{ maxHeight: \"90vh\" }}\r\n        >\r\n          <h3>{aboutUS.story.title}</h3>\r\n          {aboutUS.story.subtitle !== \"\" && <h4>{aboutUS.story.subtitle}</h4>}\r\n          <p\r\n            style={{\r\n              fontSize: \"15px\",\r\n              letterSpacing: \"2px\",\r\n              lineHeight: 1.8,\r\n              textAlign: \"justify\",\r\n              overflowWrap: \"break-word\",\r\n              overflow: \"auto\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            {aboutUS.story.paragraph}\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../styled/card\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst TeamDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModal = event => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JCard4 data-emp={employee._id} onClick={handleModal}>\r\n        <div className=\"profile-image\">\r\n          <img\r\n            src={\r\n              employee.photo\r\n                ? `/images/employees/${employee.photo}`\r\n                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n            }\r\n            alt={employee.photo}\r\n          />\r\n        </div>\r\n        <figcaption>\r\n          <h3>\r\n            {employee.title} {employee.firstName} {employee.lastName}\r\n          </h3>\r\n          <h4>{employee.role}</h4>\r\n          <p>\r\n            {employee.bio.length > 50\r\n              ? parser(employee.bio.substr(0, 50) + \"...\")\r\n              : parser(employee.bio.substr(0, 50))}\r\n          </p>\r\n          <ReadMore hover={0}>Read More</ReadMore>\r\n          <div className=\"icons\">\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-reddit\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-vimeo\"></i>\r\n            </a>\r\n          </div>\r\n        </figcaption>\r\n      </JCard4>\r\n      <Modal size=\"small\" open={open} onClose={() => setOpen(false)} closeIcon>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4 top={\"-60px\"}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{employee.firstName}</h1>\r\n                <h4>{employee.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {parser(employee.bio)}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nconst Team = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const { data: dataEmployees, loading: loadingEmployees } = useQuery(\r\n    FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmployees) {\r\n      setEmployees(dataEmployees.aestheticiansReceps);\r\n    }\r\n  }, [dataEmployees]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        fixed\r\n        id=\"team\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n        >\r\n          <h3>Our TEAM</h3>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        pad=\"10px 0\"\r\n        mcenter\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DGrid three gap=\"20px\">\r\n            {loadingEmployees ? (\r\n              <>\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n              </>\r\n            ) : (\r\n              employees &&\r\n              employees.map(emp => <TeamDetails key={emp._id} employee={emp} />)\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","export const scrollView = ref => {\r\n  if (ref.current)\r\n    ref.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\"\r\n    });\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../util/graphql/cms\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport Story from \"../../components/main/about/Story\";\r\nimport Team from \"../../components/main/about/Team\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst About = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n\r\n      <>\r\n        <DSection\r\n          background={\r\n            about.bgImg\r\n              ? `/images/cms/about/${about.bgImg}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          bgcolor={about.bgColor}\r\n          height=\"85vh\"\r\n          fixed\r\n          id=\"about\"\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className=\"dark\"\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>\r\n              {about.title ? about.title : \"ABOUT US\"}\r\n            </h1>\r\n            {loadAbout && <Spinner medium inverted />}\r\n            {about.subtitle !== \"\" && <h3>{about.subtitles}</h3>}\r\n            <MouseScroll onClick={scrollDown} />\r\n          </Content>\r\n          <Overlay bgc={about.overlay ? true : false} />\r\n        </DSection>\r\n        {loadAbout ? (\r\n          <DSection\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"space-around\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            margin=\"20px auto\"\r\n            pad=\"20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Skeleton height=\"100%\" width=\"100%\" />\r\n              <Skeleton width=\"100%\" height={20} count={10} />\r\n            </DGrid>\r\n          </DSection>\r\n        ) : (\r\n          <Story content={content} aboutUS={dataAbout.aboutUsCMS} />\r\n        )}\r\n      </>\r\n\r\n      <Team />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    setValues,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/login\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/home\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted() {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\",\r\n          }}\r\n        >\r\n          <Link to=\"/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const RadioStyle = styled.div`\r\n  height: ${(props) => (props.size ? props.size : \"auto\")};\r\n  width: 100%;\r\n\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.1);\r\n\r\n\r\n  .radio {\r\n    position: absolute;\r\n    clip: rect(0, 0, 0, 0);\r\n    height: 1px;\r\n    width: 1px;\r\n    border: 0;\r\n    overflow: hidden;\r\n    &:checked {\r\n      & + .radio-label {\r\n        background-color: #2193b0;\r\n        color: #fff;\r\n        font-weight: 700;\r\n        box-shadow: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .radio-label {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background-color: #e4e4e4;\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-size: 14px;\r\n    line-height: 1;\r\n    text-align: center;\r\n\r\n    padding: 8px 16px;\r\n\r\n    transition: all 0.1s ease-in-out;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RadioGroupStyle = styled.div`\r\n  display: flex;\r\n  margin-bottom: 36px;\r\n  overflow: hidden;\r\n\r\n  ${RadioStyle} {\r\n    &:first-of-type {\r\n      border-radius: 5px 0 0 5px;\r\n    }\r\n    &:last-of-type {\r\n      border-radius: 0 5px 5px 0;\r\n    }\r\n  }\r\n`;\r\n","import moment from \"moment\";\r\n\r\nconst timeLineLabels = (\r\n  desiredStartTime,\r\n  timeLength,\r\n  interval,\r\n  breakTimeLength = 0\r\n) => {\r\n  const periodsInADay = moment\r\n    .duration(timeLength + breakTimeLength, \"MINUTES\")\r\n    .as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nexport default timeLineLabels;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport DRadio from \"../../DRadio\"\r\nimport moment from \"moment\";\r\nimport timeLineLabels from \"../../../util/hooks/timeLineLabels\";\r\n\r\n// const timelineLabels = (\r\n//   desiredStartTime,\r\n//   timeLength,\r\n//   interval,\r\n//   breakTimeLength = 0\r\n// ) => {\r\n//   const periodsInADay = moment\r\n//     .duration(timeLength + breakTimeLength, \"MINUTES\")\r\n//     .as(\"MINUTES\");\r\n\r\n//   let timeSlot = [];\r\n\r\n//   const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n//   for (let i = 0; i <= periodsInADay; i += interval) {\r\n//     startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n//     timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n//   }\r\n//   return timeSlot;\r\n// };\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue,\r\n  calendarSize,\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n  const [isEmp, setIsEmp] = useState({});\r\n  const [isServ, setIsServ] = useState({});\r\n\r\n  const handleTimeChanged = (event) => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_employee) {\r\n      setIsEmp(data_employee);\r\n    }\r\n  }, [data_employee]);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setIsServ(data_service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n      },\r\n    }\r\n  );\r\n\r\n  if (isEmp && isServ && data_appointments) {\r\n    const workStart = isEmp.employee && isEmp.employee.schedule.workStart;\r\n    const workLength = isEmp.employee && isEmp.employee.schedule.workLength;\r\n    const breakStart = isEmp.employee && isEmp.employee.schedule.breakStart;\r\n    const breakLength = isEmp.employee && isEmp.employee.schedule.breakLength;\r\n\r\n    isEmp.employee && isEmp.employee.schedule.day.map((d) => days.push(d));\r\n    data_appointments.checkedAppointments.map((occcupied) =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = isServ.service.duration;\r\n\r\n    const workingTime = timeLineLabels(\r\n      startTime,\r\n      workLength,\r\n      intervalTime,\r\n      breakLength\r\n    );\r\n    const breakTime = timeLineLabels(breakStime, breakLength, 30);\r\n\r\n    let initialTime = workingTime.filter((item) => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter((oras) => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map((ft) => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content height=\"100%\" width=\"100%\" flex justify=\"center\" align=\"center\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          peekNextMonth\r\n          showMonthDropdown\r\n          showYearDropdown\r\n          dropdownMode=\"select\"\r\n          calendarClassName={calendarSize}\r\n          inline\r\n        />\r\n      </Content>\r\n\r\n      {isEmp &&\r\n        data_service &&\r\n        (loading_employee || loading_appointments || loading_service ? (\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <Spinner content=\"Fetching available time slot...\" medium />\r\n          </Content>\r\n        ) : (\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"space-around\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <DLabel size=\"16px\" color=\"bluer\" weight={700} rounded>\r\n              Time Slot\r\n            </DLabel>\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              maxh={\"300px\"}\r\n              flex\r\n              align=\"flex-start\"\r\n              justify=\"flex-start\"\r\n              flow=\"column wrap\"\r\n              hoverflow\r\n            >\r\n              {times.map((time) => (\r\n                <Content width=\"auto\" height=\"20px\" margin={\"3px\"} key={time}>\r\n                  <div className=\"pretty p-default p-curve\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"time\"\r\n                      value={time}\r\n                      onChange={handleTimeChanged}\r\n                    />\r\n                    <div className=\"state p-info-o\">\r\n                      <label style={styles.label}>{time}</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              ))}\r\n            </Content>\r\n          </Content>\r\n        ))}\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700,\r\n  },\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\nimport { DContainer, DSection, Content } from \"../components/styled/containers\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      bgcolor={({ theme }) => theme.dark}\r\n      className=\"dark\"\r\n    >\r\n      <h1 style={{ fontSize: \"100px\" }} s>\r\n        PAGE 404\r\n      </h1>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  categoryValue,\r\n  setCategoryValue,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n}) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (data_categories) {\r\n      setCategories(data_categories.categories);\r\n    }\r\n  }, [data_categories]);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services },\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryValue,\r\n      active: true,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp,\r\n    },\r\n  ] = useLazyQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId: categoryValue,\r\n      active: true,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_serviceEmp) {\r\n      setEmployees(data_serviceEmp.category.employees);\r\n    }\r\n  }, [data_serviceEmp]);\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setCategoryValue(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"flex-start\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h3>Appointment Details</h3>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Select Service Category\r\n          </label>\r\n          {loading_categories ? (\r\n            <Spinner row content=\"Loading...\" small />\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryValue}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Service Category...\r\n              </option>\r\n              {categories &&\r\n                categories.map((category) => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        {called && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select Sub-Service\r\n            </label>\r\n            {loading_services ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                placeholder=\"Services...\"\r\n                name=\"service\"\r\n                onChange={handleServiceChange}\r\n                value={serviceValue}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"38px\",\r\n                  padding: \"0.5em\",\r\n                  border: \"1px solid rgba(34,36,38,.15)\",\r\n                  cursor: \"pointer\",\r\n                  position: \"relative\",\r\n                  outline: \"0\",\r\n                  visibility: \"visible\",\r\n                  textAlign: \"left\",\r\n                }}\r\n                className=\"input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Sub-Services...\r\n                </option>\r\n                {services &&\r\n                  services.map((service) => (\r\n                    <option key={service._id} value={service._id}>\r\n                      {service.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n\r\n        {calledServiceEmp && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select Aesthetician\r\n            </label>\r\n            {loading_serviceEmp ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                name=\"employee\"\r\n                value={employeeVal}\r\n                onChange={handleEmployeeChange}\r\n                className=\"input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Aesthetician...\r\n                </option>\r\n                {employees &&\r\n                  employees.map((servEmp) => (\r\n                    <option key={servEmp._id} value={servEmp._id}>\r\n                      {servEmp.firstName}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const [service, setService] = useState({});\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setService(data_service.service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {loading_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input value={service.name} readOnly style={{ width: \"60%\" }} />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\n// import { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n          <DSection\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            background={\r\n              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            }\r\n            height=\"100vh\"\r\n          >\r\n            <Overlay\r\n              hovOpac=\"1\"\r\n              opac=\"0\"\r\n              bg={\"rgba(0,0,0,0.7)\"}\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <div className=\"overlay-box\">\r\n                <div className=\"overlay-box__content dark\">\r\n                  <h1>Advertisement</h1>\r\n                </div>\r\n              </div>\r\n            </Overlay>\r\n          </DSection>\r\n\r\n          <DGrid>\r\n            <AppointmentInputs\r\n              categoryValue={categoryValue}\r\n              setCategoryValue={setCategoryValue}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                  calendarSize={\"calendar_large\"}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    disabled={\r\n                      categoryValue === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_GALLERIES = gql`\r\n  query galleries($active: Boolean) {\r\n    galleries(active: $active) {\r\n      _id\r\n      title\r\n      active\r\n      photos {\r\n        _id\r\n        name\r\n        caption\r\n        src\r\n        height\r\n        width\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_GALLERY = gql`\r\n  query gallery($id: ID!, $active: Boolean) {\r\n    gallery(_id: $id, active: $active) {\r\n      _id\r\n      title\r\n      active\r\n      photos {\r\n        _id\r\n        name\r\n        caption\r\n        src\r\n        height\r\n        width\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_GALLERIES, FETCH_GALLERY };\r\n","import React from \"react\";\r\nimport { GalleryCard } from \"./styled/card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GalleryThumb = (props) => {\r\n  return (\r\n    <GalleryCard {...props}>\r\n      <div className=\"thumb\">\r\n        <div className=\"thumb-shadow\"></div>\r\n        <div className=\"thumb-shadow\"></div>\r\n        <div className=\"thumb-shadow\"></div>\r\n        <div className=\"thumb-image\"></div>\r\n      </div>\r\n      <div className=\"title\">\r\n        <span>{props.title}</span>\r\n      </div>\r\n      <div className=\"explore\">\r\n        <span>{props.subtitle}</span>\r\n      </div>\r\n      <button className=\"btn\">View More</button>\r\n      <Link to={props.link} />\r\n    </GalleryCard>\r\n  );\r\n};\r\n\r\nexport default GalleryThumb;\r\n","import React, { useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport { IconWrap } from \"./styled/utils\";\r\n\r\nconst ImageGalleryHover = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  margin: 2px;\r\n  img {\r\n    cursor: pointer;\r\n    transition: transform 0.7s ease-in-out, filter 0.5s ease;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .overlayImg {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    position: absolute;\r\n    height: 50px;\r\n    width: 100%;\r\n    top: 0;\r\n    padding: 10px 15px;\r\n    background: rgba(255, 255, 255, 0.7);\r\n    z-index: 2;\r\n    transform: translateY(-100%);\r\n    transition: transform 0.4s linear;\r\n  }\r\n\r\n  &:hover {\r\n    img {\r\n      transform: scale(1.1);\r\n      ${(props) =>\r\n        props.grayscale &&\r\n        css`\r\n          filter: grayscale(100%);\r\n        `};\r\n    }\r\n    .overlayImg {\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ImageSelected = ({\r\n  photo,\r\n  index,\r\n  menu,\r\n  grayscale,\r\n  setCurrentImage,\r\n  setViewerIsOpen,\r\n}) => {\r\n  // Open Light box\r\n  const openLightbox = () => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <ImageGalleryHover key={photo.id} grayscale={grayscale}>\r\n      <img alt={photo.alt} {...photo} onClick={openLightbox} />\r\n      {menu ? (\r\n        <div className=\"overlayImg\">\r\n          <IconWrap medium title={\"Cancel Update\"} color=\"bluer\">\r\n            <Edit onClick={() => alert(photo.id)} />\r\n          </IconWrap>\r\n          <IconWrap medium title={\"Cancel Update\"} color=\"secondary\">\r\n            <Cancel onClick={() => alert(photo.alt)} />\r\n          </IconWrap>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </ImageGalleryHover>\r\n  );\r\n};\r\n\r\nexport default ImageSelected;\r\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERIES } from \"../../util/graphql/gallery\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport GalleryThumb from \"../../components/GalleryThumb\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport ImageSelected from \"../../components/ImageSelected\";\r\n\r\nconst Gallery = () => {\r\n  let allPhotos = [];\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const { width: wid } = useWindowSize();\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const [galleries, setGalleries] = useState([]);\r\n\r\n  const {\r\n    data: dataGalleries,\r\n    loading: loadGalleries,\r\n    error,\r\n  } = useQuery(FETCH_GALLERIES, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataGalleries) {\r\n      setGalleries(dataGalleries.galleries);\r\n    }\r\n  }, [dataGalleries]);\r\n\r\n  const imageRenderer = useCallback(\r\n    ({ index, left, top, photo }) => (\r\n      <ImageSelected\r\n        index={index}\r\n        photo={photo}\r\n        left={left}\r\n        top={top}\r\n        setCurrentImage={setCurrentImage}\r\n        setViewerIsOpen={setViewerIsOpen}\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  if (galleries) {\r\n    galleries.map((g) => allPhotos.push(...g.photos));\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"gallery\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>Gallery</h1>\r\n          <h3>Love Your Skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      {loadGalleries ? (\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          minh=\"50vh\"\r\n          width=\"100%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Spinner content=\"Please wait while we fetch data...\" medium />\r\n        </Content>\r\n      ) : (\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"90%\"\r\n          flex\r\n          justify={wid < 768 && \"center\"}\r\n          align=\"center\"\r\n          margin=\"24px auto\"\r\n          flow=\"row wrap\"\r\n        >\r\n          {galleries.length > 0 &&\r\n            galleries.map((gallery) => (\r\n              <GalleryThumb\r\n                background={\r\n                  gallery.photos.length > 0\r\n                    ? `/images/gallery/${gallery.photos[0].src}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                title=\"Event Photos\"\r\n                subtitle=\"50 Event Photos\"\r\n                link=\"/zeadmin/dashboard\"\r\n              />\r\n            ))}\r\n        </Content>\r\n      )}\r\n      <DSection\r\n        height=\"100%\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        width=\"90%\"\r\n        mcenter\r\n        pad=\"20px 0\"\r\n        ref={content}\r\n      >\r\n        <h3>All Photos</h3>\r\n\r\n        <MyGallery\r\n          photos={allPhotos.map((photo) => ({\r\n            height: photo.height,\r\n            width: photo.width,\r\n            src: `/images/gallery/${photo.src}`,\r\n            alt: photo.alt,\r\n            id: photo._id,\r\n          }))}\r\n          renderImage={imageRenderer}\r\n          directions=\"column\"\r\n        />\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel\r\n                currentIndex={currentImage}\r\n                views={allPhotos.map((photo) => ({\r\n                  ...photo,\r\n                  src: `/images/gallery/${photo.src}`,\r\n                  srcset: photo.srcSet,\r\n                  caption:\r\n                    photo.caption !== null\r\n                      ? `${photo.name} - ${photo.caption}`\r\n                      : photo.name,\r\n                  alt: photo.src,\r\n                }))}\r\n              />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { Rating, Icon, Modal, Form, TextArea } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalReview = ({ openReview, setOpenReview, user, userReview }) => {\r\n  const [rate, setRate] = useState(userReview ? userReview.rating : 1);\r\n  const [message, setMessage] = useState(userReview ? userReview.message : \"\");\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const mutation = userReview ? UPDATE_REVIEW : ADD_REVIEW;\r\n\r\n  const [addOrUpdate, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      id: userReview && userReview._id,\r\n      rating: rate,\r\n      message: message,\r\n    },\r\n    refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n\r\n    onCompleted() {\r\n      toaster.notify(\r\n        userReview\r\n          ? \"Successfully Update a review\"\r\n          : \"Successfully Added a review\"\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleRate = (e, { rating }) => {\r\n    setRate(rating);\r\n  };\r\n\r\n  const handleMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    addOrUpdate();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"mini\"\r\n      open={openReview}\r\n      onClose={() => {\r\n        setOpenReview(false);\r\n        setEdit(false);\r\n      }}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>\r\n        <Icon name=\"pencil\" />\r\n        Write A Review\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field>\r\n            <Rating\r\n              rating={rate}\r\n              maxRating={5}\r\n              onRate={handleRate}\r\n              icon=\"star\"\r\n              size=\"huge\"\r\n              style={{ margin: \"0 auto\" }}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <TextArea\r\n              style={{ minHeight: 100 }}\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={handleMessage}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {!userReview || edit ? (\r\n          <DButton confirm onClick={handleSave}>\r\n            {loading ? (\r\n              <Spinner inverted small />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleEdit}>\r\n            <Icon name=\"edit\" />\r\n            Edit\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_REVIEW = gql`\r\n  mutation addTestimonial($rating: Int, $message: String) {\r\n    addTestimonial(inputTestimonial: { rating: $rating, message: $message }) {\r\n      _id\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_REVIEW = gql`\r\n  mutation updateTestimonial($id: ID!, $rating: Int, $message: String) {\r\n    updateTestimonial(_id: $id, rating: $rating, message: $message) {\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalReview;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_REVIEW } from \"../../../util/graphql/testimonial\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport ModalReview from \"./ModalReview\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Review = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [userReview, setUserReview] = useState({});\r\n  const [openReview, setOpenReview] = useState(false);\r\n\r\n  const { data: dataUserReview, loading: loadUserReview } = useQuery(\r\n    FETCH_USER_REVIEW,\r\n    {\r\n      variables: { userId: user ? user.userId : \"\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataUserReview) {\r\n      setUserReview(dataUserReview.userTestimonial);\r\n    }\r\n  }, [dataUserReview]);\r\n\r\n  const handleOpenReview = () => {\r\n    if (user) {\r\n      setOpenReview(true);\r\n    } else {\r\n      toaster.notify(\"You must sign in n order to write a review. Thank you!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      margin=\"1rem auto\"\r\n    >\r\n      {loadUserReview ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <>\r\n          <DButton basic radius=\"25px\" center bluer onClick={handleOpenReview}>\r\n            <Icon name=\"pencil\" />\r\n            Write a review\r\n          </DButton>\r\n          <ModalReview\r\n            openReview={openReview}\r\n            setOpenReview={setOpenReview}\r\n            userReview={dataUserReview && dataUserReview.userTestimonial}\r\n            user={user}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, DGrid } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport Review from \"./Review\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\n\r\nconst TestimonialCard = ({ content }) => {\r\n  const [isTestimonials, setIsTestimonials] = useState([]);\r\n\r\n  const {\r\n    data: dataTestimonials,\r\n    loading: loadTestimonials,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataTestimonials) {\r\n      setIsTestimonials(dataTestimonials.testimonials);\r\n    }\r\n  }, [dataTestimonials]);\r\n\r\n  return (\r\n    <DSection height=\"100%\" width=\"100%\" mcenter ref={content}>\r\n      <Review />\r\n      <Content width=\"80%\" height=\"100%\" margin=\"0 auto\" pad=\"50px 0\">\r\n        {loadTestimonials ? (\r\n          <DGrid three gap=\"20px\">\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n          </DGrid>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {isTestimonials &&\r\n              isTestimonials.map((testimonial) => (\r\n                <DTestimonialCard key={testimonial._id}>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          testimonial.user && testimonial.user.photo !== null\r\n                            ? `/images/users/${testimonial.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n                    <figcaption>\r\n                      <h4>\r\n                        {testimonial.user &&\r\n                          testimonial.user.firstName +\r\n                            \" \" +\r\n                            testimonial.user.lastName}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={testimonial.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>\r\n                        <span\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            right: \"10px\",\r\n                            fontSize: \"10px\",\r\n                            color: \"#bbb\",\r\n                          }}\r\n                        >\r\n                          {moment(parseInt(testimonial.updatedAt)).format(\"LL\")}\r\n                        </span>\r\n                        {testimonial.message}\r\n                      </blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        )}\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  infinite: true,\r\n  speed: 500,\r\n  rows: 2,\r\n  slidesPerRow: 3,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesPerRow: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 768,\r\n      settings: {\r\n        slidesPerRow: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default TestimonialCard;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport TestimonialCard from \"../../components/main/testimonial/TestimonialCard\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\n\r\nconst Testimonials = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"tstmnl\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\", fontWeight: 700 }}>\r\n            What Our Client Says\r\n          </h1>\r\n          {/* <h3>We continously improve our service</h3> */}\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <TestimonialCard content={content} />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport parser from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\n\r\nconst Services = () => {\r\n  const sectionDown = useRef();\r\n  const scrolling = useScroll(500);\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY, {\r\n    variables: { active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(sectionDown);\r\n  };\r\n\r\n  return (\r\n    <DContainer id=\"services\">\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\" }}>Our Services</h1>\r\n          <h3>It's time to take care of your skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay\r\n          bg={\"linear-gradient(to top, rgba(0,0,0,0.3), rgba(255,255,255,0.1))\"}\r\n        />\r\n      </DSection>\r\n      <DSection\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n        mcenter\r\n        pad=\"24px\"\r\n        height=\"100%\"\r\n        ref={sectionDown}\r\n      >\r\n        <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n          {loading ? (\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner content=\"Loading...\" />\r\n            </Content>\r\n          ) : (\r\n            <DGrid three gap=\"24px\" med7={\"1fr\"}>\r\n              {isCategories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/service/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CATEGORY_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n  Overlay,\r\n  DCard,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { JCard2 } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ServiceDetails from \"../../components/main/services/ServiceDetails\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Service = (props) => {\r\n  const categoryId = props.match.params._id;\r\n  const history = useHistory();\r\n  const [isReadMore, setIsReadMore] = useState(false);\r\n\r\n  const [isServices, setIsServices] = useState([]);\r\n\r\n  const { data, loading } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsServices(data.category.services);\r\n    }\r\n  }, [data]);\r\n\r\n  const backHist = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"50vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          fluid\r\n          height=\"100%\"\r\n          className=\"dark\"\r\n        >\r\n          {!data ? (\r\n            <Spinner inverted />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ fontSize: \"22px\" }}>{data.category.name}</h1>\r\n              <p style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                {parser(data.category.description)}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Content flex width=\"90%\" height=\"50px\" margin=\"20px auto\">\r\n        <DButton onClick={backHist}>\r\n          <Icon name=\"arrow left\" /> <span>Back to Services</span>\r\n        </DButton>\r\n      </Content>\r\n      {loading ? (\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"80vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        </Content>\r\n      ) : (\r\n        <DSection\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          mcenter\r\n          pad=\"24px\"\r\n          height=\"100%\"\r\n        >\r\n          <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n            <DGrid three gap=\"20px\">\r\n              {isServices &&\r\n                isServices.map(\r\n                  (service) =>\r\n                    service.active === true && (\r\n                      <JCard2\r\n                        key={service._id}\r\n                        oflow={isReadMore ? true : false}\r\n                        onPointerLeave={() => setIsReadMore(false)}\r\n                      >\r\n                        <div className=\"thumbnail\">\r\n                          <img\r\n                            src={\r\n                              service.photo !== null\r\n                                ? `/images/service/${service.photo}`\r\n                                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/169963/photo-1429043794791-eb8f26f44081.jpeg\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"post-content\">\r\n                          <div className=\"category\">{service.name}</div>\r\n                          <h4 className=\"title\">{service.duration} mins</h4>\r\n                          <h4 className=\"title\">Php {service.price}</h4>\r\n                          <div className=\"description\">\r\n                            {isReadMore ? (\r\n                              <p>{parser(service.description)}</p>\r\n                            ) : (\r\n                              <p>\r\n                                {service.description.length > 100\r\n                                  ? parser(\r\n                                      service.description.substr(0, 100) + \"...\"\r\n                                    )\r\n                                  : parser(service.description.substr(0, 100))}\r\n                              </p>\r\n                            )}\r\n                            {service.description.length <= 100 ? (\r\n                              \"\"\r\n                            ) : (\r\n                              <ReadMore\r\n                                onClick={() => setIsReadMore(!isReadMore)}\r\n                              >\r\n                                {isReadMore ? \"Read Less\" : \"Read More\"}\r\n                              </ReadMore>\r\n                            )}\r\n\r\n                            {/* <ServiceDetails service={service} /> */}\r\n                          </div>\r\n                        </div>\r\n                      </JCard2>\r\n                    )\r\n                )}\r\n            </DGrid>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const { userId } = useContext(AuthContext);\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/\">\r\n            Explore\r\n          </DButton>\r\n          <DButton\r\n            as={Link}\r\n            to={userId ? `/account/${userId}` : `/login`}\r\n          >\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/home\" basic>\r\n            Explore\r\n          </DButton>\r\n         \r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid=\"true\">\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid=\"true\">\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values,\r\n    },\r\n  });\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = (props) => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hoverColorText}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  // const [addInfo, setAddInfo] = useState(\"\");\r\n  // const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  // const handleMessage = e => {\r\n  //   setAddInfo(e.target.value);\r\n  // };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              categoryValue={categoryValue}\r\n              setCategoryValue={setCategoryValue}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [currentAppoint, setCurrentAppoint] = useState([]);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointData) {\r\n      setCurrentAppoint(currentAppointData.myCurrentAppointment);\r\n    }\r\n  }, [currentAppointData]);\r\n\r\n  console.log(currentAppoint);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppoint}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n    default:\r\n      return <h1>Something went wrong</h1>;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content,\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n \r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {dataLoading ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input value={myAppoint._id} readOnly style={styles.input} />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={myAppoint.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={myAppoint.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${myAppoint.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={myAppoint.status}\r\n                  readOnly\r\n                  style={\r\n                    myAppoint.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : myAppoint.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : myAppoint.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {myAppoint.status === \"CANCELLED\" || myAppoint.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Testimonials from \"./main/Testimonials\";\r\nimport Services from \"./main/Services\";\r\nimport Service from \"./main/Service\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`/`} component={Home} exact />\r\n        <Route path={`/about`} component={About} exact />\r\n        <Route path={`/contact`} component={Contact} exact />\r\n        <Route path={`/gallery`} component={Gallery} exact />\r\n        <Route path={`/testimonials`} component={Testimonials} exact />\r\n        <Route path={`/services&rates`} component={Services} exact />\r\n        <Route path={`/service/:_id`} component={Service} exact />\r\n        <Route path={`/verified/:emailToken`} component={ThankYou} exact />\r\n        <UserPrivateRoute\r\n          path={`/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`/login`} component={Signin} exact />\r\n\r\n        <UserPrivateRoute path={`/account/:_id`} component={Account} exact />\r\n\r\n        <UserPrivateRoute\r\n          path={`/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute path={`/appointment`} component={Appointment} exact />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst UpcommingAppointments = ({ appointments, loading }) => {\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"18px\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 20px\"\r\n      color=\"bluer\"\r\n      rounded\r\n    >\r\n      Upcoming Appointments\r\n    </DLabel>\r\n  );\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map((appointment) => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n      progressPending={loading}\r\n      progressComponent={\r\n        <Spinner content=\"Please wait while we fetch our data...\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n  position: relative;\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-areas:\r\n      \"header\"\r\n      \"main\"\r\n      \"footer\";\r\n  }\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  margin: 0 auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DImage, Overlay, DCard } from \"../../styled/containers\";\r\n\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout, employeeAuth } = useContext(AuthContext);\r\n  const [empLog, setEmpLog] = useState({});\r\n\r\n  const { data: dataEmpLog, loading: loadEmpLog, error: errEmpLog } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: { employeeId: employeeAuth.id },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmpLog) setEmpLog(dataEmpLog.employee);\r\n  }, [dataEmpLog]);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      {loadEmpLog ? (\r\n        <Spinner small />\r\n      ) : (\r\n        <Dropdown\r\n          trigger={\r\n            <DCard dw=\"50px\" dh=\"50px\" mcenter circle p=\"0px\" grayzoom>\r\n              <DImage circle height=\"100%\" width=\"100%\">\r\n                <img\r\n                  src={empLog.photo && `/images/employees/${empLog.photo}`}\r\n                  alt={empLog.lastName}\r\n                />\r\n              </DImage>\r\n            </DCard>\r\n          }\r\n          pointing=\"top right\"\r\n          icon={null}\r\n        >\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item disabled>\r\n              Signed is as{\" \"}\r\n              <strong>\r\n                {empLog.firstName} {empLog.lastName}\r\n              </strong>\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as={Link} to=\"/zeadmin/paccount\">\r\n              <Icon name=\"user\" />\r\n              Account\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={handleLogout}>\r\n              <Icon name=\"sign out\" />\r\n              Sign out\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      )}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  BookContent,\r\n  Report,\r\n  MessageSquare,\r\n  MessageRoundedDetail,\r\n  CalendarEvent,\r\n} from \"@styled-icons/boxicons-solid\";\r\n\r\nimport { Gallery, Service } from \"@styled-icons/remix-fill\";\r\n\r\nimport {\r\n  ShortText,\r\n  AccountBox,\r\n  AccountCircle,\r\n  Dashboard,\r\n} from \"@styled-icons/material\";\r\nimport { FileDirectory } from \"@styled-icons/octicons\";\r\nimport { Profile } from \"@styled-icons/icomoon/Profile\";\r\nimport { Archive } from \"@styled-icons/entypo\";\r\n\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\n\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <MessageRoundedDetail size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion title={\"Accounts\"} icon={<AccountBox size=\"16px\" />} fs=\"14px\">\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <AccountCircle size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <BookContent size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <ShortText size=\"16px\" />\r\n            About\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_gallery\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Gallery size=\"16px\" />\r\n            Gallery\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_testimonial\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <MessageSquare size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<FileDirectory size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Profile size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion title={\"Archive\"} icon={<Archive size=\"16px\" />} fs=\"14px\">\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Profile size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Report size=\"16px\" />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map(user => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n              \r\n                color=\"blue\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <Spinner small />\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY,\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\",\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\",\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"green\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"red\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n      read\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      read\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n      read\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ,\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"secondary\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"blue\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\n// import { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        mcenter\r\n      >\r\n        <Cards />\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            <UpcommingAppointments\r\n              appointments={appointments}\r\n              loading={loading}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Eye } from \"@styled-icons/fa-regular/Eye\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  const [isCurrentAppoint, setIsCurrentAppoint] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointmentData) {\r\n      setIsCurrentAppoint(currentAppointmentData.currentAppointments);\r\n    }\r\n  }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee.lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`} flex>\r\n          <Eye size=\"22px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      <DataTable\r\n        columns={columns}\r\n        data={isCurrentAppoint.map((currAppoint) => currAppoint)}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\n// import HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton alert basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButton>\r\n        <DButton confirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  DCard,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLink, DLabel } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Icon } from \"semantic-ui-react\";\r\nimport { Service } from \"@styled-icons/remix-fill/Service\";\r\nimport { Bookmark } from \"@styled-icons/boxicons-solid/Bookmark\";\r\nimport { Clock } from \"@styled-icons/fa-solid/Clock\";\r\nimport { UserMd } from \"@styled-icons/fa-solid/UserMd\";\r\nimport { CalendarExclamation } from \"@styled-icons/boxicons-solid/CalendarExclamation\";\r\nimport { CalendarEvent } from \"@styled-icons/boxicons-solid/CalendarEvent\";\r\nimport { Timelapse } from \"@styled-icons/material/Timelapse\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = (props) => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  console.log(myAppoint.service);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"80%\"\r\n        height=\"100%\"\r\n        mcenter\r\n      >\r\n        {dataLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              width=\"100%\"\r\n              margin=\"24px 0\"\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n            >\r\n              <Breadcrumb size={\"large\"}>\r\n                <Breadcrumb.Section\r\n                  style={{ color: \"#2980B9\" }}\r\n                  onClick={() => history.goBack()}\r\n                >\r\n                  <h3>Appointments</h3>\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section>\r\n                  {myAppoint.user && (\r\n                    <strong>\r\n                      <DLink\r\n                        borderb=\"true\"\r\n                        size=\"16px\"\r\n                        color=\"#232323\"\r\n                        to={`/zeadmin/userInfo/${myAppoint.user._id}`}\r\n                      >\r\n                        {myAppoint.user.firstName} {myAppoint.user.lastName}\r\n                      </DLink>\r\n                      's appointment\r\n                    </strong>\r\n                  )}\r\n                </Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n\r\n            <DGrid\r\n              custom={\r\n                myAppoint.status === \"VERIFIED\" ||\r\n                myAppoint.status === \"PENDING\"\r\n                  ? \"3fr 200px\"\r\n                  : \"1fr\"\r\n              }\r\n              gap=\"5px\"\r\n            >\r\n              <DCard\r\n                dw={\r\n                  myAppoint.status === \"VERIFIED\" ||\r\n                  myAppoint.status === \"PENDING\"\r\n                    ? \"100%\"\r\n                    : \"80%\"\r\n                }\r\n                dh=\"100%\"\r\n                mcenter\r\n                flex\r\n                fcol\r\n                justifyBetween\r\n              >\r\n                <DGrid gap=\"5px\">\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Bookmark size=\"14px\" style={{ margin: \"0 2px\" }} />\r\n                      Appointment ID:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint._id}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarEvent size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Clock size=\"14px\" style={{ margin: \"0 2px\" }} /> Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.slot_start}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <UserMd size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.employee &&\r\n                          `${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Service size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.name}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Timelapse size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.duration} mins\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarExclamation\r\n                        size=\"14px\"\r\n                        style={{ margin: \"0 2px\" }}\r\n                      />\r\n                      Status:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        rounded\r\n                        w={\"auto\"}\r\n                        size=\"18px\"\r\n                        color={\r\n                          myAppoint.status === \"VERIFIED\"\r\n                            ? \"green\"\r\n                            : myAppoint.status === \"DONE\"\r\n                            ? \"bluer\"\r\n                            : myAppoint.status === \"CANCELLED\"\r\n                            ? \"red\"\r\n                            : myAppoint.status === \"RESCHEDULED\"\r\n                            ? \"blue\"\r\n                            : \"grey\"\r\n                        }\r\n                      >\r\n                        {myAppoint.status}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </DCard>\r\n              {(myAppoint.status === \"PENDING\" ||\r\n                myAppoint.status === \"VERIFIED\") && (\r\n                <Content\r\n                  width=\"90%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  direct=\"column\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <DButton\r\n                    confirm\r\n                    fluid=\"true\"\r\n                    onClick={() => setOpenDone(true)}\r\n                  >\r\n                    <Icon name=\"calendar check\" /> Confirm\r\n                  </DButton>\r\n                  <DButton fluid=\"true\">\r\n                    <Icon name=\"calendar alternate\" /> Rebook\r\n                  </DButton>\r\n                  <DButton\r\n                    alert\r\n                    fluid=\"true\"\r\n                    onClick={() => setOpenCancel(true)}\r\n                  >\r\n                    <Icon name=\"delete calendar\" /> Cancel\r\n                  </DButton>\r\n                </Content>\r\n              )}\r\n            </DGrid>\r\n          </>\r\n        )}\r\n\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  label: {\r\n    width: \"40%\",\r\n  },\r\n  input: {\r\n    width: \"60%\",\r\n  },\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services },\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal,\r\n    },\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp,\r\n    },\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue,\r\n    },\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map((category) => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map((service) => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map((servEmp) => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButton,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\",\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days,\r\n    },\r\n    refetchQueries: [{ query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY }],\r\n\r\n    // update(cache, result) {\r\n    //   setOpen(false);\r\n    //   const data = cache.readQuery({\r\n    //     query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n    //   });\r\n\r\n    //   const newEmployee = result.data.createEmployee;\r\n    //   cache.writeQuery({\r\n    //     query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n    //     data: {\r\n    //       aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps],\r\n    //     },\r\n    //   });\r\n\r\n    //   values.title = \"\";\r\n    //   values.firstName = \"\";\r\n    //   values.lastName = \"\";\r\n    //   values.contact = \"\";\r\n    //   values.email = \"\";\r\n    //   values.role = \"\";\r\n    //   values.workStart = \"\";\r\n    //   values.workLength = \"\";\r\n    //   values.breakStart = \"\";\r\n    //   values.breakLength = \"\";\r\n    //   days = [];\r\n    // },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n  });\r\n\r\n  // const handleDayChange = (val) => {\r\n  //   setDays(val);\r\n  // };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {(Checkbox) => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport Page404 from \"../../pages/Page404\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0,\r\n      active: true,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0.5,\r\n      hide: \"md\",\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/employees/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      grow: 0,\r\n      right: true,\r\n      cell: (row) => (\r\n        <DButton flex as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontWeight: \"700 !important\",\r\n        color: \"#232323\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\" mcenter>\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            columns={columns}\r\n            data={employeesAR.map((aesrep) => aesrep)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loading_employeesAR}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\nimport { Toasted as Toast } from \"./styled/utils\";\r\nimport { Close } from \"@styled-icons/material/Close\";\r\n\r\nconst Toasted = (props) => {\r\n  return (\r\n    <Toast {...props}>\r\n      <span className=\"description\">{props.children}</span>\r\n      <span className=\"close\">\r\n        <Close size=\"14px\" />\r\n      </span>\r\n    </Toast>\r\n  );\r\n};\r\n\r\nexport default Toasted;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_EMPLOYEES_QUERY } from \"../../../util/graphql/employee\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport { Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { IconWrap, DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Schedule } from \"@styled-icons/material/Schedule\";\r\nimport { UserDetail } from \"@styled-icons/boxicons-solid/UserDetail\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  employee,\r\n  employeeId,\r\n  handleSchedule,\r\n  handleDetails,\r\n  s,\r\n}) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Image Uploaded\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: employee.photo\r\n        ? `/images/employees/${employee.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"flex-start\"\r\n      align=\"center\"\r\n      mcenter\r\n      direct=\"column\"\r\n    >\r\n      <DCard\r\n        dw={wid < 524 ? \"70%\" : \"100%\"}\r\n        dh=\"250px\"\r\n        mcenter\r\n        p=\"0px\"\r\n        grayzoom\r\n      >\r\n        {loading ? (\r\n          <Spinner content=\"Loading...\" medium />\r\n        ) : (\r\n          <DImage height=\"100%\" width=\"100%\">\r\n            <img\r\n              src={\r\n                employee.photo\r\n                  ? `/images/employees/${employee.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt={employee.name}\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n        )}\r\n        <IconWrap\r\n          {...getRootProps()}\r\n          bg={({ theme }) => theme.bluer}\r\n          circle\r\n          shadow\r\n          bottomcenter\r\n          small\r\n          pad=\"3px\"\r\n          bgcolor={({ theme }) => theme.bluer}\r\n        >\r\n          <Camera title=\"Upload\" />\r\n          <input {...getInputProps()} />\r\n        </IconWrap>\r\n      </DCard>\r\n\r\n      <DButton width=\"180px\" flex=\"true\" onClick={handleDetails}>\r\n        <UserDetail size=\"22px\" />\r\n        Details\r\n      </DButton>\r\n      <DButton width=\"180px\" flex=\"true\" onClick={handleSchedule}>\r\n        <Schedule size=\"22px\" title=\"Employee's Schdule Tab\" />\r\n        Schedule\r\n      </DButton>\r\n      <ModalGateway>\r\n        {viewerIsOpen ? (\r\n          <Modal onClose={closeLightbox}>\r\n            <Carousel views={images} />\r\n          </Modal>\r\n        ) : null}\r\n      </ModalGateway>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst DTextAreaStyled = styled.div`\r\n  display: ${(props) => (props.active ? \"block\" : \"none\")};\r\n  height: auto;\r\n  min-height: 30px;\r\n  max-height: 250px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  overflow: visible;\r\n  ${(props) =>\r\n    props.border &&\r\n    css`\r\n      border: 1px solid rgba(189, 195, 199, 0.8);\r\n      border-radius: 5px;\r\n    `};\r\n  padding: 5px;\r\n  color: ${(props) => (props.color ? props.color : ({ theme }) => theme.dark)};\r\n\r\n  ${(props) =>\r\n    props.par &&\r\n    css`\r\n      height: 250px;\r\n    `};\r\n`;\r\n\r\nconst DTextArea = (props) => {\r\n  return <DTextAreaStyled {...props}>{props.children}</DTextAreaStyled>;\r\n};\r\n\r\nexport default DTextArea;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel, IconWrap, DInput, DSelect, DButton } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\n// import { Cancel } from \"@styled-icons/typicons/Cancel\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport moment from \"moment\";\r\nimport parser from \"html-react-parser\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst regex = /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/;\r\nconst regexNum = /^\\d+$/;\r\n\r\nconst PersonalCard = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n  const [isEditPersonal, setIsEditPersonal] = useState(false);\r\n  const [startDate, setStartDate] = useState(\r\n    employee.dateOfBirth ? new Date(parseInt(employee.dateOfBirth)) : new Date()\r\n  );\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [personalValue, setPersonalValue] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email,\r\n  });\r\n\r\n  const [updatePersonalEmployee, { loading }] = useMutation(\r\n    UPDATE_EMPLOYEE_PERSONAL,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        title: personalValue.title,\r\n        firstName: personalValue.firstName,\r\n        lastName: personalValue.lastName,\r\n        contact: personalValue.contact,\r\n        email: personalValue.email,\r\n        bio: content,\r\n        dob: startDate,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      },\r\n      onCompleted() {\r\n        setIsEditPersonal(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Info Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handlePersonalValue = (e) => {\r\n    setPersonalValue({ ...personalValue, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const handleEditPersonal = () => {\r\n    setIsEditPersonal(!isEditPersonal);\r\n  };\r\n\r\n  const handleUpdatePersonal = () => {\r\n    updatePersonalEmployee();\r\n  };\r\n\r\n  return (\r\n    <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween overf>\r\n      <Content\r\n        flex\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n      >\r\n        <DLabel size={wid < 768 ? \"18px !important\" : \"22px\"} weight={700}>\r\n          Personal Details\r\n        </DLabel>\r\n        {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n          <>\r\n            <IconWrap\r\n              invisible={isEditPersonal ? true : null}\r\n              bgcolor={({ theme }) => theme.blue}\r\n              medium\r\n              title={\"Update Info\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              pad=\"3px\"\r\n            >\r\n              <Edit onClick={handleEditPersonal} />\r\n            </IconWrap>\r\n\r\n            <IconWrap\r\n              invisible={!isEditPersonal ? true : null}\r\n              medium\r\n              title={\"Cancel Update\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              color=\"red\"\r\n            >\r\n              <Cancel onClick={handleEditPersonal} />\r\n            </IconWrap>\r\n          </>\r\n        )}\r\n      </Content>\r\n\r\n      <Content\r\n        width={wid <= 768 ? \"90%\" : \"80%\"}\r\n        height=\"100%\"\r\n        margin=\"0 auto\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        {isEditPersonal ? (\r\n          <>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={700}\r\n                w={\"40%\"}\r\n                size=\"14px\"\r\n              >\r\n                Title:\r\n              </DLabel>\r\n              <Content\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"5px 10px\"\r\n              >\r\n                <DSelect\r\n                  name=\"title\"\r\n                  value={personalValue.title}\r\n                  onChange={handlePersonalValue}\r\n                >\r\n                  <option>Dr</option>\r\n                  <option>Mr</option>\r\n                  <option>Ms</option>\r\n                </DSelect>\r\n              </Content>\r\n            </Content>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={700}\r\n                w={\"40%\"}\r\n                size=\"14px\"\r\n              >\r\n                First Name:\r\n              </DLabel>\r\n              <Content\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"5px 10px\"\r\n                direct=\"column\"\r\n              >\r\n                {personalValue.firstName.trim() !== \"\" ? (\r\n                  \"\"\r\n                ) : errors.firstName ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    {errors.firstName}\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <DInput\r\n                  fluid\r\n                  error={\r\n                    personalValue.firstName.trim() !== \"\"\r\n                      ? null\r\n                      : errors.firstName\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={personalValue.firstName}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </Content>\r\n            </Content>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={700}\r\n                w={\"40%\"}\r\n                size=\"14px\"\r\n              >\r\n                Last Name:\r\n              </DLabel>\r\n              <Content\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"5px 10px\"\r\n                direct=\"column\"\r\n              >\r\n                {personalValue.lastName.trim() !== \"\" ? (\r\n                  \"\"\r\n                ) : errors.lastName ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    {errors.lastName}\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <DInput\r\n                  error={\r\n                    personalValue.lastName.trim() !== \"\"\r\n                      ? null\r\n                      : errors.lastName\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  fluid\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  value={personalValue.lastName}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </Content>\r\n            </Content>\r\n          </>\r\n        ) : (\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n          >\r\n            <DLabel\r\n              flex\r\n              justifyEnd\r\n              alignCenter\r\n              weight={700}\r\n              w={\"40%\"}\r\n              size=\"14px\"\r\n            >\r\n              Name:\r\n            </DLabel>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"5px 10px\"\r\n            >\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.title}. {employee.firstName} {employee.lastName}\r\n              </DLabel>\r\n            </Content>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          style={{ zIndex: 10 }}\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Date of Birth:\r\n          </DLabel>\r\n          <Content\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {isEditPersonal ? (\r\n              <DatePicker\r\n                selected={startDate}\r\n                onChange={handleDateChanged}\r\n                showYearDropdown\r\n                showMonthDropdown\r\n                dropdownMode=\"select\"\r\n                className=\"datepicker\"\r\n              />\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.dateOfBirth &&\r\n                  moment(parseInt(employee.dateOfBirth)).format(\"LL\")}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Contact:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            pad=\"5px 10px\"\r\n            direct=\"column\"\r\n          >\r\n            {isEditPersonal ? (\r\n              <>\r\n                {regexNum.test(personalValue.contact) &&\r\n                personalValue.contact.length === 11 ? (\r\n                  \"\"\r\n                ) : errors.contactX || errors.contactNum ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    Contact number must only contain number and must be 11\r\n                    digits\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <DInput\r\n                  error={\r\n                    regexNum.test(personalValue.contact) &&\r\n                    personalValue.contact.length === 11\r\n                      ? null\r\n                      : errors.contactX || errors.contactNum\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  fluid\r\n                  type=\"text\"\r\n                  name=\"contact\"\r\n                  value={personalValue.contact}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </>\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.contact}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Email:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            pad=\"5px\"\r\n            direct=\"column\"\r\n          >\r\n            {isEditPersonal ? (\r\n              <>\r\n                {personalValue.email.match(regex) ? (\r\n                  \"\"\r\n                ) : errors.emailX || errors.email ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    {errors.emailX || errors.email}\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <DInput\r\n                  error={\r\n                    personalValue.email.match(regex)\r\n                      ? null\r\n                      : errors.emailX || errors.email\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  fluid\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={personalValue.email}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </>\r\n            ) : (\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={500}\r\n                size=\"14px\"\r\n                breakWord\r\n              >\r\n                {employee.email}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          margin=\"12px auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Bio:\r\n          </DLabel>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            pad=\"3px 15px\"\r\n          >\r\n            <DTextArea border active={isEditPersonal ? true : null}>\r\n              <CKEditor\r\n                onInit={(editor) => {\r\n                  // Insert the toolbar before the editable area.\r\n                  editor.ui\r\n                    .getEditableElement()\r\n                    .parentElement.insertBefore(\r\n                      editor.ui.view.toolbar.element,\r\n                      editor.ui.getEditableElement()\r\n                    );\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setContent(data);\r\n                }}\r\n                editor={DecoupledEditor}\r\n                data={content}\r\n              />\r\n            </DTextArea>\r\n\r\n            <DTextArea\r\n              border\r\n              active={!isEditPersonal ? true : null}\r\n              color={!content ? \"#ccc\" : null}\r\n            >\r\n              {content\r\n                ? parser(content)\r\n                : `Write something about ${employee.title}. ${employee.firstName} ${employee.lastName} ...`}\r\n            </DTextArea>\r\n          </Content>\r\n        </Content>\r\n      </Content>\r\n      {isEditPersonal && (\r\n        <Content flex width=\"100%\" justify=\"flex-end\" align=\"center\">\r\n          <DButton confirm onClick={handleUpdatePersonal}>\r\n            {loading ? (\r\n              <Spinner inverted row small content=\"Loading...\" />\r\n            ) : (\r\n              \"Update\"\r\n            )}\r\n          </DButton>\r\n        </Content>\r\n      )}\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_PERSONAL = gql`\r\n  mutation updatePersonalEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $dob: String\r\n    $bio: String\r\n  ) {\r\n    updatePersonalEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      dateOfBirth: $dob\r\n      bio: $bio\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      dateOfBirth\r\n      bio\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalCard;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel, IconWrap, DSelect, DButton } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst EmployeeCard = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const [isEditEmpAcct, setIsEditEmpAcct] = useState(false);\r\n\r\n  const [empAcctValue, setEmpAcctValue] = useState({\r\n    role: employee.role,\r\n    level: employee.level,\r\n  });\r\n\r\n  const [updateEmpAcct, { loading: loadEmpAcct }] = useMutation(\r\n    UPDATE_EMPLOYEE_ACCT,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        role: empAcctValue.role,\r\n        level: parseInt(empAcctValue.level),\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        if (err.graphQLErrors[0].extensions.exception.errors.notauth) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted alert onClick={onClose}>\r\n              {err.graphQLErrors[0].extensions.exception.errors.notauth}\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      onCompleted() {\r\n        setIsEditEmpAcct(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Info Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleEmpAcctValue = (e) => {\r\n    setEmpAcctValue({ ...empAcctValue, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditEmplAcct = () => {\r\n    setIsEditEmpAcct(!isEditEmpAcct);\r\n  };\r\n\r\n  const handleUpdateEmplAcct = () => {\r\n    updateEmpAcct();\r\n  };\r\n\r\n  return (\r\n    <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween overf>\r\n      <Content\r\n        flex\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n      >\r\n        <DLabel size={wid < 768 ? \"18px !important\" : \"22px\"} weight={700}>\r\n          Personal Details\r\n        </DLabel>\r\n        {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n          <>\r\n            <IconWrap\r\n              invisible={isEditEmpAcct ? true : null}\r\n              bgcolor={({ theme }) => theme.green}\r\n              medium\r\n              title={\"Update Info\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              pad=\"3px\"\r\n            >\r\n              <Edit onClick={handleEditEmplAcct} />\r\n            </IconWrap>\r\n            <IconWrap\r\n              invisible={!isEditEmpAcct ? true : null}\r\n              medium\r\n              title={\"Cancel Update\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              color=\"red\"\r\n            >\r\n              <Cancel onClick={handleEditEmplAcct} />\r\n            </IconWrap>\r\n          </>\r\n        )}\r\n      </Content>\r\n\r\n      <Content\r\n        width=\"80%\"\r\n        height=\"100%\"\r\n        margin=\"0 auto\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Employee ID:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {/* {isEditEmpAcct &&\r\n            (employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3) ? (\r\n              <DInput\r\n                fluid\r\n                name=\"empId\"\r\n                value={empAcctValue.empId}\r\n                onChange={handleEmpAcctValue}\r\n              />\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.empId}\r\n              </DLabel>\r\n            )} */}\r\n\r\n            <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n              {employee.empId}\r\n            </DLabel>\r\n          </Content>\r\n        </Content>\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Title:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {isEditEmpAcct &&\r\n            (employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) ? (\r\n              <DSelect\r\n                name=\"role\"\r\n                value={empAcctValue.role}\r\n                onChange={handleEmpAcctValue}\r\n              >\r\n                <option>AESTHETICIAN</option>\r\n                <option>RECEPTIONIST</option>\r\n              </DSelect>\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={700} size=\"16px\">\r\n                {employee.role}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Level:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {isEditEmpAcct &&\r\n            (employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) ? (\r\n              <DSelect\r\n                name=\"level\"\r\n                value={empAcctValue.level}\r\n                onChange={handleEmpAcctValue}\r\n              >\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n              </DSelect>\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={700} size=\"16px\">\r\n                {employee.level}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n      </Content>\r\n      {isEditEmpAcct && (\r\n        <Content flex width=\"100%\" justify=\"flex-end\" align=\"center\">\r\n          <DButton confirm onClick={handleUpdateEmplAcct}>\r\n            {loadEmpAcct ? (\r\n              <Spinner inverted row small content=\"Loading...\" />\r\n            ) : (\r\n              \"Update\"\r\n            )}\r\n          </DButton>\r\n        </Content>\r\n      )}\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_ACCT = gql`\r\n  mutation updateAccountEmployee($employeeId: ID!, $role: String, $level: Int) {\r\n    updateAccountEmployee(_id: $employeeId, emprole: $role, emplevel: $level) {\r\n      _id\r\n      empId\r\n      role\r\n      level\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeCard;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { IconWrap } from \"../../styled/utils\";\r\nimport { Cross } from \"@styled-icons/entypo/Cross\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport Page404 from \"../../../pages/Page404\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst RemoveService = ({ categId, employeeId, refetchCategories }) => {\r\n  const [categValue, setCategValue] = useState(\"\");\r\n\r\n  const [removeService, { loading: loadRemoving }] = useMutation(\r\n    REMOVE_SERVICE,\r\n    {\r\n      variables: {\r\n        categoryId: categValue,\r\n        employeeId,\r\n      },\r\n      refetchQueries: [{ query: refetchCategories }],\r\n      onCompleted() {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Service Removed\r\n          </Toasted>\r\n        ));\r\n      },\r\n      onError() {\r\n        return <Page404 />;\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleCategoryValue = (e) => {\r\n    setCategValue(e.currentTarget.dataset.categid);\r\n  };\r\n\r\n  const handleRemoveService = () => {\r\n    removeService();\r\n  };\r\n  return (\r\n    <div data-categid={categId} onMouseOver={handleCategoryValue}>\r\n      {loadRemoving ? (\r\n        <Spinner mini inverted />\r\n      ) : (\r\n        <IconWrap tiny margin=\"0 2px\" onClick={handleRemoveService}>\r\n          <Cross />\r\n        </IconWrap>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst REMOVE_SERVICE = gql`\r\n  mutation removeService($employeeId: ID!, $categoryId: ID!) {\r\n    removeService(employeeId: $employeeId, categoryId: $categoryId) {\r\n      _id\r\n      categoryServices {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default RemoveService;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { DCard, Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, IconWrap, DButton, CheckLabel } from \"../../styled/utils\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular/Plus\";\r\nimport { Save } from \"@styled-icons/boxicons-solid/Save\";\r\n\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport RemoveService from \"./RemoveService\";\r\n\r\nconst ServiceCard = ({ employee }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const { width: wid } = useWindowSize();\r\n  const [openAddService, setOpenAddService] = useState(false);\r\n\r\n  const [isCategories, setIsCategories] = useState(\r\n    employee.categoryServices.map((categServ) => categServ._id)\r\n  );\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const {\r\n    data: categoryData,\r\n    loading: loadCategory,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      setCategories(categoryData.categories);\r\n    }\r\n  }, [categoryData]);\r\n\r\n  const [addService, { loading: loadAdd }] = useMutation(\r\n    ADD_SERVICES_MUTATION,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        categoryId: isCategories,\r\n      },\r\n      refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }],\r\n      onCompleted() {\r\n        setOpenAddService(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Service Added\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DCard dw=\"100%\" dh=\"100%\" maxh={wid < 768 ? \"300px\" : \"400px\"} flex fcol>\r\n        <Content\r\n          flex\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel size={wid < 768 ? \"18px !important\" : \"22px\"} weight={700}>\r\n            Services\r\n          </DLabel>\r\n          {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n            <IconWrap\r\n              small\r\n              title={\"Add Services\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              bgcolor={({ theme }) => theme.bluer}\r\n              onClick={() => setOpenAddService(true)}\r\n            >\r\n              <Plus />\r\n            </IconWrap>\r\n          )}\r\n        </Content>\r\n        <Content\r\n          width=\"90%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          hoverflow\r\n          margin=\"0 auto\"\r\n          flow={wid <= 768 ? \"column wrap\" : \"column wrap\"}\r\n          pad=\"10px\"\r\n        >\r\n          {employee.categoryServices.map((categ) => (\r\n            <Content\r\n              width=\"auto\"\r\n              height={wid < 768 ? \"15px\" : \"25px\"}\r\n              margin={wid < 1024 ? \"8px 3px\" : \"5px\"}\r\n              key={categ._id}\r\n            >\r\n              <DLabel rounded color=\"bluer\" pad=\"3px 8px\">\r\n                <DGrid\r\n                  custom=\"7fr 1fr\"\r\n                  med5={\"7fr 1fr\"}\r\n                  med7={\"7fr 1fr\"}\r\n                  med10={\"7fr 1fr\"}\r\n                >\r\n                  {categ.name}\r\n                  <RemoveService\r\n                    categId={categ._id}\r\n                    employeeId={employee._id}\r\n                    refetchCategories={FETCH_ALL_CATEGORIES_QUERY}\r\n                  />\r\n                </DGrid>\r\n              </DLabel>\r\n            </Content>\r\n          ))}\r\n        </Content>\r\n      </DCard>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={openAddService}\r\n        onClose={() => setOpenAddService(false)}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Add Services</Modal.Header>\r\n        <Modal.Content>\r\n          {loadCategory ? (\r\n            <Spinner medium content=\"Fetching Data...\" />\r\n          ) : (\r\n            <CheckboxGroup\r\n              name=\"categories\"\r\n              value={isCategories}\r\n              onChange={setIsCategories}\r\n            >\r\n              {(Checkbox) => (\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  maxh={wid < 768 ? \"350px\" : \"200px\"}\r\n                  flex\r\n                  flow=\"column wrap\"\r\n                  hoverflow\r\n                >\r\n                  {categories.map((category) => (\r\n                    <Content\r\n                      width=\"auto\"\r\n                      height=\"30px\"\r\n                      margin={wid < 1024 ? \"8px 3px\" : \"5px\"}\r\n                      key={category._id}\r\n                    >\r\n                      <div className=\"pretty p-default p-round p-smooth\">\r\n                        <Checkbox value={category._id} key={category._id} />\r\n                        <div className=\"state p-warning-o\">\r\n                          <CheckLabel textt=\"uppercase\" color=\"dark\">\r\n                            {category.name}\r\n                          </CheckLabel>\r\n                        </div>\r\n                      </div>\r\n                    </Content>\r\n                  ))}\r\n                </Content>\r\n              )}\r\n            </CheckboxGroup>\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n          >\r\n            <DButton confirm flex onClick={handleAddService}>\r\n              {loadAdd ? (\r\n                <Spinner small row inverted content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Save size=\"22px\" title=\"Update Content\" />\r\n                  Save\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $categoryId: [ID]) {\r\n    addService(employeeId: $employeeId, categoryId: $categoryId) {\r\n      _id\r\n      categoryServices {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceCard;\r\n","import React from \"react\";\r\n\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\n\r\nimport PersonalCard from \"./PersonalCard\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\nimport ServiceCard from \"./ServiceCard\";\r\n\r\nconst DetailsEmployee = ({ employee }) => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"5px\" med7=\"1fr\" med10=\"1fr\">\r\n        <PersonalCard employee={employee} />\r\n        <EmployeeCard employee={employee} />\r\n        <ServiceCard employee={employee} />\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default DetailsEmployee;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport {\r\n  DLabel,\r\n  IconWrap,\r\n  DSelect,\r\n  DButton,\r\n  CheckLabel,\r\n} from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport { Save } from \"@styled-icons/boxicons-solid/Save\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst ScheduleEmployee = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n  const [isEditSched, setIsEditSched] = useState(false);\r\n  const [schedValues, setSchedValues] = useState({\r\n    workStart: employee.schedule.workStart,\r\n    workLength: employee.schedule.workLength / 60,\r\n    breakStart: employee.schedule.breakStart,\r\n    breakLength: employee.schedule.breakLength / 60,\r\n  });\r\n\r\n  const [updateSchedule, { loading: loadSchedule }] = useMutation(\r\n    UPDATE_EMPLOYEE_SCHEDULE,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        workStart: schedValues.workStart,\r\n        breakStart: schedValues.breakStart,\r\n        workLength: parseInt(parseFloat(schedValues.workLength) * 60),\r\n        breakLength: parseInt(parseFloat(schedValues.breakLength) * 60),\r\n        day: days,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        console.log(err);\r\n        //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      },\r\n      onCompleted() {\r\n        setIsEditSched(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Schedule Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleEditSched = () => {\r\n    setIsEditSched(!isEditSched);\r\n  };\r\n\r\n  const handleSchedChange = (e) => {\r\n    setSchedValues({ ...schedValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleUpdateSched = () => {\r\n    updateSchedule();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"10px\" med10=\"1fr\" med7=\"1fr\">\r\n        <DCard dw=\"100%\" dh=\"100%\" p=\"10px\" flex fcol justifyBetween>\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <DLabel\r\n              size={wid < 768 ? \"18px !important\" : \"22px\"}\r\n              weight={700}\r\n              pad=\"0\"\r\n            >\r\n              Schedule Details\r\n            </DLabel>\r\n            {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n              <>\r\n                <IconWrap\r\n                  invisible={isEditSched ? true : null}\r\n                  bgcolor={({ theme }) => theme.blue}\r\n                  medium\r\n                  title={\"Update Info\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  pad=\"3px\"\r\n                >\r\n                  <Edit onClick={handleEditSched} />\r\n                </IconWrap>\r\n\r\n                <IconWrap\r\n                  invisible={!isEditSched ? true : null}\r\n                  medium\r\n                  title={\"Cancel Update\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  color=\"red\"\r\n                >\r\n                  <Cancel onClick={handleEditSched} />\r\n                </IconWrap>\r\n              </>\r\n            )}\r\n          </Content>\r\n          <Content height=\"100%\" width=\"100%\">\r\n            <DGrid custom=\"1fr 2fr\">\r\n              <Content\r\n                flex\r\n                width=\"90%\"\r\n                height=\"300px\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n                margin=\"0 auto\"\r\n                style={\r\n                  wid < 768\r\n                    ? { borderBottom: \"1px solid #ccc\" }\r\n                    : { borderRight: \"1px solid #ccc\" }\r\n                }\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Days\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"flex-start\"\r\n                  direct=\"column\"\r\n                  pad=\"0 20px\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <CheckboxGroup\r\n                    name=\"days\"\r\n                    value={days}\r\n                    onChange={setDays}\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    {(Checkbox) => (\r\n                      <>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sun\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Mon\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Tue\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Wed\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Thu\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Fri\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sat\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                height=\"300px\"\r\n                width=\"100%\"\r\n                margin=\"0 auto\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Hours\r\n                </DLabel>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                    pad=\"5px 10px\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Work\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        name=\"workStart\"\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workStart}\r\n                      >\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Work Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workLength}\r\n                        name=\"workLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                        <option value=\"5\">5 hours</option>\r\n                        <option value=\"6\">6 hours</option>\r\n                        <option value=\"7\">7 hours</option>\r\n                        <option value=\"8\">8 hours</option>\r\n                        <option value=\"9\">9 hours</option>\r\n                        <option value=\"10\">10 hours</option>\r\n                        <option value=\"11\">11 hours</option>\r\n                        <option value=\"12\">12 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? employee.schedule.workLength\r\n                          : employee.schedule.workLength / 60}{\" \"}\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.workLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Break\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakStart}\r\n                        name=\"breakStart\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Break Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakLength}\r\n                        name=\"breakLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value={\"0.5\"}>30 mins</option>\r\n                        <option value={\"1\"}>1 hour</option>\r\n                        <option value=\"2\">2 hours</option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? employee.schedule.breakLength\r\n                          : employee.schedule.breakLength / 60}{\" \"}\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.breakLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n            invisible={isEditSched ? false : true}\r\n          >\r\n            <DButton confirm flex onClick={handleUpdateSched}>\r\n              {loadSchedule ? (\r\n                <Spinner tiny row inverted content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Save size=\"22px\" title=\"Update Content\" />\r\n                  Save\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_SCHEDULE = gql`\r\n  mutation updateSchedule(\r\n    $employeeId: ID!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateSchedule(\r\n      _id: $employeeId\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ScheduleEmployee;\r\n","import React from \"react\";\r\nimport DetailsEmployee from \"./DetailsEmployee\";\r\nimport ScheduleEmployee from \"./ScheduleEmployee\";\r\nimport Page404 from \"../../../pages/Page404\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst Info = ({ isEmpInfo, employee }) => {\r\n  switch (isEmpInfo) {\r\n    case \"emp_details\":\r\n      return <DetailsEmployee employee={employee} />;\r\n    case \"emp_sched\":\r\n      return <ScheduleEmployee employee={employee} />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default Info;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n} from \"../../../util/graphql/employee\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Delete, DeleteForever } from \"@styled-icons/material\";\r\nimport { Warning } from \"@styled-icons/material-rounded\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport { Question } from \"@styled-icons/fa-solid\";\r\nimport { Popup, Modal, Grid } from \"semantic-ui-react\";\r\n\r\nconst EmployeeDelete = ({ employee }) => {\r\n  const history = useHistory();\r\n  const [isDlt, setIsDlt] = useState(false);\r\n\r\n  const [archiveEmployee, { loading: loadArchived }] = useMutation(\r\n    ARCHIVE_EMPLOYEE,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n      },\r\n\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n          variables: { active: true, limit: 0 },\r\n        },\r\n      ],\r\n      onCompleted() {\r\n        history.goBack();\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Content flex width=\"100%\" justify=\"flex-end\" align=\"center\">\r\n        <DButton flex alert onClick={() => setIsDlt(true)}>\r\n          <IconWrap small mcenter title=\"Delete Employee Info\">\r\n            <Delete />\r\n          </IconWrap>\r\n          Delete\r\n        </DButton>\r\n        <Popup\r\n          trigger={\r\n            <IconWrap\r\n              circle\r\n              shadow\r\n              bgcolor=\"#232323\"\r\n              tiny\r\n              mcenter\r\n              title=\"Info\"\r\n              pad=\"3px\"\r\n            >\r\n              <Question />\r\n            </IconWrap>\r\n          }\r\n          inverted\r\n          position=\"top right\"\r\n          size=\"tiny\"\r\n        >\r\n          <p style={{ fontWeight: 700 }}>\r\n            Store in archive or permanently delete this employee information.\r\n          </p>\r\n        </Popup>\r\n      </Content>\r\n      <Modal\r\n        basic\r\n        size=\"small\"\r\n        open={isDlt}\r\n        onClose={() => setIsDlt(false)}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>{`Archive Employee: ${employee.title} ${employee.firstName} ${employee.lastName}`}</Modal.Header>\r\n        <Modal.Content>\r\n          <p style={{ fontWeight: 500 }}>\r\n            Are you sure you want to put employee to archive? By doing so, it\r\n            will remove employee to other files. You can still restore after\r\n            this employee by going to{\" \"}\r\n            <strong>File Maintenance/Archive Files</strong>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <Content\r\n              flex\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <Popup\r\n                on=\"click\"\r\n                trigger={\r\n                  <DButton alert flex>\r\n                    <DeleteForever size=\"22px\" />\r\n                    Delete Permanently\r\n                  </DButton>\r\n                }\r\n                position=\"top center\"\r\n                inverted\r\n                flowing\r\n              >\r\n                <Grid divided columns={2}>\r\n                  <Grid.Column>\r\n                    <IconWrap size=\"22px\" color=\"green\" margin=\"0 auto\">\r\n                      <Check title=\"Confirm deleting permanently\" />\r\n                    </IconWrap>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <IconWrap size=\"22px\" color=\"red\" margin=\"0 auto\">\r\n                      <Cancel title=\"Cancel action\" />\r\n                    </IconWrap>\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </Popup>\r\n\r\n              <Popup\r\n                trigger={\r\n                  <IconWrap\r\n                    circle\r\n                    shadow\r\n                    color=\"yellow\"\r\n                    small\r\n                    mcenter\r\n                    title=\"Warning\"\r\n                  >\r\n                    <Warning />\r\n                  </IconWrap>\r\n                }\r\n                content={\r\n                  <p style={{ fontWeight: 700 }}>\r\n                    Deleting Permantly cannot be restored\r\n                  </p>\r\n                }\r\n                position=\"top right\"\r\n                size=\"tiny\"\r\n              />\r\n            </Content>\r\n\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-end\"\r\n              align=\"center\"\r\n            >\r\n              <DButton basic confirm onClick={() => archiveEmployee()}>\r\n                {loadArchived ? (\r\n                  <Spinner small inverted row content=\"Loading...\" />\r\n                ) : (\r\n                  <>\r\n                    <Check size=\"22px\" />\r\n                    Confirm\r\n                  </>\r\n                )}\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ARCHIVE_EMPLOYEE = gql`\r\n  mutation archiveEmployee($employeeId: ID!) {\r\n    archiveEmployee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      level\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDelete;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\n\r\nimport Spinner from \"../../components/Spinner\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport PhotoBooth from \"../../components/admin/employees/PhotoBooth\";\r\nimport Info from \"../../components/admin/employees/Info\";\r\nimport EmployeeDelete from \"../../components/admin/employees/EmployeeDelete\";\r\n\r\nconst Employee = (props) => {\r\n  const employeeId = props.match.params._id;\r\n  const { width: wid } = useWindowSize();\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  //Storing switch key to localstorage\r\n  const stored = localStorage.getItem(\"empInfo\");\r\n  const [isEmpInfo, setIsEmpInfo] = useState(\r\n    stored === \"emp_details\"\r\n      ? \"emp_details\"\r\n      : stored === \"emp_sched\"\r\n      ? \"emp_sched\"\r\n      : \"emp_details\"\r\n  );\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  const handleDetails = () => {\r\n    setIsEmpInfo(\"emp_details\");\r\n    localStorage.setItem(\"empInfo\", \"emp_details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsEmpInfo(\"emp_sched\");\r\n    localStorage.setItem(\"empInfo\", \"emp_sched\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        minh=\"90vh\"\r\n      >\r\n        {employeeLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n            >\r\n              <Breadcrumb size={\"huge\"}>\r\n                <Breadcrumb.Section as={Link} to=\"/zeadmin/employees\">\r\n                  Employee\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider>/</Breadcrumb.Divider>\r\n                <Breadcrumb.Section\r\n                  active\r\n                >{`${employee.firstName} ${employee.lastName}'s Info`}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <PhotoBooth\r\n                  employee={employee}\r\n                  employeeId={employeeId}\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                />\r\n                <Content\r\n                  flex\r\n                  direct=\"column\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                >\r\n                  <Info\r\n                    isEmpInfo={isEmpInfo}\r\n                    employee={employeeData && employeeData.employee}\r\n                  />\r\n                  <EmployeeDelete employee={employee} />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form, Label } from \"semantic-ui-react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const [values, setValues] = useState({ title: \"\" });\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content,\r\n      },\r\n\r\n      // update(cache, result) {\r\n      //   setOpen(false);\r\n      //   const data = cache.readQuery({\r\n      //     query: FETCH_ALL_CATEGORIES_QUERY,\r\n      //     variables: { active: true },\r\n      //   });\r\n\r\n      //   const newCategory = result.data.createCategory;\r\n      //   cache.writeQuery({\r\n      //     query: FETCH_ALL_CATEGORIES_QUERY,\r\n      //     variables: { active: true },\r\n      //     data: { categories: [newCategory, ...data.categories] },\r\n      //   });\r\n      // },\r\n      refetchQueries: [\r\n        { query: FETCH_ALL_CATEGORIES_QUERY, variables: { active: true } },\r\n      ],\r\n      onCompleted() {\r\n        setOpen(false);\r\n        setContent(\"\");\r\n        setValues({ title: \"\" });\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            New Category Add Successfully\r\n          </Toasted>\r\n        ));\r\n      },\r\n      // onError(err) {\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      //   toaster.notify(\"Something went Wrong\");\r\n      // },\r\n    }\r\n  );\r\n\r\n  const handleTitleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSaveCategory = () => {\r\n    createCategory();\r\n  };\r\n\r\n  const config = {\r\n    readonly: false,\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleTitleChange}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Description</Label>\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 5px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea border active>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-end\"\r\n          align=\"center\"\r\n        >\r\n          <DButton alert flex onClick={() => setOpen(false)}>\r\n            <Cancel size=\"22px\" />\r\n            No\r\n          </DButton>\r\n          <DButton confirm flex onClick={handleSaveCategory}>\r\n            {loading ? (\r\n              <Spinner inverted small content=\"Loading...\" />\r\n            ) : (\r\n              <>\r\n                <Check size=\"22px\" />\r\n                Yes\r\n              </>\r\n            )}\r\n          </DButton>\r\n        </Content>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  Overlay,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular/Plus\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport Page404 from \"../Page404\";\r\n\r\nconst Categories = () => {\r\n  const { width: wid } = useWindowSize();\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY, {\r\n    variables: { active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) return Page404;\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n          bgcolor=\"#eee\"\r\n          rounded\r\n          pad=\"3px 10px\"\r\n          height=\"5em\"\r\n        >\r\n          <Breadcrumb size=\"big\">\r\n            <Breadcrumb.Section content>File Maintenance</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section active>Service Category</Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton\r\n            onClick={handleOpenModal}\r\n            flex\r\n            circle={wid < 768 ? true : null}\r\n          >\r\n            <Plus size=\"22px\" />\r\n            {wid > 768 && \"New Category\"}\r\n          </DButton>\r\n        </Content>\r\n\r\n        <Content width=\"100%\" height=\"100%\">\r\n          {loading ? (\r\n            <Spinner content=\"Please wait while we fetch your data\" />\r\n          ) : (\r\n            <DGrid three gap=\"15px\" margin=\"40px 0\">\r\n              {categories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/zeadmin/category/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\nimport { IconWrap } from \"./styled/utils\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst MenuStyledDots = styled.div`\r\n  position: absolute;\r\n  width: auto;\r\n  height: auto;\r\n  z-index: 5;\r\n  ${(props) =>\r\n    props.middle &&\r\n    css`\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    `};\r\n  ${(props) =>\r\n    props.topright &&\r\n    css`\r\n      top: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.topleft &&\r\n    css`\r\n      top: 0;\r\n      left: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.bottomright &&\r\n    css`\r\n      bottom: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.middleright &&\r\n    css`\r\n      top: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.bottomleft &&\r\n    css`\r\n      bottom: 0;\r\n      left: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.middleleft &&\r\n    css`\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n    `};\r\n`;\r\n\r\nconst MenuDots = (props) => {\r\n  return (\r\n    <MenuStyledDots {...props}>\r\n      <Popup\r\n        style={{ zIndex: 2 }}\r\n        on=\"click\"\r\n        position=\"top right\"\r\n        trigger={\r\n          <IconWrap menu {...props} color=\"dark\">\r\n            <DotsVerticalRounded title=\"Menu\" />\r\n          </IconWrap>\r\n        }\r\n      >\r\n        {props.children}\r\n      </Popup>\r\n    </MenuStyledDots>\r\n  );\r\n};\r\n\r\nexport default MenuDots;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header, Popup, Grid } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport { Warning } from \"@styled-icons/material-rounded\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [archivedCategory] = useMutation(ARCHIVE_CATEGORY, {\r\n    variables: { categoryId: category._id },\r\n    refetchQueries: [\r\n      { query: FETCH_ALL_CATEGORIES_QUERY, variables: { active: true } },\r\n    ],\r\n    onCompleted() {\r\n      historyCallback();\r\n    },\r\n  });\r\n\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n        variables: { active: true },\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        (categ) => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n        variables: { active: true },\r\n        data: { categories: [...data.categories] },\r\n      });\r\n    },\r\n    onCompleted() {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id,\r\n    },\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      basic\r\n      size=\"small\"\r\n      open={open}\r\n      closeIcon\r\n      onClose={() => setOpen(false)}\r\n    >\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Archive this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p style={{ fontWeight: 700 }}>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n          >\r\n            <Popup\r\n              on=\"click\"\r\n              trigger={\r\n                <DButton alert flex>\r\n                  <DeleteForever size=\"22px\" />\r\n                  Delete Permanently\r\n                </DButton>\r\n              }\r\n              position=\"top center\"\r\n              flowing\r\n            >\r\n              <Grid divided columns={2}>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"green\" margin=\"0 auto\">\r\n                    <Check\r\n                      title=\"Confirm deleting permanently\"\r\n                      onClick={handleDeleteCategory}\r\n                    />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"red\" margin=\"0 auto\">\r\n                    <Cancel title=\"Cancel action\" />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Popup>\r\n\r\n            <Popup\r\n              trigger={\r\n                <IconWrap\r\n                  circle\r\n                  shadow\r\n                  color=\"yellow\"\r\n                  small\r\n                  mcenter\r\n                  title=\"Warning\"\r\n                >\r\n                  <Warning />\r\n                </IconWrap>\r\n              }\r\n              content={\r\n                <p style={{ fontWeight: 700 }}>\r\n                  Deleting Permantly cannot be restored\r\n                </p>\r\n              }\r\n              position=\"top right\"\r\n              size=\"tiny\"\r\n            />\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n          >\r\n            <DButton confirm basic onClick={() => archivedCategory()}>\r\n              Yes\r\n            </DButton>\r\n          </Content>\r\n        </Content>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ARCHIVE_CATEGORY = gql`\r\n  mutation archivedCategory($categoryId: ID!) {\r\n    archivedCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport { Form, Label, Grid } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport { DButton, DLabel, IconWrap } from \"../../../components/styled/utils\";\r\nimport { Edit, Trash } from \"@styled-icons/boxicons-solid\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport MenuDots from \"../../../components/MenuDots\";\r\nimport DTextArea from \"../../../components/DTextArea\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\nimport parser from \"html-react-parser\";\r\nimport Toasted from \"../../../components/Toasted\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  // const [errors, setErrors] = useState({});\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name,\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content,\r\n    },\r\n\r\n    onCompleted() {\r\n      setIsEdit(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Category Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  // const config = {\r\n  //   removePlugins: [\"Table\", \"Image\", \"MediaEmbed\"],\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <MenuDots topright medium>\r\n            <Grid divided columns={2}>\r\n              <Grid.Column>\r\n                <DButton confirm onClick={handleEdit} flex>\r\n                  <IconWrap mcenter>\r\n                    <Edit size=\"22px\" title=\"Update Content\" />\r\n                  </IconWrap>\r\n                </DButton>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <DButton alert flex onClick={() => setOpen(true)}>\r\n                  <IconWrap mcenter>\r\n                    <Trash size=\"22px\" title=\"Archive or Permanently Delete\" />\r\n                  </IconWrap>\r\n                </DButton>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </MenuDots>\r\n\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <DLabel color={isEdit ? \"grey\" : \"blue\"} size=\"14px\" rounded>\r\n              Title\r\n            </DLabel>\r\n            {isEdit ? (\r\n              <Content\r\n                width=\"90%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Content>\r\n            ) : (\r\n              <Content\r\n                width=\"90%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"50%\"}\r\n                  size=\"18px\"\r\n                >\r\n                  {values.title}\r\n                </DLabel>\r\n              </Content>\r\n            )}\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <DLabel color={isEdit ? \"grey\" : \"blue\"} size=\"14px\" rounded>\r\n              Description\r\n            </DLabel>\r\n            <Content\r\n              width=\"90%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea border active={isEdit ? true : null}>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n\r\n              <DTextArea border active={!isEdit ? true : null}>\r\n                {parser(content)}\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n          {isEdit && (\r\n            <Content flex justify=\"flex-end\" align=\"center\" width=\"100%\">\r\n              <DButton type=\"submit\" onClick={handleSubmit}>\r\n                {loading ? (\r\n                  <Spinner small row inverted content=\"Loading...\" />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </DButton>\r\n              <DButton alert onClick={handleCancel}>\r\n                Cancel\r\n              </DButton>\r\n            </Content>\r\n          )}\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form, Label } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values, setValues } = useForm(\r\n    registerCallBack,\r\n    {\r\n      name: \"\",\r\n      price: \"\",\r\n      duration: \"\",\r\n    }\r\n  );\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId, active: true },\r\n      },\r\n    ],\r\n\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Service already Exist\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n      setValues({ name: \"\", price: \"\", duration: \"\" });\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          New Service Added Successfully\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"flex-start\"\r\n              direct=\"column\"\r\n              margin=\"12px auto\"\r\n            >\r\n              <Label style={styles.label}>Description</Label>\r\n              <Content\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 5px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DTextArea border active>\r\n                  <CKEditor\r\n                    onInit={(editor) => {\r\n                      // Insert the toolbar before the editable area.\r\n                      editor.ui\r\n                        .getEditableElement()\r\n                        .parentElement.insertBefore(\r\n                          editor.ui.view.toolbar.element,\r\n                          editor.ui.getEditableElement()\r\n                        );\r\n                    }}\r\n                    onChange={(event, editor) => {\r\n                      const data = editor.getData();\r\n                      setContent(data);\r\n                    }}\r\n                    editor={DecoupledEditor}\r\n                    data={content}\r\n                  />\r\n                </DTextArea>\r\n              </Content>\r\n            </Content>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? (\r\n            <Spinner small inverted row content=\"Loading...\" />\r\n          ) : (\r\n            \"Yes\"\r\n          )}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel, IconWrap } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular/Plus\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId,\r\n        active: true,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => (\r\n        <IconWrap color={\"green\"}>\r\n          <Grid size=\"22px\" />\r\n        </IconWrap>\r\n      ),\r\n      width: \"66px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0.7,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"74px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n      ),\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton flex width=\"56px\" size=\"36px\">\r\n          <Link to={`/zeadmin/service/${row._id}`} className=\"flex-center\">\r\n            <Eye size=\"22px\" title=\"View Service Information\" />\r\n          </Link>\r\n        </DButton>\r\n      ),\r\n      right: true,\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontWeight: \"500\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const title = (\r\n    <DLabel color=\"bluer\" size=\"18px\" rounded>\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <>\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <IconWrap\r\n          medium\r\n          title={\"Add Service\"}\r\n          topright\r\n          circle\r\n          shadow\r\n          bgcolor={({ theme }) => theme.bluer}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Plus />\r\n        </IconWrap>\r\n      </Content>\r\n      <DataTable\r\n        title={title}\r\n        columns={columns}\r\n        data={services.map((service) => service)}\r\n        responsive={true}\r\n        pagination\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        customStyles={customStyles}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading_services}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport { IconWrap } from \"../../components/styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../components/Toasted\";\r\nimport Page404 from \"../Page404\";\r\n\r\nconst Category = (props) => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [\r\n      { query: FETCH_ALL_CATEGORIES_QUERY, variables: { active: true } },\r\n    ],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Upload Success\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId: categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: category.photo\r\n        ? `/images/service/${category.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        {dataLoading ? (\r\n          <Spinner content=\"Please wait while we fetch the data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n              bgcolor=\"#eee\"\r\n              rounded\r\n              pad=\"3px 10px\"\r\n              height=\"5em\"\r\n            >\r\n              <Breadcrumb size=\"big\">\r\n                <Breadcrumb.Section>File Maintenance</Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section as={Link} to=\"/zeadmin/categories\">\r\n                  Service Category\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section active>{category.name}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  mcenter\r\n                  direct=\"column\"\r\n                >\r\n                  <DCard\r\n                    dw={wid < 524 ? \"50%\" : \"100%\"}\r\n                    dh=\"250px\"\r\n                    mcenter\r\n                    p=\"0px\"\r\n                    grayzoom\r\n                  >\r\n                    {loading ? (\r\n                      <Spinner content=\"Loading...\" medium />\r\n                    ) : (\r\n                      <DImage height=\"100%\" width=\"100%\">\r\n                        <img\r\n                          src={\r\n                            category.photo\r\n                              ? `/images/service/${category.photo}`\r\n                              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt={category.name}\r\n                          onClick={openLightbox}\r\n                        />\r\n                      </DImage>\r\n                    )}\r\n                    <IconWrap\r\n                      {...getRootProps()}\r\n                      circle\r\n                      bottomcenter\r\n                      small\r\n                      pad=\"2px\"\r\n                      bgcolor={({ theme }) => theme.bluer}\r\n                    >\r\n                      <Camera title=\"Upload\" />\r\n                      <input {...getInputProps()} />\r\n                    </IconWrap>\r\n                  </DCard>\r\n\r\n                  <ModalGateway>\r\n                    {viewerIsOpen ? (\r\n                      <Modal onClose={closeLightbox}>\r\n                        <Carousel views={images} />\r\n                      </Modal>\r\n                    ) : null}\r\n                  </ModalGateway>\r\n                </Content>\r\n                <Content width=\"100%\" height=\"100%\">\r\n                  <DGrid gap=\"10px\">\r\n                    <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\" overf>\r\n                      <CategoryDetails\r\n                        category={data.category}\r\n                        historyCallback={historyCallback}\r\n                      />\r\n                    </DCard>\r\n                    <DCard dw=\"100%\" dh=\"100%\">\r\n                      <ServiceList categoryId={data.category._id} />\r\n                    </DCard>\r\n                  </DGrid>\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header, Grid, Popup } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport { Warning } from \"@styled-icons/material-rounded\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback,\r\n}) => {\r\n  const [archiveService, { loading: loadArchiveService }] = useMutation(\r\n    ARCHIVE_SERVICE,\r\n    {\r\n      variables: { serviceId: service._id },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_SERVICES_QUERY,\r\n          variables: { categoryId: service.category._id, active: true },\r\n        },\r\n      ],\r\n      onCompleted(data) {\r\n        serviceHistoryCallback();\r\n      },\r\n    }\r\n  );\r\n\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id,\r\n          active: true,\r\n        },\r\n      });\r\n\r\n      data.services = data.services.filter((serv) => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id,\r\n          active: true,\r\n        },\r\n        data: { services: [...data.services] },\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id,\r\n    },\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      basic\r\n      size=\"small\"\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      closeIcon\r\n    >\r\n      <Header icon=\"archive\" content={`Archive service: ${service.name}`} />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n          >\r\n            <Popup\r\n              on=\"click\"\r\n              trigger={\r\n                <DButton alert flex>\r\n                  <DeleteForever size=\"22px\" />\r\n                  Delete Permanently\r\n                </DButton>\r\n              }\r\n              position=\"top center\"\r\n              flowing\r\n            >\r\n              <Grid divided columns={2}>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"green\" margin=\"0 auto\">\r\n                    <Check\r\n                      title=\"Confirm deleting permanently\"\r\n                      onClick={handleDeleteService}\r\n                    />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"red\" margin=\"0 auto\">\r\n                    <Cancel title=\"Cancel action\" />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Popup>\r\n\r\n            <Popup\r\n              trigger={\r\n                <IconWrap\r\n                  circle\r\n                  shadow\r\n                  color=\"yellow\"\r\n                  small\r\n                  mcenter\r\n                  title=\"Warning\"\r\n                >\r\n                  <Warning />\r\n                </IconWrap>\r\n              }\r\n              content={\r\n                <p style={{ fontWeight: 700 }}>\r\n                  Deleting Permantly cannot be restored\r\n                </p>\r\n              }\r\n              position=\"top right\"\r\n              size=\"tiny\"\r\n            />\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n          >\r\n            <DButton basic confirm onClick={() => archiveService()}>\r\n              {loadArchiveService ? (\r\n                <Spinner inverted small row content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Check size=\"22px\" />\r\n                  Yes\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </Content>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ARCHIVE_SERVICE = gql`\r\n  mutation archivedService($serviceId: ID!) {\r\n    archivedService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label, Grid } from \"semantic-ui-react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport { DButton, DLabel, IconWrap } from \"../../../components/styled/utils\";\r\nimport MenuDots from \"../../../components/MenuDots\";\r\nimport { Edit, Trash } from \"@styled-icons/boxicons-solid\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport DTextArea from \"../../../components/DTextArea\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  // const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service && service.name,\r\n      price: service && service.price,\r\n      duration: service && service.duration,\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(values.duration),\r\n      description: content,\r\n    },\r\n\r\n    onCompleted() {\r\n      setIsEdit(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Service Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <MenuDots topright medium>\r\n          <Grid divided columns={2}>\r\n            <Grid.Column>\r\n              <DButton confirm onClick={handleEdit} flex>\r\n                <IconWrap mcenter>\r\n                  <Edit size=\"22px\" title=\"Update Content\" />\r\n                </IconWrap>\r\n              </DButton>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <DButton alert flex onClick={() => setOpen(true)}>\r\n                <IconWrap mcenter>\r\n                  <Trash size=\"22px\" title=\"Archive or Permanently Delete\" />\r\n                </IconWrap>\r\n              </DButton>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </MenuDots>\r\n\r\n        <DGrid gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                {isEdit ? (\r\n                  <input\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"60%\" }}\r\n                  />\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    {values.title}\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                {isEdit ? (\r\n                  <select\r\n                    name=\"duration\"\r\n                    value={values.duration}\r\n                    onChange={handleChange}\r\n                  >\r\n                    {/* <option></option> */}\r\n                    <option value=\"30\">30 mins</option>\r\n                    <option value=\"45\">45 mins</option>\r\n                    <option value=\"60\">60 mins</option>\r\n                    <option value=\"90\">90 mins</option>\r\n                    <option value=\"120\">120 mins</option>\r\n                    <option value=\"180\">180 mins</option>\r\n                    <option value=\"210\">210 mins</option>\r\n                  </select>\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    {values.duration} min\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                {isEdit ? (\r\n                  <input\r\n                    name=\"price\"\r\n                    value={values.price}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"60%\" }}\r\n                  />\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    Php {values.price}\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Description</Label>\r\n\r\n            <Content\r\n              width=\"90%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea border active={isEdit ? true : null}>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n              <DTextArea border active={!isEdit ? true : null}>\r\n                {parser(content)}\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n          {isEdit && (\r\n            <Content width=\"100%\" flex justify=\"flex-end\">\r\n              <DButton confirm onClick={handleSubmit}>\r\n                {loading ? (\r\n                  <Spinner row small inverted content=\"Loading...\" />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </DButton>\r\n              <DButton alert onClick={() => setIsEdit(false)}>\r\n                Cancel\r\n              </DButton>\r\n            </Content>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\",\r\n  },\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconWrap } from \"../../components/styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../components/Toasted\";\r\n\r\nconst Service = (props) => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState({});\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId,\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, [serviceData]);\r\n\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Image Uploaded\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: service.photo\r\n        ? `/images/service/${service.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        mcenter\r\n      >\r\n        {serviceLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n              bgcolor=\"#eee\"\r\n              rounded\r\n              pad=\"3px 10px\"\r\n              height=\"5em\"\r\n            >\r\n              <Breadcrumb size=\"big\">\r\n                <Breadcrumb.Section as={Link} to=\"/zeadmin/categories\">\r\n                  Service Category\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section\r\n                  as={Link}\r\n                  to={`/zeadmin/category/${\r\n                    service.category && service.category._id\r\n                  }`}\r\n                >\r\n                  {service.category && service.category.name}\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right arrow\" />\r\n                <Breadcrumb.Section active>{service.name}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  mcenter\r\n                  direct=\"column\"\r\n                >\r\n                  <DCard\r\n                    dw={wid < 524 ? \"50%\" : \"100%\"}\r\n                    dh=\"250px\"\r\n                    mcenter\r\n                    p=\"0px\"\r\n                    grayzoom\r\n                  >\r\n                    {loading ? (\r\n                      <Spinner content=\"Loading...\" medium />\r\n                    ) : (\r\n                      <DImage height=\"100%\" width=\"100%\">\r\n                        <img\r\n                          src={\r\n                            service.photo\r\n                              ? `/images/service/${service.photo}`\r\n                              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt={service.name}\r\n                          onClick={openLightbox}\r\n                        />\r\n                      </DImage>\r\n                    )}\r\n                    <IconWrap\r\n                      {...getRootProps()}\r\n                      circle\r\n                      bottomcenter\r\n                      small\r\n                      bgcolor={({ theme }) => theme.bluer}\r\n                      pad=\"2px\"\r\n                    >\r\n                      <Camera title=\"Upload\" />\r\n                      <input {...getInputProps()} />\r\n                    </IconWrap>\r\n                  </DCard>\r\n\r\n                  <ModalGateway>\r\n                    {viewerIsOpen ? (\r\n                      <Modal onClose={closeLightbox}>\r\n                        <Carousel views={images} />\r\n                      </Modal>\r\n                    ) : null}\r\n                  </ModalGateway>\r\n                </Content>\r\n                <Content width=\"100%\" height=\"100%\">\r\n                  <DGrid gap=\"10px\">\r\n                    <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\" overf>\r\n                      <ServiceDetails\r\n                        service={serviceData.service}\r\n                        serviceHistoryCallback={serviceHistoryCallback}\r\n                      />\r\n                    </DCard>\r\n                  </DGrid>\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  // const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n  //   variables: {\r\n  //     inqId: inqId\r\n  //   }\r\n  // });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage,\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(\"Message sent\");\r\n    },\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n  };\r\n\r\n  const handleReplyMsg = (e) => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingInq ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{inq.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {inq.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {inq.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={inq.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={inq.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { DSection } from \"../../components/styled/containers\";\r\nimport { Popup, Icon, Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\nimport moment from \"moment\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n  const [inqVal, setInqVal] = useState(\"\");\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const [readInq, { loading: loadReadInq }] = useMutation(READ_INQ, {\r\n    variables: { inqId: inqVal },\r\n    refetchQueries: [{ query: FETCH_INQUIRIES }],\r\n  });\r\n\r\n  const handleRow = (e) => {\r\n    readInq();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleMouseOver = (e) => {\r\n    setInqVal(e.currentTarget.dataset.inqid);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true,\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: (row) => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      },\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"createdAt\",\r\n      sortable: true,\r\n      cell: (row) => moment(parseInt(row.createdAt)).format(\"LLL\"),\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"read\",\r\n      sortable: true,\r\n      format: (row) => {\r\n        return (\r\n          <span style={{ fontWeight: 700 }}>\r\n            {row.read ? \"Read\" : \"Unread\"}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              flex\r\n              data-inqid={row._id}\r\n              onClick={handleRow}\r\n              onMouseOver={handleMouseOver}\r\n            >\r\n              <Eye size=\"18px\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      ),\r\n      right: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        pad=\"24px 0\"\r\n      >\r\n        {/* <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n              Inquiry List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content> */}\r\n\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map((inq) => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          progressPending={loading_inquiries}\r\n          progressComponent={\r\n            <Spinner content=\"Please wait while we fetch our data...\" />\r\n          }\r\n        />\r\n\r\n        <ReplyModal inqId={inqVal} open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <Breadcrumb size={\"huge\"}>\r\n    <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n      Inquiry List\r\n    </Breadcrumb.Section>\r\n  </Breadcrumb>\r\n);\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nconst READ_INQ = gql`\r\n  mutation readInquiry($inqId: ID!) {\r\n    readInquiry(_id: $inqId)\r\n  }\r\n`;\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  id,\r\n  photo,\r\n  fetchEmployee,\r\n  handleDetails,\r\n  handleSchedule,\r\n}) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      flex\r\n      direct=\"column\"\r\n      margin=\"0 auto\"\r\n      align=\"center\"\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n    >\r\n      <DCard\r\n        circle\r\n        dh=\"200px\"\r\n        dw=\"200px\"\r\n        flex\r\n        justifyCenter\r\n        alignCenter\r\n        fcol\r\n        grayzoom\r\n      >\r\n        <DImage circle height=\"100%\" align=\"100%\">\r\n          {loading ? (\r\n            <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n              <Spinner small />\r\n            </Content>\r\n          ) : (\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/employees/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          )}\r\n        </DImage>\r\n        <IconWrap\r\n          {...getRootProps()}\r\n          bg={({ theme }) => theme.bluer}\r\n          circle\r\n          shadow\r\n          bottomcenter\r\n          small\r\n          pad=\"3px\"\r\n          bgcolor={({ theme }) => theme.bluer}\r\n        >\r\n          <Camera title=\"Upload\" />\r\n          <input {...getInputProps()} />\r\n        </IconWrap>\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel views={images} />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DCard>\r\n      <Content\r\n        width=\"80%\"\r\n        margin=\"24px auto\"\r\n        height=\"auto\"\r\n        flex\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        <DButton width=\"150px\" onClick={handleDetails} fluid>\r\n          Account Details\r\n        </DButton>\r\n        <DButton width=\"150px\" onClick={handleSchedule} fluid>\r\n          Schedule\r\n        </DButton>\r\n      </Content>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = (e) => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Successfully Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole,\r\n    },\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  // const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    employee.dateOfBirth ? new Date(parseInt(employee.dateOfBirth)) : new Date()\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Updated Successfully\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values,\r\n    },\r\n  });\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\nimport moment from \"moment\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {moment(parseInt(employee.dateOfBirth)).format(\"LL\")}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport {\r\n  DLabel,\r\n  IconWrap,\r\n  DSelect,\r\n  DButton,\r\n  CheckLabel,\r\n} from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport { Save } from \"@styled-icons/boxicons-solid/Save\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst AccountSched = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n  const [isEditSched, setIsEditSched] = useState(false);\r\n  const [schedValues, setSchedValues] = useState({\r\n    workStart:  employee.schedule.workStart,\r\n    workLength:  employee.schedule.workLength / 60,\r\n    breakStart:  employee.schedule.breakStart,\r\n    breakLength:  employee.schedule.breakLength / 60,\r\n  });\r\n\r\n  const [updateSchedule, { loading: loadSchedule }] = useMutation(\r\n    UPDATE_EMPLOYEE_SCHEDULE,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        workStart: schedValues.workStart,\r\n        breakStart: schedValues.breakStart,\r\n        workLength: parseInt(parseFloat(schedValues.workLength) * 60),\r\n        breakLength: parseInt(parseFloat(schedValues.breakLength) * 60),\r\n        day: days,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        console.log(err);\r\n        //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      },\r\n      onCompleted() {\r\n        setIsEditSched(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Schedule Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleEditSched = () => {\r\n    setIsEditSched(!isEditSched);\r\n  };\r\n\r\n  const handleSchedChange = (e) => {\r\n    setSchedValues({ ...schedValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleUpdateSched = () => {\r\n    updateSchedule();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"10px\" med10=\"1fr\" med7=\"1fr\">\r\n        <DCard dw=\"100%\" dh=\"100%\" p=\"10px\" flex fcol justifyBetween>\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <DLabel\r\n              size={wid < 768 ? \"18px !important\" : \"22px\"}\r\n              weight={700}\r\n              pad=\"0\"\r\n            >\r\n              Schedule Details\r\n            </DLabel>\r\n            {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n              <>\r\n                <IconWrap\r\n                  invisible={isEditSched ? true : null}\r\n                  bgcolor={({ theme }) => theme.blue}\r\n                  medium\r\n                  title={\"Update Info\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  pad=\"3px\"\r\n                >\r\n                  <Edit onClick={handleEditSched} />\r\n                </IconWrap>\r\n\r\n                <IconWrap\r\n                  invisible={!isEditSched ? true : null}\r\n                  medium\r\n                  title={\"Cancel Update\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  color=\"red\"\r\n                >\r\n                  <Cancel onClick={handleEditSched} />\r\n                </IconWrap>\r\n              </>\r\n            )}\r\n          </Content>\r\n          <Content height=\"100%\" width=\"100%\">\r\n            <DGrid custom=\"1fr 2fr\">\r\n              <Content\r\n                flex\r\n                width=\"90%\"\r\n                height=\"300px\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n                margin=\"0 auto\"\r\n                style={\r\n                  wid < 768\r\n                    ? { borderBottom: \"1px solid #ccc\" }\r\n                    : { borderRight: \"1px solid #ccc\" }\r\n                }\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Days\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"flex-start\"\r\n                  direct=\"column\"\r\n                  pad=\"0 20px\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <CheckboxGroup\r\n                    name=\"days\"\r\n                    value={days}\r\n                    onChange={setDays}\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    {(Checkbox) => (\r\n                      <>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sun\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Mon\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Tue\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Wed\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Thu\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Fri\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sat\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                height=\"300px\"\r\n                width=\"100%\"\r\n                margin=\"0 auto\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Hours\r\n                </DLabel>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                    pad=\"5px 10px\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Work\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        name=\"workStart\"\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workStart}\r\n                      >\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Work Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workLength}\r\n                        name=\"workLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                        <option value=\"5\">5 hours</option>\r\n                        <option value=\"6\">6 hours</option>\r\n                        <option value=\"7\">7 hours</option>\r\n                        <option value=\"8\">8 hours</option>\r\n                        <option value=\"9\">9 hours</option>\r\n                        <option value=\"10\">10 hours</option>\r\n                        <option value=\"11\">11 hours</option>\r\n                        <option value=\"12\">12 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? employee.schedule.workLength\r\n                          : employee.schedule.workLength / 60}{\" \"}\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.workLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Break\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakStart}\r\n                        name=\"breakStart\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Break Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakLength}\r\n                        name=\"breakLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value={\"0.5\"}>30 mins</option>\r\n                        <option value={\"1\"}>1 hour</option>\r\n                        <option value=\"2\">2 hours</option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? employee.schedule.breakLength\r\n                          : employee.schedule.breakLength / 60}{\" \"}\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.breakLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n            invisible={isEditSched ? false : true}\r\n          >\r\n            <DButton confirm flex onClick={handleUpdateSched}>\r\n              {loadSchedule ? (\r\n                <Spinner tiny row inverted content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Save size=\"22px\" title=\"Update Content\" />\r\n                  Save\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_SCHEDULE = gql`\r\n  mutation updateSchedule(\r\n    $employeeId: ID!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateSchedule(\r\n      _id: $employeeId\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched employee={employee} />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = () => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const [empPersonal, setEmpPersonal] = useState({});\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"schedule\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeAuth.id,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (empData) setEmpPersonal(empData.employee);\r\n  }, [empData]);\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        {empLoading ? (\r\n          <Spinner content=\"Please wait while we fetch the data...\" />\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <PhotoBooth\r\n              handleDetails={handleDetails}\r\n              handleSchedule={handleSchedule}\r\n              photo={empData.employee.photo}\r\n              id={empData.employee._id}\r\n              fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n            />\r\n            <AccountInfo\r\n              employee={empData.employee}\r\n              fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n              isAccount={isAccount}\r\n            />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { DotsVertical } from \"../../components/styled/utils\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Profile\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Last Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.lastName}</div>,\r\n    },\r\n    {\r\n      name: \"First Name\",\r\n      selector: \"firstName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.firstName}</div>,\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: \"email\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.email}</div>,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        mcenter\r\n        style={{ minHeight: \"50vh\" }}\r\n      >\r\n        {loading_users ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map((getUser) => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId,\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue,\r\n      },\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n      },\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments],\r\n          },\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\",\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        confirm\r\n        onClick={() => setNewConfirm(true)}\r\n        disabled={\r\n          serviceValue === \"\" || employeeVal === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content style={{ overflow: \"hidden\" }}>\r\n          <DGrid custom=\"1fr 2fr\">\r\n            <AppointmentInputs\r\n              categoryValue={categoryValue}\r\n              setCategoryValue={setCategoryValue}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = (props) => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s Info\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SigninForm = () => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport { Input, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"./styled/utils\";\r\nimport { Content } from \"./styled/containers\";\r\n\r\nconst FilterInput = ({ filterText, onFilter, onClear, isPrint }) => (\r\n  <Content width=\"350px\" height=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <Input\r\n        id=\"search\"\r\n        type=\"text\"\r\n        icon={\r\n          <Icon\r\n            name={filterText.trim() === \"\" ? \"search\" : \"close\"}\r\n            inverted\r\n            circular\r\n            link\r\n            onClick={onClear}\r\n          />\r\n        }\r\n        value={filterText}\r\n        onChange={onFilter}\r\n        placeholder=\"Filter by status/date/service/last name...\"\r\n        fluid\r\n      />\r\n    </Content>\r\n  </Content>\r\n);\r\n\r\nexport default FilterInput;\r\n","import React, { useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content, DImage, DGrid } from \"../../styled/containers\";\r\nimport { DButton, DLabel, DInput } from \"../../styled/utils\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport moment from \"moment\";\r\nimport { Print } from \"react-easy-print\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport parser from \"html-react-parser\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\n\r\nconst FilePrint = ({ filteredItems, isPrintOpen, setIsPrintOpen }) => {\r\n  const [content, setContent] = useState(\r\n    \"Lorem ipsum dolor sit amet consectetur adipisicing elit.Voluptatum quo maiores nam distinctio reiciendis iusto quod aspernatur error corporis, sit debitis fugit consequatur adipisci similique quaerat nesciunt temporibus enim earum.\"\r\n  );\r\n  const [author, setAuthor] = useState({\r\n    one: \"\",\r\n    two: \"\",\r\n    titleOne: \"\",\r\n    titleTwo: \"\",\r\n  });\r\n\r\n  const handleAuthor = (e) => {\r\n    setAuthor({ ...author, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [isEditPrint, setIsEditPrint] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={isPrintOpen}\r\n        onClose={() => setIsPrintOpen(false)}\r\n        className=\"modalBgPrint\"\r\n      >\r\n        <Modal.Header>\r\n          <DButton\r\n            onClick={() => window.print()}\r\n            disabled={isEditPrint ? true : false}\r\n          >\r\n            <Icon name=\"print\" fitted /> Print\r\n          </DButton>\r\n          <DButton onClick={() => setIsEditPrint(!isEditPrint)}>\r\n            {isEditPrint ? (\r\n              <>\r\n                <Icon name=\"save\" fitted />\r\n                Save\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Icon name=\"edit\" fitted />\r\n                Edit\r\n              </>\r\n            )}\r\n          </DButton>\r\n        </Modal.Header>\r\n\r\n        <Modal.Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            width=\"100%\"\r\n            align=\"100%\"\r\n          >\r\n            <div\r\n              style={{ position: \"absolute\", top: 0, right: 0, opacity: 0.5 }}\r\n            >\r\n              <DImage objFit=\"contain\" circle height=\"200px\" width=\"200px\">\r\n                <img src=\"/images/logo.png\" />\r\n              </DImage>\r\n            </div>\r\n\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"flex-start\"\r\n              direct=\"column\"\r\n              margin=\"12px auto\"\r\n            >\r\n              <Content\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"40px 0 0 0\"\r\n              >\r\n                <DTextArea active={isEditPrint ? true : null}>\r\n                  <CKEditor\r\n                    onInit={(editor) => {\r\n                      // Insert the toolbar before the editable area.\r\n                      editor.ui\r\n                        .getEditableElement()\r\n                        .parentElement.insertBefore(\r\n                          editor.ui.view.toolbar.element,\r\n                          editor.ui.getEditableElement()\r\n                        );\r\n                    }}\r\n                    onChange={(event, editor) => {\r\n                      const data = editor.getData();\r\n                      setContent(data);\r\n                    }}\r\n                    editor={DecoupledEditor}\r\n                    data={content}\r\n                  />\r\n                </DTextArea>\r\n\r\n                <DTextArea\r\n                  active={!isEditPrint ? true : null}\r\n                  color={!content ? \"#ccc\" : null}\r\n                  style={{ marginTop: \"40px\" }}\r\n                >\r\n                  {parser(content)}\r\n                </DTextArea>\r\n              </Content>\r\n            </Content>\r\n            <DataTable\r\n              columns={columnsPrint}\r\n              data={filteredItems}\r\n              customStyles={customStyles}\r\n              dense\r\n            />\r\n            <Content width=\"90%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid two gap=\"50px\">\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  direct=\"column\"\r\n                  pad=\"10px\"\r\n                >\r\n                  <Content\r\n                    width=\"90%\"\r\n                    height=\"100%\"\r\n                    margin=\"12px auto\"\r\n                    pad=\"20px\"\r\n                    style={{ borderBottom: \"1px solid #000\" }}\r\n                  ></Content>\r\n                  {isEditPrint ? (\r\n                    <>\r\n                      <DInput\r\n                        name=\"one\"\r\n                        placeholder=\"Author\"\r\n                        value={author.one}\r\n                        onChange={handleAuthor}\r\n                        textAlign=\"center\"\r\n                        margin=\"3px\"\r\n                      />\r\n                      <DInput\r\n                        name=\"titleOne\"\r\n                        placeholder=\"Title\"\r\n                        value={author.titleOne}\r\n                        onChange={handleAuthor}\r\n                        textAlign=\"center\"\r\n                        margin=\"3px\"\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <h5>\r\n                        {author.one.trim() !== \"\" ? author.one : \"Author\"}\r\n                      </h5>\r\n                      <span>\r\n                        {author.titleOne.trim() !== \"\"\r\n                          ? author.titleOne\r\n                          : \"Title\"}\r\n                      </span>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  direct=\"column\"\r\n                  pad=\"10px\"\r\n                >\r\n                  <Content\r\n                    width=\"90%\"\r\n                    height=\"100%\"\r\n                    margin=\"12px auto\"\r\n                    pad=\"20px\"\r\n                    style={{ borderBottom: \"1px solid #000\" }}\r\n                  ></Content>\r\n                  {isEditPrint ? (\r\n                    <>\r\n                      <DInput\r\n                        name=\"two\"\r\n                        placeholder=\"Author\"\r\n                        value={author.two}\r\n                        onChange={handleAuthor}\r\n                        textAlign=\"center\"\r\n                        margin=\"3px\"\r\n                      />\r\n                      <DInput\r\n                        name=\"titleTwo\"\r\n                        placeholder=\"Title\"\r\n                        value={author.titleTwo}\r\n                        onChange={handleAuthor}\r\n                        textAlign=\"center\"\r\n                        margin=\"3px\"\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <h5>\r\n                        {author.two.trim() !== \"\" ? author.two : \"Author\"}\r\n                      </h5>\r\n                      <span>\r\n                        {author.titleTwo.trim() !== \"\"\r\n                          ? author.titleTwo\r\n                          : \"Title\"}\r\n                      </span>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Print printOnly name=\"foo\">\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          width=\"100%\"\r\n          align=\"100%\"\r\n        >\r\n          <div style={{ position: \"absolute\", top: 0, right: 0, opacity: 0.5 }}>\r\n            <DImage objFit=\"contain\" circle height=\"200px\" width=\"200px\">\r\n              <img src=\"/images/logo.png\" />\r\n            </DImage>\r\n          </div>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"40px 0 0 0\"\r\n            >\r\n              <p style={{ marginTop: \"40px\" }}>{parser(content)}</p>\r\n            </Content>\r\n          </Content>\r\n\r\n          <DataTable\r\n            columns={columnsPrint}\r\n            data={filteredItems}\r\n            customStyles={customStyles}\r\n            dense\r\n          />\r\n          <Content width=\"90%\" height=\"100%\" margin=\"24px auto\">\r\n            <DGrid two gap=\"50px\">\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n                pad=\"10px\"\r\n              >\r\n                <Content\r\n                  width=\"90%\"\r\n                  height=\"100%\"\r\n                  margin=\"12px auto\"\r\n                  pad=\"20px\"\r\n                  style={{ borderBottom: \"1px solid #000\" }}\r\n                ></Content>\r\n                <h5>{author.one}</h5>\r\n                <span>{author.titleOne}</span>\r\n              </Content>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n                pad=\"10px\"\r\n              >\r\n                <Content\r\n                  width=\"90%\"\r\n                  height=\"100%\"\r\n                  margin=\"12px auto\"\r\n                  pad=\"20px\"\r\n                  style={{ borderBottom: \"1px solid #000\" }}\r\n                ></Content>\r\n                <h5>{author.two}</h5>\r\n                <span>{author.titleTwo}</span>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </Content>\r\n      </Print>\r\n    </>\r\n  );\r\n};\r\n\r\nconst columnsPrint = [\r\n  {\r\n    cell: () => <Grid size=\"16px\" color=\"green\" />,\r\n    width: \"36px\",\r\n  },\r\n  {\r\n    name: \"Client\",\r\n    selector: \"user\",\r\n    sortable: true,\r\n    wrap: true,\r\n    flow: 1,\r\n    format: (row) => `${row.user.firstName} ${row.user.lastName}`,\r\n  },\r\n  {\r\n    name: \"Aesthetician\",\r\n    selector: \"employee\",\r\n    wrap: true,\r\n    flow: 1,\r\n    sortable: true,\r\n    format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n  },\r\n  {\r\n    name: \"Service\",\r\n    selector: \"service\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) => `${row.service.name}`,\r\n  },\r\n  {\r\n    name: \"Date\",\r\n    selector: \"date\",\r\n    wrap: true,\r\n    sortable: true,\r\n    width: \"120px\",\r\n    format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    selector: \"status\",\r\n    wrap: true,\r\n    sortable: true,\r\n    right: true,\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) => row.status === \"CANCELLED\",\r\n        style: {\r\n          backgroundColor: \"rgba(241, 39, 17, 0.7)\",\r\n          fontWeight: \"700\",\r\n          fontSize: \"9px\",\r\n        },\r\n      },\r\n      {\r\n        when: (row) => row.status === \"DONE\",\r\n        style: {\r\n          backgroundColor: \"rgba(33, 147, 176, 0.7)\",\r\n          fontWeight: \"700\",\r\n          fontSize: \"9px\",\r\n        },\r\n      },\r\n      {\r\n        when: (row) => row.status === \"RESCHEDULED\",\r\n        style: {\r\n          backgroundColor: \"#6dd5ed\",\r\n          fontWeight: \"700\",\r\n          fontSize: \"9px\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      fontSize: \"11px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n      marginBottom: \"5px\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 20px\"\r\n    color=\"bluer\"\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\n\r\nexport default FilePrint;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\nimport FilterInput from \"../../FilterInput\";\r\nimport FilePrint from \"../report/FilePrint\";\r\nimport { NoPrint } from \"react-easy-print\";\r\n\r\nconst HistoryAppointments = ({ historyAppointments, loading }) => {\r\n  const [isPrintOpen, setIsPrintOpen] = useState(false);\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  const filteredItems = historyAppointments.filter(\r\n    (item) =>\r\n      item &&\r\n      item.service &&\r\n      item.employee &&\r\n      item.user &&\r\n      (item.status.includes(filterText.toUpperCase()) ||\r\n        item.service.name.includes(filterText) ||\r\n        item.employee.lastName.includes(filterText) ||\r\n        item.user.lastName.includes(filterText) ||\r\n        moment(parseInt(item.date)).format(\"LL\").includes(filterText) ||\r\n        (\r\n          item.status.toUpperCase() +\r\n          \"/\" +\r\n          moment(parseInt(item.date)).format(\"LL\").toUpperCase() +\r\n          \"/\" +\r\n          item.status.toUpperCase()\r\n        ).includes(filterText.toUpperCase()))\r\n  );\r\n\r\n  const subHeaderComponentMemo = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <FilterInput\r\n          onFilter={(e) => setFilterText(e.target.value)}\r\n          onClear={handleClear}\r\n          filterText={filterText}\r\n          isPrint={true}\r\n        />\r\n        <DButton onClick={() => setIsPrintOpen(true)}>\r\n          <Icon name=\"print\" fitted />\r\n        </DButton>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <FilePrint\r\n        filteredItems={filteredItems}\r\n        isPrintOpen={isPrintOpen}\r\n        setIsPrintOpen={setIsPrintOpen}\r\n      />\r\n\r\n      <NoPrint force>\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n        >\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={filteredItems}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            paginationResetDefaultPage={resetPaginationToggle}\r\n            subHeader\r\n            subHeaderComponent={subHeaderComponentMemo}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loading}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </NoPrint>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n    width: \"56px\",\r\n    style: {\r\n      borderBottom: \"1px solid #fff\",\r\n      marginBottom: \"-1px\",\r\n    },\r\n  },\r\n  {\r\n    name: \"ID\",\r\n    selector: \"_id\",\r\n    wrap: true,\r\n    omit: true,\r\n  },\r\n  {\r\n    name: \"Client\",\r\n    selector: \"user\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) => `${row.user.firstName} ${row.user.lastName}`,\r\n    omit: true,\r\n  },\r\n  {\r\n    name: \"Aesthetician\",\r\n    selector: \"employee\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n  },\r\n  {\r\n    name: \"Service\",\r\n    selector: \"service\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) => `${row.service.name}`,\r\n  },\r\n  {\r\n    name: \"Date\",\r\n    selector: \"date\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    selector: \"status\",\r\n    wrap: true,\r\n    sortable: true,\r\n    cell: (row) => (\r\n      <span\r\n        style={\r\n          row.status === \"CANCELLED\"\r\n            ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n            : row.status === \"DONE\"\r\n            ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n            : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n        }\r\n      >\r\n        {row.status}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    name: \"Actions\",\r\n\r\n    cell: (row) => (\r\n      <DButton flex as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n        <Icon name=\"eye\" fitted />\r\n      </DButton>\r\n    ),\r\n    right: true,\r\n  },\r\n];\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n      marginBottom: \"5px\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 20px\"\r\n    color=\"bluer\"\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\nimport { NoPrint } from \"react-easy-print\";\r\nimport Page404 from \"../Page404\"\r\n\r\nconst FileReport = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData, error } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  if(error) return Page404\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <NoPrint force>\r\n          <Content\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            margin=\"24px auto\"\r\n          >\r\n            <Breadcrumb size={\"huge\"}>\r\n              <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n                File Report\r\n              </Breadcrumb.Section>\r\n            </Breadcrumb>\r\n          </Content>\r\n        </NoPrint>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <HistoryAppointments\r\n            loading={loading}\r\n            historyAppointments={historyAppointments}\r\n          />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useUploadFile = () => {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  const onSelectedFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  return { preview, selectedFile, setSelectedFile, onSelectedFile };\r\n};\r\n\r\nexport default useUploadFile;\r\n","import React, { useRef } from \"react\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../../../styled/containers\";\r\n\r\nconst ImageSection = ({\r\n  isDark,\r\n  isPosition,\r\n  isColor,\r\n  preview,\r\n  selectedFile,\r\n  onSelectedFile,\r\n  values,\r\n  bgImg\r\n}) => {\r\n  const fileInput = useRef();\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n        <DImage dashed height=\"100%\" width=\"100%\">\r\n          {selectedFile ? (\r\n            <img src={preview} alt=\"showcase\" />\r\n          ) : (\r\n            bgImg && <img src={`/images/cms/home/${bgImg}`} alt=\"showcase\" />\r\n          )}\r\n        </DImage>\r\n\r\n        <Overlay\r\n          flex\r\n          bgr={isDark && isPosition === \"right\" ? true : false}\r\n          bgl={isDark && isPosition === \"left\" ? true : false}\r\n          bgc={isDark && isPosition === \"center\" ? true : false}\r\n          justify={\r\n            isPosition === \"left\"\r\n              ? \"flex-start\"\r\n              : isPosition === \"right\"\r\n              ? \"flex-end\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          talign={\r\n            isPosition === \"left\"\r\n              ? \"left\"\r\n              : isPosition === \"right\"\r\n              ? \"right\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          align=\"center\"\r\n          className={isDark ? \"dark\" : \"\"}\r\n        >\r\n          <div className=\"overlay-content\">\r\n            <h3>{values.title ? values.title : \"TITLE\"}</h3>\r\n            <h4>{values.subtitle ? values.subtitle : \"SUBTITLE\"}</h4>\r\n            <p className=\"ps\">\r\n              {values.paragraph\r\n                ? values.paragraph\r\n                : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec posuere ante orci, at interdum nunc maximus eu. Pellentesque tempus est ligula, sit ame\"}\r\n            </p>\r\n          </div>\r\n        </Overlay>\r\n      </DSection>\r\n\r\n      <Content width=\"80%\" margin=\"0 auto\" flex justify=\"center\" align=\"center\">\r\n        <input\r\n          type=\"file\"\r\n          value={undefined}\r\n          onChange={onSelectedFile}\r\n          style={{ display: \"none\" }}\r\n          ref={fileInput}\r\n        />\r\n        <Popup\r\n          content=\"Select image for background slide\"\r\n          trigger={\r\n            <Icon\r\n              name=\"camera\"\r\n              size=\"large\"\r\n              onClick={handleInputClick}\r\n              style={{ cursor: \"pointer\", color: \"#2193b0\", opacity: 0.75 }}\r\n              className=\"icon_camera-custom\"\r\n            />\r\n          }\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSection;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../../styled/containers\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport useUploadFile from \"../../../../../util/hooks/useUploadFile\";\r\nimport ImageSection from \"./ImageSection\";\r\nimport toaster from \"toasted-notes\";\r\nimport \"./modal.custom.css\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalSlide = ({ open, setOpen, showcase }) => {\r\n  const [isDark, setIsDark] = useState(showcase ? showcase.dark : false);\r\n  const [isPosition, setIsPosition] = useState(\r\n    showcase ? showcase.position : \"left\"\r\n  );\r\n\r\n  const [isColor, setIsColor] = useState(\r\n    showcase ? showcase.bgColor : \"#FFFFFF\"\r\n  );\r\n  const [values, setValues] = useState({\r\n    title: showcase ? showcase.title : \"\",\r\n    subtitle: showcase ? showcase.subtitle : \"\",\r\n    paragraph: showcase ? showcase.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  // ADD OR UPDATE\r\n  const mutation = showcase ? UPDATE_SLIDE : ADD_NEW_SLIDE;\r\n\r\n  const [addOrUpdateSlide, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      showcaseId: showcase && showcase._id,\r\n      ...values,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      position: isPosition,\r\n      dark: isDark,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } },\r\n    ],\r\n    update() {\r\n      if (!showcase) {\r\n        values.title = \"\";\r\n        values.subtitle = \"\";\r\n        values.paragraph = \"\";\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n      setIsDark(false);\r\n      setIsPosition(\"left\");\r\n      setSelectedFile();\r\n      setIsColor(\"#E9E4F0\");\r\n      if (showcase) {\r\n        toaster.notify(\"Update Slide Successfully\");\r\n      } else {\r\n        toaster.notify(\"Add New Slide Successfully\");\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handlePosition = (event) => {\r\n    setIsPosition(event.target.value);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    addOrUpdateSlide();\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Add New Slide </Modal.Header>\r\n      <DGrid custom=\"2fr 1fr\" gap=\"10px\">\r\n        <Modal.Content style={{ padding: \"10px\" }}>\r\n          <ImageSection\r\n            isPosition={isPosition}\r\n            isDark={isDark}\r\n            isColor={isColor}\r\n            preview={preview}\r\n            selectedFile={selectedFile}\r\n            onSelectedFile={onSelectedFile}\r\n            values={values}\r\n            bgImg={showcase && showcase.bgImg}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Content scrolling>\r\n          <Content pad=\"10px\" width=\"100%\" height=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={values.subtitle || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  maxLength=\"150\"\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={values.paragraph || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Text Positioning</label>\r\n                <Content\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"left\"\r\n                      checked={isPosition === \"left\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Left</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"center\"\r\n                      checked={isPosition === \"center\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Center</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"right\"\r\n                      checked={isPosition === \"right\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Right</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay{\" \"}\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Dark</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n        </Modal.Content>\r\n      </DGrid>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" confirm onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n        <DButton alert>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_NEW_SLIDE = gql`\r\n  mutation addNewShowCase(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    addNewShowCase(\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_SLIDE = gql`\r\n  mutation updateShowcase(\r\n    $showcaseId: ID!\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    updateShowcase(\r\n      showcaseId: $showcaseId\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst NewSlide = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"add\" />\r\n        New Slide\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst EditSlide = ({ showcase }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"edit\" style={{ color: \"white\" }} fitted />\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} showcase={showcase} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSlide;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst RemoveSlide = ({ showcase }) => {\r\n  const [isOpenRemove, setIsOpenRemove] = useState(false);\r\n\r\n  const [removeSlide, { loading }] = useMutation(REMOVE_SLIDE, {\r\n    variables: {\r\n      showcaseId: showcase._id\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } }\r\n    ],\r\n    onCompleted() {\r\n      setIsOpenRemove(false);\r\n      toaster.notify(\"Slide Remove\", { position: \"bottom-right\" });\r\n    }\r\n  });\r\n\r\n  const handleRemoveSlide = e => {\r\n    e.preventDefault();\r\n    removeSlide();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton alert onClick={() => setIsOpenRemove(true)}>\r\n        <Icon name=\"trash\" fitted />\r\n      </DButton>\r\n      <Modal\r\n        basic\r\n        open={isOpenRemove}\r\n        closeIcon\r\n        onClose={() => setIsOpenRemove(false)}\r\n      >\r\n        <Modal.Header>Slide ID: {showcase._id}</Modal.Header>\r\n        <Modal.Content>\r\n          <h1>Are you sure you want to remove this slide?</h1>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton basic confirm onClick={handleRemoveSlide}>\r\n            {loading ? <Spinner inverted small /> : \"Yes\"}\r\n          </DButton>\r\n          <DButton basic alert onClick={() => setIsOpenRemove(false)}>\r\n            No\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst REMOVE_SLIDE = gql`\r\n  mutation removeShowcase($showcaseId: ID!) {\r\n    removeShowcase(showcaseId: $showcaseId)\r\n  }\r\n`;\r\n\r\nexport default RemoveSlide;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport {\r\n  DShowCase,\r\n  Overlay,\r\n  DSection,\r\n  DImage\r\n} from \"../../../../styled/containers\";\r\nimport NewSlide from \"./NewSlide\";\r\nimport EditSlide from \"./EditSlide\";\r\nimport RemoveSlide from \"./RemoveSlide\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Showcase = () => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  const { data: showcaseData, loading: dataLoading } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" mcenter>\r\n      <NewSlide />\r\n      <div style={{ position: \"relative\" }}>\r\n        {dataLoading ? (\r\n          <DShowCase height=\"80vh\">\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src=\"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                alt=\"showcase\"\r\n              />\r\n            </DImage>\r\n          </DShowCase>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {showcase.map(sc => (\r\n              <DShowCase\r\n                height=\"80vh\"\r\n                key={sc._id}\r\n                background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n                bgcolor={sc.bgColor}\r\n              >\r\n                <Overlay\r\n                  flex\r\n                  bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                  bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                  bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                  justify={\r\n                    sc.position === \"left\"\r\n                      ? \"flex-start\"\r\n                      : sc.position === \"right\"\r\n                      ? \"flex-end\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  talign={\r\n                    sc.position === \"left\"\r\n                      ? \"left\"\r\n                      : sc.position === \"right\"\r\n                      ? \"right\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  align=\"center\"\r\n                  className={sc.dark ? \"dark\" : \"\"}\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h1>{sc.title}</h1>\r\n                    <h2>{sc.subtitle}</h2>\r\n                    <p>{sc.paragraph}</p>\r\n                  </div>\r\n                </Overlay>\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 20,\r\n                    zIndex: 2,\r\n                    width: \"auto\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <EditSlide showcase={sc} />\r\n                  <RemoveSlide showcase={sc} />\r\n                </div>\r\n              </DShowCase>\r\n            ))}\r\n          </Slider>\r\n        )}\r\n      </div>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport Spinner from \"../../../../Spinner\";\r\n\r\nconst EditModal = ({ aboutBool }) => {\r\n  const [updateAboutSection, { loading }] = useMutation(UPDATE_ABOUT_SECTION, {\r\n    variables: { sectionName: \"ABOUT\" },\r\n  });\r\n\r\n  const handleReverse = () => {\r\n    updateAboutSection();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner small />\r\n      ) : (\r\n        <Popup\r\n          content=\"Toggle Position\"\r\n          trigger={\r\n            <div className=\"pretty p-switch p-fill p-toggle\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"alt\"\r\n                value={aboutBool}\r\n                onChange={handleReverse}\r\n                checked={aboutBool === true ? true : false}\r\n              />\r\n              <div className=\"state p-primary p-on\">\r\n                <label style={{ fontWeight: 500 }}>Reverse</label>\r\n              </div>\r\n              <div className=\"state p-warning p-off\">\r\n                <label style={{ fontWeight: 500 }}>Default</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n          inverted\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_SECTION = gql`\r\n  mutation updateAboutSection($sectionName: String!) {\r\n    updateAboutSection(sectionName: $sectionName) {\r\n      _id\r\n      sectionName\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_HOME_SECTION,\r\n  FETCH_ABOUT_CMS,\r\n} from \"../../../../../util/graphql/cms\";\r\nimport { Section2Styled, Content } from \"../../../../styled/containers\";\r\nimport EditModal from \"./EditModal\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst SectionAbout = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAboutSection, loading: loadingAboutSection } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: { sectionName: \"ABOUT\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataAboutSection) {\r\n      setIsAbout(dataAboutSection.homeCMS);\r\n    }\r\n  }, [dataAboutSection]);\r\n\r\n  const { data: dataAbout, loading: loadingAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  return (\r\n    <Section2Styled visible width=\"90%\" alt={isAbout.alt ? true : false}>\r\n      <div className=\"switch\">\r\n        {loadingAboutSection ? (\r\n          <Spinner tiny />\r\n        ) : (\r\n          <EditModal aboutBool={dataAboutSection.homeCMS.alt} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"sec2-container\">\r\n        <div className=\"sec2-inner\">\r\n          {loadingAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\">\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default SectionAbout;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"./styled/utils\";\r\n\r\nconst ReadMore = (props) => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../../../util/graphql/service\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  Overlay,\r\n  DImage,\r\n  DCard,\r\n} from \"../../../../styled/containers\";\r\nimport useWindowSize from \"../../../../../util/hooks/useWindowSize\";\r\nimport ReadMore from \"../../../../ReadMore\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport Page404 from \"../../../../../pages/Page404\";\r\n\r\nconst CategoryCards = ({ gridCount }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY, {\r\n    variables: { active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) return Page404;\r\n\r\n  return (\r\n    <Content height=\"100%\" width=\"100%\">\r\n      {loading ? (\r\n        <DGrid four gap=\"20px\">\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n        </DGrid>\r\n      ) : (\r\n        <DGrid\r\n          two={gridCount === 2 ? true : false}\r\n          three={gridCount === 3 ? true : false}\r\n          four={gridCount === 4 ? true : false}\r\n          gap=\"20px\"\r\n        >\r\n          {isCategories.map((category) => (\r\n            <DCard\r\n              key={category._id}\r\n              dw={wid < 524 ? \"70%\" : \"90%\"}\r\n              dh=\"250px\"\r\n              mcenter\r\n              p=\"0px\"\r\n              grayzoom\r\n              overlaying\r\n            >\r\n              <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                <img\r\n                  src={\r\n                    category.photo\r\n                      ? `/images/service/${category.photo}`\r\n                      : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  alt={category.name}\r\n                />\r\n              </DImage>\r\n\r\n              <Overlay\r\n                bgc\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                initbox\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h3 className=\"title\">{category.name}</h3>\r\n\r\n                    {category.description.length > 100\r\n                      ? parser(category.description.substr(0, 100) + \"...\")\r\n                      : parser(category.description.substr(0, 100))}\r\n\r\n                    <ReadMore center size=\"14px\">\r\n                      Learn More\r\n                    </ReadMore>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DCard>\r\n          ))}\r\n        </DGrid>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { Content } from \"../../../../styled/containers\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\"\r\n];\r\n\r\nconst UpdateSectCategory = ({\r\n  setOpenCatSec,\r\n  openCatSec,\r\n  categorySectionInfo\r\n}) => {\r\n  const [isColor, setIsColor] = useState(\r\n    categorySectionInfo && categorySectionInfo.bgColor\r\n  );\r\n\r\n  const [isDark, setIsDark] = useState(\r\n    categorySectionInfo && categorySectionInfo.dark\r\n  );\r\n\r\n  const [gridCount, setGridCount] = useState(\r\n    categorySectionInfo && categorySectionInfo.grid\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: categorySectionInfo && categorySectionInfo.title,\r\n    subtitle: categorySectionInfo && categorySectionInfo.subtitle,\r\n    paragraph: categorySectionInfo && categorySectionInfo.paragraph\r\n  });\r\n\r\n  const [updateSectionCategory, { loading }] = useMutation(\r\n    UPDATE_CATEGORY_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n        ...values,\r\n        grid: gridCount,\r\n        dark: isDark,\r\n        bgColor: isColor\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_HOME_SECTION, variables: { sectionName: \"CATEGORY\" } }\r\n      ],\r\n      onCompleted() {\r\n        setOpenCatSec(false);\r\n        toaster.notify(\"Update Category Section\");\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = color => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleGrid = event => {\r\n    setGridCount(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    updateSectionCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={openCatSec}\r\n      onClose={() => setOpenCatSec(false)}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>Update Section Category</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Form>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              name=\"title\"\r\n              value={values.title || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Subtitle</label>\r\n            <input\r\n              name=\"subtitle\"\r\n              value={values.subtitle || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Paragraph</label>\r\n            <TextArea\r\n              maxLength=\"150\"\r\n              style={{ minHeight: 100 }}\r\n              name=\"paragraph\"\r\n              value={values.paragraph || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Background-color{\" \"}\r\n              <Popup\r\n                content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n\r\n            <BlockPicker\r\n              width=\"200px\"\r\n              triangle=\"hide\"\r\n              color={isColor}\r\n              colors={colors}\r\n              onChange={handleChangeComplete}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Text Contrast{\" \"}\r\n              <Popup\r\n                content=\"Change the text to white if background is dark and dark text if background is light\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n            <Content\r\n              flex\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-switch p-fill\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"dark\"\r\n                  value={isDark}\r\n                  checked={isDark === true ? true : false}\r\n                  onChange={handleDark}\r\n                />\r\n                <div className=\"state p-info\">\r\n                  <label>{isDark === true ? \"Light\" : \"Dark\"}</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Grid Count Display</label>\r\n            <Content\r\n              flex\r\n              justify=\"space-around\"\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"2\"\r\n                  checked={gridCount === 2 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Two</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"3\"\r\n                  checked={gridCount === 3 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Three</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"4\"\r\n                  checked={gridCount === 4 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Four</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_CATEGORY_SECTION = gql`\r\n  mutation updateHomeSection(\r\n    $sectionName: String\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $grid: Int\r\n  ) {\r\n    updateHomeSection(\r\n      sectionName: $sectionName\r\n      inputHomeContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        grid: $grid\r\n      }\r\n    ) {\r\n      _id\r\n      sectionName\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgColor\r\n      dark\r\n      grid\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UpdateSectCategory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { DSection, Content } from \"../../../../styled/containers\";\r\nimport { DButtonFree } from \"../../../../styled/utils\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport FancyText from \"../../../../FancyText\";\r\nimport CategoryCards from \"./CategoryCards\";\r\nimport UpdateSectCategory from \"./UpdateSectCategory\";\r\n\r\nconst SectionCategory = () => {\r\n  const [sectCategory, setSectCategory] = useState({});\r\n  const [openCatSec, setOpenCatSec] = useState(false);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setSectCategory(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        margin=\"48px auto\"\r\n        pad=\"10px\"\r\n        bgcolor={sectCategory.bgColor}\r\n      >\r\n        <Popup\r\n          content=\"Update Category Section\"\r\n          trigger={\r\n            <DButtonFree top={0} right={0} onClick={() => setOpenCatSec(true)}>\r\n              <Icon name=\"edit\" fitted />\r\n            </DButtonFree>\r\n          }\r\n          position=\"top right\"\r\n        />\r\n\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Content\r\n            width=\"auto\"\r\n            height=\"auto\"\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            className={sectCategory.dark ? \"dark\" : \"\"}\r\n          >\r\n            <FancyText alt={sectCategory.dark ? true : false}>\r\n              {sectCategory.title}\r\n            </FancyText>\r\n            <h3>\r\n              {sectCategory.subtitle !== \"\"\r\n                ? sectCategory.subtitle\r\n                : \"SUBTITLE\"}\r\n            </h3>\r\n            <p>\r\n              {sectCategory.paragraph !== \"\"\r\n                ? sectCategory.paragraph\r\n                : \"PARAGRAPH\"}\r\n            </p>\r\n          </Content>\r\n          {!loadSectionCategory && (\r\n            <UpdateSectCategory\r\n              openCatSec={openCatSec}\r\n              setOpenCatSec={setOpenCatSec}\r\n              categorySectionInfo={sectionCategory.homeCMS}\r\n            />\r\n          )}\r\n\r\n          <CategoryCards gridCount={sectCategory.grid} />\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionCategory;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/showcase/Showcase\";\r\nimport SectionAbout from \"../../../components/admin/cms/home/sectionabout/SectionAbout\";\r\nimport SectionCategory from \"../../../components/admin/cms/home/sectioncategory/SectionCategory\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\nimport { IconWrap } from \"../../../components/styled/utils\";\r\nimport { ChevronRight } from \"@styled-icons/boxicons-solid/ChevronRight\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Content\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        margin=\"20px auto\"\r\n        align=\"center\"\r\n      >\r\n        <div>\r\n          <h3>Content Management</h3>\r\n        </div>\r\n        <div style={{ margin: \"0 5px\" }}>\r\n          <IconWrap size=\"22px\" color=\"dark\">\r\n            <ChevronRight />\r\n          </IconWrap>\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to=\"/zeadmin/cms_home\"\r\n            style={{\r\n              fontSize: \"18px\",\r\n              fontWeight: 700,\r\n              borderBottom: \"2px solid\",\r\n              paddingBottom: \"5px\",\r\n            }}\r\n          >\r\n            Home\r\n          </Link>\r\n        </div>\r\n      </Content>\r\n      <Showcase />\r\n      <SectionAbout />\r\n      <SectionCategory />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalHeading = ({ isAbout }) => {\r\n  const fileInput = useRef();\r\n  const [openHead, setOpenHead] = useState(false);\r\n  const [isDark, setIsDark] = useState(isAbout ? isAbout.dark : false);\r\n  const [isOverlay, setIsOverlay] = useState(isAbout ? isAbout.overlay : false);\r\n  const [headers, setHeaders] = useState({\r\n    title: isAbout ? isAbout.title : \"\",\r\n    subtitle: isAbout ? isAbout.subtitle : \"\",\r\n    paragraph: isAbout ? isAbout.paragraph : \"\",\r\n  });\r\n  const [isColor, setIsColor] = useState(isAbout ? isAbout.bgColor : \"#FFFFFF\");\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  const [updateAboutUs, { loading }] = useMutation(UPDATE_ABOUT_HEADER, {\r\n    variables: {\r\n      ...headers,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      dark: isDark,\r\n      overlay: isOverlay,\r\n    },\r\n\r\n    onCompleted() {\r\n      setOpenHead(false);\r\n      toaster.notify(\"Update Successful\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeHeaders = (e) => {\r\n    setHeaders({ ...headers, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleOverlay = () => {\r\n    setIsOverlay(!isOverlay);\r\n  };\r\n\r\n  const handleSaveHeader = () => {\r\n    updateAboutUs();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenHead(true)}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openHead} onClose={() => setOpenHead(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isAbout.bgImg && (\r\n                    <img\r\n                      src={`/images/cms/about/${isAbout.bgImg}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n\r\n              <Overlay bgc={isOverlay ? true : false}>\r\n                <Content\r\n                  flex\r\n                  justify=\"center\"\r\n                  direct=\"column\"\r\n                  align=\"center\"\r\n                  width=\"50%\"\r\n                  margin=\"0 auto\"\r\n                  height=\"100%\"\r\n                  style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n                  className={isDark ? \"dark\" : \"\"}\r\n                >\r\n                  <h1 style={{ fontSize: \"22px\" }}>\r\n                    {headers.title ? headers.title : \"TITLE\"}\r\n                  </h1>\r\n                  <h4> {headers.subtitle ? headers.subtitle : \"SUBTITLE\"}</h4>\r\n                </Content>\r\n              </Overlay>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={headers.title || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={headers.subtitle || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Text Contrast\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Light</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"overlay\"\r\n                      value={isOverlay}\r\n                      checked={isOverlay === true ? true : false}\r\n                      onChange={handleOverlay}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Off</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveHeader}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_HEADER = gql`\r\n  mutation updateAboutUs(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $overlay: Boolean\r\n  ) {\r\n    updateAboutUs(\r\n      inputAbout: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        overlay: $overlay\r\n      }\r\n    ) {\r\n      _id\r\n      title\r\n      subtitle\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalHeading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, Overlay } from \"../../../styled/containers\";\r\nimport MouseScroll from \"../../../MouseScroll\";\r\nimport ModalHeading from \"./ModalHeading\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Heading = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n\r\n  const {\r\n    data: dataAboutContent,\r\n    loading: loadAboutContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataAboutContent) {\r\n      setIsAbout(dataAboutContent.aboutUsCMS);\r\n    }\r\n  }, [dataAboutContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadAboutContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          background={isAbout.bgImg && `/images/cms/about/${isAbout.bgImg}`}\r\n          bgcolor={isAbout.bgColors}\r\n          width=\"90%\"\r\n          mcenter\r\n          height=\"55vh\"\r\n          fixed\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className={isAbout.dark ? \"dark\" : \"\"}\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>{isAbout.title}</h1>\r\n            {isAbout.subtitle !== \"\" && <h4>{isAbout.subtitle}</h4>}\r\n            <MouseScroll />\r\n          </Content>\r\n          <Overlay bgc={isAbout.overlay ? true : false} />\r\n          <ModalHeading isAbout={dataAboutContent.aboutUsCMS} />\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, TextArea } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalStory = ({ isStory }) => {\r\n  const fileInput = useRef();\r\n  const [openStory, setOpenStory] = useState(false);\r\n  const [reverse, setReverse] = useState(isStory ? isStory.alt : false);\r\n\r\n  const [stories, setStories] = useState({\r\n    title: isStory ? isStory.title : \"\",\r\n    subtitle: isStory ? isStory.subtitle : \"\",\r\n    paragraph: isStory ? isStory.paragraph : \"\",\r\n  });\r\n\r\n  const { preview, selectedFile, onSelectedFile } = useUploadFile();\r\n\r\n  const [updateStory, { loading }] = useMutation(UPDATE_ABOUT_STORY, {\r\n    variables: {\r\n      ...stories,\r\n      photo: selectedFile,\r\n      alt: reverse,\r\n    },\r\n    onCompleted() {\r\n      setOpenStory(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeStory = (e) => {\r\n    setStories({ ...stories, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverse = () => {\r\n    setReverse(!reverse);\r\n  };\r\n\r\n  const handleSaveStory = () => {\r\n    updateStory();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenStory(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openStory} onClose={() => setOpenStory(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isStory.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isStory.photo}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={stories.title || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={stories.subtitle || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={stories.paragraph || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={reverse}\r\n                      checked={reverse === true ? true : false}\r\n                      onChange={handleReverse}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveStory}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_STORY = gql`\r\n  mutation updateStory(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateStory(\r\n      inputStory: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      _id\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalStory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\nimport ModalStory from \"./ModalStory\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isStory, setIsStory] = useState({});\r\n\r\n  const {\r\n    data: dataStoryContent,\r\n    loading: loadStoryContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataStoryContent) {\r\n      setIsStory(dataStoryContent.aboutUsCMS.story);\r\n    }\r\n  }, [dataStoryContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadStoryContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          mcenter\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768 ? \"column\" : isStory.alt ? \"row-reverse\" : \"row\"\r\n          }\r\n        >\r\n          <ModalStory isStory={dataStoryContent.aboutUsCMS.story} />\r\n\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isStory\r\n                    ? `/images/cms/about/${isStory.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"20px\"\r\n            style={{ maxHeight: \"90vh\" }}\r\n          >\r\n            <h3>{isStory.title}</h3>\r\n            {isStory.subtitle !== \"\" && <h4>{isStory.subtitle}</h4>}\r\n            <p\r\n              style={{\r\n                fontSize: \"15px\",\r\n                letterSpacing: \"2px\",\r\n                lineHeight: 1.8,\r\n                textAlign: \"justify\",\r\n                overflowWrap: \"break-word\",\r\n                overflow: \"auto\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              {isStory.paragraph}\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, Divider, TextArea } from \"semantic-ui-react\";\r\nimport { DImage, Content, DSection, DGrid } from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalMissionVision = ({ isMissionVision }) => {\r\n  const fileInputMV = useRef();\r\n  const [openMission, setOpenMission] = useState(false);\r\n  const [reverseMV, setReverseMV] = useState(\r\n    isMissionVision ? isMissionVision.alt : false\r\n  );\r\n\r\n  const [valuesMV, setValuesMV] = useState({\r\n    mtitle: isMissionVision ? isMissionVision.mission.title : \"\",\r\n    msubtitle: isMissionVision ? isMissionVision.mission.subtitle : \"\",\r\n    mparagraph: isMissionVision ? isMissionVision.mission.paragraph : \"\",\r\n    vtitle: isMissionVision ? isMissionVision.vision.title : \"\",\r\n    vsubtitle: isMissionVision ? isMissionVision.vision.subtitle : \"\",\r\n    vparagraph: isMissionVision ? isMissionVision.vision.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview: previewMV,\r\n    selectedFile: selectedFileMV,\r\n    onSelectedFile: onSelectedFileMV,\r\n  } = useUploadFile();\r\n\r\n  const [updateMission, { loading }] = useMutation(UPDATE_ABOUT_MISSIONVISION, {\r\n    variables: {\r\n      ...valuesMV,\r\n      photo: selectedFileMV,\r\n      alt: reverseMV,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_ABOUT_CMS, variables: { contentName: \"ABOUTUS\" } },\r\n    ],\r\n    onCompleted() {\r\n      setOpenMission(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClickMV = () => {\r\n    fileInputMV.current.click();\r\n  };\r\n\r\n  const handleChangeValues = (e) => {\r\n    setValuesMV({ ...valuesMV, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverseMV = () => {\r\n    setReverseMV(!reverseMV);\r\n  };\r\n\r\n  const handleSaveMV = () => {\r\n    updateMission();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        onClick={() => setOpenMission(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openMission} onClose={() => setOpenMission(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid two gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFileMV ? (\r\n                  <img src={previewMV} alt=\"showcase\" />\r\n                ) : (\r\n                  isMissionVision.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isMissionVision.photo}`}\r\n                      alt=\"about\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFileMV}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInputMV}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClickMV}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Divider horizontal>Mission</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"mtitle\"\r\n                  value={valuesMV.mtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"msubtitle\"\r\n                  value={valuesMV.msubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"mparagraph\"\r\n                  value={valuesMV.mparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Divider horizontal>Vision</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"vtitle\"\r\n                  value={valuesMV.vtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"vsubtitle\"\r\n                  value={valuesMV.vsubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"vparagraph\"\r\n                  value={valuesMV.vparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"reverse\"\r\n                      value={reverseMV}\r\n                      checked={reverseMV === true ? true : false}\r\n                      onChange={handleReverseMV}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveMV}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_MISSIONVISION = gql`\r\n  mutation updateMission(\r\n    $mtitle: String\r\n    $msubtitle: String\r\n    $mparagraph: String\r\n    $vtitle: String\r\n    $vsubtitle: String\r\n    $vparagraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateMission(\r\n      inputMissionVision: {\r\n        mtitle: $mtitle\r\n        msubtitle: $msubtitle\r\n        mparagraph: $mparagraph\r\n        vtitle: $vtitle\r\n        vsubtitle: $vsubtitle\r\n        vparagraph: $vparagraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalMissionVision;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport ModalMissionVision from \"./ModalMissionVision\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isMission, setIsMission] = useState({});\r\n\r\n  const { data: dataMissionVision, loading: loadMissionVision } = useQuery(\r\n    FETCH_ABOUT_CMS,\r\n    {\r\n      variables: {\r\n        contentName: \"ABOUTUS\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataMissionVision) {\r\n      setIsMission(dataMissionVision.aboutUsCMS.missionvision);\r\n    }\r\n  }, [dataMissionVision]);\r\n\r\n  return (\r\n    <>\r\n      {loadMissionVision ? (\r\n        <DSection\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          mcenter\r\n        >\r\n          <Skeleton width=\"50%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768\r\n              ? \"column\"\r\n              : isMission.alt === true\r\n              ? \"row-reverse\"\r\n              : \"row\"\r\n          }\r\n          margin=\"24px auto\"\r\n        >\r\n          <ModalMissionVision\r\n            isMissionVision={dataMissionVision.aboutUsCMS.missionvision}\r\n          />\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"24px\"\r\n          >\r\n            <h3>{isMission.mission && isMission.mission.title}</h3>\r\n            {isMission.mission && isMission.mission.subtitle !== \"\" && (\r\n              <h4>{isMission.mission.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.mission && isMission.mission.paragraph}</p>\r\n            <h3>{isMission.vision && isMission.vision.title}</h3>\r\n            {isMission.vision && isMission.vision.subtitle !== \"\" && (\r\n              <h4>{isMission.vision.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.vision && isMission.vision.paragraph}</p>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isMission.photo\r\n                    ? `/images/cms/about/${isMission.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n      s\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Heading from \"../../../components/admin/cms/about/Heading\";\r\nimport Story from \"../../../components/admin/cms/about/Story\";\r\nimport Mission from \"../../../components/admin/cms/about/Mission\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Layout>\r\n      <Content\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        margin=\"20px auto\"\r\n        align=\"center\"\r\n      >\r\n        <div>\r\n          <h3>Content Management</h3>\r\n        </div>\r\n        <div style={{ margin: \"0 1em\" }}>\r\n          <Icon name=\"angle right\" size=\"large\" fitted />\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to=\"/zeadmin/cms_about\"\r\n            style={{\r\n              fontSize: \"18px\",\r\n              fontWeight: 700,\r\n              borderBottom: \"2px solid\",\r\n              paddingBottom: \"5px\",\r\n            }}\r\n          >\r\n            About Us\r\n          </Link>\r\n        </div>\r\n      </Content>\r\n      <Heading />\r\n      <Mission />\r\n      <Story />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst ToggleView = ({ swid, tggl }) => {\r\n  const [toggleValue, setToggleValue] = useState(\"\");\r\n\r\n  const [toggleTestimonial, { loading: loadToggle }] = useMutation(\r\n    TOGGLE_REVIEW,\r\n    {\r\n      variables: {\r\n        id: toggleValue,\r\n      },\r\n      refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n    }\r\n  );\r\n\r\n  const hoverSwitch = (e) => {\r\n    setToggleValue(e.currentTarget.dataset.sid);\r\n  };\r\n\r\n  const handleSwitch = (e) => {\r\n    toggleTestimonial();\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      content=\"Switch on to display testimonial in Home Page\"\r\n      style={style.popContent}\r\n      inverted\r\n      trigger={\r\n        <div\r\n          className=\"pretty p-switch p-fill\"\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          {loadToggle ? (\r\n            <Spinner tiny />\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"checkbox\"\r\n                data-sid={swid}\r\n                checked={tggl === true ? true : false}\r\n                onMouseOver={hoverSwitch}\r\n                onChange={handleSwitch}\r\n              />\r\n              <div className=\"state p-success\">\r\n                <label></label>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID!) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n      view\r\n    }\r\n  }\r\n`;\r\n\r\nconst style = {\r\n  popContent: {\r\n    borderRadius: 0,\r\n    opacity: 0.7,\r\n    padding: \"2em\",\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default ToggleView;\r\n","import React, { useState } from \"react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\n\r\nconst ModalView = ({ ridd, open, setOpen }) => {\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Content>{ridd}</Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalView;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\n\r\nimport { Modal, Icon, Popup } from \"semantic-ui-react\";\r\nimport { Archive } from \"@styled-icons/boxicons-solid/Archive\";\r\nimport { DeleteForever } from \"@styled-icons/material/DeleteForever\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\n\r\nconst DeleteView = ({ ridd, rvw, isDltModal, setIsDltModal }) => {\r\n  const { width: wdth } = useWindowSize();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [archiveTestimonial, { loading: loadArchive }] = useMutation(\r\n    ARCHIVED_REVIEW,\r\n    {\r\n      variables: { id: ridd },\r\n      refetchQueries: [\r\n        { query: FETCH_TESTIMONIALS, variables: { active: true } },\r\n      ],\r\n      onCompleted() {\r\n        toaster.notify(\"Testimonial was sent to archive files\");\r\n      },\r\n      onError(err) {\r\n        if (err.graphQLErrors[0].extensions.exception.errors.unauth) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted alert onClick={onClose}>\r\n                {err.graphQLErrors[0].extensions.exception.errors.unauth}\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleArchive = () => {\r\n    archiveTestimonial();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"small\"\r\n        basic\r\n        closeIcon\r\n        onClose={() => setIsDltModal(false)}\r\n        open={isDltModal}\r\n        style={{ zIndex: 9 }}\r\n      >\r\n        <Modal.Header>\r\n          <Archive size=\"22px\" /> Archived this User's Review?\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <h3>\r\n            Name: {rvw.user.firstName} {rvw.user.firstName}\r\n          </h3>\r\n          <h4>Message:</h4>\r\n          <p style={{ textIndent: \"1em\" }}>\r\n            <strong>{rvw.message}</strong>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            width={wdth <= 768 ? \"100%\" : \"90%\"}\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <Content width=\"auto\">\r\n              <Popup\r\n                content=\"Deleting will permanently erase this review\"\r\n                trigger={\r\n                  <DButton alert style={{ fontSize: \"12px\" }}>\r\n                    <DeleteForever size=\"22px\" /> Delete Permanently\r\n                  </DButton>\r\n                }\r\n                inverted\r\n              />\r\n            </Content>\r\n            <Content width=\"auto\" flex justify=\"space-around\" align=\"center\">\r\n              <DButton confirm onClick={handleArchive} basic>\r\n                {loadArchive ? (\r\n                  <Spinner inverted small />\r\n                ) : (\r\n                  <>\r\n                    <Icon name=\"check\" /> Yes\r\n                  </>\r\n                )}\r\n              </DButton>\r\n\r\n              <DButton alert onClick={() => setIsDltModal(false)} basic>\r\n                <Icon name=\"ban\" /> No\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ARCHIVED_REVIEW = gql`\r\n  mutation archiveTestimonial($id: ID!) {\r\n    archiveTestimonial(_id: $id)\r\n  }\r\n`;\r\n\r\nexport default DeleteView;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { DotsVertical } from \"../../../components/styled/utils\";\r\nimport { Popup, Grid, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport ModalView from \"../../../components/admin/testimonial/ModalView\";\r\nimport DeleteView from \"../../../components/admin/testimonial/DeleteView\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nconst MenuView = ({ menuId, review }) => {\r\n  const [menuValue, setMenuValue] = useState(\"\");\r\n  const [isDltModal, setIsDltModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const handleMenu = (e) => {\r\n    setMenuValue(e.currentTarget.dataset.rid);\r\n  };\r\n\r\n  const modalDeleteShow = () => {\r\n    setIsDltModal(true);\r\n  };\r\n\r\n  console.log(employeeAuth);\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        on=\"click\"\r\n        trigger={\r\n          <DotsVertical\r\n            size=\"24px\"\r\n            data-rid={menuId}\r\n            onMouseOver={handleMenu}\r\n          />\r\n        }\r\n        flowing\r\n        position=\"top right\"\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Grid\r\n          centered\r\n          divided\r\n          columns={\r\n            employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3 ? 2 : 1\r\n          }\r\n        >\r\n          {(employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3) && (\r\n            <Grid.Column textAlign=\"center\">\r\n              <DButton alert>\r\n                <Icon name=\"trash\" fitted onClick={modalDeleteShow} />\r\n              </DButton>\r\n            </Grid.Column>\r\n          )}\r\n\r\n          <Grid.Column>\r\n            <DButton confirm onClick={() => setOpen(true)}>\r\n              <Icon name=\"eye\" fitted />\r\n            </DButton>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Popup>\r\n\r\n      <DeleteView\r\n        ridd={menuValue}\r\n        rvw={review}\r\n        setIsDltModal={setIsDltModal}\r\n        isDltModal={isDltModal}\r\n      />\r\n      <ModalView ridd={menuValue} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\nimport { IconWrap } from \"../../../components/styled/utils\";\r\nimport { ChevronRight } from \"@styled-icons/boxicons-solid/ChevronRight\";\r\nimport ToggleView from \"../../../components/admin/testimonial/ToggleView\";\r\nimport MenuView from \"../../../components/admin/testimonial/MenuView\";\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nconst Testimonial = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const {\r\n    data: dataReviews,\r\n    loading: loadReviews,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonials);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: (row) => <ToggleView swid={row._id} tggl={row.view} />,\r\n      width: \"80px\",\r\n      button: true,\r\n      style: {\r\n        borderBottom: \"1px solid #FFFFFF\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"user.lastName\",\r\n      sortable: true,\r\n      format: (row) => `${row.user.firstName} ${row.user.lastName}`,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => <MenuView menuId={row._id} review={row} />,\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        mcenter\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          margin=\"20px auto\"\r\n          align=\"center\"\r\n        >\r\n          <div>\r\n            <h3>Content Management</h3>\r\n          </div>\r\n          <div style={{ margin: \"0 5px\" }}>\r\n            <IconWrap size=\"22px\" color=\"dark\">\r\n              <ChevronRight />\r\n            </IconWrap>\r\n          </div>\r\n          <div>\r\n            <Link\r\n              to=\"/zeadmin/cms_testimonial\"\r\n              style={{\r\n                fontSize: \"18px\",\r\n                fontWeight: 700,\r\n                borderBottom: \"2px solid\",\r\n                paddingBottom: \"5px\",\r\n              }}\r\n            >\r\n              Testimonials\r\n            </Link>\r\n          </div>\r\n        </Content>\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            columns={columns}\r\n            data={reviews.map((rev) => rev)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loadReviews}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Testimonial;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERIES } from \"../../../../util/graphql/gallery\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DInput } from \"../../../styled/utils\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport Toasted from \"../../../Toasted\";\r\n\r\nconst NewAlbum = () => {\r\n  const [albumOpen, setAlbumOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const [newAlbum, { loading: loadNewAlbum }] = useMutation(NEW_ALBUM, {\r\n    variables: {\r\n      title,\r\n    },\r\n    refetchQueries: [{ query: FETCH_GALLERIES, variables: { active: true } }],\r\n    onCompleted() {\r\n      setAlbumOpen(false);\r\n      setTitle(\"\");\r\n      toaster.notify(\r\n        ({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            New Album Added\r\n          </Toasted>\r\n        ),\r\n        { position: \"bottom-right\" }\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleTitle = (e) => {\r\n    setTitle(e.currentTarget.value);\r\n  };\r\n\r\n  const handleNewAlbum = (e) => {\r\n    e.preventDefault();\r\n    newAlbum();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton flex onClick={() => setAlbumOpen(true)}>\r\n        <Plus size=\"22px\" />\r\n        New album\r\n      </DButton>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={albumOpen}\r\n        onClose={() => setAlbumOpen(false)}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>New Album</Modal.Header>\r\n        <Modal.Content>\r\n          <DInput\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleTitle}\r\n            fluid\r\n            placeholder=\"Album Title\"\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAlbum}>\r\n            {loadNewAlbum ? (\r\n              <Spinner small inverted row content=\"Loading...\" />\r\n            ) : (\r\n              \"Save\"\r\n            )}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_ALBUM = gql`\r\n  mutation addGallery($title: String) {\r\n    addGallery(title: $title) {\r\n      _id\r\n      title\r\n      active\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewAlbum;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERIES } from \"../../../util/graphql/gallery\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport GalleryThumb from \"../../../components/GalleryThumb\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport NewAlbum from \"../../../components/admin/cms/gallery/NewAlbum\";\r\nimport ImageSelected from \"../../../components/ImageSelected\";\r\n\r\nconst Gallery = () => {\r\n  let allPhotos = [];\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const [galleries, setGalleries] = useState([]);\r\n\r\n  const {\r\n    data: dataGalleries,\r\n    loading: loadGalleries,\r\n    error,\r\n  } = useQuery(FETCH_GALLERIES, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataGalleries) {\r\n      setGalleries(dataGalleries.galleries);\r\n    }\r\n  }, [dataGalleries]);\r\n\r\n  const imageRenderer = useCallback(\r\n    ({ index, left, top, key, photo }) => (\r\n      <ImageSelected\r\n        key={key}\r\n        index={index}\r\n        photo={photo}\r\n        left={left}\r\n        top={top}\r\n        setCurrentImage={setCurrentImage}\r\n        setViewerIsOpen={setViewerIsOpen}\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const columns = (containerWidth) => {\r\n    let columns = 2;\r\n    if (containerWidth >= 500) columns = 2;\r\n    if (containerWidth >= 900) columns = 3;\r\n    if (containerWidth >= 1500) columns = 4;\r\n    return columns;\r\n  };\r\n\r\n  if (galleries) {\r\n    galleries.map((g) => allPhotos.push(...g.photos));\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        minh=\"90vh\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n          bgcolor=\"#eee\"\r\n          rounded\r\n          pad=\"10px\"\r\n          height=\"5em\"\r\n        >\r\n          <Breadcrumb size=\"big\">\r\n            <Breadcrumb.Section>Content Management</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section active>Gallery</Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <NewAlbum />\r\n        </Content>\r\n\r\n        {loadGalleries ? (\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            minh=\"50vh\"\r\n            width=\"100%\"\r\n            margin=\"0 auto\"\r\n          >\r\n            <Spinner content=\"Please wait while we fetch data...\" medium />\r\n          </Content>\r\n        ) : (\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            align=\"center\"\r\n            margin=\"0 auto\"\r\n            flow=\"row wrap\"\r\n          >\r\n            {galleries.length > 0 ? (\r\n              galleries.map((gallery) => (\r\n                <GalleryThumb\r\n                  key={gallery._id}\r\n                  background={\r\n                    gallery.photos.length > 0\r\n                      ? `/images/gallery/${gallery.photos[0].src}`\r\n                      : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  title={`${gallery.title} Photos`}\r\n                  subtitle={`${gallery.photos.length}${\r\n                    gallery.photos.length > 20 ? \"+\" : \"\"\r\n                  } ${gallery.title} Photo${\r\n                    gallery.photos.length > 1 ? \"s\" : \"\"\r\n                  }`}\r\n                  link={`/zeadmin/album/${gallery._id}`}\r\n                />\r\n              ))\r\n            ) : (\r\n              <h3\r\n                style={{\r\n                  height: \"50vh\",\r\n                  width: \"100%\",\r\n                  margin: \"0 auto\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                Add new album\r\n              </h3>\r\n            )}\r\n          </Content>\r\n        )}\r\n\r\n        <div style={{ width: \"100%\", marginBottom: \"36px\" }}>\r\n          <h3>All Photos</h3>\r\n\r\n          <MyGallery\r\n            photos={allPhotos.map((photo) => ({\r\n              height: photo.height,\r\n              width: photo.width,\r\n              src: `/images/gallery/${photo.src}`,\r\n              alt: photo.src,\r\n              id: photo._id,\r\n              key: photo._id,\r\n            }))}\r\n            renderImage={imageRenderer}\r\n            columns={columns}\r\n            directions=\"column\"\r\n          />\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel\r\n                  currentIndex={currentImage}\r\n                  views={allPhotos.map((photo) => ({\r\n                    ...photo,\r\n                    src: `/images/gallery/${photo.src}`,\r\n                    caption:\r\n                      photo.caption !== null\r\n                        ? `${photo.name} - ${photo.caption}`\r\n                        : photo.name,\r\n                    alt: photo.src,\r\n                  }))}\r\n                />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </div>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERY } from \"../../../../util/graphql/gallery\";\r\nimport { Content } from \"../../../styled/containers\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport Toasted from \"../../../Toasted\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst NewPhotoDrop = ({ albumId }) => {\r\n  const [addGalleryPhoto, { loading }] = useMutation(ADD_PHOTOS, {\r\n    refetchQueries: [\r\n      { query: FETCH_GALLERY, variables: { id: albumId, active: true } },\r\n    ],\r\n    onCompleted() {\r\n      toaster.notify(\r\n        ({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Upload Success\r\n          </Toasted>\r\n        ),\r\n        { position: \"bottom-right\" }\r\n      );\r\n    },\r\n  });\r\n\r\n  // DROPZONE\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      acceptedFiles.forEach((file) => {\r\n        addGalleryPhoto({ variables: { id: albumId, image: file } });\r\n        const reader = new FileReader();\r\n\r\n        reader.onabort = () => console.log(\"file reading was aborted\");\r\n        reader.onerror = () => console.log(\"file reading has failed\");\r\n        reader.onload = () => {\r\n          // Do whatever you want with the file contents\r\n          const binaryStr = reader.result;\r\n          console.log(binaryStr);\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n      });\r\n    },\r\n    [addGalleryPhoto]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"100px\"\r\n      rounded\r\n      margin=\"24px auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      style={{\r\n        border: \"2px dashed #D3CCE3\",\r\n        outline: \"none\",\r\n        cursor: \"pointer\",\r\n        color: \"#D3CCE3\",\r\n      }}\r\n      {...getRootProps({ className: \"dropzone\" })}\r\n    >\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p style={{ fontSize: \"18px\", fontWeight: 700 }}>\r\n          Drop the files here ...\r\n        </p>\r\n      ) : (\r\n        <p style={{ fontSize: \"18px\" }}>\r\n          Drag 'n' drop some files here, or click to select files\r\n        </p>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst ADD_PHOTOS = gql`\r\n  mutation addGalleryPhoto($id: ID!, $image: [Upload]) {\r\n    addGalleryPhoto(_id: $id, image: $image) {\r\n      _id\r\n      title\r\n      active\r\n      photos {\r\n        _id\r\n        name\r\n        caption\r\n        src\r\n        height\r\n        width\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewPhotoDrop;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERY } from \"../../../util/graphql/gallery\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\nimport { DButton, DInput } from \"../../../components/styled/utils\";\r\nimport { Breadcrumb, Modal } from \"semantic-ui-react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal as ModalImage, ModalGateway } from \"react-images\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport ImageSelected from \"../../../components/ImageSelected\";\r\nimport NewPhotoDrop from \"../../../components/admin/cms/gallery/NewPhotoDrop\";\r\n\r\nconst Album = (props) => {\r\n  const albumId = props.match.params._id;\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const [albumPhotos, setAlbumPhotos] = useState([]);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data: dataGallery, loading: loadGallery } = useQuery(FETCH_GALLERY, {\r\n    variables: { id: albumId, active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataGallery) {\r\n      setAlbumPhotos(dataGallery.gallery.photos);\r\n    }\r\n  }, [dataGallery]);\r\n\r\n  const imageRenderer = useCallback(\r\n    ({ index, left, top, key, photo }) => (\r\n      <ImageSelected\r\n        key={key}\r\n        index={index}\r\n        photo={photo}\r\n        left={left}\r\n        top={top}\r\n        menu={true}\r\n        grayscale={true}\r\n        setCurrentImage={setCurrentImage}\r\n        setViewerIsOpen={setViewerIsOpen}\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  // Close Lightbox\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const columns = (containerWidth) => {\r\n    let columns = 2;\r\n    if (containerWidth >= 500) columns = 2;\r\n    if (containerWidth >= 900) columns = 3;\r\n    if (containerWidth >= 1500) columns = 4;\r\n    return columns;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        minh=\"90vh\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n          bgcolor=\"#eee\"\r\n          rounded\r\n          pad=\"10px\"\r\n          height=\"5em\"\r\n        >\r\n          <Breadcrumb size=\"big\">\r\n            <Breadcrumb.Section>Content Management</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>Gallery</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section active>\r\n              {dataGallery && dataGallery.gallery.title} Photos\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <Content flex justify=\"flex-end\" align=\"center\" width=\"100%\">\r\n          <NewPhotoDrop albumId={albumId} />\r\n        </Content>\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            marginBottom: \"24px\",\r\n          }}\r\n        >\r\n          <MyGallery\r\n            photos={albumPhotos.map((photo) => ({\r\n              height: photo.height,\r\n              width: photo.width,\r\n              src: `/images/gallery/${photo.src}`,\r\n              alt: photo.src,\r\n              id: photo._id,\r\n              key: photo._id,\r\n            }))}\r\n            renderImage={imageRenderer}\r\n            columns={wid >= 500 ? 2 : wid >= 900 ? 3 : wid >= 1500 ? 4 : 2}\r\n            directions=\"column\"\r\n          />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <ModalImage\r\n                onClose={closeLightbox}\r\n                styles={{\r\n                  blanket: (base) => ({\r\n                    ...base,\r\n                    backgroundColor: \"rgba(0,0,0,0.9)\",\r\n                  }),\r\n                  positioner: (base) => ({\r\n                    ...base,\r\n                    display: \"block\",\r\n                  }),\r\n                }}\r\n              >\r\n                <Carousel\r\n                  styles={customStyles}\r\n                  currentIndex={currentImage}\r\n                  views={albumPhotos.map((photo) => ({\r\n                    ...photo,\r\n                    src: `/images/gallery/${photo.src}`,\r\n                    caption:\r\n                      photo.caption !== null\r\n                        ? `${photo.name} - ${photo.caption}`\r\n                        : photo.name,\r\n                    alt: photo.src,\r\n                  }))}\r\n                />\r\n              </ModalImage>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </div>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  footer: (base) => ({\r\n    ...base,\r\n    backgroundColor: \"rgba(255,255,255,0.7)\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    padding: 20,\r\n  }),\r\n};\r\n\r\nexport default Album;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport PrintProvider, { NoPrint } from \"react-easy-print\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport About from \"./admin/cms/About\";\r\nimport Testimonial from \"./admin/cms/Testimonial\";\r\nimport Gallery from \"./admin/cms/Gallery\";\r\nimport Album from \"./admin/cms/Album\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <PrintProvider>\r\n      <NoPrint>\r\n        <Switch>\r\n          <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n\r\n          <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n          <Redirect from=\"/zeadmin\" to=\"/zeadmin/dashboard\" exact />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/appointment/:_id\"\r\n            component={AppointmentDetails}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/appointments\"\r\n            component={Appointments}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/paccount\"\r\n            component={PersonalAccount}\r\n          />\r\n          <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/userInfo/:_id\"\r\n            component={UserInfo}\r\n          />\r\n          <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/new_appointment\"\r\n            component={NewAppointment}\r\n          />\r\n\r\n          <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/employee/:_id\"\r\n            component={Employee}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/categories\"\r\n            component={Categories}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/category/:_id\"\r\n            component={Category}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/service/:_id\"\r\n            component={Service}\r\n          />\r\n          <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n          <PrivateRoute exact path=\"/zeadmin/cms_about\" component={About} />\r\n          <PrivateRoute exact path=\"/zeadmin/cms_gallery\" component={Gallery} />\r\n          <PrivateRoute exact path=\"/zeadmin/album/:_id\" component={Album} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/cms_testimonial\"\r\n            component={Testimonial}\r\n          />\r\n          <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n          <Route component={Page404} />\r\n        </Switch>\r\n      </NoPrint>\r\n    </PrintProvider>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  grey: \"#D3CCE3\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\",\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Main from \"./pages/Main\";\r\nimport Admin from \"./pages/Admin\";\r\nimport Page404 from \"./pages/Page404\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./components/theme\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Switch>\r\n            {/* <Redirect from=\"/\" to=\"/zessence\" exact /> */}\r\n            <Route path=\"/zeadmin\" component={Admin} />\r\n            <Route path=\"/\" component={Main} />\r\n\r\n            <Route component={Page404} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`,\r\n      },\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ApolloProvider from \"./ApolloProvider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"toasted-notes/src/styles.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\r\nimport \"./css/slick-theme.custom.css\";\r\nimport \"./css/slick.custom.css\";\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}