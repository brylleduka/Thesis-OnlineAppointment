{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","components/main/navigation/Navigation.js","components/styled/containers.js","components/main/home/Showcase.js","components/main/home/CategoryCards.js","components/main/home/Team.js","components/main/home/Section2.js","components/main/home/Section3.js","pages/main/Home.js","pages/main/About.js","util/hooks.js","components/styled/utils.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","util/graphql/employee.js","util/graphql/service.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/styled/loader.js","components/Spinner.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountDetails.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/styled/skeleton.js","components/Skeleton.js","pages/main/MyAccount.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","components/main/user/AppointmentCancel.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/Accordion.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/HistoryAppointments.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","DMenu","ul","theme","secondary","DMainMenu","primary","blue","open","dark","DRightMenu","DBurger","Burger","setOpen","onClick","Navigation","ref","handler","node","useRef","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","history","useHistory","useContext","trigger","style","fontSize","Icon","name","firstName","console","log","className","src","alt","to","Dropdown","Menu","Item","userId","_id","push","columns","rows","DContainer","div","DShowCase","header","height","background","bgcolor","Overlay","bg","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","DCard","imgHeight","DSection","width","fixed","Content","fluid","rounded","imgWidth","DImage","m","DFooterLinks","DFooter","footer","Showcase","CategoryCards","cards","Team","Section2","Section3","Home","card1","About","useForm","callback","useState","values","setValues","handleChange","handleSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","ripple","keyframes","DButton","button","fSize","size","text","border","basic","color","light","DButtonCancel","red","DButtonConfirm","green","DLabel","label","ls","weight","tt","hover","NavItem","bluer","DAccordion","fs","uc","lc","Toasted","status","REGISTER_USER","gql","SignupForm","hist","from","errors","setErrors","register","lastName","email","password","confirmPassword","useMutation","update","onError","err","graphQLErrors","extensions","exception","variables","loading","Form","noValidate","onSubmit","Group","widths","Field","error","Label","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","LOGIN_USER","SigninForm","context","_","data","userLogin","refetchQueries","query","onCompleted","result","loginUser","userX","general","Signin","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","as","timeSlot","startTimeMoment","i","add","format","styles","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","handleTimeChanged","useQuery","employeeId","data_employee","loading_employee","serviceId","data_service","date","toLocaleDateString","data_appointments","workStart","employee","schedule","breakStart","day","map","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","key","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","loading_categories","data_categories","useLazyQuery","categoryId","category","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","padding","e","categories","cursor","position","outline","visibility","textAlign","services","employees","servEmp","keyring","SpinnerRing","small","medium","inverted","Spinner","large","CREATE_NEW_APPOINTMENT","diplay","justifyContent","alignItems","Confirmation","selectedTime","addInfo","setAddInfo","cache","readQuery","newAppointment","createAppointment","writeQuery","myAppointments","toaster","notify","onClose","expiredLog","check","start","message","Modal","Header","readOnly","title","toDateString","Actions","Appointment","setCategories","setService","setServiceEmp","disabled","VERRIFIED_APPOINTMENT","ThankYou","emailToken","params","go","appointmentId","verifiedAppointment","onload","Link","VerifyNotice","FETCH_USER_ACCOUNT","UPDATE_USER","AccountDetails","myDetails","updateUser","contact","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","CurrentAppointment","currentAppointData","currentAppointLoading","selector","sortable","wrap","row","parseInt","cell","myCurrentAppointment","currentAppoint","responsive","highlightOnHover","pointerOnHover","pagination","paginationRowsPerPageOptions","MyAppointmentHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","historyAppoint","paginationPerPage","placeholderAnimate","DSkeleton","wid","Skeleton","UPLOAD_USER_PHOTO","MyAccount","userInfo","userLoading","addUserPhoto","onDrop","useCallback","file","useDropzone","getRootProps","getInputProps","isDragActive","photo","AdminAuthRoute","Component","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","CANCEL_APPOINTMENT_MUTATION","AppointmentCancel","invalidCancellation","cancelAppointment","field","display","jusitfyContent","input","AppointmentDetails","setMyAppoint","appointment","margn","jusitfy","goBack","Main","path","exact","UpcommingAppointments","appointments","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","marginLeft","Accordion","setActive","contentRef","maxHeight","scrollHeight","icon","children","SideNav","activeClassName","Layout","Dashboard","setAppointments","setpercentage","chartData","setChartData","labels","datasets","borderColor","borderWidth","options","scales","xAxes","gridLines","yAxes","legend","CurrentAppointments","setCurrentAppointments","currentAppointmentData","currentAppointments","currAppoint","HistoryAppointments","setHistoryAppointments","historyAppointmentData","appointmentHistory","histAppoint","Appointments","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","role","workLength","breakLength","newEmployee","aestheticiansReceps","Checkbox","class","Employees","setEmployeesAR","data_employeesAR","loading_employeesAR","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","bio","content","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","setServices","dataCategory","loadingCategory","addService","flexDirection","close","EmployeeServices","overflow","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","borderBottom","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","description","newCategory","Categories","html","DOMParser","parseFromString","documentElement","textContent","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","price","newService","serviceExist","ServiceList","progressComponent","UPLOAD_CATEGORY_PHOTO","Category","setCategory","dataLoading","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","Service","serviceData","serviceLoading","addServicePhoto","replace","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","letterSpacing","Admin","yellow","App","uploadLink","createUploadLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.07a89913.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: #fff;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 12vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 17px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      // flex-direction: column;\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n  }\r\n\r\n  li a:hover,\r\n  &.active {\r\n    border-bottom: 2px solid ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.primary};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.blue};\r\n    transform: ${({ open }) =>\r\n      open ? \"skewX(-15deg) translateX(0%)\" : \"translateX(100%)\"};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \"skewX(15deg) translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.dark};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { DNavigation, DMainMenu, DRightMenu } from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  let history = useHistory();\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/zessence\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user ? (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      ) : (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, User\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  console.log(user);\r\n\r\n  return (\r\n    <DNavigation ref={node}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open}>\r\n          <li>\r\n            <Link to=\"/zessence\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/services&rates\">Services & Rates</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/about\">About Us</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/testimonials\">Testimonials</Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>\r\n                    <Link to={`/zessence/myaccount/${user.userId || user._id}`}>\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 90%;\r\n  max-width: 90%;\r\n  margin: auto;\r\n`;\r\n\r\nexport const DShowCase = styled.header`\r\n  width: 100%;\r\n  height: ${props => (props.height ? props.height : \"90vh\")};\r\n  position: relative;\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  margin-top: 10vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding-bottom: 50px;\r\n  margin-bottom: 20px;\r\n\r\n  h2,\r\n  p {\r\n    margin-bottom: 10px;\r\n  }\r\n  .btn {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${props => (props.bg ? props.bg : \"rgba(0, 0, 0, 0.15)\")};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  padding: ${props => props.pad && props.pad};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  opacity: ${props => props.opac && props.opac};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hovOpac && props.hovOpac};\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: ${props =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${props => props.gap && props.gap};\r\n  grid-template-rows: ${props =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${props => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${props => (props.circle ? \"40% 40% 10px 10px\" : \"20px\")};\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 300px;\r\n      object-fit: cover;\r\n      border-radius: ${props => (props.circle ? \"50%\" : \"20px\")};\r\n    }\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n    0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n    0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n  img {\r\n    width: 100%;\r\n    height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    object-fit: cover;\r\n    border-radius: inherit;\r\n  }\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${props => (props.height ? props.height : \"400px\")};\r\n  width:  ${props => (props.width ? props.width : \"100%\")};;\r\n  margin: ${props => props.margin && props.margin};\r\n  padding: ${props => props.pad && props.pad};\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${props => props.fixed && \"fixed\"};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  position: relative;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${props => props.height && props.height};\r\n  width: ${props => (props.width ? props.width : props.fluid ? \"100%\" : \"50%\")};\r\n  padding: ${props => props.pad && props.pad};\r\n\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${props => props.margin && props.margin};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  z-index: 2;\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n  p {\r\n    margin: 10px 0 20px;\r\n  }\r\n\r\n  img {\r\n    max-height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${props => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${props => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${props => (props.height ? props.height : \"300px\")};\r\n  width: ${props => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${props =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  margin: ${props => props.m && props.m};\r\n\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\n\r\nconst Showcase = () => {\r\n  return (\r\n    <DShowCase\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2>Surface</h2>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam,\r\n        doloribus.\r\n      </p>\r\n      <Link to=\"/zessence\" className=\"btn\">\r\n        Book Appointment\r\n      </Link>\r\n      <Overlay />\r\n    </DShowCase>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DImage } from \"../../styled/containers\";\r\n\r\nconst CategoryCards = ({ cards }) => {\r\n  return (\r\n    <>\r\n      <h1>Our Services</h1>\r\n      <DGrid four margin=\"0 0 40px 0\" gap=\"20px\" circle>\r\n        <div className=\"card-content\">\r\n          <DImage circle height=\"300px\" m=\"3% 0\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"card 1\"\r\n            />\r\n          </DImage>\r\n          <div className=\"card-details\">\r\n            <h3>Facial Treatment</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <DImage circle height=\"300px\" m=\"0 0 2% 0\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"card 1\"\r\n            />\r\n          </DImage>\r\n\r\n          <div className=\"card-details\">\r\n            <h3>Diamond Peeling</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <DImage circle height=\"300px\" m=\"3% 0\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"card 1\"\r\n            />\r\n          </DImage>\r\n          <div className=\"card-details\">\r\n            <h3>Body Treatment</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <DImage circle height=\"300px\" m=\"3% 0\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"card 1\"\r\n            />\r\n          </DImage>\r\n          <div className=\"card-details\">\r\n            <h3>Permanent Makeup</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid } from \"../../styled/containers\";\r\n\r\nconst Team = ({ cards }) => {\r\n  return (\r\n    <>\r\n      <h1>Our Team</h1>\r\n      <DGrid four margin=\"40px 0 40px 0\" gap=\"20px\">\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"card 1\"\r\n          />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section2 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      pad=\"100px 0 0 30px\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategoryCards from \"../../components/main/home/CategoryCards\";\r\nimport Team from \"../../components/main/home/Team\";\r\nimport Section2 from \"../../components/main/home/Section2\";\r\nimport Section3 from \"../../components/main/home/Section3\";\r\n\r\nimport { DContainer } from \"../../components/styled/containers\";\r\n\r\nconst Home = () => {\r\n  const card1 = \"/images/card1.jpg\";\r\n  return (\r\n    <DContainer>\r\n      {/* SHOWCASE */}\r\n\r\n      <Showcase />\r\n      {/* Home Cards 1 */}\r\n      <CategoryCards cards={card1} />\r\n\r\n      {/* SECTION 2 */}\r\n      <Section2 />\r\n\r\n      {/* Home Cards 2 */}\r\n      <Team cards={card1} />\r\n      {/* Carbon */}\r\n      <Section3 />\r\n      <section className=\"follow\">\r\n        <p>Follow Z Essence</p>\r\n        <Link to=\"/\">\r\n          <h4>Facebook</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>Twitter</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>LinkedIn</h4>\r\n        </Link>\r\n      </section>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <DContainer>\r\n      <DSection bgcolor=\"#d3d3d3\" height=\"100vh\" push>\r\n        <Content flex justify=\"center\" align=\"center\" fluid height=\"100%\">\r\n          <h3>Hello</h3>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${props => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${props => (props.size ? props.size : \"36px\")};\r\n  width: ${props =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: 6px 16px;\r\n  line-height: 1.42857143;\r\n  margin: 1.5%;\r\n  text-align: center;\r\n  text-transform: ${props => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #1CA7EC\"\r\n      : \"0\"};\r\n\r\n  border-radius: 5px;\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.blue};\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.blue)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.blue}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonCancel = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.red};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #f12711\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.red)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n`;\r\n\r\nexport const DButtonConfirm = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.green};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #0f9b0f\"\r\n      : props.basic\r\n      ? \"2px solid #0f9b0f\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n`;\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${props => (props.size ? props.size : \"12px\")};\r\n  color: ${props => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${props => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${props => props.weight && props.weight};\r\n  padding: ${props => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${props => (props.m ? props.m : \"1%\")};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  text-transform: ${props => props.tt && props.tt};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hover && \"0.8\"};\r\n    cursor: ${props => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${props => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${props => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${props => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${props => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${props =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.6s ease;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${props =>\r\n    props.status === \"error\"\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.status === \"success\"\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.status === \"warning\"\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(69, 170, 242,1.0)\"};\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .close {\r\n    height: 100%;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signin\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/signin\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DGrid two className=\"signup-custom\">\r\n      <DSection height=\"100%\" flex justify=\"center\" align=\"center\" width=\"100%\">\r\n        <SignupForm from={from} hist={hist} />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        margin=\"0\"\r\n        background={\r\n          \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n          <h2>Sign Up</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n            magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n            est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n            repudiandae tempore alias ratione.\r\n          </p>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n    \r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted(result) {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      console.log(err);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport { DGrid, Content, DSection } from \"../../components/styled/containers\";\r\n\r\nconst Signin = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/appointment\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DGrid two className=\"signin-custom\">\r\n      <DSection\r\n        height=\"100vh\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        margin=\"0\"\r\n        background={\r\n          \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"signin-left\"\r\n      >\r\n        <Content width=\"90%\">\r\n          <h2>Sign In</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n            magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n            est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n            repudiandae tempore alias ratione.\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100vh\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        className=\"signin-right\"\r\n      >\r\n        <SigninForm from={from} hist={hist} />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps {\r\n    aestheticiansReceps {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two>\r\n      <Content\r\n        height=\"70vh\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        pad=\"0\"\r\n      >\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid three gap=\"20px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"80vh\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n  height: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    height: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    margin: ${props => (props.small ? \"3px\" : props.medium ? \"6px\" : \"8px\")};\r\n    border: ${props =>\r\n      props.small\r\n        ? \"3px solid #fff\"\r\n        : props.medium\r\n        ? \"6px solid #fff\"\r\n        : \"8px  solid #fff\"};\r\n\r\n    border-radius: 50%;\r\n    animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: ${props =>\r\n      props.inverted\r\n        ? \"#fff transparent transparent transparent\"\r\n        : \" #000 transparent transparent transparent\"};\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = ({ small, large, medium, inverted }) => {\r\n  return (\r\n    <SpinnerRing\r\n      small={small}\r\n      large={large}\r\n      medium={medium}\r\n      inverted={inverted}\r\n    >\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/zessence/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.name}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      ></DSection>\r\n      <DSection height=\"100%\" pad=\"0 20px\">\r\n        <DGrid custom=\"500px 1fr\">\r\n          <AppointmentInputs\r\n            user={user}\r\n            values={values}\r\n            setValues={setValues}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n          />\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DGrid>\r\n              <AppointDate\r\n                setStartDate={setStartDate}\r\n                setSelectedTime={setSelectedTime}\r\n                selectedTime={selectedTime}\r\n                startDate={startDate}\r\n                employeeVal={employeeVal}\r\n                serviceValue={serviceValue}\r\n              />\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DButton\r\n                  size=\"50px\"\r\n                  onClick={() => setOpen(true)}\r\n                  basic={\r\n                    (values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\") &&\r\n                    true\r\n                  }\r\n                  disabled={\r\n                    values.category === \"\" ||\r\n                    serviceValue === \"\" ||\r\n                    employeeVal === \"\" ||\r\n                    selectedTime === \"\"\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  Book an Appointment\r\n                </DButton>\r\n                <Confirmation\r\n                  open={open}\r\n                  setOpen={setOpen}\r\n                  serviceValue={serviceValue}\r\n                  employeeVal={employeeVal}\r\n                  startDate={startDate}\r\n                  selectedTime={selectedTime}\r\n                />\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} to=\"/zessence/MyAccount\" basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DShowCase\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT };\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport {useMutation } from \"@apollo/react-hooks\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountDetails = ({ myDetails, userId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const { handleChange, handleSubmit, values } = useForm(updateUserCallBack, {\r\n    firstName: myDetails.firstName,\r\n    lastName: myDetails.lastName,\r\n    email: myDetails.email,\r\n    contact: myDetails.contact\r\n  });\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  function updateUserCallBack() {\r\n    updateUser();\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      flex\r\n      align=\"flex-start\"\r\n      justify=\"flex-start\"\r\n      bgcolor=\"white\"\r\n      pad=\"20px\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>ID</DLabel>\r\n          <input value={userId} readOnly />\r\n        </Form.Field>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n            <input\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n            <input\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n          <input name=\"email\" value={values.email} onChange={handleChange} />\r\n        </Form.Field>\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Content flex justify=\"flex-end\" width=\"100%\">\r\n          <DButton type=\"submit\">\r\n            {loading ? <Spinner small inverted /> : \"Save\"}\r\n          </DButton>\r\n        </Content>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountDetails;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [currentAppoint, setCurrentAppoint] = useState([]);\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zessence/myappointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"50vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      bgcolor=\"#eee\"\r\n      width=\"100%\"\r\n      pad=\"10px\"\r\n      rounded\r\n    >\r\n      <DLabel size=\"16px\" tt=\"uppercase\" weight=\"700\" pad=\"10px 25px\" rounded>\r\n        My Appointment\r\n      </DLabel>\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  }\r\n};\r\n\r\n// const title = (\r\n\r\n// );\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zessence/myappointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"50vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      bgcolor=\"#eee\"\r\n      width=\"100%\"\r\n      pad=\"10px\"\r\n      rounded\r\n    >\r\n      <DLabel size=\"16px\" tt=\"uppercase\" weight=\"700\" pad=\"10px 25px\" rounded>\r\n        My Appointment History\r\n      </DLabel>\r\n      {appointHistoryLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={appointHistoryData.myAppointmentHistory.map(\r\n            historyAppoint => historyAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport AccountDetails from \"../../components/main/user/AccountDetails\";\r\nimport CurrentAppointment from \"../../components/main/user/CurrentAppointment\";\r\nimport MyAppointmentHistory from \"../../components/main/user/MyAppointmentHistory\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst MyAccount = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n  // const [account, setAccount] = useState({});\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (userInfo) {\r\n  //     setAccount(userInfo.user);\r\n  //   }\r\n  // }, [userInfo]);\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      margin=\"20vh auto 10vh auto\"\r\n      width=\"90%\"\r\n      pad=\"40px 50px\"\r\n      background={\r\n        \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Account</h2>\r\n      {userLoading ? (\r\n        <DSection height=\"70vh\">\r\n          <Skeleton />\r\n        </DSection>\r\n      ) : (\r\n        <DGrid gap=\"10px\">\r\n          <Content\r\n            height=\"50vh\"\r\n            flex\r\n            align=\"center\"\r\n            pad=\"10px 15px\"\r\n            bgcolor=\"#eee\"\r\n            width=\"100%\"\r\n            rounded\r\n          >\r\n            <DGrid custom=\"30% 1fr\" gap=\"20px\">\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h4>Drop Image</h4>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          userInfo.user.photo !== null\r\n                            ? `/images/users/${userInfo.user.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n\r\n              <AccountDetails myDetails={userInfo.user} userId={userId} />\r\n            </DGrid>\r\n          </Content>\r\n          <CurrentAppointment />\r\n          <MyAppointmentHistory />\r\n        </DGrid>\r\n      )}\r\n      <Overlay bg=\"rgba(rgba(52, 152, 219,0.3))\" />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default MyAccount;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Redirect to=\"/zessence\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zessence/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ open, setOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel your appointment?</h2>\r\n        <p>Cancellation may result your appointment process in the future</p>\r\n        <h1>{appointmentId}</h1>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton, DButtonCancel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport AppointmentCancel from \"../../components/main/user/AppointmentCancel\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {!data ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input\r\n                  value={data.appointment._id}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={data.appointment.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={data.appointment.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${data.appointment.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={data.appointment.status}\r\n                  readOnly\r\n                  style={\r\n                    data.appointment.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : data.appointment.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : data.appointment.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {data.appointment.status === \"CANCELLED\" ||\r\n            data.appointment.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Cancel\r\n                </DButtonCancel>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n      <AppointmentCancel\r\n        open={open}\r\n        setOpen={setOpen}\r\n        appointmentId={appointmentId}\r\n      />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Services from \"./main/Services\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport MyAccount from \"./main/MyAccount\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/`} component={Home} exact />\r\n        <Route path={`${match.path}/about`} component={About} exact />\r\n        <Route\r\n          path={`${match.path}/verified/:emailToken`}\r\n          component={ThankYou}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`${match.path}/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`${match.path}/login`} component={Signin} exact />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myaccount/:_id`}\r\n          component={MyAccount}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/appointment`}\r\n          component={Appointment}\r\n          exact\r\n        />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst UpcommingAppointments = ({ appointments }) => {\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map(appointment => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Content\r\n        flex\r\n        justify=\"flex-end\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      >\r\n        <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton>\r\n      </Content>\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion fs={props.fs} uc={props.uc}>\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion\r\n        title={\"Accounts\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            About Us\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/testimonials\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [percentage, setpercentage] = useState(1);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setpercentage(80);\r\n\r\n    setChartData({\r\n      labels: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"# of Appointments\",\r\n          data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.7)\",\r\n            \"rgba(54, 162, 235, 0.7)\",\r\n            \"rgba(255, 206, 86, 0.7)\",\r\n            \"rgba(75, 192, 192, 0.7)\",\r\n            \"rgba(153, 102, 255, 0.7)\",\r\n            \"rgba(234, 103, 64, 0.7)\",\r\n            \"rgba(75, 59, 64, 0.7)\",\r\n            \"rgba(75, 159, 64, 0.7)\",\r\n            \"rgba(55, 15, 64, 0.7)\",\r\n            \"rgba(55, 59, 44, 0.7)\",\r\n            \"rgba(25, 59, 34, 0.7)\",\r\n            \"rgba(25, 159, 64, 0.7)\"\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n            \"rgba(255, 159, 64, 1)\"\r\n          ],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    });\r\n  }, [setpercentage, setChartData]);\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          display: false\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          display: false\r\n        }\r\n      ]\r\n    },\r\n    legend: {\r\n      display: false\r\n    }\r\n  };\r\n\r\n  const { loading, data } = useQuery(FETCH_APPOINTMENTS_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.appointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"20vh\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        margin=\"20px 0\"\r\n      >\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.3)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Members</h3>\r\n            <h2>20</h2>\r\n          </Overlay>\r\n        </Content>\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.2)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Appointments</h3>\r\n            <h2>70</h2>\r\n          </Overlay>\r\n        </Content>\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.2)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Inquiries</h3>\r\n            <h2>20</h2>\r\n          </Overlay>\r\n        </Content>\r\n      </DSection>\r\n      <DSection height=\"100%\" margin=\"20px 0 20px 0\">\r\n        <DGrid gap=\"40px\">\r\n          <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid>\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            {loading ? (\r\n              <Overlay flex justify=\"center\" align=\"center\">\r\n                <h2>Loading...</h2>\r\n              </Overlay>\r\n            ) : (\r\n              data.appointments && (\r\n                <UpcommingAppointments\r\n                  appointments={appointments}\r\n                  loading={loading}\r\n                />\r\n              )\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  const [currentAppointments, setCurrentAppointments] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointmentData) {\r\n      setCurrentAppointments(currentAppointmentData.currentAppointments);\r\n    }\r\n  }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!currentAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={currentAppointmentData.currentAppointments.map(\r\n            currAppoint => currAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Apointment List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!historyAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={historyAppointmentData.appointmentHistory.map(\r\n            histAppoint => histAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React from \"react\";\r\n\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\n\r\nconst Appointments = () => {\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ open, setOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpen(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButtonCancel>\r\n        <DButtonConfirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  DButtonConfirm\r\n} from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n        height=\"100vh\"\r\n      >\r\n        <h2 style={{ color: \"#111\" }}>\r\n          {data && (\r\n            <span style={{ color: \"#2980B9\", fontWeight: 700 }}>\r\n              {`${data.appointment.user.firstName} ${data.appointment.user.lastName}'s`}\r\n            </span>\r\n          )}{\" \"}\r\n          Appointment Details\r\n        </h2>\r\n\r\n        {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\"\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\"\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\"\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\"\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButtonConfirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButtonConfirm>\r\n                  <DButton>Reschedule</DButton>\r\n                  <DButtonCancel onClick={() => setOpen(true)}>\r\n                    Cancel\r\n                  </DButtonCancel>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )}\r\n        <AppointmentCancel\r\n          open={open}\r\n          setOpen={setOpen}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"small\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton,\r\n  DButtonConfirm,\r\n  DButtonCancel\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  // if (employee) {\r\n  //   employee.schedule.day.filter(d => daay.push(d));\r\n  // }\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButtonConfirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButtonConfirm>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButtonCancel>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [erros, setErrors] = useState({});\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategory) {\r\n      setCategories(dataCategory.categories);\r\n    }\r\n  }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {dataCategory.categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Exit</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n            <DButtonConfirm type=\"submit\">Yes</DButtonConfirm>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard\r\n} from \"../../components/styled/containers\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection margin=\"20px 0\">\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <DGrid four gap=\"15px\" margin=\"40px 0\">\r\n          {loading ? (\r\n            <h2>Loading...</h2>\r\n          ) : (\r\n            data.categories &&\r\n            data.categories.map(category => (\r\n              <DCard imgHeight=\"200px\" key={category._id}>\r\n                <img\r\n                  src={\r\n                    category.photo !== null\r\n                      ? `/images/category/${category.photo}`\r\n                      : \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  alt=\"category\"\r\n                />\r\n                <div className=\"card-details\">\r\n                  <h3>{category.name}</h3>\r\n                  <p className=\"des\">{extractContent(category.description)}</p>\r\n                  <Link to={`/zeadmin/category/${category._id}`}>\r\n                    <DButton basic>View</DButton>\r\n                  </Link>\r\n                </div>\r\n              </DCard>\r\n            ))\r\n          )}\r\n        </DGrid>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButtonCancel width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButtonCancel>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\n\r\nfunction extractContent(html) {\r\n  return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n    .textContent;\r\n}\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (data_services) {\r\n  //     setServices(data_services.services);\r\n  //   }\r\n  // }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      cell: row => (\r\n        <p style={{ fontWeight: 500 }}>{extractContent(row.description)}</p>\r\n      )\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={data_services.services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = props => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Skeleton width=\"100%\" />\r\n        </>\r\n      ) : (\r\n        <DSection margin=\"20px 0\">\r\n          <h2>{data.category.name}</h2>\r\n          <DGrid>\r\n            <DSection width=\"100%\" height=\"100%\">\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\"\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/category/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </DSection>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport {\r\n  Toasted,\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel\r\n} from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButtonConfirm onClick={handleSubmit}>Save</DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(true)}>Delete</DButtonCancel>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql/service\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\n\r\nconst SigninForm = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId && (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId}\r\n            </Label>\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\n// import NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Signin from \"./admin/Signin\";\r\n// import Home from \"./admin/cms/Home\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/signin\" exact />\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        {/* <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/newappointment\"\r\n          component={NewAppointment}\r\n        /> */}\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        {/* <PrivateRoute exact path=\"/zeadmin/cms-home\" component={Home} /> */}\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#ECE9E6\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Admin from \"./pages/Admin\";\nimport Page404 from \"./pages/Page404\";\nimport { AuthProvider } from \"./context/auth\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./components/theme\";\nimport \"./App.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Redirect from=\"/\" to=\"/zessence\" exact />\n            <Route path=\"/zessence\" component={Main}  />\n            <Route path=\"/zeadmin\" component={Admin}  />\n            <Route component={Page404} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"toasted-notes/src/styles.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\n\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}