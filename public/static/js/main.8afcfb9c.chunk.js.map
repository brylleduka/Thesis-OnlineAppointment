{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","util/hooks/useScroll.js","components/main/navigation/Navigation.js","util/graphql/cms.js","components/styled/containers.js","components/styled/button.js","components/styled/scroll.styled.js","components/MouseScroll.js","components/main/home/Showcase.js","util/graphql/service.js","components/styled/card.js","components/styled/text.js","components/FancyText.js","components/styled/utils.js","components/main/utils/ReadMore.js","components/main/home/CategorySection.js","util/graphql/employee.js","components/main/home/TeamSection.js","components/styled/loader.js","components/Spinner.js","components/main/home/AboutSection.js","components/main/home/PromoSection1.js","util/graphql/testimonial.js","components/main/home/TestimonialSection.js","components/main/utils/ScrollButton.js","pages/main/Home.js","util/hooks/useWindowSize.js","components/main/about/Story.js","components/main/about/TeamDetails.js","components/main/about/Team.js","util/useScrollDown.js","pages/main/About.js","util/hooks/useForm.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Gallery.js","pages/main/Contact.js","components/main/testimonial/ModalReview.js","components/main/testimonial/Review.js","components/main/testimonial/TestimonialCard.js","pages/main/Testimonials.js","pages/main/Services.js","pages/main/Service.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/styled/skeleton.js","components/Skeleton.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/Toasted.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","components/admin/appointment/HistoryAppointments.js","pages/admin/FileReport.js","util/hooks/useUploadFile.js","components/admin/cms/home/showcase/ImageSection.js","components/admin/cms/home/showcase/ModalSlide.js","components/admin/cms/home/showcase/NewSlide.js","components/admin/cms/home/showcase/EditSlide.js","components/admin/cms/home/showcase/RemoveSlide.js","components/admin/cms/home/showcase/Showcase.js","components/admin/cms/home/sectionabout/EditModal.js","components/admin/cms/home/sectionabout/SectionAbout.js","components/admin/cms/home/sectioncategory/CategoryCards.js","components/admin/cms/home/sectioncategory/UpdateSectCategory.js","components/admin/cms/home/sectioncategory/SectionCategory.js","pages/admin/cms/Home.js","components/admin/cms/about/ModalHeading.js","components/admin/cms/about/Heading.js","components/admin/cms/about/ModalStory.js","components/admin/cms/about/Story.js","components/admin/cms/about/ModalMissionVision.js","components/admin/cms/about/Mission.js","pages/admin/cms/About.js","components/admin/testimonial/ToggleView.js","components/admin/testimonial/ModalView.js","components/admin/testimonial/DeleteView.js","components/admin/testimonial/MenuView.js","pages/admin/cms/Testimonial.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","DropdownCustomNav","Dropdown","Burger","setOpen","onClick","useScroll","scrollVal","useState","scrolling","setScrolling","scrollTop","setScrollTop","scrollH","undefined","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Navigation","ref","handler","node","useRef","listener","event","current","contains","document","useContext","handleLogout","trigger","style","fontSize","Icon","name","firstName","scrollBehavior","el","scrollIntoView","behavior","block","className","src","alt","to","userId","_id","scroll","simple","Menu","Item","as","Link","disabled","FETCH_THE_SHOWCASE","gql","FETCH_HOME_SECTION","FETCH_ABOUT_CMS","columns","rows","DContainer","div","DShowCase","height","bgcolor","background","Overlay","bgr","bgl","bgc","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","cwidth","talign","cmarg","fs","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","med10","med7","med5","DCard","p","dh","dw","justifyCenter","justifyAround","justifyBetween","jusitfyFend","alignCenter","alignAround","alignBetween","alignFend","fcol","bs","DSection","width","mcenter","Content","fluid","fixed","rounded","br1","weight","color","size","bluer","imgHeight","imgWidth","DImage","bordered","dashed","m","DFooterLinks","DFooter","footer","Section2Styled","visible","JButton","button","keyframes","DMouseScroll","inverted","basic","MouseScroll","Showcase","nextSection","showcase","setShowcase","scrollDown","useQuery","variables","sectionName","showcaseData","data","dataLoading","loading","error","showcaseCMS","content","position","id","dots","infinite","fade","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","map","sc","key","bgColor","bgImg","title","subtitle","paragraph","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","JCard","figure","titleSize","JCard2","oflow","JCard3","JCard4","top","right","bottom","left","DTestimonialCard","DFancyText","h1","FancyText","children","ripple","DButton","fSize","center","text","radius","alert","red","warning","yellow","confirm","green","default","DButtonFree","DLabel","label","ls","tt","w","hover","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","success","ReadMore","ScrollUp","DotsVertical","DotsVerticalRounded","CategorySection","setRef","isCategories","setIsCategories","categorySection","setCategorySection","dataCategories","loadingCategories","categories","sectionCategory","homeCMS","grid","category","photo","parser","description","length","substr","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","styles","dloading","display","justifyContent","alignItems","flexDirection","lineHeight","TeamSection","cards","employeesAR","setEmployeesAR","limit","data_employeesAR","loading_employeesAR","aestheticiansReceps","count","employee","data-emp","lastName","role","bio","keyring","SpinnerRing","tiny","small","medium","Spinner","fontWeight","AboutSection","isAboutSection","setIsAboutSection","about","setAbout","aboutChange","contentName","dataAbout","loadAbout","aboutUsCMS","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","css","visibility","from","y","ease","Power3","easeOut","scale","animate","story","missionvision","PromoSection1","FETCH_TESTIMONIALS","FETCH_USER_REVIEW","FETCH_VIEWS","settings","TestimonialSection","reviews","setReviews","dataReviews","loadReviews","testimonialsView","rev","Rating","rating","maxRating","icon","message","ScrollButton","intervalId","pageYOffset","clearInterval","this","scrollPx","setInterval","scrollStep","bind","delay","setState","scrollToTop","React","Component","Home","card1","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","Story","aboutUS","useWindowSize","mission","vision","maxHeight","letterSpacing","textAlign","overflowWrap","overflow","padding","TeamDetails","href","Modal","onClose","closeIcon","Team","employees","setEmployees","dataEmployees","loadingEmployees","minHeight","emp","scrollView","About","minWidth","subtitles","overlay","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","push","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","border","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","Signup","pathname","history","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","console","log","loginUser","userX","general","Signin","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","loading_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","schedule","breakStart","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","setCategories","services","setServices","loading_categories","data_categories","useLazyQuery","categoryId","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","cursor","outline","servEmp","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","useHistory","addInfo","setAddInfo","setService","cache","result","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","toaster","notify","status","expiredLog","check","start","Header","readOnly","toDateString","Actions","Appointment","matchMedia","jusitfy","photos","Gallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","index","currentIndex","views","x","srcset","srcSet","caption","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","ADD_REVIEW","UPDATE_REVIEW","ModalReview","openReview","setOpenReview","userReview","rate","setRate","setMessage","edit","setEdit","mutation","addOrUpdate","onRate","TextArea","Review","setUserReview","dataUserReview","loadUserReview","userTestimonial","slidesPerRow","responsive","breakpoint","TestimonialCard","isTestimonials","setIsTestimonials","dataTestimonials","loadTestimonials","testimonials","testimonial","parseInt","updatedAt","Testimonials","Services","sectionDown","Service","params","isReadMore","setIsReadMore","isServices","setIsServices","goBack","onPointerLeave","price","VERRIFIED_APPOINTMENT","ThankYou","emailToken","go","appointmentId","verifiedAppointment","onload","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","dateOfBirth","contact","updateUser","showYearDropdown","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","Accordion","setActive","contentRef","scrollHeight","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","CANCEL_APPOINTMENT_MUTATION","absoluteCenter","transform","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","setServiceEmp","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","new","Popup","circular","mouseEnterDelay","mouseLeaveDelay","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","row","cell","fitted","wide","Grid","divided","Column","currentAppoint","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","currentTarget","compact","historyAppoint","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","input","AppointmentDetails","schedDate","myAppoint","setMyAppoint","margn","Main","path","exact","UpcommingAppointments","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","pointing","SideNav","activeClassName","Layout","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","CurrentAppointments","isCurrentAppoint","setIsCurrentAppoint","currentAppointmentData","currAppoint","progressPending","progressComponent","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","NewDateTime","NewAppointmentDetails","CREATE_GUEST_APPOINTMENT","myAppointments","createGuestAppointment","NewAppointment","Divider","NewConfirmation","placeholderAnimate","DSkeleton","wid","Skeleton","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","workLength","breakLength","newEmployee","Checkbox","class","Employees","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","dataCategory","loadingCategory","addService","close","marginLeft","EmployeeServices","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","newCategory","Categories","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","newService","serviceExist","ServiceList","descript","trimString","substring","parse","UPLOAD_CATEGORY_PHOTO","Category","setCategory","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","serviceData","serviceLoading","addServicePhoto","replace","REPLY_MESSAGE","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","loadingInq","inquiry","replyInquiry","column","Inquiry","setInquiries","data_inquiries","loading_inquiries","msg","PhotoBooth","fetchEmployee","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","empData","empLoading","handleSchedule","User","setUsers","data_users","loading_users","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","HistoryAppointments","historyAppointments","setHistoryAppointments","historyAppointmentData","downloadCSV","array","link","createElement","csv","keys","Object","join","forEach","ctr","convertArrayOfObjectsToCSV","setAttribute","encodeURI","click","appointmentHistory","Export","onExport","actionsMemo","useMemo","actions","FileReport","useUploadFile","selectedFile","setSelectedFile","preview","setPreview","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectedFile","files","ImageSection","isDark","isPosition","isColor","fileInput","opacity","colors","ADD_NEW_SLIDE","UPDATE_SLIDE","ModalSlide","setIsDark","setIsPosition","setIsColor","showcaseId","addOrUpdateSlide","handlePosition","maxLength","checked","triangle","hex","NewSlide","EditSlide","REMOVE_SLIDE","RemoveSlide","isOpenRemove","setIsOpenRemove","removeSlide","UPDATE_ABOUT_SECTION","EditModal","aboutBool","updateAboutSection","SectionAbout","isAbout","setIsAbout","dataAboutSection","loadingAboutSection","loadingAbout","CategoryCards","gridCount","UPDATE_CATEGORY_SECTION","UpdateSectCategory","setOpenCatSec","openCatSec","categorySectionInfo","setGridCount","updateSectionCategory","handleGrid","SectionCategory","sectCategory","setSectCategory","loadSectionCategory","UPDATE_ABOUT_HEADER","ModalHeading","openHead","setOpenHead","isOverlay","setIsOverlay","headers","setHeaders","updateAboutUs","handleChangeHeaders","Heading","dataAboutContent","loadAboutContent","bgColors","UPDATE_ABOUT_STORY","ModalStory","isStory","openStory","setOpenStory","reverse","setReverse","stories","setStories","updateStory","handleChangeStory","setIsStory","dataStoryContent","loadStoryContent","UPDATE_ABOUT_MISSIONVISION","ModalMissionVision","isMissionVision","fileInputMV","openMission","setOpenMission","reverseMV","setReverseMV","mtitle","msubtitle","mparagraph","vtitle","vsubtitle","vparagraph","valuesMV","setValuesMV","previewMV","selectedFileMV","onSelectedFileMV","updateMission","handleChangeValues","horizontal","isMission","setIsMission","dataMissionVision","loadMissionVision","Mission","TOGGLE_REVIEW","popContent","ToggleView","swid","tggl","toggleValue","setToggleValue","toggleTestimonial","loadToggle","data-sid","onMouseOver","dataset","sid","ModalView","ridd","ARCHIVED_REVIEW","DeleteView","rvw","isDltModal","setIsDltModal","wdth","unauth","archiveTestimonial","loadArchive","textIndent","MenuView","menuId","review","menuValue","setMenuValue","on","data-rid","rid","flowing","centered","Testimonial","view","marginBottom","allowOverflow","Admin","App","uploadLink","createUploadLink","uri","authLink","setContext","Authorization","client","ApolloClient","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8afcfb9c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${(props) => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 12vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"li a {color: #fff}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n      &:nth-child(7) {\r\n        transition-delay: 0s, 400ms;\r\n      }\r\n      &:nth-child(8) {\r\n        transition-delay: 0s, 450ms;\r\n      }\r\n      &:nth-child(9) {\r\n        transition-delay: 0s, 500ms;\r\n      }\r\n      &:nth-child(10) {\r\n        transition-delay: 0s, 550ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \".avatarLog {color: #fff}\"};\r\n\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const DropdownCustomNav = styled(Dropdown)`\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & a {\r\n    color: #232323;\r\n    font-weight: 700;\r\n  }\r\n  & a:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & .customDropMenu a {\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.primary} !important;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"color: #fff; a {color: #fff}\"};\r\n\r\n  @media (max-width: 1024px) {\r\n    a {\r\n      color: #ffff;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n    a:hover {\r\n      color: ${({ theme }) => theme.secondary};\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n  }\r\n\r\n  .customDropMenu .customDropMenuItem {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #232323 !important;\r\n    font-size: 14px !important;\r\n  }\r\n  .customDropMenu .customDropMenuItem:hover {\r\n    color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll(scrollVal) {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const scrollH = scrollVal !== undefined ? scrollVal : 100;\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > scrollH);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport {\r\n  DNavigation,\r\n  DMainMenu,\r\n  DRightMenu,\r\n  DropdownCustomNav,\r\n} from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  // let history = useHistory();\r\n\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    // history.push(\"\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const scrollBehavior = (el) =>\r\n    el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to={`/#home`} scroll={scrollBehavior}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/services&rates/#services\" scroll={scrollBehavior}>\r\n              Services\r\n            </Link>\r\n          </li>\r\n\r\n          {/* <Link to=\"/about\">About&nbsp;Us</Link> */}\r\n          <DropdownCustomNav\r\n            trigger={\r\n              <Link to=\"/about/#about\" scroll={scrollBehavior}>\r\n                About&nbsp;Us\r\n              </Link>\r\n            }\r\n            simple\r\n            scrolled={scrolling ? true : undefined}\r\n          >\r\n            <Dropdown.Menu className=\"customDropMenu\">\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#story\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Story\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#team\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Team\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </DropdownCustomNav>\r\n\r\n          <li>\r\n            <Link to=\"/gallery/#gallery\" scroll={scrollBehavior}>\r\n              Gallery\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/testimonials/#tstmnl\" scroll={scrollBehavior}>\r\n              Testimonials\r\n            </Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger} className=\"avatarLog\">\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_THE_SHOWCASE = gql`\r\n  query showcaseCMS($sectionName: String) {\r\n    showcaseCMS(sectionName: $sectionName) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HOME_SECTION = gql`\r\n  query homeCMS($sectionName: String) {\r\n    homeCMS(sectionName: $sectionName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      grid\r\n      dark\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_ABOUT_CMS = gql`\r\n  query aboutUsCMS($contentName: String) {\r\n    aboutUsCMS(contentName: $contentName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_THE_SHOWCASE, FETCH_HOME_SECTION, FETCH_ABOUT_CMS };\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n  margin-top: 12vh;\r\n`;\r\n\r\nexport const DShowCase = styled.div`\r\n  width: 100%;\r\n  height: ${(props) => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n  h1,\r\n  h2,\r\n  p {\r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${(props) =>\r\n    props.bg\r\n      ? props.bg\r\n      : props.bgr\r\n      ? \"linear-gradient(270deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgl\r\n      ? \"linear-gradient(90deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgc\r\n      ? \"rgba(0,0,0,0.4)\"\r\n      : \"rgba(0, 0, 0, 0)\"};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  opacity: ${(props) => props.opac && props.opac};\r\n  transition: opacity 0.3s ease;\r\n\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${(props) => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: 0;\r\n    height: 100%;\r\n\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n\r\n      text-align: center;\r\n      transform: rotate(-45deg);\r\n      h1 {\r\n        transform: translateY(80px);\r\n        transition: transform 0.4s ease-in-out;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${(props) => (props.cwidth ? props.cwidth : \"80%\")};\r\n    text-align: ${(props) => (props.talign ? props.talign : \"left\")};\r\n    height: auto;\r\n    margin: ${(props) => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    padding: 10px 40px;\r\n\r\n    h1,\r\n    h2,\r\n    p {\r\n      letter-spacing: 5px;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    h3,\r\n    h4,\r\n    .ps {\r\n      letter-spacing: 1px;\r\n      line-height: 1.4;\r\n    }\r\n    .ps {\r\n      font-size: 10px;\r\n    }\r\n\r\n    h1 {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"60px\")};\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: ${(props) =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${(props) => props.gap && props.gap};\r\n  grid-template-rows: ${(props) =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${(props) => props.margin && props.margin};\r\n \r\n\r\n  .card-content {\r\n    border-radius: ${(props) => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med10 ? props.med10 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med7 ? props.med7 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: ${(props) => (props.med5 ? props.med5 : \"1fr\")};\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: ${(props) => (props.p ? props.p : \"10px\")};\r\n  height: ${(props) => (props.dh ? props.dh : \"300px\")};\r\n  width: ${(props) => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => props.fcol && \"column\"};\r\n\r\n  overflow: hidden;\r\n  background: ${(props) => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${(props) =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n        \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n        \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${(props) => (props.height ? props.height : \"400px\")};\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  margin: ${(props) =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  position: relative;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${(props) => props.height && props.height};\r\n  width: ${(props) =>\r\n    props.width ? props.width : props.fluid ? \"100%\" : \"50%\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${(props) => props.margin && props.margin};\r\n  background: url('${(props) =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${(props) => props.fixed && \"fixed\"};\r\n  background-color: ${(props) => props.bgcolor && props.bgcolor};\r\n  border-radius: ${(props) =>\r\n    props.rounded\r\n      ? \"10px\"\r\n      : props.br1\r\n      ? \"0% 24% 26% 39% / 20% 0% 100% 0% \"\r\n      : \"0\"};\r\n  box-shadow: ${(props) =>\r\n    props.bs &&\r\n    (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n    \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n    \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n    \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n    \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n  z-index: 2;\r\n  font-weight: ${(props) => props.weight && props.weight};\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  span {\r\n    color: ${(props) => props.color && props.color};\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${(props) => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${(props) => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${(props) => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${(props) => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${(props) => (props.height ? props.height : \"300px\")};\r\n  width: ${(props) => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${(props) =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  border: ${(props) =>\r\n    props.bordered\r\n      ? \"1px solid #000\"\r\n      : props.dashed\r\n      ? \"1px dashed #ccc\"\r\n      : \"none\"};\r\n  margin: ${(props) => (props.m ? props.m : \"0 auto\")};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  position: relative;\r\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\r\n  max-height: 100vh;\r\n  min-height: 30vh;\r\n  height: 100%;\r\n  width: ${(props) => (props.width ? props.width : \"90%\")};\r\n  margin: 24px auto;\r\n  text-align: center;\r\n\r\n  .switch {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: auto;\r\n    margin-bottom: 24px;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 24px;\r\n  }\r\n\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n    padding-top: 48px;\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: space-between;\r\n      ${(props) => props.alt && \"flex-direction: row-reverse\"};\r\n      margin: 0 auto;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 90%;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            text-align: left;\r\n            margin-bottom: 24px;\r\n            .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding: 12px;\r\n            margin-bottom: 56px;\r\n            text-align: justify;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 55%;\r\n        height: 100%;\r\n        position: relative;\r\n\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n              object-fit: cover;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    .sec2-container {\r\n      width: 100%;\r\n      .sec2-inner {\r\n        width: 100%;\r\n        justify-content: center;\r\n        margin: 0 auto;\r\n        .sec2-content {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .sec2-images {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 18px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const JButton = styled.button`\r\n  position: relative;\r\n  padding: 1em 1.5em;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 18px;\r\n  margin: 1em 0.8em;\r\n  color: ${({ theme }) => theme.secondary};\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n\r\n  &::after,\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 20%;\r\n    height: 20%;\r\n    border: 2px solid;\r\n    transition: all 0.6s ease;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  &::after {\r\n    bottom: -2px;\r\n    right: -2px;\r\n    border-top-color: transparent;\r\n    border-left-color: transparent;\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &::before {\r\n    top: -2px;\r\n    left: -2px;\r\n    border-bottom-color: transparent;\r\n    border-right-color: transparent;\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:hover:after,\r\n  &:hover:before {\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst scroll = keyframes`\r\n\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    10% {\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    }\r\n    100% {\r\n        transform: translateY(5px);\r\n        opacity: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const DMouseScroll = styled.div`\r\n  position: absolute;\r\n  top: 85%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n\r\n  &:hover {\r\n    .mousey {\r\n      opacity: 1;\r\n      left: 50%;\r\n    }\r\n    .scroll-downs {\r\n      &::before,\r\n      &::after {\r\n        top: 50%;\r\n        left: 50%;\r\n        border: 1px solid rgba(0, 0, 0, 0.5);\r\n      }\r\n    }\r\n  }\r\n\r\n  .scroll-downs {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      content: \"\";\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px solid rgba(0, 0, 0, 0.25);\r\n      transform: translate(-50%, -50%);\r\n      border-radius: 100%;\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n    &::before {\r\n      top: 48%;\r\n      left: 60%;\r\n    }\r\n\r\n    &::after {\r\n      top: 52%;\r\n      left: 52%;\r\n    }\r\n  }\r\n\r\n  .mousey {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 2px;\r\n    padding: 3px 5px;\r\n    height: 15px;\r\n    border: 2px solid #232323;\r\n    border-radius: 25px;\r\n    opacity: 0.75;\r\n    box-sizing: content-box;\r\n    background: #232323;\r\n  }\r\n\r\n  .scroller {\r\n    width: 2px;\r\n    height: 5px;\r\n    border-radius: 25%;\r\n    background-color: #fff;\r\n    animation-name: ${scroll};\r\n    animation-duration: 2.2s;\r\n    animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.inverted &&\r\n    \".mousey{background: #ffffff; border-color: #ffffff;} .scroller{background-color: #232323;} .scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.25)}} &:hover{.scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.5)}}}\"}\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \".mousey{background: transparent; border-width: 1px;} .scroller{background-color: #fff;} \"}\r\n`;\r\n","import React from \"react\";\r\nimport { DMouseScroll } from \"./styled/scroll.styled\";\r\n\r\nconst MouseScroll = props => {\r\n  return (\r\n    <DMouseScroll {...props}>\r\n      <div className=\"scroll-downs\">\r\n        <div className=\"mousey\">\r\n          <div className=\"scroller\"></div>\r\n        </div>\r\n      </div>\r\n    </DMouseScroll>\r\n  );\r\n};\r\n\r\nexport default MouseScroll;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { JButton } from \"../../styled/button\";\r\nimport Slider from \"react-slick\";\r\nimport MouseScroll from \"../../MouseScroll\";\r\n\r\nconst Showcase = ({ nextSection }) => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(nextSection);\r\n  };\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }} id=\"home\">\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"90vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcase.map((sc) => (\r\n            <DShowCase\r\n              height=\"90vh\"\r\n              key={sc._id}\r\n              bgcolor={sc.bgColor}\r\n              background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n            >\r\n              {/* {sc.bgImg && (\r\n                <DImage height=\"100%\">\r\n                  <img\r\n                    src={\r\n                      sc.bgImg !== null || sc.bgImg !== undefined\r\n                        ? `/images/cms/home/${sc.bgImg}`\r\n                        : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"showcase\"\r\n                  />\r\n                </DImage>\r\n              )} */}\r\n\r\n              <Overlay\r\n                flex\r\n                bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                justify={\r\n                  sc.position === \"left\"\r\n                    ? \"flex-start\"\r\n                    : sc.position === \"right\"\r\n                    ? \"flex-end\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                talign={\r\n                  sc.position === \"left\"\r\n                    ? \"left\"\r\n                    : sc.position === \"right\"\r\n                    ? \"right\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                align=\"center\"\r\n                className={sc.dark ? \"dark\" : \"\"}\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h1>{sc.title}</h1>\r\n                  <h2>{sc.subtitle}</h2>\r\n                  <p>{sc.paragraph}</p>\r\n                  <JButton\r\n                    className={sc.dark ? \"dark\" : \"\"}\r\n                    dark={sc.dark ? true : false}\r\n                  >\r\n                    Book Appointment\r\n                    <Link to=\"/appointment\" />\r\n                  </JButton>\r\n                </div>\r\n              </Overlay>\r\n              <MouseScroll\r\n                onClick={scrollDown}\r\n                inverted={sc.dark ? true : false}\r\n              />\r\n            </DShowCase>\r\n          ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  height: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  display: \"block\",\r\n};\r\n\r\nexport default Showcase;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const JCard = styled.figure`\r\n  background-color: #fff;\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  height: ${(props) => (props.height ? props.height : \"auto\")};\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  -webkit-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n  font-size: 12px;\r\n  margin: 24px auto;\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  img {\r\n    backface-visibility: hidden;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    background-color: #fe8c00;\r\n    opacity: 0.5;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  &:before {\r\n    -webkit-transform: skew(30deg) translateX(-80%);\r\n    transform: skew(30deg) translateX(-80%);\r\n  }\r\n\r\n  &:after {\r\n    -webkit-transform: skew(-30deg) translateX(-70%);\r\n    transform: skew(-30deg) translateX(-70%);\r\n  }\r\n\r\n  figcaption {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    padding: 25px 40% 25px 20px;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      background-color: #2193b0;\r\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\r\n      content: \"\";\r\n      opacity: 0.5;\r\n      z-index: -1;\r\n    }\r\n\r\n    &::before {\r\n      -webkit-transform: skew(30deg) translateX(-100%);\r\n      transform: skew(30deg) translateX(-100%);\r\n    }\r\n\r\n    &::after {\r\n      -webkit-transform: skew(-30deg) translateX(-90%);\r\n      transform: skew(-30deg) translateX(-90%);\r\n    }\r\n\r\n    h3,\r\n    p {\r\n      margin: 0;\r\n      opacity: 0;\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: ${(props) => (props.titleSize ? props.titleSize : \"36px\")};\r\n      font-weight: 700;\r\n      line-height: 1em;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n      font-size: 1em;\r\n    }\r\n  }\r\n\r\n  &:hover h3,\r\n  &.hover h3,\r\n  &:hover p,\r\n  &.hover p {\r\n    -webkit-transform: translateY(0);\r\n    transform: translateY(0);\r\n    opacity: 0.9;\r\n    -webkit-transition-delay: 0.2s;\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover:before,\r\n  &.hover:before {\r\n    -webkit-transform: skew(30deg) translateX(-20%);\r\n    transform: skew(30deg) translateX(-20%);\r\n    -webkit-transition-delay: 0.05s;\r\n    transition-delay: 0.05s;\r\n  }\r\n\r\n  &:hover:after,\r\n  &.hover:after {\r\n    -webkit-transform: skew(-30deg) translateX(-10%);\r\n    transform: skew(-30deg) translateX(-10%);\r\n  }\r\n\r\n  &:hover figcaption:before,\r\n  &.hover figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-40%);\r\n    transform: skew(30deg) translateX(-40%);\r\n    -webkit-transition-delay: 0.15s;\r\n    transition-delay: 0.15s;\r\n  }\r\n\r\n  &:hover figcaption:after,\r\n  &.hover figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-30%);\r\n    transform: skew(-30deg) translateX(-30%);\r\n    -webkit-transition-delay: 0.1s;\r\n    transition-delay: 0.1s;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nexport const JCard2 = styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    background: #fff;\r\n    max-width: 100%;\r\n    min-width: 240px;\r\n    height: 400px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n\r\n    .thumbnail {\r\n      width: 100%;\r\n      height:100%;\r\n      overflow: hidden;\r\n      border-radius: 10px 10px 0 0;\r\n      background: #eee;\r\n      img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n       object-fit: cover;\r\n      }\r\n    }\r\n\r\n \r\n    .post-content {\r\n      position: absolute;\r\n      bottom: 0;\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border-radius: 0 0 10px 10px;\r\n      .category {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 0;\r\n        background: ${({ theme }) => theme.secondary};\r\n        padding: 10px 15px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n      }\r\n      .title {\r\n        color: #ccc;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n      }\r\n      .sub_title {\r\n        margin: 0;\r\n        padding: 0 0 20px;\r\n        color: ${({ theme }) => theme.secondary};\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n      }\r\n\r\n      .description {\r\n          height: 10px;\r\n          margin-top: 12px;\r\n         \r\n          &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            background-color: #f5f5f5;\r\n          }\r\n\r\n          &::-webkit-scrollbar {\r\n            width: 10px;\r\n            background-color: #f5f5f5;\r\n          }\r\n          &::-webkit-scrollbar-thumb {\r\n            background-image: -webkit-gradient(\r\n              linear,\r\n              left bottom,\r\n              left top,\r\n              color-stop(0.44, rgb(122, 153, 217)),\r\n              color-stop(0.72, rgb(73, 125, 189)),\r\n              color-stop(0.86, rgb(28, 58, 148))\r\n            );\r\n          }\r\n        \r\n          p{\r\n            color: #232323;\r\n            font-size: 14px;\r\n            line-height: 1.8em;\r\n            opacity: 0;\r\n            \r\n            pointer-events: none;\r\n            transition: all 0.45s ease;\r\n            &:first-of-type {\r\n              margin-top: 1.25rem;\r\n              &:before {\r\n                content: \"\";\r\n                position: absolute;\r\n                height: 5px;\r\n                background: ${({ theme }) => theme.blue};\r\n                width: 35px;\r\n                top: -0.75rem;\r\n                border-radius: 3px;\r\n              }\r\n            }\r\n          }\r\n        \r\n        }\r\n     \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .thumbnail {\r\n        background-color: #000;\r\n    \r\n        img {\r\n          -webkit-transform: scale(1.1);\r\n          -moz-transform: scale(1.1);\r\n          transform: scale(1.1);\r\n          opacity: 0.8;\r\n          transition: all 0.8s ease-in;\r\n        }\r\n        transition: all 0.8s ease-in-out;\r\n\r\n      }\r\n      .post-content{\r\n        .description{\r\n          height: 175px;\r\n          transition: height 0.6s ease-in-out;\r\n          overflow: ${(props) => props.oflow && \"auto\"};\r\n          p{\r\n            cursor: default;\r\n            pointer-events: auto;\r\n            -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n            opacity: 0.9;\r\n            -webkit-transition-delay: 0.6s;\r\n            transition-delay: 0.6s;\r\n          }\r\n         \r\n        }\r\n        \r\n      }\r\n     \r\n\r\n    }\r\n  \r\n`;\r\n\r\nexport const JCard3 = styled.div`\r\n  .description {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #fff;\r\n    z-index: 1;\r\n\r\n    h1 {\r\n      line-height: 1;\r\n      margin: 0;\r\n      font-size: 1.7rem;\r\n    }\r\n    h4 {\r\n      font-size: 1rem;\r\n      font-weight: 300;\r\n      text-transform: capitalize;\r\n      color: #a2a2a2;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      margin: 1rem 0 0;\r\n      font-size: 16px;\r\n      &:first-of-type {\r\n        margin-top: 1.25rem;\r\n        &:before {\r\n          content: \"\";\r\n          position: absolute;\r\n          height: 5px;\r\n          background: ${({ theme }) => theme.blue};\r\n          width: 35px;\r\n          top: -0.75rem;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JCard4 = styled.figure`\r\n  position: relative;\r\n  margin: 10px;\r\n  min-width: 230px;\r\n  max-width: 315px;\r\n  width: 100%;\r\n  height: ${(props) => props.height && props.height};\r\n  color: #000000;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n  font-size: 14px;\r\n\r\n  & * {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .profile-image {\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 300px;\r\n    z-index: 1;\r\n    position: relative;\r\n    margin: ${(props) => props.margin && props.margin};\r\n    top: ${(props) => props.top && props.top};\r\n    right: ${(props) => props.right && props.right};\r\n    bottom: ${(props) => props.bottom && props.bottom};\r\n    left: ${(props) => props.left && props.left};\r\n    padding: 10px;\r\n    border: 2px solid #6dd5ed;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      vertical-align: top;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    .profile-image {\r\n      border-color: #2193b0;\r\n    }\r\n    figcaption {\r\n      box-shadow: ${(props) =>\r\n        props.bs\r\n          ? props.bs\r\n          : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n            \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n            \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n            \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n            \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n    }\r\n  }\r\n\r\n  figcaption {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    padding: 125px 25px 25px;\r\n    margin-top: -100px;\r\n    display: inline-block;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.11)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.11)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.11)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.11)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.11)\")};\r\n\r\n    h3,\r\n    h4,\r\n    p {\r\n      margin: 0 0 5px;\r\n    }\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    h4 {\r\n      color: #8c8c8c;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n      letter-spacing: 1px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .icons {\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .linkToPage {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const DTestimonialCard = styled.div`\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  outline: 0;\r\n  border: 0;\r\n  position: relative;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n\r\n  figure {\r\n    position: relative;\r\n    float: left;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    min-width: 90%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    color: #000000;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    background: #2193b0;\r\n    background: -webkit-linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n\r\n    padding: 15px;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n\r\n    & *,\r\n    & *::before,\r\n    & *::after {\r\n      -webkit-box-sizing: border-box;\r\n      box-sizing: border-box;\r\n      -webkit-transition: all 0.35s ease;\r\n      transition: all 0.35s ease;\r\n    }\r\n\r\n    .profile {\r\n      width: 100px;\r\n      height: 100px;\r\n      border-radius: 100%;\r\n      display: inline-block;\r\n      position: relative;\r\n      overflow: hidden;\r\n      -webkit-box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      margin-bottom: 10px;\r\n      border: solid 5px #fe8c00;\r\n      border-color: ${({ theme }) => theme.blue};\r\n\r\n      img {\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    figcaption {\r\n      position: relative;\r\n      width: 100%;\r\n\r\n      h5,\r\n      h4,\r\n      blockquote {\r\n        margin: 0;\r\n      }\r\n\r\n      h5,\r\n      h4 {\r\n        text-transform: uppercase;\r\n        font-weight: 500;\r\n      }\r\n\r\n      h4 {\r\n        color: #274046;\r\n      }\r\n\r\n      h4,\r\n      h5 {\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n      }\r\n\r\n      blockquote {\r\n        font-size: 1em;\r\n        padding: 45px 20px 40px 50px;\r\n        margin-top: 30px;\r\n        background: #ffffff;\r\n        border-radius: 5px;\r\n        -webkit-box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        text-align: left;\r\n        position: relative;\r\n\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n\r\n        &::before,\r\n        &::after {\r\n          font-family: \"FontAwesome\";\r\n          position: absolute;\r\n          font-size: 22px;\r\n          opacity: 0.25;\r\n          color: ${(props) =>\r\n            props.inverted\r\n              ? ({ theme }) => theme.light\r\n              : ({ theme }) => theme.dark};\r\n        }\r\n\r\n        &::before {\r\n          content: \"\\f10d\";\r\n          top: 20px;\r\n          left: 20px;\r\n        }\r\n        &::after {\r\n          content: \"\\f10e\";\r\n          bottom: 10px;\r\n          right: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \"figure{background: transparent; figcaption{blockquote{box-shadow: none; background: transparent}}}\"}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DFancyText = styled.h1`\r\n  font-size: ${(props) => (props.size ? props.size : \"22px\")};\r\n  letter-spacing: 2px;\r\n  margin: 24px auto;\r\n  text-align: center;\r\n  font-family: \"Playfair Display\";\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  display: table;\r\n  white-space: nowrap;\r\n\r\n  &:before,\r\n  &:after {\r\n    border-top-width: 2px;\r\n    border-top-style: solid;\r\n    border-top-color: ${(props) =>\r\n      props.color\r\n        ? props.color\r\n        : props.alt\r\n        ? ({ theme }) => theme.light\r\n        : ({ theme }) => theme.dark};\r\n    content: \"\";\r\n    display: table-cell;\r\n    position: relative;\r\n    top: 0.5em;\r\n    width: 100px;\r\n    min-width: 50px;\r\n  }\r\n  &:before {\r\n    right: 3%;\r\n  }\r\n  &:after {\r\n    left: 3%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DFancyText } from \"./styled/text\";\r\n\r\nconst FancyText = props => {\r\n  return <DFancyText {...props}>{props.children}</DFancyText>;\r\n};\r\n\r\nexport default FancyText;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${(props) => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${(props) => (props.size ? props.size : \"36px\")};\r\n  width: ${(props) =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${(props) => (props.pad ? props.pad : \"6px 16px\")};\r\n  line-height: 1.42857143;\r\n  margin: ${(props) => (props.center ? \"1.5% auto\" : \"1.5%\")};\r\n  text-align: center;\r\n  text-transform: ${(props) => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border-radius: ${(props) =>\r\n    props.radius ? props.radius : props.circle ? \"50%\" : \"5px\"};\r\n  border-width: ${(props) => (props.basic ? \"1px\" : \"0\")};\r\n  border-style: ${(props) => props.basic && \"solid\"};\r\n  border-color: ${(props) =>\r\n    props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.default\r\n      ? ({ theme }) => theme.bluer\r\n      : ({ theme }) => theme.blue};\r\n      \r\n  color: ${(props) =>\r\n    props.red\r\n      ? ({ theme }) => theme.red\r\n      : props.yellow\r\n      ? ({ theme }) => theme.yellow\r\n      : props.green\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.bluer\r\n      ? ({ theme }) => theme.bluer\r\n      : ({ theme }) => theme.light};\r\n\r\n  background: ${(props) =>\r\n    props.basic\r\n      ? \"transparent\"\r\n      : props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.default\r\n      ? ({ theme }) => theme.bluer\r\n      : ({ theme }) => theme.blue};\r\n\r\n  ${(props) =>\r\n    props.disabled &&\r\n    \"background: #E9E4F0; color: #D3CCE3; &:hover:{opacity: 1}\"}\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n   opacity: 0.8;\r\n   color: #fff;\r\n   background: ${(props) =>\r\n     props.alert\r\n       ? ({ theme }) => theme.red\r\n       : props.warning\r\n       ? ({ theme }) => theme.yellow\r\n       : props.confirm\r\n       ? ({ theme }) => theme.green\r\n       : props.primary\r\n       ? ({ theme }) => theme.primary\r\n       : props.default\r\n       ? ({ theme }) => theme.bluer\r\n       : ({ theme }) => theme.blue};\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonFree = styled(DButton)`\r\n  position: absolute;\r\n  top: ${(props) => props.top && props.top};\r\n  left: ${(props) => props.left && props.left};\r\n  bottom: ${(props) => props.bottom && props.bottom};\r\n  right: ${(props) => props.right && props.right};\r\n`;\r\n\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  color: ${(props) => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${(props) => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${(props) => props.weight && props.weight};\r\n  padding: ${(props) => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${(props) => (props.m ? props.m : \"1%\")};\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  border-radius: ${(props) => props.rounded && \"10px\"};\r\n  text-transform: ${(props) => props.tt && props.tt};\r\n  width: ${(props) => (props.w ? props.w : \"auto\")};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n    opacity: ${(props) => props.hover && \"0.8\"};\r\n    cursor: ${(props) => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${(props) => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${(props) => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${(props) =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${(props) =>\r\n        props.activeBg ? props.activeBg : ({ theme }) => theme.blue};\r\n      color: ${(props) =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${(props) => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${(props) =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${(props) =>\r\n    props.alert\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.success\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.warning\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(255, 255, 255,1.0)\"};\r\n  height: auto;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .close {\r\n    height: 90%;\r\n    margin: 1% auto;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    fontweight: bold;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.p`\r\n  text-align: right;\r\n  cursor: pointer !important;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.secondary};\r\n    display: inline-block;\r\n    position: relative;\r\n    font-weight: 700;\r\n    &:after {\r\n      content: \"\\f061\";\r\n      font-family: FontAwesome;\r\n      ${(props) =>\r\n        props.hover === 0\r\n          ? \"margin-left: 5px;opacity: 1;\"\r\n          : \"margin-left: -10px; opacity: 0;\"};\r\n      vertical-align: middle;\r\n      transition: margin 0.3s, opacity 0.3s;\r\n    }\r\n    a {\r\n      color: ${({ theme }) => theme.secondary};\r\n    }\r\n    &:hover {\r\n      &:after {\r\n        margin-left: 5px;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollUp = styled(Icon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: block;\r\n`;\r\n\r\nexport const DotsVertical = styled(DotsVerticalRounded)`\r\n  color: #232323;\r\n  &:hover {\r\n    border-radius: 100%;\r\n    background: #ccc;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"../../styled/utils\";\r\n\r\nconst ReadMore = props => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_HOME_SECTION } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport { JCard } from \"../../styled/card\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\n\r\nconst CategorySection = ({ setRef }) => {\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const [categorySection, setCategorySection] = useState({});\r\n\r\n  const { data: dataCategories, loading: loadingCategories } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategories) {\r\n      setIsCategories(dataCategories.categories);\r\n    }\r\n  }, [dataCategories]);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setCategorySection(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <DSection\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      pad=\"20px 0\"\r\n      bgcolor={categorySection.bgColor}\r\n      ref={setRef}\r\n    >\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n        className={categorySection.dark ? \"dark\" : \"\"}\r\n      >\r\n        {categorySection && (\r\n          <>\r\n            {categorySection.title !== \"\" && (\r\n              <FancyText size=\"28px\" alt={categorySection.dark ? true : false}>\r\n                {categorySection.title}\r\n              </FancyText>\r\n            )}\r\n            {categorySection.subtitle !== \"\" && (\r\n              <h3>{categorySection.subtitle}</h3>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <Content height=\"100%\" width=\"100%\">\r\n          {loadingCategories ? (\r\n            <DGrid four gap=\"20px\">\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n            </DGrid>\r\n          ) : (\r\n            <DGrid\r\n              two={categorySection.grid === 2 ? true : false}\r\n              three={categorySection.grid === 3 ? true : false}\r\n              four={categorySection.grid === 4 ? true : false}\r\n              gap=\"20px\"\r\n            >\r\n              {isCategories.map((category) => (\r\n                <JCard key={category._id}>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <div className=\"description\">\r\n                      <p>\r\n                        {category.description.length > 50\r\n                          ? parser(category.description.substr(0, 50) + \"...\")\r\n                          : parser(category.description.substr(0, 50))}\r\n                      </p>\r\n                      <ReadMore hover={0}>View Services</ReadMore>\r\n                    </div>\r\n                  </figcaption>\r\n                  <Link to={`/service/${category._id}`}></Link>\r\n                </JCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategorySection;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int) {\r\n    aestheticiansReceps(limit: $limit) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      dateOfBirth\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { DGrid, DSection } from \"../../styled/containers\";\r\nimport { JCard4 } from \"../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport FancyText from \"../../FancyText\";\r\n\r\nconst TeamSection = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <FancyText size=\"28px\">Our Team</FancyText>\r\n      <DGrid four gap=\"25px\">\r\n        {loading_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          employeesAR &&\r\n          employeesAR.map((employee) => (\r\n            <JCard4 data-emp={employee._id} key={employee._id}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n              <figcaption>\r\n                <h3>\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </h3>\r\n                <h4>{employee.role}</h4>\r\n                <p>\r\n                  {employee.bio.length > 50\r\n                    ? parser(employee.bio.substr(0, 50) + \"...\")\r\n                    : parser(employee.bio.substr(0, 50))}\r\n                </p>\r\n                <ReadMore hover={0}>Read More</ReadMore>\r\n              </figcaption>\r\n              <Link to=\"/about\" className=\"linkToPage\" />\r\n            </JCard4>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n      <Link to=\"/about/#team\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"centet\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2,\r\n  },\r\n};\r\n\r\nexport default TeamSection;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${(props) =>\r\n    props.tiny\r\n      ? \"15px\"\r\n      : props.small\r\n      ? \"30px\"\r\n      : props.medium\r\n      ? \"60px\"\r\n      : \"100px\"};\r\n  height: ${(props) =>\r\n    props.tiny\r\n      ? \"15px\"\r\n      : props.small\r\n      ? \"30px\"\r\n      : props.medium\r\n      ? \"60px\"\r\n      : \"100px\"};\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${(props) =>\r\n      props.tiny\r\n        ? \"12px\"\r\n        : props.small\r\n        ? \"24px\"\r\n        : props.medium\r\n        ? \"48px\"\r\n        : \"72px\"};\r\n    height: ${(props) =>\r\n      props.tiny\r\n        ? \"12px\"\r\n        : props.small\r\n        ? \"24px\"\r\n        : props.medium\r\n        ? \"48px\"\r\n        : \"72px\"};\r\n    margin: ${(props) =>\r\n      props.tiny ? \"2px\" : props.small ? \"3px\" : props.medium ? \"6px\" : \"10px\"};\r\n    border: ${(props) =>\r\n      props.tiny\r\n        ? \"1px solid #fff\"\r\n        : props.small\r\n        ? \"2px solid #fff\"\r\n        : props.medium\r\n        ? \"3px solid #fff\"\r\n        : \"5px  solid #fff\"};\r\n\r\n    border-radius: 50%;\r\n    animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: ${(props) =>\r\n      props.inverted\r\n        ? \"#fff transparent transparent transparent\"\r\n        : \"#203A43 transparent transparent transparent\"};\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = (props) => {\r\n  return (\r\n    <div style={styled}>\r\n      <SpinnerRing {...props}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </SpinnerRing>\r\n      <div style={{ fontWeight: 700 }}>{props.content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styled = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { FETCH_HOME_SECTION, FETCH_ABOUT_CMS } from \"../../../util/graphql/cms\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Section2Styled, Content } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AboutSection = ({ nextSection }) => {\r\n  const [isAboutSection, setIsAboutSection] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const {\r\n    data: aboutChange,\r\n    loading: loadAboutChange,\r\n  } = useQuery(FETCH_HOME_SECTION, { variables: { sectionName: \"ABOUT\" } });\r\n\r\n  useEffect(() => {\r\n    if (aboutChange) {\r\n      setIsAboutSection(aboutChange.homeCMS);\r\n    }\r\n  }, [aboutChange]);\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled\r\n      ref={(el) => (section2 = el)}\r\n      alt={isAboutSection.alt === true ? true : false}\r\n    >\r\n      <div className=\"sec2-container\" ref={nextSection}>\r\n        <div className=\"sec2-inner\">\r\n          {loadAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner medium />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n                <ReadMore>\r\n                  <Link to=\"/about/#story\">Learn More</Link>\r\n                </ReadMore>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={(el) => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default AboutSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst PromoSection1 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/appointment\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default PromoSection1;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_TESTIMONIALS = gql`\r\n  query testimonials($active: Boolean) {\r\n    testimonials(active: $active) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USER_REVIEW = gql`\r\n  query userTestimonial($userId: ID) {\r\n    userTestimonial(userId: $userId) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_VIEWS = gql`\r\n  query testimonialsView($limit: Int) {\r\n    testimonialsView(limit: $limit) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_TESTIMONIALS, FETCH_USER_REVIEW, FETCH_VIEWS };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_VIEWS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, Overlay } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst TestimonialSection = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const { data: dataReviews, loading: loadReviews } = useQuery(FETCH_VIEWS, {\r\n    variables: {\r\n      limit: 0,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonialsView);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      width=\"100%\"\r\n      mcenter\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      {loadReviews ? (\r\n        <Spinner inverted medium />\r\n      ) : (\r\n        <Content width=\"80%\" height=\"auto\" margin=\"auto\" pad=\"50px 0\">\r\n          <Slider {...settings}>\r\n            {reviews &&\r\n              reviews.map((rev) => (\r\n                <DTestimonialCard basic inverted>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          rev.user.photo\r\n                            ? `/images/users/${rev.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n\r\n                    <figcaption>\r\n                      <h4>\r\n                        {rev.user.firstName} {rev.user.lastName}{\" \"}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={rev.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>{rev.message}</blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        </Content>\r\n      )}\r\n\r\n      <Overlay\r\n        bg={\"rgba(0,0,0,0.5)\"}\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        pad=\"20px\"\r\n      >\r\n        <FancyText size=\"28px\" alt>\r\n          What Our Client Say\r\n        </FancyText>\r\n      </Overlay>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  fade: true,\r\n  infinite: true,\r\n  autoplay: true,\r\n  speed: 1000,\r\n  autoplaySpeed: 4000,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nexport default TestimonialSection;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { ScrollUp, DButton } from \"../../styled/utils\";\r\nimport \"./scroll.css\";\r\n\r\nclass ScrollButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(\r\n      0,\r\n      window.pageYOffset - (this.props.scrollPx ? this.props.scrollPx : \"100\")\r\n    );\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delay ? this.props.delay : \"16.66\"\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        title=\"Back to top\"\r\n        className=\"scroll\"\r\n        onClick={() => {\r\n          this.scrollToTop();\r\n        }}\r\n      >\r\n        <ScrollUp name=\"chevron up\" size=\"large\" className=\"arrow-up\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ScrollButton;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategorySection from \"../../components/main/home/CategorySection\";\r\nimport TeamSection from \"../../components/main/home/TeamSection\";\r\nimport AboutSection from \"../../components/main/home/AboutSection\";\r\nimport PromoSection1 from \"../../components/main/home/PromoSection1\";\r\nimport TestimonialSection from \"../../components/main/home/TestimonialSection\";\r\nimport { DContainer } from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Home = () => {\r\n  const nextSection = useRef();\r\n  const card1 = \"/images/card1.jpg\";\r\n  const scrolling = useScroll(300);\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton />}\r\n      <Showcase nextSection={nextSection} />\r\n\r\n      <AboutSection nextSection={nextSection} />\r\n\r\n      <CategorySection cards={card1} />\r\n      <PromoSection1 />\r\n      <TeamSection cards={card1} />\r\n      <TestimonialSection />\r\n      <PromoSection1 />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React from \"react\";\r\nimport { DSection, Content, DImage } from \"../../styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = ({ content, aboutUS }) => {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768\r\n            ? \"column\"\r\n            : aboutUS.missionvision.alt\r\n            ? \"row-reverse\"\r\n            : \"row\"\r\n        }\r\n        margin=\"24px auto 0 auto\"\r\n        ref={content}\r\n        id=\"story\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"24px\"\r\n        >\r\n          <h3>{aboutUS && aboutUS.missionvision.mission.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.mission.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.mission.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.mission.paragraph}</p>\r\n          <h3>{aboutUS && aboutUS.missionvision.vision.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.vision.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.vision.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.vision.paragraph}</p>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.missionvision.photo\r\n                  ? `/images/cms/about/${aboutUS.missionvision.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768 ? \"column\" : aboutUS.story.alt ? \"row-reverse\" : \"row\"\r\n        }\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"90%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.story.photo\r\n                  ? `/images/cms/about/${aboutUS.story.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"20px\"\r\n          style={{ maxHeight: \"90vh\" }}\r\n        >\r\n          <h3>{aboutUS.story.title}</h3>\r\n          {aboutUS.story.subtitle !== \"\" && <h4>{aboutUS.story.subtitle}</h4>}\r\n          <p\r\n            style={{\r\n              fontSize: \"15px\",\r\n              letterSpacing: \"2px\",\r\n              lineHeight: 1.8,\r\n              textAlign: \"justify\",\r\n              overflowWrap: \"break-word\",\r\n              overflow: \"auto\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            {aboutUS.story.paragraph}\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../styled/card\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst TeamDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModal = event => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JCard4 data-emp={employee._id} onClick={handleModal}>\r\n        <div className=\"profile-image\">\r\n          <img\r\n            src={\r\n              employee.photo\r\n                ? `/images/employees/${employee.photo}`\r\n                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n            }\r\n            alt={employee.photo}\r\n          />\r\n        </div>\r\n        <figcaption>\r\n          <h3>\r\n            {employee.title} {employee.firstName} {employee.lastName}\r\n          </h3>\r\n          <h4>{employee.role}</h4>\r\n          <p>\r\n            {employee.bio.length > 50\r\n              ? parser(employee.bio.substr(0, 50) + \"...\")\r\n              : parser(employee.bio.substr(0, 50))}\r\n          </p>\r\n          <ReadMore hover={0}>Read More</ReadMore>\r\n          <div className=\"icons\">\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-reddit\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-vimeo\"></i>\r\n            </a>\r\n          </div>\r\n        </figcaption>\r\n      </JCard4>\r\n      <Modal size=\"small\" open={open} onClose={() => setOpen(false)} closeIcon>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4 top={\"-60px\"}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{employee.firstName}</h1>\r\n                <h4>{employee.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {parser(employee.bio)}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nconst Team = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const { data: dataEmployees, loading: loadingEmployees } = useQuery(\r\n    FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmployees) {\r\n      setEmployees(dataEmployees.aestheticiansReceps);\r\n    }\r\n  }, [dataEmployees]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        fixed\r\n        id=\"team\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n        >\r\n          <h3>Our TEAM</h3>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        pad=\"10px 0\"\r\n        mcenter\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DGrid three gap=\"20px\">\r\n            {loadingEmployees ? (\r\n              <>\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n              </>\r\n            ) : (\r\n              employees &&\r\n              employees.map(emp => <TeamDetails key={emp._id} employee={emp} />)\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","export const scrollView = ref => {\r\n  if (ref.current)\r\n    ref.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\"\r\n    });\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../util/graphql/cms\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport Story from \"../../components/main/about/Story\";\r\nimport Team from \"../../components/main/about/Team\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst About = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n\r\n      <>\r\n        <DSection\r\n          background={\r\n            about.bgImg\r\n              ? `/images/cms/about/${about.bgImg}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          bgcolor={about.bgColor}\r\n          height=\"85vh\"\r\n          fixed\r\n          id=\"about\"\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className=\"dark\"\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>\r\n              {about.title ? about.title : \"ABOUT US\"}\r\n            </h1>\r\n            {loadAbout && <Spinner medium inverted />}\r\n            {about.subtitle !== \"\" && <h3>{about.subtitles}</h3>}\r\n            <MouseScroll onClick={scrollDown} />\r\n          </Content>\r\n          <Overlay bgc={about.overlay ? true : false} />\r\n        </DSection>\r\n        {loadAbout ? (\r\n          <DSection\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"space-around\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            margin=\"20px auto\"\r\n            pad=\"20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Skeleton height=\"100%\" width=\"100%\" />\r\n              <Skeleton width=\"100%\" height={20} count={10} />\r\n            </DGrid>\r\n          </DSection>\r\n        ) : (\r\n          <Story content={content} aboutUS={dataAbout.aboutUsCMS} />\r\n        )}\r\n      </>\r\n\r\n      <Team />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/login\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/home\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted() {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\",\r\n          }}\r\n        >\r\n          <Link to=\"/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        pad=\"0\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n        {data_employee && data_service ? (\r\n          loading_employee || loading_appointments || loading_service ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <DGrid two gap=\"20px\">\r\n              {!times ? (\r\n                <h2>Loading...</h2>\r\n              ) : (\r\n                times.map(time => (\r\n                  <div className=\"pretty p-default p-curve\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"time\"\r\n                      key={time}\r\n                      value={time}\r\n                      onChange={handleTimeChanged}\r\n                    />\r\n                    <div className=\"state p-info-o\">\r\n                      <label style={styles.label}>{time}</label>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </DGrid>\r\n          )\r\n        ) : (\r\n          \"Select Available Time\"\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data_categories) {\r\n      setCategories(data_categories.categories);\r\n    }\r\n  }, [data_categories]);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_serviceEmp) {\r\n      setEmployees(data_serviceEmp.service.employees);\r\n    }\r\n  }, [data_serviceEmp]);\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {categories &&\r\n                categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {services &&\r\n                services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {employees &&\r\n                employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const [service, setService] = useState({});\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setService(data_service.service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {loading_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input value={service.name} readOnly style={{ width: \"60%\" }} />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\n// import { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n            <DSection\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              background={\r\n                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              height=\"100vh\"\r\n            >\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                jusitfy=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Advertisement</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DSection>\r\n        \r\n          <DGrid>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    basic={\r\n                      (values.category === \"\" ||\r\n                        serviceValue === \"\" ||\r\n                        employeeVal === \"\" ||\r\n                        selectedTime === \"\") &&\r\n                      true\r\n                    }\r\n                    disabled={\r\n                      values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst photos = [\r\n  {\r\n    src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\r\n    width: 1,\r\n    height: 1,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  }\r\n];\r\n\r\nconst Gallery = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"gallery\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>Gallery</h1>\r\n          <h3>Love Your Skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        width=\"80%\"\r\n        mcenter\r\n        pad=\"20px 0\"\r\n        ref={content}\r\n      >\r\n        <MyGallery photos={photos} onClick={openLightbox} />\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel\r\n                currentIndex={currentImage}\r\n                views={photos.map(x => ({\r\n                  ...x,\r\n                  srcset: x.srcSet,\r\n                  caption: x.title\r\n                }))}\r\n              />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { Rating, Icon, Modal, Form, TextArea } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalReview = ({ openReview, setOpenReview, user, userReview }) => {\r\n  const [rate, setRate] = useState(userReview ? userReview.rating : 1);\r\n  const [message, setMessage] = useState(userReview ? userReview.message : \"\");\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const mutation = userReview ? UPDATE_REVIEW : ADD_REVIEW;\r\n\r\n  const [addOrUpdate, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      id: userReview && userReview._id,\r\n      rating: rate,\r\n      message: message,\r\n    },\r\n    refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n\r\n    onCompleted() {\r\n      toaster.notify(\r\n        userReview\r\n          ? \"Successfully Update a review\"\r\n          : \"Successfully Added a review\"\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleRate = (e, { rating }) => {\r\n    setRate(rating);\r\n  };\r\n\r\n  const handleMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    addOrUpdate();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"mini\"\r\n      open={openReview}\r\n      onClose={() => {\r\n        setOpenReview(false);\r\n        setEdit(false);\r\n      }}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>\r\n        <Icon name=\"pencil\" />\r\n        Write A Review\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field>\r\n            <Rating\r\n              rating={rate}\r\n              maxRating={5}\r\n              onRate={handleRate}\r\n              icon=\"star\"\r\n              size=\"huge\"\r\n              style={{ margin: \"0 auto\" }}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <TextArea\r\n              style={{ minHeight: 100 }}\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={handleMessage}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {!userReview || edit ? (\r\n          <DButton confirm onClick={handleSave}>\r\n            {loading ? (\r\n              <Spinner inverted small />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleEdit}>\r\n            <Icon name=\"edit\" />\r\n            Edit\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_REVIEW = gql`\r\n  mutation addTestimonial($rating: Int, $message: String) {\r\n    addTestimonial(inputTestimonial: { rating: $rating, message: $message }) {\r\n      _id\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_REVIEW = gql`\r\n  mutation updateTestimonial($id: ID!, $rating: Int, $message: String) {\r\n    updateTestimonial(_id: $id, rating: $rating, message: $message) {\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalReview;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_REVIEW } from \"../../../util/graphql/testimonial\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport ModalReview from \"./ModalReview\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Review = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [userReview, setUserReview] = useState({});\r\n  const [openReview, setOpenReview] = useState(false);\r\n\r\n  const { data: dataUserReview, loading: loadUserReview } = useQuery(\r\n    FETCH_USER_REVIEW,\r\n    {\r\n      variables: { userId: user ? user.userId : \"\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataUserReview) {\r\n      setUserReview(dataUserReview.userTestimonial);\r\n    }\r\n  }, [dataUserReview]);\r\n\r\n  const handleOpenReview = () => {\r\n    if (user) {\r\n      setOpenReview(true);\r\n    } else {\r\n      toaster.notify(\"You must sign in n order to write a review. Thank you!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      margin=\"1rem auto\"\r\n    >\r\n      {loadUserReview ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <>\r\n          <DButton basic radius=\"25px\" center bluer onClick={handleOpenReview}>\r\n            <Icon name=\"pencil\" />\r\n            Write a review\r\n          </DButton>\r\n          <ModalReview\r\n            openReview={openReview}\r\n            setOpenReview={setOpenReview}\r\n            userReview={dataUserReview && dataUserReview.userTestimonial}\r\n            user={user}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, DGrid } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport Review from \"./Review\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\n\r\nconst TestimonialCard = ({ content }) => {\r\n  const [isTestimonials, setIsTestimonials] = useState([]);\r\n\r\n  const {\r\n    data: dataTestimonials,\r\n    loading: loadTestimonials,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataTestimonials) {\r\n      setIsTestimonials(dataTestimonials.testimonials);\r\n    }\r\n  }, [dataTestimonials]);\r\n\r\n  return (\r\n    <DSection height=\"100%\" width=\"100%\" mcenter ref={content}>\r\n      <Review />\r\n      <Content width=\"80%\" height=\"100%\" margin=\"0 auto\" pad=\"50px 0\">\r\n        {loadTestimonials ? (\r\n          <DGrid three gap=\"20px\">\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n          </DGrid>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {isTestimonials &&\r\n              isTestimonials.map((testimonial) => (\r\n                <DTestimonialCard key={testimonial._id}>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          testimonial.user && testimonial.user.photo !== null\r\n                            ? `/images/users/${testimonial.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n                    <figcaption>\r\n                      <h4>\r\n                        {testimonial.user &&\r\n                          testimonial.user.firstName +\r\n                            \" \" +\r\n                            testimonial.user.lastName}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={testimonial.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>\r\n                        <span\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            right: \"10px\",\r\n                            fontSize: \"10px\",\r\n                            color: \"#bbb\",\r\n                          }}\r\n                        >\r\n                          {moment(parseInt(testimonial.updatedAt)).format(\"LL\")}\r\n                        </span>\r\n                        {testimonial.message}\r\n                      </blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        )}\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  infinite: true,\r\n  speed: 500,\r\n  rows: 2,\r\n  slidesPerRow: 3,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesPerRow: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 768,\r\n      settings: {\r\n        slidesPerRow: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default TestimonialCard;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport TestimonialCard from \"../../components/main/testimonial/TestimonialCard\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\n\r\nconst Testimonials = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"tstmnl\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\", fontWeight: 700 }}>\r\n            What Our Client Says\r\n          </h1>\r\n          {/* <h3>We continously improve our service</h3> */}\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <TestimonialCard content={content} />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst Services = () => {\r\n  const sectionDown = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(sectionDown);\r\n  };\r\n\r\n  return (\r\n    <DContainer id=\"services\">\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\" }}>Our Services</h1>\r\n          <h3>It's time to take care of your skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay\r\n          bg={\"linear-gradient(to top, rgba(0,0,0,0.3), rgba(255,255,255,0.1))\"}\r\n        />\r\n      </DSection>\r\n      <DSection\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n        mcenter\r\n        pad=\"24px\"\r\n        height=\"100%\"\r\n        ref={sectionDown}\r\n      >\r\n        <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n          <DGrid three gap=\"24px\" med7={\"1fr\"}>\r\n            {loading ? (\r\n              <>\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n              </>\r\n            ) : (\r\n              isCategories.map(category => (\r\n                <JCard>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <div className=\"description\">\r\n                      <p>\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n                      </p>\r\n                      <ReadMore hover={0}>View Services</ReadMore>\r\n                    </div>\r\n                  </figcaption>\r\n                  <Link to={`/service/${category._id}`}></Link>\r\n                </JCard>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CATEGORY_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { JCard2 } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ServiceDetails from \"../../components/main/services/ServiceDetails\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Service = props => {\r\n  const categoryId = props.match.params._id;\r\n  const history = useHistory();\r\n  const [isReadMore, setIsReadMore] = useState(false);\r\n\r\n  const [isServices, setIsServices] = useState([]);\r\n\r\n  const { data, loading } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsServices(data.category.services);\r\n    }\r\n  }, [data]);\r\n\r\n  const backHist = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"50vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          fluid\r\n          height=\"100%\"\r\n          className=\"dark\"\r\n        >\r\n          {!data ? (\r\n            <Spinner inverted />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ fontSize: \"22px\" }}>{data.category.name}</h1>\r\n              <p style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                {parser(data.category.description)}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Content flex width=\"90%\" height=\"50px\" margin=\"20px auto\">\r\n        <DButton onClick={backHist}>\r\n          <Icon name=\"arrow left\" /> <span>Back to Services</span>\r\n        </DButton>\r\n      </Content>\r\n      {loading ? (\r\n        <DGrid three gap=\"15px\">\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n        </DGrid>\r\n      ) : (\r\n        <DSection\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          mcenter\r\n          pad=\"24px\"\r\n          height=\"100%\"\r\n        >\r\n          <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n            <DGrid three gap=\"15px\">\r\n              {isServices &&\r\n                isServices.map(service => (\r\n                  <JCard2\r\n                    key={service._id}\r\n                    oflow={isReadMore ? true : false}\r\n                    onPointerLeave={() => setIsReadMore(false)}\r\n                  >\r\n                    <div className=\"thumbnail\">\r\n                      <img\r\n                        src={\r\n                          service.photo !== null\r\n                            ? `/images/service/${service.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/169963/photo-1429043794791-eb8f26f44081.jpeg\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"post-content\">\r\n                      <div className=\"category\">{service.name}</div>\r\n                      <h4 className=\"title\">{service.duration} mins</h4>\r\n                      <h4 className=\"title\">Php {service.price}</h4>\r\n                      <div className=\"description\">\r\n                        {isReadMore ? (\r\n                          <p>{parser(service.description)}</p>\r\n                        ) : (\r\n                          <p>\r\n                            {service.description.length > 100\r\n                              ? parser(\r\n                                  service.description.substr(0, 100) + \"...\"\r\n                                )\r\n                              : parser(service.description.substr(0, 100))}\r\n                          </p>\r\n                        )}\r\n                        {service.description.length <= 100 ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <ReadMore onClick={() => setIsReadMore(!isReadMore)}>\r\n                            {isReadMore ? \"Read Less\" : \"Read More\"}\r\n                          </ReadMore>\r\n                        )}\r\n\r\n                        {/* <ServiceDetails service={service} /> */}\r\n                      </div>\r\n                    </div>\r\n                  </JCard2>\r\n                ))}\r\n            </DGrid>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const { userId } = useContext(AuthContext);\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/\">\r\n            Explore\r\n          </DButton>\r\n          <DButton\r\n            as={Link}\r\n            to={userId ? `/account/${userId}` : `/login`}\r\n          >\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/home\" basic>\r\n            Explore\r\n          </DButton>\r\n         \r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid>\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hoverColorText}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  // const [addInfo, setAddInfo] = useState(\"\");\r\n  // const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  // const handleMessage = e => {\r\n  //   setAddInfo(e.target.value);\r\n  // };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n    default:\r\n      return <h1>Something went wrong</h1>;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n \r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {dataLoading ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input value={myAppoint._id} readOnly style={styles.input} />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={myAppoint.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={myAppoint.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${myAppoint.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={myAppoint.status}\r\n                  readOnly\r\n                  style={\r\n                    myAppoint.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : myAppoint.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : myAppoint.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {myAppoint.status === \"CANCELLED\" || myAppoint.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Testimonials from \"./main/Testimonials\";\r\nimport Services from \"./main/Services\";\r\nimport Service from \"./main/Service\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`/`} component={Home} exact />\r\n        <Route path={`/about`} component={About} exact />\r\n        <Route path={`/contact`} component={Contact} exact />\r\n        <Route path={`/gallery`} component={Gallery} exact />\r\n        <Route path={`/testimonials`} component={Testimonials} exact />\r\n        <Route path={`/services&rates`} component={Services} exact />\r\n        <Route path={`/service/:_id`} component={Service} exact />\r\n        <Route path={`/verified/:emailToken`} component={ThankYou} exact />\r\n        <UserPrivateRoute\r\n          path={`/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`/login`} component={Signin} exact />\r\n\r\n        <UserPrivateRoute path={`/account/:_id`} component={Account} exact />\r\n\r\n        <UserPrivateRoute\r\n          path={`/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute path={`/appointment`} component={Appointment} exact />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst UpcommingAppointments = ({ appointments }) => {\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map(appointment => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n  position: relative;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-areas:\r\n      \"header\"\r\n      \"main\"\r\n      \"footer\";\r\n  }\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, DImage, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Image, Icon } from \"semantic-ui-react\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Dropdown\r\n        trigger={\r\n          <DImage circle height=\"50px\" width=\"50px\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"avatar\"\r\n            />\r\n            <Overlay opac={0} hovOpac={1} />\r\n          </DImage>\r\n        }\r\n        pointing=\"top right\"\r\n        icon={null}\r\n      >\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to=\"/zeadmin/paccount\">\r\n            <Icon name=\"user\" />\r\n            Account\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={handleLogout}>\r\n            <Icon name=\"sign out\" />\r\n            Sign out\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      {/* <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton> */}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { MessageSquare } from \"@styled-icons/boxicons-solid/MessageSquare\";\r\nimport { ShortText } from \"@styled-icons/material/ShortText\";\r\nimport { AccountBox } from \"@styled-icons/material/AccountBox\";\r\nimport { AccountCircle } from \"@styled-icons/material/AccountCircle\";\r\nimport { MessageRoundedDetail } from \"@styled-icons/boxicons-solid/MessageRoundedDetail\";\r\nimport { FileDirectory } from \"@styled-icons/octicons/FileDirectory\";\r\nimport { Profile } from \"@styled-icons/icomoon/Profile\";\r\nimport { Report } from \"@styled-icons/boxicons-solid/Report\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\n\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <MessageRoundedDetail size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion title={\"Accounts\"} icon={<AccountBox size=\"16px\" />} fs=\"14px\">\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <AccountCircle size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <BookContent size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <ShortText size=\"16px\" />\r\n            About\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_testimonial\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <MessageSquare size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<FileDirectory size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Profile size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Report size=\"16px\" />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map(user => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"#6dd5ed\"\r\n                color=\"#fff\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <Spinner small />\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"green\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"firebrick\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.bluer}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.secondary}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\n// import { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Cards />\r\n      <DSection height=\"100%\" margin=\"20px 0 20px 0\">\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            {loading ? (\r\n              <Overlay flex justify=\"center\" align=\"center\">\r\n                <h2>Loading...</h2>\r\n              </Overlay>\r\n            ) : (\r\n              appointments && (\r\n                <UpcommingAppointments\r\n                  appointments={appointments}\r\n                  loading={loading}\r\n                />\r\n              )\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  const [isCurrentAppoint, setIsCurrentAppoint] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointmentData) {\r\n      setIsCurrentAppoint(currentAppointmentData.currentAppointments);\r\n    }\r\n  }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee.lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      <DataTable\r\n        title={title}\r\n        columns={columns}\r\n        data={isCurrentAppoint.map((currAppoint) => currAppoint)}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\n// import HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton alert basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButton>\r\n        <DButton confirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport {\r\n  DButton\r\n} from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n        height=\"100vh\"\r\n      >\r\n        <h2 style={{ color: \"#111\" }}>\r\n          {data && (\r\n            <span style={{ color: \"#2980B9\", fontWeight: 700 }}>\r\n              {`${data.appointment.user.firstName} ${data.appointment.user.lastName}'s`}\r\n            </span>\r\n          )}{\" \"}\r\n          Appointment Details\r\n        </h2>\r\n\r\n        {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\"\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\"\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\"\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\"\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ||\r\n              data.appointment.status === \"RESCHEDULED\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButton confirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButton>\r\n                  <ReschedModal\r\n                    isAdmin={true}\r\n                    status={\"VERIFIED\"}\r\n                    setOpen={setOpen}\r\n                    appointmentId={appointmentId}\r\n                  />\r\n                  <DButton alert onClick={() => setOpenCancel(true)}>\r\n                    Cancel\r\n                  </DButton>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )}\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButton,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>No</DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButton confirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButton>\r\n                <DButton alert onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButton>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategory) {\r\n      setCategories(dataCategory.categories);\r\n    }\r\n  }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Exit</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButton alert onClick={() => setOpen(false)}>No</DButton>\r\n            <DButton confirm type=\"submit\">Yes</DButton>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection margin=\"20px 0\" width=\"90%\" mcenter height=\"100%\">\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <Content width=\"100%\" height=\"100%\">\r\n          <DGrid three gap=\"15px\" margin=\"40px 0\">\r\n            {loading ? (\r\n              <>\r\n                <Skeleton width={300} height={300} />\r\n                <Skeleton width={300} height={300} />\r\n              </>\r\n            ) : (\r\n              categories.map(category => (\r\n                <JCard>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <p>{parser(category.description)}</p>\r\n                  </figcaption>\r\n                  <Link to={`/zeadmin/category/${category._id}`} />\r\n                </JCard>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButton alert width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButton>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>No</DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      format: row => {\r\n        const length = 20;\r\n        const descript = row.description;\r\n\r\n        const trimString =\r\n          descript.length > length\r\n            ? descript.substring(0, length) + \"...\"\r\n            : descript.substring(0, length);\r\n\r\n        return <p style={{ fontWeight: 500 }}>{parse(trimString)}</p>;\r\n      }\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = props => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Skeleton width=\"100%\" />\r\n        </>\r\n      ) : (\r\n        <DSection margin=\"20px 0\">\r\n          <h2>{data.category.name}</h2>\r\n          <DGrid>\r\n            <DSection width=\"100%\" height=\"100%\">\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\"\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/service/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </DSection>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Toasted, DButton, DLabel } from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              // onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButton confirm onClick={handleSubmit}>\r\n          {loading ? \"Loading...\" : \"Save\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(true)}>\r\n          Delete\r\n        </DButton>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql/service\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <>\r\n                    <Content height=\"300px\"></Content>\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      className=\"dark\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  // const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n  //   variables: {\r\n  //     inqId: inqId\r\n  //   }\r\n  // });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n  };\r\n\r\n  const handleReplyMsg = e => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingInq ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{inq.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {inq.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {inq.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={inq.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={inq.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n// const READ_INQ = gql`\r\n//   mutation readInquiry($inqId: ID) {\r\n//     readInquiry(_id: $inqId)\r\n//   }\r\n// `;\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const handleRow = e => {\r\n    setInq(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Inquiry ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: row => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      }\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      {loading_inquiries ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map(inq => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n      {inq && <ReplyModal inqId={inq} open={open} setOpen={setOpen} />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"22px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    customStyles={customStyles}\r\n    rounded\r\n  >\r\n    Inquiry List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  id,\r\n  photo,\r\n  fetchEmployee,\r\n}) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            {loading ? (\r\n              <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n                <Spinner small />\r\n              </Content>\r\n            ) : (\r\n              <img\r\n                src={\r\n                  photo !== null\r\n                    ? `/images/employees/${photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            )}\r\n          </DImage>\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        {/* <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleSchedule} fluid>\r\n            Schedule\r\n          </DButton>\r\n        </DCard> */}\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = (e) => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole,\r\n    },\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React from \"react\";\r\nimport { Toasted as Toast } from \"./styled/utils\";\r\nimport { Close } from \"@styled-icons/material/Close\";\r\n\r\nconst Toasted = (props) => {\r\n  return (\r\n    <Toast {...props}>\r\n      <span className=\"description\">{props.children}</span>\r\n      <span className=\"close\">\r\n        <Close size=\"14px\" />\r\n      </span>\r\n    </Toast>\r\n  );\r\n};\r\n\r\nexport default Toasted;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  // const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    employee.dateOfBirth ? new Date(parseInt(employee.dateOfBirth)) : new Date()\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Updated Successfully\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values,\r\n    },\r\n  });\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\nimport moment from \"moment\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {moment(parseInt(employee.dateOfBirth)).format(\"LL\")}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from \"react\";\r\n\r\nconst AccountSched = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = () => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeAuth.id\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {empData && empData.employee ? (\r\n            !empLoading ? (\r\n              <>\r\n                <PhotoBooth\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                  photo={empData.employee.photo}\r\n                  id={empData.employee._id}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                />\r\n                <AccountInfo\r\n                  employee={empData.employee}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                  isAccount={isAccount}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"User ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        {loading_users ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map(getUser => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments]\r\n          }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\"\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton confirm onClick={() => setNewConfirm(true)}>\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = props => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SigninForm = () => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function convertArrayOfObjectsToCSV(array, data) {\r\n    let result;\r\n\r\n    const columnDelimiter = \",\";\r\n    const lineDelimiter = \"\\n\";\r\n    const keys = Object.keys(data[0]);\r\n\r\n    result = \"\";\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr = 0;\r\n      keys.forEach(key => {\r\n        if (ctr > 0) result += columnDelimiter;\r\n\r\n        result += item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\");\r\n    let csv = convertArrayOfObjectsToCSV(array);\r\n    if (csv == null) return;\r\n\r\n    const filename = \"export.csv\";\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv));\r\n    link.setAttribute(\"download\", filename);\r\n    link.click();\r\n  }\r\n\r\n  const Export = ({ onExport }) => (\r\n    <DButton onClick={e => onExport(e.target.value)}>Export</DButton>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const actionsMemo = useMemo(\r\n    () => <Export onExport={() => downloadCSV(historyAppointments)} />,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!historyAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={historyAppointmentData.appointmentHistory}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          actions={actionsMemo}\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst FileReport = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n              File Report\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <DGrid>\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useUploadFile = () => {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  const onSelectedFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  return { preview, selectedFile, setSelectedFile, onSelectedFile };\r\n};\r\n\r\nexport default useUploadFile;\r\n","import React, { useRef } from \"react\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../../../styled/containers\";\r\n\r\nconst ImageSection = ({\r\n  isDark,\r\n  isPosition,\r\n  isColor,\r\n  preview,\r\n  selectedFile,\r\n  onSelectedFile,\r\n  values,\r\n  bgImg\r\n}) => {\r\n  const fileInput = useRef();\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n        <DImage dashed height=\"100%\" width=\"100%\">\r\n          {selectedFile ? (\r\n            <img src={preview} alt=\"showcase\" />\r\n          ) : (\r\n            bgImg && <img src={`/images/cms/home/${bgImg}`} alt=\"showcase\" />\r\n          )}\r\n        </DImage>\r\n\r\n        <Overlay\r\n          flex\r\n          bgr={isDark && isPosition === \"right\" ? true : false}\r\n          bgl={isDark && isPosition === \"left\" ? true : false}\r\n          bgc={isDark && isPosition === \"center\" ? true : false}\r\n          justify={\r\n            isPosition === \"left\"\r\n              ? \"flex-start\"\r\n              : isPosition === \"right\"\r\n              ? \"flex-end\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          talign={\r\n            isPosition === \"left\"\r\n              ? \"left\"\r\n              : isPosition === \"right\"\r\n              ? \"right\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          align=\"center\"\r\n          className={isDark ? \"dark\" : \"\"}\r\n        >\r\n          <div className=\"overlay-content\">\r\n            <h3>{values.title ? values.title : \"TITLE\"}</h3>\r\n            <h4>{values.subtitle ? values.subtitle : \"SUBTITLE\"}</h4>\r\n            <p className=\"ps\">\r\n              {values.paragraph\r\n                ? values.paragraph\r\n                : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec posuere ante orci, at interdum nunc maximus eu. Pellentesque tempus est ligula, sit ame\"}\r\n            </p>\r\n          </div>\r\n        </Overlay>\r\n      </DSection>\r\n\r\n      <Content width=\"80%\" margin=\"0 auto\" flex justify=\"center\" align=\"center\">\r\n        <input\r\n          type=\"file\"\r\n          value={undefined}\r\n          onChange={onSelectedFile}\r\n          style={{ display: \"none\" }}\r\n          ref={fileInput}\r\n        />\r\n        <Popup\r\n          content=\"Select image for background slide\"\r\n          trigger={\r\n            <Icon\r\n              name=\"camera\"\r\n              size=\"large\"\r\n              onClick={handleInputClick}\r\n              style={{ cursor: \"pointer\", color: \"#2193b0\", opacity: 0.75 }}\r\n              className=\"icon_camera-custom\"\r\n            />\r\n          }\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSection;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../../styled/containers\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport useUploadFile from \"../../../../../util/hooks/useUploadFile\";\r\nimport ImageSection from \"./ImageSection\";\r\nimport toaster from \"toasted-notes\";\r\nimport \"./modal.custom.css\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalSlide = ({ open, setOpen, showcase }) => {\r\n  const [isDark, setIsDark] = useState(showcase ? showcase.dark : false);\r\n  const [isPosition, setIsPosition] = useState(\r\n    showcase ? showcase.position : \"left\"\r\n  );\r\n\r\n  const [isColor, setIsColor] = useState(\r\n    showcase ? showcase.bgColor : \"#FFFFFF\"\r\n  );\r\n  const [values, setValues] = useState({\r\n    title: showcase ? showcase.title : \"\",\r\n    subtitle: showcase ? showcase.subtitle : \"\",\r\n    paragraph: showcase ? showcase.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  // ADD OR UPDATE\r\n  const mutation = showcase ? UPDATE_SLIDE : ADD_NEW_SLIDE;\r\n\r\n  const [addOrUpdateSlide, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      showcaseId: showcase && showcase._id,\r\n      ...values,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      position: isPosition,\r\n      dark: isDark,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } },\r\n    ],\r\n    update() {\r\n      if (!showcase) {\r\n        values.title = \"\";\r\n        values.subtitle = \"\";\r\n        values.paragraph = \"\";\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n      setIsDark(false);\r\n      setIsPosition(\"left\");\r\n      setSelectedFile();\r\n      setIsColor(\"#E9E4F0\");\r\n      if (showcase) {\r\n        toaster.notify(\"Update Slide Successfully\");\r\n      } else {\r\n        toaster.notify(\"Add New Slide Successfully\");\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handlePosition = (event) => {\r\n    setIsPosition(event.target.value);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    addOrUpdateSlide();\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Add New Slide </Modal.Header>\r\n      <DGrid custom=\"2fr 1fr\" gap=\"10px\">\r\n        <Modal.Content style={{ padding: \"10px\" }}>\r\n          <ImageSection\r\n            isPosition={isPosition}\r\n            isDark={isDark}\r\n            isColor={isColor}\r\n            preview={preview}\r\n            selectedFile={selectedFile}\r\n            onSelectedFile={onSelectedFile}\r\n            values={values}\r\n            bgImg={showcase && showcase.bgImg}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Content scrolling>\r\n          <Content pad=\"10px\" width=\"100%\" height=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={values.subtitle || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  maxLength=\"150\"\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={values.paragraph || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Text Positioning</label>\r\n                <Content\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"left\"\r\n                      checked={isPosition === \"left\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Left</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"center\"\r\n                      checked={isPosition === \"center\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Center</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"right\"\r\n                      checked={isPosition === \"right\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Right</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay{\" \"}\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Dark</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n        </Modal.Content>\r\n      </DGrid>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" confirm onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n        <DButton alert>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_NEW_SLIDE = gql`\r\n  mutation addNewShowCase(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    addNewShowCase(\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_SLIDE = gql`\r\n  mutation updateShowcase(\r\n    $showcaseId: ID!\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    updateShowcase(\r\n      showcaseId: $showcaseId\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst NewSlide = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"add\" />\r\n        New Slide\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst EditSlide = ({ showcase }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"edit\" style={{ color: \"white\" }} fitted />\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} showcase={showcase} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSlide;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst RemoveSlide = ({ showcase }) => {\r\n  const [isOpenRemove, setIsOpenRemove] = useState(false);\r\n\r\n  const [removeSlide, { loading }] = useMutation(REMOVE_SLIDE, {\r\n    variables: {\r\n      showcaseId: showcase._id\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } }\r\n    ],\r\n    onCompleted() {\r\n      setIsOpenRemove(false);\r\n      toaster.notify(\"Slide Remove\", { position: \"bottom-right\" });\r\n    }\r\n  });\r\n\r\n  const handleRemoveSlide = e => {\r\n    e.preventDefault();\r\n    removeSlide();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton alert onClick={() => setIsOpenRemove(true)}>\r\n        <Icon name=\"trash\" fitted />\r\n      </DButton>\r\n      <Modal\r\n        basic\r\n        open={isOpenRemove}\r\n        closeIcon\r\n        onClose={() => setIsOpenRemove(false)}\r\n      >\r\n        <Modal.Header>Slide ID: {showcase._id}</Modal.Header>\r\n        <Modal.Content>\r\n          <h1>Are you sure you want to remove this slide?</h1>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton basic confirm onClick={handleRemoveSlide}>\r\n            {loading ? <Spinner inverted small /> : \"Yes\"}\r\n          </DButton>\r\n          <DButton basic alert onClick={() => setIsOpenRemove(false)}>\r\n            No\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst REMOVE_SLIDE = gql`\r\n  mutation removeShowcase($showcaseId: ID!) {\r\n    removeShowcase(showcaseId: $showcaseId)\r\n  }\r\n`;\r\n\r\nexport default RemoveSlide;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport {\r\n  DShowCase,\r\n  Overlay,\r\n  DSection,\r\n  DImage\r\n} from \"../../../../styled/containers\";\r\nimport NewSlide from \"./NewSlide\";\r\nimport EditSlide from \"./EditSlide\";\r\nimport RemoveSlide from \"./RemoveSlide\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Showcase = () => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  const { data: showcaseData, loading: dataLoading } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" mcenter>\r\n      <NewSlide />\r\n      <div style={{ position: \"relative\" }}>\r\n        {dataLoading ? (\r\n          <DShowCase height=\"80vh\">\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src=\"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                alt=\"showcase\"\r\n              />\r\n            </DImage>\r\n          </DShowCase>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {showcase.map(sc => (\r\n              <DShowCase\r\n                height=\"80vh\"\r\n                key={sc._id}\r\n                background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n                bgcolor={sc.bgColor}\r\n              >\r\n                <Overlay\r\n                  flex\r\n                  bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                  bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                  bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                  justify={\r\n                    sc.position === \"left\"\r\n                      ? \"flex-start\"\r\n                      : sc.position === \"right\"\r\n                      ? \"flex-end\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  talign={\r\n                    sc.position === \"left\"\r\n                      ? \"left\"\r\n                      : sc.position === \"right\"\r\n                      ? \"right\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  align=\"center\"\r\n                  className={sc.dark ? \"dark\" : \"\"}\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h1>{sc.title}</h1>\r\n                    <h2>{sc.subtitle}</h2>\r\n                    <p>{sc.paragraph}</p>\r\n                  </div>\r\n                </Overlay>\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 20,\r\n                    zIndex: 2,\r\n                    width: \"auto\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <EditSlide showcase={sc} />\r\n                  <RemoveSlide showcase={sc} />\r\n                </div>\r\n              </DShowCase>\r\n            ))}\r\n          </Slider>\r\n        )}\r\n      </div>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport Spinner from \"../../../../Spinner\";\r\n\r\nconst EditModal = ({ aboutBool }) => {\r\n  const [updateAboutSection, { loading }] = useMutation(UPDATE_ABOUT_SECTION, {\r\n    variables: { sectionName: \"ABOUT\" },\r\n  });\r\n\r\n  const handleReverse = () => {\r\n    updateAboutSection();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner small />\r\n      ) : (\r\n        <Popup\r\n          content=\"Toggle Position\"\r\n          trigger={\r\n            <div className=\"pretty p-switch p-fill p-toggle\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"alt\"\r\n                value={aboutBool}\r\n                onChange={handleReverse}\r\n                checked={aboutBool === true ? true : false}\r\n              />\r\n              <div className=\"state p-primary p-on\">\r\n                <label style={{ fontWeight: 500 }}>Reverse</label>\r\n              </div>\r\n              <div className=\"state p-warning p-off\">\r\n                <label style={{ fontWeight: 500 }}>Default</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n          inverted\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_SECTION = gql`\r\n  mutation updateAboutSection($sectionName: String!) {\r\n    updateAboutSection(sectionName: $sectionName) {\r\n      _id\r\n      sectionName\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_HOME_SECTION,\r\n  FETCH_ABOUT_CMS,\r\n} from \"../../../../../util/graphql/cms\";\r\nimport { Section2Styled, Content } from \"../../../../styled/containers\";\r\nimport EditModal from \"./EditModal\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst SectionAbout = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAboutSection, loading: loadingAboutSection } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: { sectionName: \"ABOUT\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataAboutSection) {\r\n      setIsAbout(dataAboutSection.homeCMS);\r\n    }\r\n  }, [dataAboutSection]);\r\n\r\n  const { data: dataAbout, loading: loadingAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  return (\r\n    <Section2Styled visible width=\"90%\" alt={isAbout.alt ? true : false}>\r\n      <div className=\"switch\">\r\n        {loadingAboutSection ? (\r\n          <Spinner tiny />\r\n        ) : (\r\n          <EditModal aboutBool={dataAboutSection.homeCMS.alt} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"sec2-container\">\r\n        <div className=\"sec2-inner\">\r\n          {loadingAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\">\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default SectionAbout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../../../util/graphql/service\";\r\nimport { DGrid, Content } from \"../../../../styled/containers\";\r\nimport { JCard } from \"../../../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst CategoryCards = ({ gridCount }) => {\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <Content height=\"100%\" width=\"100%\">\r\n      {loading ? (\r\n        <DGrid four gap=\"20px\">\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n        </DGrid>\r\n      ) : (\r\n        <DGrid\r\n          two={gridCount === 2 ? true : false}\r\n          three={gridCount === 3 ? true : false}\r\n          four={gridCount === 4 ? true : false}\r\n          gap=\"20px\"\r\n        >\r\n          {isCategories.map(category => (\r\n            <JCard\r\n              titleSize=\"24px\"\r\n              height=\"calc(100% - 30%)\"\r\n              key={category._id}\r\n            >\r\n              <img\r\n                src={\r\n                  category.photo !== null\r\n                    ? `/images/service/${category.photo}`\r\n                    : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                }\r\n                alt={category.name}\r\n              />\r\n              <figcaption>\r\n                <h3>{parser(category.name)}</h3>\r\n                <div className=\"description\">\r\n                  <p>\r\n                    {category.description.length > 50\r\n                      ? parser(category.description.substr(0, 50) + \"...\")\r\n                      : parser(category.description.substr(0, 50))}\r\n                  </p>\r\n                </div>\r\n              </figcaption>\r\n            </JCard>\r\n          ))}\r\n        </DGrid>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { Content } from \"../../../../styled/containers\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\"\r\n];\r\n\r\nconst UpdateSectCategory = ({\r\n  setOpenCatSec,\r\n  openCatSec,\r\n  categorySectionInfo\r\n}) => {\r\n  const [isColor, setIsColor] = useState(\r\n    categorySectionInfo && categorySectionInfo.bgColor\r\n  );\r\n\r\n  const [isDark, setIsDark] = useState(\r\n    categorySectionInfo && categorySectionInfo.dark\r\n  );\r\n\r\n  const [gridCount, setGridCount] = useState(\r\n    categorySectionInfo && categorySectionInfo.grid\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: categorySectionInfo && categorySectionInfo.title,\r\n    subtitle: categorySectionInfo && categorySectionInfo.subtitle,\r\n    paragraph: categorySectionInfo && categorySectionInfo.paragraph\r\n  });\r\n\r\n  const [updateSectionCategory, { loading }] = useMutation(\r\n    UPDATE_CATEGORY_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n        ...values,\r\n        grid: gridCount,\r\n        dark: isDark,\r\n        bgColor: isColor\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_HOME_SECTION, variables: { sectionName: \"CATEGORY\" } }\r\n      ],\r\n      onCompleted() {\r\n        setOpenCatSec(false);\r\n        toaster.notify(\"Update Category Section\");\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = color => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleGrid = event => {\r\n    setGridCount(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    updateSectionCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={openCatSec}\r\n      onClose={() => setOpenCatSec(false)}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>Update Section Category</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Form>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              name=\"title\"\r\n              value={values.title || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Subtitle</label>\r\n            <input\r\n              name=\"subtitle\"\r\n              value={values.subtitle || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Paragraph</label>\r\n            <TextArea\r\n              maxLength=\"150\"\r\n              style={{ minHeight: 100 }}\r\n              name=\"paragraph\"\r\n              value={values.paragraph || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Background-color{\" \"}\r\n              <Popup\r\n                content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n\r\n            <BlockPicker\r\n              width=\"200px\"\r\n              triangle=\"hide\"\r\n              color={isColor}\r\n              colors={colors}\r\n              onChange={handleChangeComplete}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Text Contrast{\" \"}\r\n              <Popup\r\n                content=\"Change the text to white if background is dark and dark text if background is light\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n            <Content\r\n              flex\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-switch p-fill\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"dark\"\r\n                  value={isDark}\r\n                  checked={isDark === true ? true : false}\r\n                  onChange={handleDark}\r\n                />\r\n                <div className=\"state p-info\">\r\n                  <label>{isDark === true ? \"Light\" : \"Dark\"}</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Grid Count Display</label>\r\n            <Content\r\n              flex\r\n              justify=\"space-around\"\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"2\"\r\n                  checked={gridCount === 2 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Two</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"3\"\r\n                  checked={gridCount === 3 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Three</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"4\"\r\n                  checked={gridCount === 4 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Four</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_CATEGORY_SECTION = gql`\r\n  mutation updateHomeSection(\r\n    $sectionName: String\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $grid: Int\r\n  ) {\r\n    updateHomeSection(\r\n      sectionName: $sectionName\r\n      inputHomeContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        grid: $grid\r\n      }\r\n    ) {\r\n      _id\r\n      sectionName\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgColor\r\n      dark\r\n      grid\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UpdateSectCategory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { DSection, Content } from \"../../../../styled/containers\";\r\nimport { DButtonFree } from \"../../../../styled/utils\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport FancyText from \"../../../../FancyText\";\r\nimport CategoryCards from \"./CategoryCards\";\r\nimport UpdateSectCategory from \"./UpdateSectCategory\";\r\n\r\nconst SectionCategory = () => {\r\n  const [sectCategory, setSectCategory] = useState({});\r\n  const [openCatSec, setOpenCatSec] = useState(false);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setSectCategory(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        margin=\"48px auto\"\r\n        pad=\"10px\"\r\n        bgcolor={sectCategory.bgColor}\r\n      >\r\n        <Popup\r\n          content=\"Update Category Section\"\r\n          trigger={\r\n            <DButtonFree top={0} right={0} onClick={() => setOpenCatSec(true)}>\r\n              <Icon name=\"edit\" fitted />\r\n            </DButtonFree>\r\n          }\r\n          position=\"top right\"\r\n        />\r\n\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Content\r\n            width=\"auto\"\r\n            height=\"auto\"\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            className={sectCategory.dark ? \"dark\" : \"\"}\r\n          >\r\n            <FancyText alt={sectCategory.dark ? true : false}>\r\n              {sectCategory.title}\r\n            </FancyText>\r\n            <h3>\r\n              {sectCategory.subtitle !== \"\"\r\n                ? sectCategory.subtitle\r\n                : \"SUBTITLE\"}\r\n            </h3>\r\n            <p>\r\n              {sectCategory.paragraph !== \"\"\r\n                ? sectCategory.paragraph\r\n                : \"PARAGRAPH\"}\r\n            </p>\r\n          </Content>\r\n          {!loadSectionCategory && (\r\n            <UpdateSectCategory\r\n              openCatSec={openCatSec}\r\n              setOpenCatSec={setOpenCatSec}\r\n              categorySectionInfo={sectionCategory.homeCMS}\r\n            />\r\n          )}\r\n\r\n          <CategoryCards gridCount={sectCategory.grid} />\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionCategory;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/showcase/Showcase\";\r\nimport SectionAbout from \"../../../components/admin/cms/home/sectionabout/SectionAbout\";\r\nimport SectionCategory from \"../../../components/admin/cms/home/sectioncategory/SectionCategory\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Showcase />\r\n      <SectionAbout />\r\n      <SectionCategory />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalHeading = ({ isAbout }) => {\r\n  const fileInput = useRef();\r\n  const [openHead, setOpenHead] = useState(false);\r\n  const [isDark, setIsDark] = useState(isAbout ? isAbout.dark : false);\r\n  const [isOverlay, setIsOverlay] = useState(isAbout ? isAbout.overlay : false);\r\n  const [headers, setHeaders] = useState({\r\n    title: isAbout ? isAbout.title : \"\",\r\n    subtitle: isAbout ? isAbout.subtitle : \"\",\r\n    paragraph: isAbout ? isAbout.paragraph : \"\",\r\n  });\r\n  const [isColor, setIsColor] = useState(isAbout ? isAbout.bgColor : \"#FFFFFF\");\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  const [updateAboutUs, { loading }] = useMutation(UPDATE_ABOUT_HEADER, {\r\n    variables: {\r\n      ...headers,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      dark: isDark,\r\n      overlay: isOverlay,\r\n    },\r\n\r\n    onCompleted() {\r\n      setOpenHead(false);\r\n      toaster.notify(\"Update Successful\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeHeaders = (e) => {\r\n    setHeaders({ ...headers, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleOverlay = () => {\r\n    setIsOverlay(!isOverlay);\r\n  };\r\n\r\n  const handleSaveHeader = () => {\r\n    updateAboutUs();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenHead(true)}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openHead} onClose={() => setOpenHead(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isAbout.bgImg && (\r\n                    <img\r\n                      src={`/images/cms/about/${isAbout.bgImg}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n\r\n              <Overlay bgc={isOverlay ? true : false}>\r\n                <Content\r\n                  flex\r\n                  justify=\"center\"\r\n                  direct=\"column\"\r\n                  align=\"center\"\r\n                  width=\"50%\"\r\n                  margin=\"0 auto\"\r\n                  height=\"100%\"\r\n                  style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n                  className={isDark ? \"dark\" : \"\"}\r\n                >\r\n                  <h1 style={{ fontSize: \"22px\" }}>\r\n                    {headers.title ? headers.title : \"TITLE\"}\r\n                  </h1>\r\n                  <h4> {headers.subtitle ? headers.subtitle : \"SUBTITLE\"}</h4>\r\n                </Content>\r\n              </Overlay>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={headers.title || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={headers.subtitle || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Text Contrast\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Light</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"overlay\"\r\n                      value={isOverlay}\r\n                      checked={isOverlay === true ? true : false}\r\n                      onChange={handleOverlay}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Off</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveHeader}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_HEADER = gql`\r\n  mutation updateAboutUs(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $overlay: Boolean\r\n  ) {\r\n    updateAboutUs(\r\n      inputAbout: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        overlay: $overlay\r\n      }\r\n    ) {\r\n      _id\r\n      title\r\n      subtitle\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalHeading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, Overlay } from \"../../../styled/containers\";\r\nimport MouseScroll from \"../../../MouseScroll\";\r\nimport ModalHeading from \"./ModalHeading\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Heading = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n\r\n  const {\r\n    data: dataAboutContent,\r\n    loading: loadAboutContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataAboutContent) {\r\n      setIsAbout(dataAboutContent.aboutUsCMS);\r\n    }\r\n  }, [dataAboutContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadAboutContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          background={isAbout.bgImg && `/images/cms/about/${isAbout.bgImg}`}\r\n          bgcolor={isAbout.bgColors}\r\n          width=\"90%\"\r\n          mcenter\r\n          height=\"55vh\"\r\n          fixed\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className={isAbout.dark ? \"dark\" : \"\"}\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>{isAbout.title}</h1>\r\n            {isAbout.subtitle !== \"\" && <h4>{isAbout.subtitle}</h4>}\r\n            <MouseScroll />\r\n          </Content>\r\n          <Overlay bgc={isAbout.overlay ? true : false} />\r\n          <ModalHeading isAbout={dataAboutContent.aboutUsCMS} />\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, TextArea } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalStory = ({ isStory }) => {\r\n  const fileInput = useRef();\r\n  const [openStory, setOpenStory] = useState(false);\r\n  const [reverse, setReverse] = useState(isStory ? isStory.alt : false);\r\n\r\n  const [stories, setStories] = useState({\r\n    title: isStory ? isStory.title : \"\",\r\n    subtitle: isStory ? isStory.subtitle : \"\",\r\n    paragraph: isStory ? isStory.paragraph : \"\",\r\n  });\r\n\r\n  const { preview, selectedFile, onSelectedFile } = useUploadFile();\r\n\r\n  const [updateStory, { loading }] = useMutation(UPDATE_ABOUT_STORY, {\r\n    variables: {\r\n      ...stories,\r\n      photo: selectedFile,\r\n      alt: reverse,\r\n    },\r\n    onCompleted() {\r\n      setOpenStory(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeStory = (e) => {\r\n    setStories({ ...stories, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverse = () => {\r\n    setReverse(!reverse);\r\n  };\r\n\r\n  const handleSaveStory = () => {\r\n    updateStory();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenStory(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openStory} onClose={() => setOpenStory(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isStory.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isStory.photo}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={stories.title || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={stories.subtitle || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={stories.paragraph || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={reverse}\r\n                      checked={reverse === true ? true : false}\r\n                      onChange={handleReverse}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveStory}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_STORY = gql`\r\n  mutation updateStory(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateStory(\r\n      inputStory: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      _id\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalStory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\nimport ModalStory from \"./ModalStory\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isStory, setIsStory] = useState({});\r\n\r\n  const {\r\n    data: dataStoryContent,\r\n    loading: loadStoryContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataStoryContent) {\r\n      setIsStory(dataStoryContent.aboutUsCMS.story);\r\n    }\r\n  }, [dataStoryContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadStoryContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          mcenter\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768 ? \"column\" : isStory.alt ? \"row-reverse\" : \"row\"\r\n          }\r\n        >\r\n          <ModalStory isStory={dataStoryContent.aboutUsCMS.story} />\r\n\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isStory\r\n                    ? `/images/cms/about/${isStory.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"20px\"\r\n            style={{ maxHeight: \"90vh\" }}\r\n          >\r\n            <h3>{isStory.title}</h3>\r\n            {isStory.subtitle !== \"\" && <h4>{isStory.subtitle}</h4>}\r\n            <p\r\n              style={{\r\n                fontSize: \"15px\",\r\n                letterSpacing: \"2px\",\r\n                lineHeight: 1.8,\r\n                textAlign: \"justify\",\r\n                overflowWrap: \"break-word\",\r\n                overflow: \"auto\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              {isStory.paragraph}\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, Divider, TextArea } from \"semantic-ui-react\";\r\nimport { DImage, Content, DSection, DGrid } from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalMissionVision = ({ isMissionVision }) => {\r\n  const fileInputMV = useRef();\r\n  const [openMission, setOpenMission] = useState(false);\r\n  const [reverseMV, setReverseMV] = useState(\r\n    isMissionVision ? isMissionVision.alt : false\r\n  );\r\n\r\n  const [valuesMV, setValuesMV] = useState({\r\n    mtitle: isMissionVision ? isMissionVision.mission.title : \"\",\r\n    msubtitle: isMissionVision ? isMissionVision.mission.subtitle : \"\",\r\n    mparagraph: isMissionVision ? isMissionVision.mission.paragraph : \"\",\r\n    vtitle: isMissionVision ? isMissionVision.vision.title : \"\",\r\n    vsubtitle: isMissionVision ? isMissionVision.vision.subtitle : \"\",\r\n    vparagraph: isMissionVision ? isMissionVision.vision.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview: previewMV,\r\n    selectedFile: selectedFileMV,\r\n    onSelectedFile: onSelectedFileMV,\r\n  } = useUploadFile();\r\n\r\n  const [updateMission, { loading }] = useMutation(UPDATE_ABOUT_MISSIONVISION, {\r\n    variables: {\r\n      ...valuesMV,\r\n      photo: selectedFileMV,\r\n      alt: reverseMV,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_ABOUT_CMS, variables: { contentName: \"ABOUTUS\" } },\r\n    ],\r\n    onCompleted() {\r\n      setOpenMission(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClickMV = () => {\r\n    fileInputMV.current.click();\r\n  };\r\n\r\n  const handleChangeValues = (e) => {\r\n    setValuesMV({ ...valuesMV, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverseMV = () => {\r\n    setReverseMV(!reverseMV);\r\n  };\r\n\r\n  const handleSaveMV = () => {\r\n    updateMission();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        onClick={() => setOpenMission(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openMission} onClose={() => setOpenMission(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid two gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFileMV ? (\r\n                  <img src={previewMV} alt=\"showcase\" />\r\n                ) : (\r\n                  isMissionVision.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isMissionVision.photo}`}\r\n                      alt=\"about\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFileMV}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInputMV}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClickMV}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Divider horizontal>Mission</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"mtitle\"\r\n                  value={valuesMV.mtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"msubtitle\"\r\n                  value={valuesMV.msubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"mparagraph\"\r\n                  value={valuesMV.mparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Divider horizontal>Vision</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"vtitle\"\r\n                  value={valuesMV.vtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"vsubtitle\"\r\n                  value={valuesMV.vsubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"vparagraph\"\r\n                  value={valuesMV.vparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"reverse\"\r\n                      value={reverseMV}\r\n                      checked={reverseMV === true ? true : false}\r\n                      onChange={handleReverseMV}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveMV}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_MISSIONVISION = gql`\r\n  mutation updateMission(\r\n    $mtitle: String\r\n    $msubtitle: String\r\n    $mparagraph: String\r\n    $vtitle: String\r\n    $vsubtitle: String\r\n    $vparagraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateMission(\r\n      inputMissionVision: {\r\n        mtitle: $mtitle\r\n        msubtitle: $msubtitle\r\n        mparagraph: $mparagraph\r\n        vtitle: $vtitle\r\n        vsubtitle: $vsubtitle\r\n        vparagraph: $vparagraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalMissionVision;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport ModalMissionVision from \"./ModalMissionVision\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isMission, setIsMission] = useState({});\r\n\r\n  const { data: dataMissionVision, loading: loadMissionVision } = useQuery(\r\n    FETCH_ABOUT_CMS,\r\n    {\r\n      variables: {\r\n        contentName: \"ABOUTUS\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataMissionVision) {\r\n      setIsMission(dataMissionVision.aboutUsCMS.missionvision);\r\n    }\r\n  }, [dataMissionVision]);\r\n\r\n  return (\r\n    <>\r\n      {loadMissionVision ? (\r\n        <DSection\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          mcenter\r\n        >\r\n          <Skeleton width=\"50%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768\r\n              ? \"column\"\r\n              : isMission.alt === true\r\n              ? \"row-reverse\"\r\n              : \"row\"\r\n          }\r\n          margin=\"24px auto\"\r\n        >\r\n          <ModalMissionVision\r\n            isMissionVision={dataMissionVision.aboutUsCMS.missionvision}\r\n          />\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"24px\"\r\n          >\r\n            <h3>{isMission.mission && isMission.mission.title}</h3>\r\n            {isMission.mission && isMission.mission.subtitle !== \"\" && (\r\n              <h4>{isMission.mission.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.mission && isMission.mission.paragraph}</p>\r\n            <h3>{isMission.vision && isMission.vision.title}</h3>\r\n            {isMission.vision && isMission.vision.subtitle !== \"\" && (\r\n              <h4>{isMission.vision.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.vision && isMission.vision.paragraph}</p>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isMission.photo\r\n                    ? `/images/cms/about/${isMission.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n      s\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Heading from \"../../../components/admin/cms/about/Heading\";\r\nimport Story from \"../../../components/admin/cms/about/Story\";\r\nimport Mission from \"../../../components/admin/cms/about/Mission\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Layout>\r\n      <Content\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        margin=\"20px auto\"\r\n        align=\"center\"\r\n      >\r\n        <div>\r\n          <h3>Content Management</h3>\r\n        </div>\r\n        <div style={{ margin: \"0 1em\" }}>\r\n          <Icon name=\"angle right\" size=\"large\" fitted />\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to=\"/zeadmin/cms_about\"\r\n            style={{\r\n              fontSize: \"18px\",\r\n              fontWeight: 700,\r\n              borderBottom: \"2px solid\",\r\n              paddingBottom: \"5px\",\r\n            }}\r\n          >\r\n            About Us\r\n          </Link>\r\n        </div>\r\n      </Content>\r\n      <Heading />\r\n      <Mission />\r\n      <Story />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst ToggleView = ({ swid, tggl }) => {\r\n  const [toggleValue, setToggleValue] = useState(\"\");\r\n\r\n  const [toggleTestimonial, { loading: loadToggle }] = useMutation(\r\n    TOGGLE_REVIEW,\r\n    {\r\n      variables: {\r\n        id: toggleValue,\r\n      },\r\n      refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n    }\r\n  );\r\n\r\n  const hoverSwitch = (e) => {\r\n    setToggleValue(e.currentTarget.dataset.sid);\r\n  };\r\n\r\n  const handleSwitch = (e) => {\r\n    toggleTestimonial();\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      content=\"Switch on to display testimonial in Home Page\"\r\n      style={style.popContent}\r\n      inverted\r\n      trigger={\r\n        <div\r\n          className=\"pretty p-switch p-fill\"\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          {loadToggle ? (\r\n            <Spinner tiny />\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"checkbox\"\r\n                data-sid={swid}\r\n                checked={tggl === true ? true : false}\r\n                onMouseOver={hoverSwitch}\r\n                onChange={handleSwitch}\r\n              />\r\n              <div className=\"state p-success\">\r\n                <label></label>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID!) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n      view\r\n    }\r\n  }\r\n`;\r\n\r\nconst style = {\r\n  popContent: {\r\n    borderRadius: 0,\r\n    opacity: 0.7,\r\n    padding: \"2em\",\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default ToggleView;\r\n","import React, { useState } from \"react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\n\r\nconst ModalView = ({ ridd, open, setOpen }) => {\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Content>{ridd}</Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalView;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\n\r\nimport { Modal, Icon, Popup } from \"semantic-ui-react\";\r\nimport { Archive } from \"@styled-icons/boxicons-solid/Archive\";\r\nimport { DeleteForever } from \"@styled-icons/material/DeleteForever\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\n\r\nconst DeleteView = ({ ridd, rvw, isDltModal, setIsDltModal }) => {\r\n  const { width: wdth } = useWindowSize();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [archiveTestimonial, { loading: loadArchive }] = useMutation(\r\n    ARCHIVED_REVIEW,\r\n    {\r\n      variables: { id: ridd },\r\n      refetchQueries: [\r\n        { query: FETCH_TESTIMONIALS, variables: { active: true } },\r\n      ],\r\n      onCompleted() {\r\n        toaster.notify(\"Testimonial was sent to archive files\");\r\n      },\r\n      onError(err) {\r\n        if (err.graphQLErrors[0].extensions.exception.errors.unauth) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted alert onClick={onClose}>\r\n                {err.graphQLErrors[0].extensions.exception.errors.unauth}\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleArchive = () => {\r\n    archiveTestimonial();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"small\"\r\n        basic\r\n        closeIcon\r\n        onClose={() => setIsDltModal(false)}\r\n        open={isDltModal}\r\n        style={{ zIndex: 9 }}\r\n      >\r\n        <Modal.Header>\r\n          <Archive size=\"22px\" /> Archived this User's Review?\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <h3>\r\n            Name: {rvw.user.firstName} {rvw.user.firstName}\r\n          </h3>\r\n          <h4>Message:</h4>\r\n          <p style={{ textIndent: \"1em\" }}>\r\n            <strong>{rvw.message}</strong>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            width={wdth <= 768 ? \"100%\" : \"90%\"}\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <Content width=\"auto\">\r\n              <Popup\r\n                content=\"Deleting will permanently erase this review\"\r\n                trigger={\r\n                  <DButton alert style={{ fontSize: \"12px\" }}>\r\n                    <DeleteForever size=\"22px\" /> Delete Permanently\r\n                  </DButton>\r\n                }\r\n                inverted\r\n              />\r\n            </Content>\r\n            <Content width=\"auto\" flex justify=\"space-around\" align=\"center\">\r\n              <DButton confirm onClick={handleArchive} basic>\r\n                {loadArchive ? (\r\n                  <Spinner inverted small />\r\n                ) : (\r\n                  <>\r\n                    <Icon name=\"check\" /> Yes\r\n                  </>\r\n                )}\r\n              </DButton>\r\n\r\n              <DButton alert onClick={() => setIsDltModal(false)} basic>\r\n                <Icon name=\"ban\" /> No\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ARCHIVED_REVIEW = gql`\r\n  mutation archiveTestimonial($id: ID!) {\r\n    archiveTestimonial(_id: $id)\r\n  }\r\n`;\r\n\r\nexport default DeleteView;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { DotsVertical } from \"../../../components/styled/utils\";\r\nimport { Popup, Grid, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport ModalView from \"../../../components/admin/testimonial/ModalView\";\r\nimport DeleteView from \"../../../components/admin/testimonial/DeleteView\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nconst MenuView = ({ menuId, review }) => {\r\n  const [menuValue, setMenuValue] = useState(\"\");\r\n  const [isDltModal, setIsDltModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const handleMenu = (e) => {\r\n    setMenuValue(e.currentTarget.dataset.rid);\r\n  };\r\n\r\n  const modalDeleteShow = () => {\r\n    setIsDltModal(true);\r\n  };\r\n\r\n  console.log(employeeAuth);\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        on=\"click\"\r\n        trigger={\r\n          <DotsVertical\r\n            size=\"24px\"\r\n            data-rid={menuId}\r\n            onMouseOver={handleMenu}\r\n          />\r\n        }\r\n        flowing\r\n        position=\"top right\"\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Grid\r\n          centered\r\n          divided\r\n          columns={\r\n            employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3 ? 2 : 1\r\n          }\r\n        >\r\n          {(employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3) && (\r\n            <Grid.Column textAlign=\"center\">\r\n              <DButton alert>\r\n                <Icon name=\"trash\" fitted onClick={modalDeleteShow} />\r\n              </DButton>\r\n            </Grid.Column>\r\n          )}\r\n\r\n          <Grid.Column>\r\n            <DButton confirm onClick={() => setOpen(true)}>\r\n              <Icon name=\"eye\" fitted />\r\n            </DButton>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Popup>\r\n\r\n      <DeleteView\r\n        ridd={menuValue}\r\n        rvw={review}\r\n        setIsDltModal={setIsDltModal}\r\n        isDltModal={isDltModal}\r\n      />\r\n      <ModalView ridd={menuValue} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\n\r\nimport ToggleView from \"../../../components/admin/testimonial/ToggleView\";\r\nimport MenuView from \"../../../components/admin/testimonial/MenuView\";\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nconst Testimonial = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const {\r\n    data: dataReviews,\r\n    loading: loadReviews,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonials);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: (row) => <ToggleView swid={row._id} tggl={row.view} />,\r\n      width: \"80px\",\r\n      button: true,\r\n      style: {\r\n        borderBottom: \"1px solid #FFFFFF\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"user.lastName\",\r\n      sortable: true,\r\n      format: (row) => `${row.user.firstName} ${row.user.lastName}`,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => <MenuView menuId={row._id} review={row} />,\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        mcenter\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n      >\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            columns={columns}\r\n            data={reviews.map((rev) => rev)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loadReviews}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Testimonial;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport About from \"./admin/cms/About\";\r\nimport Testimonial from \"./admin/cms/Testimonial\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/dashboard\" exact />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/paccount\"\r\n          component={PersonalAccount}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/userInfo/:_id\"\r\n          component={UserInfo}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_about\" component={About} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/cms_testimonial\"\r\n          component={Testimonial}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Main from \"./pages/Main\";\r\nimport Admin from \"./pages/Admin\";\r\nimport Page404 from \"./pages/Page404\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./components/theme\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Switch>\r\n            {/* <Redirect from=\"/\" to=\"/zessence\" exact /> */}\r\n            <Route path=\"/zeadmin\" component={Admin} />\r\n            <Route path=\"/\" component={Main} />\r\n\r\n            <Route component={Page404} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ApolloProvider from \"./ApolloProvider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"toasted-notes/src/styles.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./css/slick-theme.custom.css\";\r\nimport \"./css/slick.custom.css\";\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}