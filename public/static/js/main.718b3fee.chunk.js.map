{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","components/main/navigation/Navigation.js","util/hooks/useScroll.js","util/graphql/cms.js","components/styled/containers.js","components/styled/loader.js","components/Spinner.js","components/main/home/Showcase.js","components/main/home/CategoryCards.js","util/graphql/employee.js","components/main/home/Team.js","components/main/home/Section2.js","components/main/home/Section3.js","pages/main/Home.js","pages/main/About.js","util/hooks/useForm.js","components/styled/utils.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","util/graphql/service.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Gallery.js","pages/main/Contact.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/styled/skeleton.js","components/Skeleton.js","pages/main/MyAccount.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/HistoryAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","pages/admin/FileReport.js","components/admin/cms/home/ShowcaseModal.js","components/admin/cms/home/DeleteShowcase.js","components/admin/cms/home/Showcase.js","pages/admin/cms/Home.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","Burger","setOpen","onClick","Navigation","ref","handler","scrolling","useState","setScrolling","scrollTop","setScrollTop","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","useScroll","node","useRef","listener","event","current","contains","document","history","useHistory","useContext","handleLogout","push","trigger","style","fontSize","Icon","name","firstName","className","src","alt","to","userId","_id","Dropdown","Menu","Item","disabled","FETCH_SHOWCASE","gql","columns","rows","DContainer","div","DShowCase","header","height","background","bgcolor","Overlay","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","cwidth","cmarg","color","fs","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","DCard","p","dh","dw","justifyCenter","justifyAround","justifyBetween","jusitfyFend","alignCenter","alignAround","alignBetween","alignFend","fcol","bs","DSection","width","mcenter","fixed","Content","fluid","rounded","weight","size","bluer","imgHeight","imgWidth","DImage","m","DFooterLinks","DFooter","footer","Section2Styled","keyring","keyframes","SpinnerRing","small","medium","inverted","Spinner","large","Showcase","mql","matchMedia","setShowcase","useQuery","variables","showcaseData","data","loading","error","contentManagements","emulateTouch","infiniteLoop","useKeyboardArrows","autoPlay","showThumbs","showStatus","showArrows","matches","map","cms","photo","undefined","CategoryCards","cards","setRef","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","styles","dloading","display","justifyContent","alignItems","flexDirection","lineHeight","Team","setEmployeesAR","limit","data_employeesAR","aestheticiansReceps","marginBottom","emp","title","lastName","parse","bio","jusitfy","count","Section2","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","css","visibility","from","y","ease","Power3","easeOut","scale","animate","el","Section3","Home","card1","About","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","currentTarget","ripple","DButton","button","fSize","text","basic","alert","red","warning","yellow","confirm","green","DButtonCancel","border","DButtonConfirm","DLabel","label","ls","tt","w","hover","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","status","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","result","console","log","loginUser","userX","general","Signin","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","as","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","employee","schedule","breakStart","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","key","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","loading_categories","data_categories","useLazyQuery","categoryId","category","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","padding","categories","cursor","position","outline","textAlign","services","employees","servEmp","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","addInfo","setAddInfo","cache","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","toaster","notify","onClose","expiredLog","check","start","message","Modal","Header","readOnly","toDateString","Actions","Appointment","setService","setServiceEmp","photos","Gallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","index","minHeight","currentIndex","views","x","srcset","srcSet","caption","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","VERRIFIED_APPOINTMENT","ThankYou","emailToken","params","go","appointmentId","verifiedAppointment","onload","Link","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","Accordion","setActive","contentRef","maxHeight","scrollHeight","icon","children","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","parseInt","CANCEL_APPOINTMENT_MUTATION","absoluteCenter","top","left","transform","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","loading_service","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","closeIcon","new","Popup","circular","mouseEnterDelay","mouseLeaveDelay","content","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","row","cell","fitted","wide","Grid","divided","Column","currentAppoint","responsive","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","compact","historyAppoint","placeholderAnimate","DSkeleton","wid","Skeleton","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","dateOfBirth","contact","updateUser","showYearDropdown","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","Component","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","input","AppointmentDetails","schedDate","setMyAppoint","margn","goBack","Main","path","exact","UpcommingAppointments","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","pointing","SideNav","activeClassName","Layout","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","length","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","CurrentAppointments","currentAppointmentData","currAppoint","HistoryAppointments","historyAppointments","setHistoryAppointments","historyAppointmentData","downloadCSV","array","link","createElement","csv","keys","Object","join","forEach","ctr","convertArrayOfObjectsToCSV","setAttribute","encodeURI","click","appointmentHistory","Export","onExport","actionsMemo","useMemo","actions","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","NewDateTime","NewAppointmentDetails","setCategories","CREATE_GUEST_APPOINTMENT","myAppointments","createGuestAppointment","NewAppointment","Divider","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","role","workLength","breakLength","newEmployee","Checkbox","class","Employees","loading_employeesAR","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","setServices","dataCategory","loadingCategory","addService","close","marginLeft","EmployeeServices","overflow","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","description","newCategory","Categories","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","price","newService","serviceExist","ServiceList","progressComponent","UPLOAD_CATEGORY_PHOTO","Category","setCategory","dataLoading","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","Service","serviceData","serviceLoading","addServicePhoto","replace","REPLY_MESSAGE","READ_INQ","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","inquiry","readInquiry","replyInquiry","column","Inquiry","setInquiries","data_inquiries","loading_inquiries","msg","trimString","substring","PhotoBooth","id","fetchEmployee","handleSchedule","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","empData","empLoading","User","setUsers","data_users","loading_users","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","letterSpacing","FileReport","ShowcaseModal","showcase","DELETE_SHOWCASE","DeleteShowcase","openAlert","setOpenAlert","isDeleteShowCase","deleteShowcase","loadingDelete","NEW_SHOWCASE","isShowCase","setIsShowCase","setIsDeleteShowCase","addShowcase","handleEdit","handleDelete","right","Admin","App","uploadLink","createUploadLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.718b3fee.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${props => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 14vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 17px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${props =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${props => props.scrolled && \"li a {color: #fff;}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem 4rem 2rem 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import React, { useRef, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { DNavigation, DMainMenu, DRightMenu } from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  let history = useHistory();\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/zessence\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/zessence/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/services&rates\">Services & Rates</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/about\">About Us</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/gallery\">Gallery</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/testimonials\">Testimonials</Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/zessence/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired\r\n};\r\n\r\nexport default Navigation;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll() {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > 100);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_SHOWCASE = gql`\r\n  query contentManagements($section: String) {\r\n    contentManagements(section: $section) {\r\n      _id\r\n      photo\r\n      section\r\n      headline\r\n      paragraph\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_SHOWCASE };\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.8);\r\n  margin-top: 14vh;\r\n`;\r\n\r\nexport const DShowCase = styled.header`\r\n  width: 100%;\r\n  height: ${props => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n\r\n  h1,h2,\r\n  p {\r\n    \r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img{\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${props => (props.bg ? props.bg : \"rgba(0, 0, 0, 0.15)\")};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  padding: ${props => props.pad && props.pad};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  opacity: ${props => props.opac && props.opac};\r\n  transition: opacity 0.3s ease;\r\n\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: 0;\r\n    height: 100%;\r\n\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n\r\n      text-align: center;\r\n      transform: rotate(-45deg);\r\n      h1 {\r\n        transform: translateY(80px);\r\n        transition: transform 0.4s ease-in-out;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${props => (props.cwidth ? props.cwidth : \"50%\")};\r\n    text-align: left;\r\n    margin: ${props => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    h1,\r\n    h2,\r\n    h3,\r\n    p {\r\n      color: ${props => (props.color ? props.color : \"#fff\")};\r\n      letter-spacing: 5px;\r\n      line-height: 2;\r\n    }\r\n    h1 {\r\n      font-size: ${props => (props.fs ? props.fs : \"48px\")};\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: ${props =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${props => props.gap && props.gap};\r\n  grid-template-rows: ${props =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${props => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${props => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    // img {\r\n    //   width: 100%;\r\n    //   height: 100%;\r\n    //   object-fit: cover;\r\n    //   border-radius: ${props => (props.circle ? \"50%\" : \"20px\")};\r\n    // }\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: ${props => (props.p ? props.p : \"10px\")};\r\n  height: ${props => (props.dh ? props.dh : \"300px\")};\r\n  width: ${props => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${props =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${props => props.fcol && \"column\"};\r\n\r\n  overflow: hidden;\r\n  background: ${props => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${props =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n        \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n        \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${props => (props.height ? props.height : \"400px\")};\r\n  width:  ${props => (props.width ? props.width : \"100%\")};;\r\n  margin: ${props =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${props => props.pad && props.pad};\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${props => props.fixed && \"fixed\"};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  position: relative;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${props => props.height && props.height};\r\n  width: ${props => (props.width ? props.width : props.fluid ? \"100%\" : \"50%\")};\r\n  padding: ${props => props.pad && props.pad};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${props => props.margin && props.margin};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  z-index: 2;\r\n  font-weight: ${props => props.weight && props.weight};\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${props => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${props => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${props => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${props => (props.height ? props.height : \"300px\")};\r\n  width: ${props => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${props =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  margin: ${props => (props.m ? props.m : \"0 auto\")};\r\n\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  visibility: hidden;\r\n  height: 100vh;\r\n  margin: 32px 0;\r\n  width: 90%;\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      margin: 0 24px;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 400px;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            margin-bottom: 24px .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding-right: 48px;\r\n            margin-bottom: 56px;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 50%;\r\n        height: 100vh;\r\n        position: relative;\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n  height: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    height: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    margin: ${props => (props.small ? \"3px\" : props.medium ? \"6px\" : \"8px\")};\r\n    border: ${props =>\r\n      props.small\r\n        ? \"3px solid #fff\"\r\n        : props.medium\r\n        ? \"6px solid #fff\"\r\n        : \"8px  solid #fff\"};\r\n\r\n    border-radius: 50%;\r\n    animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: ${props =>\r\n      props.inverted\r\n        ? \"#fff transparent transparent transparent\"\r\n        : \"#fe8c00 transparent transparent transparent\"};\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = ({ small, large, medium, inverted }) => {\r\n  return (\r\n    <SpinnerRing\r\n      small={small}\r\n      large={large}\r\n      medium={medium}\r\n      inverted={inverted}\r\n    >\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../util/graphql/cms\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst Showcase = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState({});\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  return (\r\n    <>\r\n      {!showcaseData ? (\r\n        <DShowCase\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Carousel\r\n          emulateTouch\r\n          infiniteLoop\r\n          useKeyboardArrows\r\n          autoPlay\r\n          showThumbs={false}\r\n          showStatus={false}\r\n          showArrows={mql.matches ? false : true}\r\n        >\r\n          {showcaseData.contentManagements.map(cms => (\r\n            <DShowCase\r\n              background={\r\n                cms.photo !== null || cms.photo !== undefined\r\n                  ? `/images/cms/home/${cms.photo}`\r\n                  : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n            >\r\n              <Overlay\r\n                bg={\r\n                  \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                }\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h1>Z Essence Facial & Spa</h1>\r\n                  <p>\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Quisquam, doloribus.\r\n                  </p>\r\n                  <Link to=\"/zessence\" className=\"btn\">\r\n                    Book Appointment\r\n                  </Link>\r\n                </div>\r\n              </Overlay>\r\n            </DShowCase>\r\n          ))}\r\n        </Carousel>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DImage, DSection } from \"../../styled/containers\";\r\n\r\nconst CategoryCards = ({ cards, setRef }) => {\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" margin=\"24px auto\" ref={setRef}>\r\n      <h1>Our Services</h1>\r\n      <DGrid three margin=\"0 0 40px 0\" gap=\"20px\">\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/face.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Skin Care</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/foot.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Healt Spa</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/wax.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Waxing</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int) {\r\n    aestheticiansReceps(limit: $limit) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      dateOfBirth\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DGrid,\r\n  DImage,\r\n  DCard,\r\n  DSection,\r\n  Overlay\r\n} from \"../../styled/containers\";\r\n// import Skeleton from \"../../Skeleton\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst Team = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <h1 style={{ marginBottom: \"24px\" }}>Our Team</h1>\r\n      <DGrid four margin=\"0 auto\" gap=\"25px\" style={{ marginBottom: \"24px\" }}>\r\n        {!data_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          data_employeesAR &&\r\n          data_employeesAR.aestheticiansReceps.map(emp => (\r\n            <DCard bs={\"0\"}>\r\n              <DImage width=\"150px\" height=\"150px\" m=\"0 auto\" circle>\r\n                <img\r\n                  src={\r\n                    emp.photo !== null\r\n                      ? `/images/employees/${emp.photo}`\r\n                      : cards\r\n                  }\r\n                  alt=\"card 1\"\r\n                />\r\n              </DImage>\r\n              <div className=\"card-details\">\r\n                <h3>\r\n                  {emp.title}. {emp.firstName} {emp.lastName}\r\n                </h3>\r\n                <p>{parse(emp.bio)}</p>\r\n              </div>\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                jusitfy=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Follow</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DCard>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n      <Link to=\"/\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"centet\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2\r\n  }\r\n};\r\n\r\nexport default Team;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content, Section2Styled } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\n\r\nconst Section2 = () => {\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled ref={el => (section2 = el)}>\r\n      <div className=\"sec2-container\">\r\n        <div className=\"sec2-inner\">\r\n          <div className=\"sec2-content\">\r\n            <div className=\"sec2-content_inner\">\r\n              <h1>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Z Essence</div>\r\n                </div>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Facial & Spa</div>\r\n                </div>\r\n              </h1>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Totam\r\n                labore dolore ad nemo, veritatis iure mollitia impedit. Quod, id\r\n                tempore?\r\n                <Link to=\"/zessence/appointment\">Learn More</Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={el => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategoryCards from \"../../components/main/home/CategoryCards\";\r\nimport Team from \"../../components/main/home/Team\";\r\nimport Section2 from \"../../components/main/home/Section2\";\r\nimport Section3 from \"../../components/main/home/Section3\";\r\n\r\nimport { DContainer } from \"../../components/styled/containers\";\r\n\r\nconst Home = () => {\r\n  const card1 = \"/images/card1.jpg\";\r\n\r\n  return (\r\n    <DContainer>\r\n      {/* SHOWCASE */}\r\n\r\n      <Showcase />\r\n\r\n      \r\n\r\n      {/* SECTION 2 */}\r\n      <Section2 />\r\n\r\n      {/* Home Cards 1 */}\r\n      <CategoryCards cards={card1} />\r\n\r\n      {/* Home Cards 2 */}\r\n      <Team cards={card1} />\r\n      {/* Carbon */}\r\n      <Section3 />\r\n      <section className=\"follow\">\r\n        <p>Follow Z Essence</p>\r\n        <Link to=\"/\">\r\n          <h4>Facebook</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>Twitter</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>LinkedIn</h4>\r\n        </Link>\r\n      </section>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <DContainer>\r\n      <DSection bgcolor=\"#d3d3d3\" height=\"100vh\" push>\r\n        <Content flex justify=\"center\" align=\"center\" fluid height=\"100%\">\r\n          <h3>Hello</h3>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${props => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${props => (props.size ? props.size : \"36px\")};\r\n  width: ${props =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${props => (props.pad ? props.pad : \"6px 16px\")};\r\n  line-height: 1.42857143;\r\n  margin: 1.5%;\r\n  text-align: center;\r\n  text-transform: ${props => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border-radius: 5px;\r\n  border-width: ${props => (props.basic ? \"2px\" : \"0\")};\r\n  border-style: ${props => props.basic && \"solid\"};\r\n  border-color: ${props =>\r\n    props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : ({ theme }) => theme.blue};\r\n      \r\n  color: ${props => (props.color ? props.color : ({ theme }) => theme.light)};\r\n\r\n  background: ${props =>\r\n    props.basic\r\n      ? \"transparent\"\r\n      : props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : ({ theme }) => theme.blue};\r\n\r\n  ${props =>\r\n    props.disabled &&\r\n    \"background: #E9E4F0; color: #D3CCE3; &:hover:{opacity: 1}\"}\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n   opacity: 0.8;\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonCancel = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.red};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #f12711\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.red)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n`;\r\n\r\nexport const DButtonConfirm = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.green};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #0f9b0f\"\r\n      : props.basic\r\n      ? \"2px solid #0f9b0f\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n`;\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${props => (props.size ? props.size : \"12px\")};\r\n  color: ${props => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${props => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${props => props.weight && props.weight};\r\n  padding: ${props => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${props => (props.m ? props.m : \"1%\")};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  text-transform: ${props => props.tt && props.tt};\r\n  width: ${props => (props.w ? props.w : \"auto\")};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${props =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${props => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hover && \"0.8\"};\r\n    cursor: ${props => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${props => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${props => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${props =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${props =>\r\n        props.activeBg ? props.activeBg : ({ theme }) => theme.blue};\r\n      color: ${props =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${props => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${props => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${props =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${props =>\r\n    props.status === \"error\"\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.status === \"success\"\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.status === \"warning\"\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(69, 170, 242,1.0)\"};\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .close {\r\n    height: 100%;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signin\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/signin\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n    \r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted(result) {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/appointment\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        pad=\"0\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n        {data_employee && data_service ? (\r\n          loading_employee || loading_appointments ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <DGrid two gap=\"20px\">\r\n              {!times ? (\r\n                <h2>Loading...</h2>\r\n              ) : (\r\n                times.map(time => (\r\n                  <div className=\"pretty p-default p-curve\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"time\"\r\n                      key={time}\r\n                      value={time}\r\n                      onChange={handleTimeChanged}\r\n                    />\r\n                    <div className=\"state p-info-o\">\r\n                      <label style={styles.label}>{time}</label>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </DGrid>\r\n          )\r\n        ) : (\r\n          \"Select Available Time\"\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/zessence/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.name}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nconst Appointment = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n          <Carousel\r\n            emulateTouch\r\n            infiniteLoop\r\n            useKeyboardArrows\r\n            autoPlay\r\n            showThumbs={false}\r\n            showStatus={false}\r\n            showArrows={mql.matches ? false : true}\r\n          >\r\n            <DSection\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              background={\r\n                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              height=\"100vh\"\r\n            >\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                jusitfy=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Advertisement</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DSection>\r\n          </Carousel>\r\n          <DGrid>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    basic={\r\n                      (values.category === \"\" ||\r\n                        serviceValue === \"\" ||\r\n                        employeeVal === \"\" ||\r\n                        selectedTime === \"\") &&\r\n                      true\r\n                    }\r\n                    disabled={\r\n                      values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  sec: {\r\n    height: \"30vh\"\r\n  }\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\n\r\nconst photos = [\r\n  {\r\n    src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\r\n    width: 4,\r\n    height: 3\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\r\n    width: 1,\r\n    height: 1\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\r\n    width: 3,\r\n    height: 4\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\r\n    width: 3,\r\n    height: 4\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\r\n    width: 3,\r\n    height: 4\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\r\n    width: 4,\r\n    height: 3\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\r\n    width: 3,\r\n    height: 4\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\r\n    width: 4,\r\n    height: 3\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\r\n    width: 4,\r\n    height: 3\r\n  }\r\n];\r\n\r\nconst Gallery = () => {\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"100%\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        width=\"80%\"\r\n        mcenter\r\n      >\r\n        <h1>Gallery</h1>\r\n        <div>\r\n          <MyGallery photos={photos} onClick={openLightbox} />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel\r\n                  currentIndex={currentImage}\r\n                  views={photos.map(x => ({\r\n                    ...x,\r\n                    srcset: x.srcSet,\r\n                    caption: x.title\r\n                  }))}\r\n                />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </div>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} to=\"/zessence/MyAccount\" basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DShowCase\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hoverColorText}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\n\r\nimport CurrentAppointment from \"../../components/main/user/CurrentAppointment\";\r\nimport MyAppointmentHistory from \"../../components/main/user/MyAppointmentHistory\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst MyAccount = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n  // const [account, setAccount] = useState({});\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (userInfo) {\r\n  //     setAccount(userInfo.user);\r\n  //   }\r\n  // }, [userInfo]);\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      margin=\"20vh auto 10vh auto\"\r\n      width=\"90%\"\r\n      pad=\"40px 50px\"\r\n      fixed\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Account</h2>\r\n      {userLoading ? (\r\n        <DSection height=\"70vh\">\r\n          <Skeleton />\r\n        </DSection>\r\n      ) : (\r\n        <DGrid gap=\"10px\">\r\n          <Content\r\n            height=\"50vh\"\r\n            flex\r\n            align=\"center\"\r\n            pad=\"10px 15px\"\r\n            bgcolor=\"#eee\"\r\n            width=\"100%\"\r\n            rounded\r\n          >\r\n            <DGrid custom=\"30% 1fr\" gap=\"20px\">\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h4>Drop Image</h4>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          userInfo.user.photo !== null\r\n                            ? `/images/users/${userInfo.user.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n\r\n             \r\n            </DGrid>\r\n          </Content>\r\n          <CurrentAppointment />\r\n          <MyAppointmentHistory />\r\n        </DGrid>\r\n      )}\r\n      <Overlay bg=\"rgba(rgba(52, 152, 219,0.3))\" />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default MyAccount;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid>\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Label, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Redirect to=\"/zessence\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zessence/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {!data ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input\r\n                  value={data.appointment._id}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={data.appointment.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={data.appointment.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${data.appointment.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={data.appointment.status}\r\n                  readOnly\r\n                  style={\r\n                    data.appointment.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : data.appointment.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : data.appointment.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {data.appointment.status === \"CANCELLED\" ||\r\n            data.appointment.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert onClick={() => setOpen(true)} disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Services from \"./main/Services\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport MyAccount from \"./main/MyAccount\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/`} render={() => <Home />} exact />\r\n        <Route path={`${match.path}/about`} component={About} exact />\r\n        <Route path={`${match.path}/contact`} component={Contact} exact />\r\n        <Route path={`${match.path}/gallery`} component={Gallery} exact />\r\n        <Route\r\n          path={`${match.path}/verified/:emailToken`}\r\n          component={ThankYou}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`${match.path}/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`${match.path}/login`} component={Signin} exact />\r\n        {/* <UserPrivateRoute\r\n          path={`${match.path}/myaccount/:_id`}\r\n          component={MyAccount}\r\n          exact\r\n        /> */}\r\n        <UserPrivateRoute path={`${match.path}/account/:_id`} component={Account} exact />\r\n        \r\n        <UserPrivateRoute\r\n          path={`${match.path}/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/appointment`}\r\n          component={Appointment}\r\n          exact\r\n        />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst UpcommingAppointments = ({ appointments }) => {\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map(appointment => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, DImage, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Image, Icon } from \"semantic-ui-react\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Dropdown\r\n        trigger={\r\n          <DImage circle height=\"50px\" width=\"50px\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"avatar\"\r\n            />\r\n            <Overlay opac={0} hovOpac={1} />\r\n          </DImage>\r\n        }\r\n        pointing=\"top right\"\r\n        icon={null}\r\n      >\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to=\"/zeadmin/paccount\">\r\n            <Icon name=\"user\" />\r\n            Account\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={handleLogout}>\r\n            <Icon name=\"sign out\" />\r\n            Sign out\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      {/* <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton> */}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion\r\n        title={\"Accounts\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            About Us\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/testimonials\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map(user => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"#6dd5ed\"\r\n                color=\"#fff\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <Spinner small />\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"green\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"firebrick\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.bluer}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.secondary}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay,\r\n  DCard\r\n} from \"../../components/styled/containers\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Cards />\r\n      <DSection height=\"100%\" margin=\"20px 0 20px 0\">\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            {loading ? (\r\n              <Overlay flex justify=\"center\" align=\"center\">\r\n                <h2>Loading...</h2>\r\n              </Overlay>\r\n            ) : (\r\n              data.currentAppointments && (\r\n                <UpcommingAppointments\r\n                  appointments={data.currentAppointments}\r\n                  loading={loading}\r\n                />\r\n              )\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  // const [currentAppointments, setCurrentAppointments] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (currentAppointmentData) {\r\n  //     setCurrentAppointments(currentAppointmentData.currentAppointments);\r\n  //   }\r\n  // }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!currentAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={currentAppointmentData.currentAppointments.map(\r\n            currAppoint => currAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Apointment List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function convertArrayOfObjectsToCSV(array, data) {\r\n    let result;\r\n\r\n    const columnDelimiter = \",\";\r\n    const lineDelimiter = \"\\n\";\r\n    const keys = Object.keys(data[0]);\r\n\r\n    result = \"\";\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr = 0;\r\n      keys.forEach(key => {\r\n        if (ctr > 0) result += columnDelimiter;\r\n\r\n        result += item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\");\r\n    let csv = convertArrayOfObjectsToCSV(array);\r\n    if (csv == null) return;\r\n\r\n    const filename = \"export.csv\";\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv));\r\n    link.setAttribute(\"download\", filename);\r\n    link.click();\r\n  }\r\n\r\n  const Export = ({ onExport }) => (\r\n    <DButton onClick={e => onExport(e.target.value)}>Export</DButton>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const actionsMemo = useMemo(\r\n    () => <Export onExport={() => downloadCSV(historyAppointments)} />,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!historyAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={historyAppointmentData.appointmentHistory}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          actions={actionsMemo}\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButtonCancel>\r\n        <DButtonConfirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  DButtonConfirm\r\n} from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n        height=\"100vh\"\r\n      >\r\n        <h2 style={{ color: \"#111\" }}>\r\n          {data && (\r\n            <span style={{ color: \"#2980B9\", fontWeight: 700 }}>\r\n              {`${data.appointment.user.firstName} ${data.appointment.user.lastName}'s`}\r\n            </span>\r\n          )}{\" \"}\r\n          Appointment Details\r\n        </h2>\r\n\r\n        {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\"\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\"\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\"\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\"\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ||\r\n              data.appointment.status === \"RESCHEDULED\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButtonConfirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButtonConfirm>\r\n                  <ReschedModal\r\n                    isAdmin={true}\r\n                    status={\"VERIFIED\"}\r\n                    setOpen={setOpen}\r\n                    appointmentId={appointmentId}\r\n                  />\r\n                  <DButtonCancel onClick={() => setOpenCancel(true)}>\r\n                    Cancel\r\n                  </DButtonCancel>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )}\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"small\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton,\r\n  DButtonConfirm,\r\n  DButtonCancel\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButtonConfirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButtonConfirm>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButtonCancel>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  // const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (dataCategory) {\r\n  //     setCategories(dataCategory.categories);\r\n  //   }\r\n  // }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {dataCategory.categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Exit</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n            <DButtonConfirm type=\"submit\">Yes</DButtonConfirm>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage\r\n} from \"../../components/styled/containers\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection margin=\"20px 0\">\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <DGrid four gap=\"15px\" margin=\"40px 0\">\r\n          {loading ? (\r\n            <h2>Loading...</h2>\r\n          ) : (\r\n            data.categories &&\r\n            data.categories.map(category => (\r\n              <DCard key={category._id}>\r\n                <DImage height=\"250px\" width=\"250px\">\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/category/${category.photo}`\r\n                        : \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"category\"\r\n                  />\r\n                </DImage>\r\n\r\n                <div className=\"card-details\">\r\n                  <h3>{category.name}</h3>\r\n                  <p className=\"des\">{parse(category.description)}</p>\r\n                  <Link to={`/zeadmin/category/${category._id}`}>\r\n                    <DButton basic>View</DButton>\r\n                  </Link>\r\n                </div>\r\n              </DCard>\r\n            ))\r\n          )}\r\n        </DGrid>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButtonCancel width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButtonCancel>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (data_services) {\r\n  //     setServices(data_services.services);\r\n  //   }\r\n  // }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      cell: row => <p style={{ fontWeight: 500 }}>{parse(row.description)}</p>\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={data_services.services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = props => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Skeleton width=\"100%\" />\r\n        </>\r\n      ) : (\r\n        <DSection margin=\"20px 0\">\r\n          <h2>{data.category.name}</h2>\r\n          <DGrid>\r\n            <DSection width=\"100%\" height=\"100%\">\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\"\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/category/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </DSection>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport {\r\n  Toasted,\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel\r\n} from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButtonConfirm onClick={handleSubmit}>Save</DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(true)}>Delete</DButtonCancel>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql/service\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <>\r\n                    <Content height=\"300px\"></Content>\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      className=\"dark\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n    variables: {\r\n      inqId: inqId\r\n    }\r\n  });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n    readInquiry();\r\n  };\r\n  const handleReplyMsg = e => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {dataInq && (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{dataInq.inquiry.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {dataInq.inquiry.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {dataInq.inquiry.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={dataInq.inquiry.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={dataInq.inquiry.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst READ_INQ = gql`\r\n  mutation readInquiry($inqId: ID) {\r\n    readInquiry(_id: $inqId)\r\n  }\r\n`;\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const handleRow = e => {\r\n    setInq(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Inquiry ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: row => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      }\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      {loading_inquiries ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map(inq => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n      {inq && <ReplyModal inqId={inq} open={open} setOpen={setOpen} />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"22px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    customStyles={customStyles}\r\n    rounded\r\n  >\r\n    Inquiry List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  id,\r\n  photo,\r\n  fetchEmployee,\r\n  handleDetails,\r\n  handleSchedule\r\n}) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            {loading ? (\r\n              <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n                <Spinner small />\r\n              </Content>\r\n            ) : (\r\n              <img\r\n                src={\r\n                  photo !== null\r\n                    ? `/images/employees/${photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            )}\r\n          </DImage>\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        {/* <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleSchedule} fluid>\r\n            Schedule\r\n          </DButton>\r\n        </DCard> */}\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = e => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole\r\n    }\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(employee.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Label, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(employee.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from \"react\";\r\n\r\nconst AccountSched = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = () => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeAuth.id\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {empData && empData.employee ? (\r\n            !empLoading ? (\r\n              <>\r\n                <PhotoBooth\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                  photo={empData.employee.photo}\r\n                  id={empData.employee._id}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                />\r\n                <AccountInfo\r\n                  employee={empData.employee}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                  isAccount={isAccount}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"User ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        {loading_users ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map(getUser => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments]\r\n          }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\"\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton confirm onClick={() => setNewConfirm(true)}>\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = props => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\n\r\nconst SigninForm = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst FileReport = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n              File Report\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <DGrid>\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import React from \"react\";\r\n\r\nimport { Modal } from \"semantic-ui-react\";\r\n\r\nconst ShowcaseModal = ({ open, setOpen, showcase }) => {\r\n  return (\r\n    <Modal size=\"small\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header></Modal.Header>\r\n      <Modal.Content>{showcase}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShowcaseModal;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../../util/graphql/cms\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\n\r\nconst DeleteShowcase = ({ openAlert, setOpenAlert, isDeleteShowCase }) => {\r\n  const [deleteShowcase, { loading: loadingDelete }] = useMutation(\r\n    DELETE_SHOWCASE,\r\n    {\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_SHOWCASE,\r\n          variables: {\r\n            section: \"SHOWCASE\"\r\n          }\r\n        }\r\n      ],\r\n      variables: {\r\n        _id: isDeleteShowCase\r\n      },\r\n      onCompleted(result) {\r\n        setOpenAlert(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  function deleteShowcaseCB() {\r\n    deleteShowcase();\r\n  }\r\n\r\n  return (\r\n    <Modal basic open={openAlert} onClose={() => setOpenAlert(false)}>\r\n      <Modal.Header>Delete Showcase</Modal.Header>\r\n      <Modal.Content>\r\n        Are you sure you want to delete this Showcase Image?\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={deleteShowcaseCB}>\r\n          {loadingDelete ? <Spinner small /> : \"Yes\"}\r\n        </DButton>\r\n        <DButton alert basic>\r\n          No\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SHOWCASE = gql`\r\n  mutation deleteShowcase($_id: ID!) {\r\n    deleteShowcase(_id: $_id)\r\n  }\r\n`;\r\n\r\nexport default DeleteShowcase;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../../util/graphql/cms\";\r\nimport { DShowCase, Overlay, DSection } from \"../../../styled/containers\";\r\nimport { DButton } from \"../../../styled/utils\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport ShowcaseModal from \"./ShowcaseModal\";\r\nimport DeleteShowcase from \"./DeleteShowcase\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst Showcase = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState([]);\r\n  const [isShowCase, setIsShowCase] = useState({});\r\n  const [isDeleteShowCase, setIsDeleteShowCase] = useState({});\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  // DROPZONE\r\n  const [addShowcase, { loading }] = useMutation(NEW_SHOWCASE, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_SHOWCASE,\r\n        variables: {\r\n          section: \"SHOWCASE\"\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addShowcase({ variables: { file } });\r\n    },\r\n    [addShowcase]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n    setIsShowCase(e.target.value);\r\n  };\r\n\r\n  const handleDelete = e => {\r\n    e.preventDefault();\r\n    setOpenAlert(true);\r\n    setIsDeleteShowCase(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <DSection>\r\n      <h1>Showcase</h1>\r\n      <div\r\n        style={{ border: \"1px dashed #ccc\", width: \"100%\", height: \"150px\" }}\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        {isDragActive ? (\r\n          <h3>Drop Image</h3>\r\n        ) : loading ? (\r\n          <h2>Loading</h2>\r\n        ) : (\r\n          \" Image Drop here\"\r\n        )}\r\n      </div>\r\n      <DSection>\r\n        {!showcaseData ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Carousel\r\n            emulateTouch\r\n            infiniteLoop\r\n            useKeyboardArrows\r\n            showThumbs={false}\r\n            showStatus={false}\r\n            showArrows={mql.matches ? false : true}\r\n          >\r\n            {showcaseData.contentManagements &&\r\n              showcaseData.contentManagements.map(cms => (\r\n                <DShowCase\r\n                  key={cms._id}\r\n                  height=\"50vh\"\r\n                  background={\r\n                    cms.photo !== null || cms.photo !== undefined\r\n                      ? `/images/cms/home/${cms.photo}`\r\n                      : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                >\r\n                  <Overlay\r\n                    bg={\r\n                      \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                    }\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    align=\"center\"\r\n                  >\r\n                    <div className=\"overlay-content\">\r\n                      <h3>Z Essence Facial & Spa</h3>\r\n                      <p>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Quisquam, doloribus.\r\n                      </p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        right: 20,\r\n                        display: \"flex\"\r\n                      }}\r\n                    >\r\n                      <DButton\r\n                        value={cms._id}\r\n                        onClick={handleEdit}\r\n                        style={{ width: \"50px\" }}\r\n                      >\r\n                        <Icon name=\"edit\" />\r\n                        <div style={{ visibility: \"hidden\" }}>{cms._id}</div>\r\n                      </DButton>\r\n                      <DButton\r\n                        alert\r\n                        value={cms._id}\r\n                        onClick={handleDelete}\r\n                        style={{ width: \"50px\" }}\r\n                      >\r\n                        <Icon name=\"trash\" />\r\n                        <div style={{ visibility: \"hidden\" }}>{cms._id}</div>\r\n                      </DButton>\r\n                    </div>\r\n                  </Overlay>\r\n                </DShowCase>\r\n              ))}\r\n          </Carousel>\r\n        )}\r\n      </DSection>\r\n      {isShowCase && (\r\n        <ShowcaseModal open={open} setOpen={setOpen} showcase={isShowCase} />\r\n      )}\r\n\r\n      {isDeleteShowCase && (\r\n        <DeleteShowcase\r\n          openAlert={openAlert}\r\n          setOpenAlert={setOpenAlert}\r\n          isDeleteShowCase={isDeleteShowCase}\r\n        />\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst NEW_SHOWCASE = gql`\r\n  mutation addShowcase($file: Upload) {\r\n    addShowcase(file: $file)\r\n  }\r\n`;\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/Showcase\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Showcase />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/signin\" exact />\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/paccount\"\r\n          component={PersonalAccount}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/userInfo/:_id\"\r\n          component={UserInfo}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n        <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Admin from \"./pages/Admin\";\nimport Page404 from \"./pages/Page404\";\nimport { AuthProvider } from \"./context/auth\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./components/theme\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Redirect from=\"/\" to=\"/zessence\" exact />\n            <Route path=\"/zessence\" component={Main} />\n            <Route path=\"/zeadmin\" component={Admin} />\n            <Route component={Page404} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"toasted-notes/src/styles.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}