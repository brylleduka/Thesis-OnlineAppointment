{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","util/hooks/useScroll.js","components/main/navigation/Navigation.js","util/graphql/cms.js","components/styled/containers.js","components/styled/button.js","components/styled/scroll.styled.js","components/MouseScroll.js","components/main/home/Showcase.js","util/graphql/service.js","components/styled/text.js","components/FancyText.js","components/styled/utils.js","components/main/utils/ReadMore.js","util/hooks/useWindowSize.js","components/main/home/CategorySection.js","util/graphql/employee.js","components/styled/card.js","components/main/home/TeamSection.js","components/styled/loader.js","components/Spinner.js","components/main/home/AboutSection.js","components/main/home/PromoSection1.js","util/graphql/contact.js","components/main/home/MapComponent.js","util/hooks/useForm.js","components/main/home/ContactInquiry.js","components/main/home/ContactMap.js","util/graphql/testimonial.js","components/main/home/TestimonialSection.js","components/main/utils/ScrollButton.js","pages/main/Home.js","components/main/about/Story.js","components/main/about/TeamDetails.js","components/main/about/Team.js","util/useScrollDown.js","pages/main/About.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","components/styled/inputs.js","components/DRadio.js","util/hooks/timeLineLabels.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","util/graphql/gallery.js","components/GalleryThumb.js","components/ImageSelected.js","pages/main/Gallery.js","pages/main/Album.js","pages/main/Contact.js","components/main/testimonial/ModalReview.js","components/main/testimonial/Review.js","components/main/testimonial/TestimonialCard.js","pages/main/Testimonials.js","pages/main/Services.js","pages/main/Service.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/Toasted.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/PhotoBooth.js","components/DTextArea.js","components/admin/employees/PersonalCard.js","components/admin/employees/EmployeeCard.js","components/admin/employees/RemoveService.js","components/admin/employees/ServiceCard.js","components/admin/employees/DetailsEmployee.js","components/admin/employees/ScheduleEmployee.js","components/admin/employees/Info.js","components/admin/employees/EmployeeDelete.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/MenuDots.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","components/FilterInput.js","components/admin/report/FilePrint.js","components/admin/appointment/HistoryAppointments.js","pages/admin/FileReport.js","util/hooks/useUploadFile.js","components/admin/cms/home/showcase/ImageSection.js","components/admin/cms/home/showcase/ModalSlide.js","components/admin/cms/home/showcase/NewSlide.js","components/admin/cms/home/showcase/EditSlide.js","components/admin/cms/home/showcase/RemoveSlide.js","components/admin/cms/home/showcase/Showcase.js","components/admin/cms/home/sectionabout/EditModal.js","components/admin/cms/home/sectionabout/SectionAbout.js","components/ReadMore.js","components/admin/cms/home/sectioncategory/CategoryCards.js","components/admin/cms/home/sectioncategory/UpdateSectCategory.js","components/admin/cms/home/sectioncategory/SectionCategory.js","pages/admin/cms/Home.js","components/admin/cms/about/ModalHeading.js","components/admin/cms/about/Heading.js","components/admin/cms/about/ModalStory.js","components/admin/cms/about/Story.js","components/admin/cms/about/ModalMissionVision.js","components/admin/cms/about/Mission.js","pages/admin/cms/About.js","components/admin/testimonial/ToggleView.js","components/admin/testimonial/ModalView.js","components/admin/testimonial/DeleteView.js","components/admin/testimonial/MenuView.js","pages/admin/cms/Testimonial.js","components/admin/cms/gallery/NewAlbum.js","pages/admin/cms/Gallery.js","components/admin/cms/gallery/NewPhotoDrop.js","pages/admin/cms/Album.js","components/admin/contact/ContactModal.js","pages/admin/cms/Contact.js","components/admin/archive/employee/ArchEmpView.js","components/admin/archive/employee/ArchEmpDelete.js","components/admin/archive/employee/ArchEmpRestore.js","components/admin/archive/employee/ArchEmp.js","components/admin/archive/service/ArchServCategView.js","components/admin/archive/service/ArchServCategRestore.js","components/admin/archive/service/ArchServCategDelete.js","components/admin/archive/service/ArchServCateg.js","components/admin/archive/service/ArchServSubView.js","components/admin/archive/service/ArchServSub.js","components/admin/archive/service/ArchServ.js","components/admin/archive/Archiving.js","pages/admin/Archive.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","DropdownCustomNav","Dropdown","Burger","setOpen","onClick","useScroll","scrollVal","useState","scrolling","setScrolling","scrollTop","setScrollTop","scrollH","undefined","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Navigation","ref","handler","node","useRef","listener","event","current","contains","document","useContext","handleLogout","trigger","style","fontSize","Icon","name","firstName","scrollBehavior","el","scrollIntoView","behavior","block","className","to","src","alt","userId","_id","scroll","simple","Menu","Item","as","Link","disabled","FETCH_THE_SHOWCASE","gql","FETCH_HOME_SECTION","FETCH_ABOUT_CMS","columns","rows","DContainer","div","DShowCase","height","bgcolor","background","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","med10","med7","med5","DSection","width","mcenter","pad","flex","justify","align","flow","direct","minh","css","maxh","Content","fluid","fixed","bordered","bordbtm","rounded","br1","bs","weight","color","size","bluer","imgHeight","imgWidth","invisible","hoverflow","Overlay","bgr","bgl","bgc","pointer","opac","hovOpac","initbox","cwidth","talign","cmarg","fs","DImage","dashed","m","objFit","grayscaling","DCard","rad","bordtop","bordcolor","p","dh","dw","justifyCenter","justifyAround","justifyBetween","jusitfyEnd","alignCenter","alignAround","alignBetween","alignFend","fcol","overf","grayzoom","overlaying","DFooterLinks","DFooter","footer","Section2Styled","visible","JButton","button","keyframes","DMouseScroll","inverted","basic","MouseScroll","Showcase","nextSection","showcase","setShowcase","scrollDown","useQuery","variables","sectionName","showcaseData","data","dataLoading","loading","error","showcaseCMS","content","position","id","dots","infinite","fade","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","adaptiveHeight","responsive","breakpoint","settings","arrows","map","sc","key","bgColor","bgImg","title","subtitle","paragraph","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","DFancyText","h1","FancyText","children","ripple","colors","red","green","yellow","grey","getTxtColor","getBtnColor","info","default","alert","confirm","warning","DButton","fSize","center","text","radius","DButtonFree","top","left","bottom","right","DLabel","label","ls","bgprimary","bgsecondary","bgdark","bggrey","bglight","bgbluer","bgblue","bgalert","bgconfirm","bgwarning","getBGColor","textalign","tt","w","jusitfyFend","hover","breakWord","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","success","ReadMore","ScrollUp","IconWrap","StyledIconBase","shadow","mini","tiny","small","medium","large","menu","bottomcenter","topright","DotsVertical","DotsVerticalRounded","DLink","borderb","DInput","input","textAlign","DSelect","select","CheckLabel","textt","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","CategorySection","setRef","wid","useWindowSize","isCategories","setIsCategories","categorySection","setCategorySection","active","dataCategories","loadingCategories","categories","sectionCategory","homeCMS","grid","category","photo","description","length","parser","substr","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","figure","titleSize","JCard2","oflow","JCard3","JCard4","imgw","imgh","DTestimonialCard","GalleryCard","styles","dloading","display","justifyContent","alignItems","flexDirection","lineHeight","TeamSection","cards","employeesAR","setEmployeesAR","limit","data_employeesAR","loading_employeesAR","aestheticiansReceps","count","employee","data-emp","lastName","role","bio","keyring","SpinnerRing","row","Spinner","AboutSection","isAboutSection","setIsAboutSection","about","setAbout","aboutChange","contentName","dataAbout","loadAbout","aboutUsCMS","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","visibility","from","y","ease","Power3","easeOut","scale","animate","story","missionvision","PromoSection1","FETCH_CONTACT_INFO","MapComponent","lat","lng","mapKey","console","log","bootstrapURLKeys","defaultCenter","defaultZoom","transform","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","regex","SEND_INQUIRY","ContactInquiry","address","phone","mobile","errors","setErrors","sendInquiry","email","subject","message","useMutation","update","onCompleted","result","toaster","notify","onError","err","graphQLErrors","extensions","exception","Form","Field","readOnly","border","borderBottom","noValidate","onSubmit","onChange","emailX","trim","ContactMap","contacts","setContacts","contactData","loadContact","contact","cont","FETCH_TESTIMONIALS","FETCH_USER_REVIEW","FETCH_VIEWS","TestimonialSection","reviews","setReviews","dataReviews","loadReviews","testimonialsView","rev","Rating","rating","maxRating","icon","ScrollButton","intervalId","pageYOffset","clearInterval","this","scrollPx","setInterval","scrollStep","bind","delay","setState","scrollToTop","React","Component","Home","card1","Story","aboutUS","mission","vision","maxHeight","letterSpacing","overflowWrap","overflow","padding","TeamDetails","href","Modal","onClose","closeIcon","Team","employees","setEmployees","dataEmployees","loadingEmployees","minHeight","emp","scrollView","About","minWidth","subtitles","overlay","REGISTER_USER","SignupForm","hist","register","password","confirmPassword","push","Group","widths","Label","Input","placeholder","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","Loader","marginTop","textTransform","fontWeight","Signup","pathname","history","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","loginUser","userX","general","Signin","RadioStyle","RadioGroupStyle","htmlFor","timeLineLabels","desiredStartTime","timeLength","interval","breakTimeLength","periodsInADay","moment","duration","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","calendarSize","days","times","appointmentTimes","isEmp","setIsEmp","isServ","setIsServ","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","loading_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","schedule","workLength","breakStart","breakLength","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","calendarClassName","inline","time","Page404","s","AppointmentInputs","categoryValue","setCategoryValue","setServiceValue","setEmployeeVal","setCategories","services","setServices","loading_categories","data_categories","useLazyQuery","categoryId","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","cursor","outline","servEmp","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","useHistory","addInfo","setService","cache","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","status","expiredLog","check","start","Header","toDateString","Actions","Appointment","FETCH_GALLERIES","FETCH_GALLERY","GalleryThumb","link","ImageGalleryHover","grayscale","ImageSelected","index","setCurrentImage","setViewerIsOpen","Gallery","allPhotos","currentImage","viewerIsOpen","galleries","setGalleries","dataGalleries","loadGalleries","imageRenderer","useCallback","g","photos","gallery","renderImage","directions","currentIndex","views","srcset","srcSet","caption","customStyles","base","backgroundColor","Album","albumId","params","albumPhotos","setAlbumPhotos","dataGallery","loadGallery","marginBottom","blanket","positioner","Contact","ADD_REVIEW","UPDATE_REVIEW","ModalReview","openReview","setOpenReview","userReview","rate","setRate","setMessage","edit","setEdit","mutation","addOrUpdate","onRate","TextArea","Review","setUserReview","dataUserReview","loadUserReview","userTestimonial","slidesPerRow","TestimonialCard","isTestimonials","setIsTestimonials","dataTestimonials","loadTestimonials","testimonials","testimonial","parseInt","updatedAt","Testimonials","Services","sectionDown","Service","isReadMore","setIsReadMore","isServices","setIsServices","goBack","onPointerLeave","price","VERRIFIED_APPOINTMENT","ThankYou","emailToken","go","appointmentId","verifiedAppointment","onload","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","dateOfBirth","updateUser","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","Accordion","setActive","contentRef","scrollHeight","hcolor","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","CANCEL_APPOINTMENT_MUTATION","absoluteCenter","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","new","Popup","circular","mouseEnterDelay","mouseLeaveDelay","headRow","headCells","highlightOnHoverStyle","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","currentAppoint","setCurrentAppoint","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","cell","fitted","wide","Grid","divided","Column","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","currentTarget","compact","historyAppoint","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","AppointmentDetails","schedDate","myAppoint","setMyAppoint","margn","jusitfy","Main","path","exact","UpcommingAppointments","progressPending","progressComponent","LayoutContainer","MainLayout","SideNavLayout","openMenu","HeaderLayout","handleOpenMenu","empId","empLog","setEmpLog","dataEmpLog","loadEmpLog","pointing","ml","marginRight","SideNav","isOpenMenu","activeClassName","Layout","setIsOpenMenu","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","CurrentAppointments","isCurrentAppoint","setIsCurrentAppoint","currentAppointmentData","currAppoint","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","Divider","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","timelineLabels","NewDateTime","NewAppointmentDetails","setServiceEmp","CREATE_GUEST_APPOINTMENT","setAddInfo","myAppointments","createGuestAppointment","NewAppointment","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","res","Checkbox","class","Employees","grow","hide","level","UPLOAD_EMPLOYEE_PHOTO","PhotoBooth","handleSchedule","addEmployeePhoto","DTextAreaStyled","par","DTextArea","regexNum","UPDATE_EMPLOYEE_PERSONAL","PersonalCard","isEditPersonal","setIsEditPersonal","setContent","personalValue","setPersonalValue","dob","updatePersonalEmployee","handlePersonalValue","handleEditPersonal","test","contactX","contactNum","onInit","editor","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","getData","DecoupledEditor","UPDATE_EMPLOYEE_ACCT","EmployeeCard","isEditEmpAcct","setIsEditEmpAcct","empAcctValue","setEmpAcctValue","notauth","updateEmpAcct","loadEmpAcct","handleEmpAcctValue","handleEditEmplAcct","REMOVE_SERVICE","RemoveService","categId","refetchCategories","categValue","setCategValue","removeService","loadRemoving","data-categid","onMouseOver","dataset","categid","ADD_SERVICES_MUTATION","ServiceCard","openAddService","setOpenAddService","categoryServices","categServ","categoryData","loadCategory","addService","loadAdd","categ","DetailsEmployee","UPDATE_EMPLOYEE_SCHEDULE","ScheduleEmployee","isEditSched","setIsEditSched","schedValues","setSchedValues","parseFloat","updateSchedule","loadSchedule","handleEditSched","handleSchedChange","borderRight","Info","isEmpInfo","ARCHIVE_EMPLOYEE","EmployeeDelete","isDlt","setIsDlt","archiveEmployee","loadArchived","on","flowing","Employee","setEmployee","setIsEmpInfo","employeeLoading","CREATE_NEW_CATEGORY_MUTATION","NewCategory","newCategory","createCategory","Categories","MenuStyledDots","middle","topleft","bottomright","middleright","bottomleft","middleleft","MenuDots","ARCHIVE_CATEGORY","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","archivedCategory","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","isEdit","setIsEdit","updateCategory","CREATE_NEW_SERVICE","NewService","createService","serviceExist","ServiceList","UPLOAD_CATEGORY_PHOTO","Category","setCategory","addCategoryPhoto","ARCHIVE_SERVICE","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","archiveService","loadArchiveService","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","serviceData","serviceLoading","addServicePhoto","replace","REPLY_MESSAGE","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","loadingInq","inquiry","replyInquiry","column","READ_INQ","Inquiry","setInquiries","inqVal","setInqVal","data_inquiries","loading_inquiries","readInq","handleMouseOver","inqid","msg","trimString","substring","data-inqid","fetchEmployee","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","updateEmployee","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","empPersonal","setEmpPersonal","empData","empLoading","User","setUsers","data_users","loading_users","allowOverflow","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","FilterInput","filterText","onFilter","onClear","isPrint","columnsPrint","omit","FilePrint","filteredItems","isPrintOpen","setIsPrintOpen","one","titleOne","titleTwo","author","setAuthor","handleAuthor","isEditPrint","setIsEditPrint","print","opacity","dense","Print","printOnly","HistoryAppointments","historyAppointments","setFilterText","resetPaginationToggle","setResetPaginationToggle","toUpperCase","subHeaderComponentMemo","useMemo","NoPrint","force","paginationResetDefaultPage","subHeader","subHeaderComponent","FileReport","setHistoryAppointments","historyAppointmentData","appointmentHistory","useUploadFile","selectedFile","setSelectedFile","preview","setPreview","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectedFile","files","ImageSection","isDark","isPosition","isColor","fileInput","click","ADD_NEW_SLIDE","UPDATE_SLIDE","ModalSlide","setIsDark","setIsPosition","setIsColor","showcaseId","addOrUpdateSlide","handlePosition","maxLength","checked","triangle","hex","NewSlide","EditSlide","REMOVE_SLIDE","RemoveSlide","isOpenRemove","setIsOpenRemove","removeSlide","UPDATE_ABOUT_SECTION","EditModal","aboutBool","updateAboutSection","SectionAbout","isAbout","setIsAbout","dataAboutSection","loadingAboutSection","loadingAbout","CategoryCards","gridCount","UPDATE_CATEGORY_SECTION","UpdateSectCategory","setOpenCatSec","openCatSec","categorySectionInfo","setGridCount","updateSectionCategory","handleGrid","SectionCategory","sectCategory","setSectCategory","loadSectionCategory","paddingBottom","UPDATE_ABOUT_HEADER","ModalHeading","openHead","setOpenHead","isOverlay","setIsOverlay","headers","setHeaders","updateAboutUs","handleChangeHeaders","Heading","dataAboutContent","loadAboutContent","bgColors","UPDATE_ABOUT_STORY","ModalStory","isStory","openStory","setOpenStory","reverse","setReverse","stories","setStories","updateStory","handleChangeStory","setIsStory","dataStoryContent","loadStoryContent","UPDATE_ABOUT_MISSIONVISION","ModalMissionVision","isMissionVision","fileInputMV","openMission","setOpenMission","reverseMV","setReverseMV","mtitle","msubtitle","mparagraph","vtitle","vsubtitle","vparagraph","valuesMV","setValuesMV","previewMV","selectedFileMV","onSelectedFileMV","updateMission","handleChangeValues","horizontal","isMission","setIsMission","dataMissionVision","loadMissionVision","Mission","TOGGLE_REVIEW","popContent","ToggleView","swid","tggl","toggleValue","setToggleValue","toggleTestimonial","loadToggle","data-sid","sid","ModalView","ridd","ARCHIVED_REVIEW","DeleteView","rvw","isDltModal","setIsDltModal","wdth","unauth","archiveTestimonial","loadArchive","textIndent","MenuView","menuId","review","menuValue","setMenuValue","data-rid","rid","centered","Testimonial","NEW_ALBUM","NewAlbum","albumOpen","setAlbumOpen","setTitle","newAlbum","loadNewAlbum","containerWidth","ADD_PHOTOS","NewPhotoDrop","addGalleryPhoto","acceptedFiles","forEach","image","onabort","onerror","readAsArrayBuffer","ADD_CONTACT_INFO","ContactModal","isOpenContact","setIsOpenContact","contactVals","setContactVals","addContact","handleContactVals","dataContactInfo","DELETE_EMP_PERM","RESTORE_EMPLOYEE","ArchEmpView","empView","setEmpView","setEmp","popWarning","setPopWarning","deleteEmployee","loadResult","ArchEmpDelete","popDelete","setPopDelete","ArchEmpRestore","popRestore","setPopRestore","ArchEmp","archEmp","setArchEmp","empValue","setEmpValue","archEmpData","archEmpLoad","archEmpErr","handleMenu","eid","data-eid","DELETE_CATEG_PERM","RESTORE_SERVICE_CATEGORY","ArchServCategView","categoryView","setCategoryView","setCateg","popWarnCateg","setPopWarnCateg","categoryLoad","archiveServCategory","loadArchServCategory","ArchServCategRestore","popCategRestore","setPopCategRestore","loadServCategory","DELETE_SERVICE_CATEGORY","ArchServCategDelete","popCategDelete","setPopCategDelete","deleteServCateg","loadServCateg","ArchServCateg","archServCateg","setArchServCateg","categoryIdVal","setCategoryIdVal","servCategData","servCategLoad","handleCategoryHover","categoryid","data-categoryid","DELETE_SERVICE_PERM","RESTORE_SERVICE_SUB","ArchServSubView","serviceView","setServiceView","setServ","popWarnServ","setPopWarnServ","serviceLoad","loadServiceResult","archiveServSub","loadArchServSub","ArchServSub","archServices","setArchServices","serviceIdVal","setServiceIdVal","servicesData","servicesLoad","allServices","handleServiceHover","serviceid","data-serviceid","ArchServ","Archiving","isArchive","Archive","setIsArchive","handleRadio","DRadio","Admin","PrintProvider","App","uploadLink","createUploadLink","uri","authLink","setContext","Authorization","client","ApolloClient","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a988a552.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null,\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: (userData) => {},\r\n  employeeLogin: (employeeData) => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {},\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload,\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData,\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData,\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${(props) => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 12vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"li a {color: #fff}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n      &:nth-child(7) {\r\n        transition-delay: 0s, 400ms;\r\n      }\r\n      &:nth-child(8) {\r\n        transition-delay: 0s, 450ms;\r\n      }\r\n      &:nth-child(9) {\r\n        transition-delay: 0s, 500ms;\r\n      }\r\n      &:nth-child(10) {\r\n        transition-delay: 0s, 550ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.scrolled && \".avatarLog {color: #fff}; li a {color: #fff};\"};\r\n\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const DropdownCustomNav = styled(Dropdown)`\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & a {\r\n    color: #232323;\r\n    font-weight: 700;\r\n  }\r\n  & a:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & .customDropMenu a {\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.primary} !important;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"color: #fff; a {color: #fff}\"};\r\n\r\n  @media (max-width: 1024px) {\r\n    a {\r\n      color: #ffff;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n    a:hover {\r\n      color: ${({ theme }) => theme.secondary};\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n  }\r\n\r\n  .customDropMenu .customDropMenuItem {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #232323 !important;\r\n    font-size: 14px !important;\r\n  }\r\n  .customDropMenu .customDropMenuItem:hover {\r\n    color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll(scrollVal) {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const scrollH = scrollVal !== undefined ? scrollVal : 100;\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > scrollH);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport {\r\n  DNavigation,\r\n  DMainMenu,\r\n  DRightMenu,\r\n  DropdownCustomNav,\r\n} from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  // let history = useHistory();\r\n\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    // history.push(\"\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const scrollBehavior = (el) =>\r\n    el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <Link to=\"/\">\r\n          <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        </Link>\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to={`/#home`} scroll={scrollBehavior}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/services&rates/#services\" scroll={scrollBehavior}>\r\n              Services\r\n            </Link>\r\n          </li>\r\n\r\n          {/* <Link to=\"/about\">About&nbsp;Us</Link> */}\r\n          <DropdownCustomNav\r\n            trigger={\r\n              <Link to=\"/about/#about\" scroll={scrollBehavior}>\r\n                About&nbsp;Us\r\n              </Link>\r\n            }\r\n            simple\r\n            scrolled={scrolling ? true : undefined}\r\n          >\r\n            <Dropdown.Menu className=\"customDropMenu\">\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#story\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Story\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#team\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Team\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </DropdownCustomNav>\r\n\r\n          <li>\r\n            <Link to=\"/gallery/#gallery\" scroll={scrollBehavior}>\r\n              Gallery\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/#contact\" scroll={scrollBehavior}>Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/testimonials/#tstmnl\" scroll={scrollBehavior}>\r\n              Testimonials\r\n            </Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger} className=\"avatarLog\">\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_THE_SHOWCASE = gql`\r\n  query showcaseCMS($sectionName: String) {\r\n    showcaseCMS(sectionName: $sectionName) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HOME_SECTION = gql`\r\n  query homeCMS($sectionName: String) {\r\n    homeCMS(sectionName: $sectionName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      grid\r\n      dark\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_ABOUT_CMS = gql`\r\n  query aboutUsCMS($contentName: String) {\r\n    aboutUsCMS(contentName: $contentName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_THE_SHOWCASE, FETCH_HOME_SECTION, FETCH_ABOUT_CMS };\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n  margin-top: 12vh;\r\n`;\r\n\r\nexport const DShowCase = styled.div`\r\n  width: 100%;\r\n\r\n  height: ${(props) => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: calc(100% - 20%) calc(100% - 20%);\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n  h1,\r\n  h2,\r\n  p {\r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n\r\n  @media (max-width: 360px) {\r\n    width: 100%;\r\n    background-position: calc(100% - 30%) calc(100% - 30%);\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    h1,\r\n    h2,\r\n    p {\r\n      margin-left: 0px;\r\n    }\r\n    h1,\r\n    h2 {\r\n      font-size: 14px;\r\n    }\r\n    p {\r\n      font-size: 12px;\r\n    }\r\n    button {\r\n      margin-left: 0px;\r\n      font-size: 14px;\r\n      padding: 0.5em 0.8em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: ${(props) =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${(props) => props.gap && props.gap};\r\n  grid-template-rows: ${(props) =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${(props) => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${(props) => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med10 ? props.med10 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med7 ? props.med7 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: ${(props) => (props.med5 ? props.med5 : \"1fr\")};\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${(props) => (props.height ? props.height : \"400px\")};\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  margin: ${(props) =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  position: relative;\r\n\r\n  ${(props) =>\r\n    props.minh &&\r\n    css`\r\n      min-height: ${props.minh};\r\n    `};\r\n  ${(props) =>\r\n    props.maxh &&\r\n    css`\r\n      min-height: ${props.maxh};\r\n    `};\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${(props) => props.height && props.height};\r\n  width: ${(props) =>\r\n    props.width ? props.width : props.fluid ? \"100%\" : \"50%\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  display: ${(props) => (props.flex ? \"flex\" : \"block\")};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${(props) => props.margin && props.margin};\r\n  background: url('${(props) =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${(props) => props.fixed && \"fixed\"};\r\n  background-color: ${(props) => props.bgcolor && props.bgcolor};\r\n  border-width: ${(props) => props.bordered && \"1px\"};\r\n  border-style: ${(props) => props.bordered && \"solid\"};\r\n  border-color: ${(props) =>\r\n    props.bordbtm && \"transparent transparent #ccc transparent\"};\r\n  border-radius: ${(props) =>\r\n    props.rounded\r\n      ? \"10px\"\r\n      : props.br1\r\n      ? \"0% 24% 26% 39% / 20% 0% 100% 0% \"\r\n      : \"0\"};\r\n  box-shadow: ${(props) =>\r\n    props.bs &&\r\n    (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n    \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n    \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n    \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n    \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n  z-index: 2;\r\n  font-weight: ${(props) => props.weight && props.weight};\r\n\r\n  ${(props) =>\r\n    props.minh &&\r\n    css`\r\n      min-height: ${props.minh};\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.maxh &&\r\n    css`\r\n      max-height: ${props.maxh};\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.flow &&\r\n    css`\r\n      flex-flow: ${props.flow};\r\n    `};\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  span {\r\n    color: ${(props) => props.color && props.color};\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${(props) => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${(props) => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${(props) => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${(props) => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n\r\n  visibility: visible;\r\n  pointer-events: all;\r\n  transition: visibility 200ms, opacity 0.3s ease-in-out;\r\n\r\n  ${(props) =>\r\n    props.invisible &&\r\n    css`\r\n      visibility: hidden;\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.hoverflow &&\r\n    css`\r\n      &:hover {\r\n        overflow: auto;\r\n      }\r\n    `};\r\n\r\n\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${(props) =>\r\n    props.bg\r\n      ? props.bg\r\n      : props.bgr\r\n      ? \"linear-gradient(270deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgl\r\n      ? \"linear-gradient(90deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgc\r\n      ? \"rgba(0,0,0,0.4)\"\r\n      : \"rgba(0, 0, 0, 0)\"};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  opacity: ${(props) => props.opac && props.opac};\r\n  transition: opacity 0.6s ease;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${(props) => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: ${(props) => (props.initbox ? \"110%\" : \"0\")};\r\n    height: 110%;\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transform-origin: center;\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      height: 100%;\r\n      width: 85%;\r\n      text-align: center;\r\n      margin: auto;\r\n      transform: rotate(-45deg);\r\n\r\n      .title {\r\n        text-transform: uppercase;\r\n        margin: 1px auto;\r\n      }\r\n      p {\r\n        height: auto;\r\n        font-size: 11px;\r\n      }\r\n\r\n      .title,\r\n      p {\r\n        letter-spacing: 2px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${(props) => (props.cwidth ? props.cwidth : \"80%\")};\r\n    text-align: ${(props) => (props.talign ? props.talign : \"left\")};\r\n    height: auto;\r\n    margin: ${(props) => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    padding: 10px 40px;\r\n\r\n    h1,\r\n    h2,\r\n    p {\r\n      letter-spacing: 5px;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    h3,\r\n    h4,\r\n    .ps {\r\n      letter-spacing: 1px;\r\n      line-height: 1.4;\r\n    }\r\n    .ps {\r\n      font-size: 10px;\r\n    }\r\n\r\n    h1 {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"60px\")};\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${(props) => (props.height ? props.height : \"300px\")};\r\n  width: ${(props) => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${(props) =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  border: ${(props) =>\r\n    props.bordered\r\n      ? \"1px solid #000\"\r\n      : props.dashed\r\n      ? \"1px dashed #ccc\"\r\n      : \"none\"};\r\n  margin: ${(props) => (props.m ? props.m : \"0 auto\")};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: pointer;\r\n\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: ${(props) => (props.objFit ? props.objFit : \"cover\")};\r\n    transition: all 0.6s ease-in-out;\r\n    ${(props) =>\r\n      props.grayscaling &&\r\n      css`\r\n        filter: grayscale(100%);\r\n      `}\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: ${(props) =>\r\n    props.rad ? props.rad : props.circle ? \"50%\" : \"10px\"};\r\n  border-top: ${(props) => (props.bordtop ? props.bordtop : \"none\")};\r\n  border-color: ${(props) =>\r\n    props.bordcolor ? props.bordcolor : \"transparent\"};\r\n  padding: ${(props) => (props.p ? props.p : \"10px\")};\r\n  height: ${(props) => (props.dh ? props.dh : \"300px\")};\r\n  width: ${(props) => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  margin: ${(props) => (props.mcenter ? \"0 auto\" : props.margin)};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyEnd\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => (props.fcol ? \"column\" : \"row\")};\r\n\r\n  ${(props) =>\r\n    props.maxh &&\r\n    css`\r\n      max-height: ${props.maxh};\r\n    `};\r\n\r\n  overflow: ${(props) => (props.overf ? \"visible\" : \"hidden\")};\r\n  background: ${(props) => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${(props) =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 3;\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n  ${(props) =>\r\n    props.grayzoom &&\r\n    css`\r\n      &:hover {\r\n        ${DImage} {\r\n          img {\r\n            filter: grayscale(0);\r\n            transform: scale(1.2);\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.overlaying &&\r\n    css`\r\n      &:hover {\r\n        ${Overlay} {\r\n          opacity: 0;\r\n          pointer-events: none;\r\n        }\r\n      }\r\n    `}\r\n\r\n    ${(props) =>\r\n      props.hoverflow &&\r\n      css`\r\n        &:hover {\r\n          overflow: auto;\r\n        }\r\n      `};\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  position: relative;\r\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\r\n  max-height: 100vh;\r\n  min-height: 30vh;\r\n  height: 100%;\r\n  width: ${(props) => (props.width ? props.width : \"90%\")};\r\n  margin: 24px auto;\r\n  text-align: center;\r\n\r\n  .switch {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: auto;\r\n    margin-bottom: 24px;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 24px;\r\n  }\r\n\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n    padding-top: 48px;\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: space-between;\r\n      ${(props) => props.alt && \"flex-direction: row-reverse\"};\r\n      margin: 0 auto;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 90%;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            text-align: left;\r\n            margin-bottom: 24px;\r\n            .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding: 12px;\r\n            margin-bottom: 56px;\r\n            text-align: justify;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 55%;\r\n        height: 100%;\r\n        position: relative;\r\n\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n              object-fit: cover;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    .sec2-container {\r\n      width: 100%;\r\n      .sec2-inner {\r\n        width: 100%;\r\n        justify-content: center;\r\n        margin: 0 auto;\r\n        .sec2-content {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .sec2-images {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 18px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const JButton = styled.button`\r\n  position: relative;\r\n  padding: 1em 1.5em;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 18px;\r\n  margin: 1em 0.8em;\r\n  color: ${({ theme }) => theme.secondary};\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n\r\n  &::after,\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 20%;\r\n    height: 20%;\r\n    border: 2px solid;\r\n    transition: all 0.6s ease;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  &::after {\r\n    bottom: -2px;\r\n    right: -2px;\r\n    border-top-color: transparent;\r\n    border-left-color: transparent;\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &::before {\r\n    top: -2px;\r\n    left: -2px;\r\n    border-bottom-color: transparent;\r\n    border-right-color: transparent;\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:hover:after,\r\n  &:hover:before {\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst scroll = keyframes`\r\n\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    10% {\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    }\r\n    100% {\r\n        transform: translateY(5px);\r\n        opacity: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const DMouseScroll = styled.div`\r\n  position: absolute;\r\n  top: 85%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n\r\n  &:hover {\r\n    .mousey {\r\n      opacity: 1;\r\n      left: 50%;\r\n    }\r\n    .scroll-downs {\r\n      &::before,\r\n      &::after {\r\n        top: 50%;\r\n        left: 50%;\r\n        border: 1px solid rgba(0, 0, 0, 0.5);\r\n      }\r\n    }\r\n  }\r\n\r\n  .scroll-downs {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      content: \"\";\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px solid rgba(0, 0, 0, 0.25);\r\n      transform: translate(-50%, -50%);\r\n      border-radius: 100%;\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n    &::before {\r\n      top: 48%;\r\n      left: 60%;\r\n    }\r\n\r\n    &::after {\r\n      top: 52%;\r\n      left: 52%;\r\n    }\r\n  }\r\n\r\n  .mousey {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 2px;\r\n    padding: 3px 5px;\r\n    height: 15px;\r\n    border: 2px solid #232323;\r\n    border-radius: 25px;\r\n    opacity: 0.75;\r\n    box-sizing: content-box;\r\n    background: #232323;\r\n  }\r\n\r\n  .scroller {\r\n    width: 2px;\r\n    height: 5px;\r\n    border-radius: 25%;\r\n    background-color: #fff;\r\n    animation-name: ${scroll};\r\n    animation-duration: 2.2s;\r\n    animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.inverted &&\r\n    \".mousey{background: #ffffff; border-color: #ffffff;} .scroller{background-color: #232323;} .scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.25)}} &:hover{.scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.5)}}}\"}\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \".mousey{background: transparent; border-width: 1px;} .scroller{background-color: #fff;} \"}\r\n`;\r\n","import React from \"react\";\r\nimport { DMouseScroll } from \"./styled/scroll.styled\";\r\n\r\nconst MouseScroll = props => {\r\n  return (\r\n    <DMouseScroll {...props}>\r\n      <div className=\"scroll-downs\">\r\n        <div className=\"mousey\">\r\n          <div className=\"scroller\"></div>\r\n        </div>\r\n      </div>\r\n    </DMouseScroll>\r\n  );\r\n};\r\n\r\nexport default MouseScroll;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { JButton } from \"../../styled/button\";\r\nimport Slider from \"react-slick\";\r\nimport MouseScroll from \"../../MouseScroll\";\r\n\r\nconst Showcase = ({ nextSection }) => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(nextSection);\r\n  };\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n    adaptiveHeight: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          arrows: false,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }} id=\"home\">\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"90vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcase.map((sc) => (\r\n            <DShowCase\r\n              height=\"90vh\"\r\n              key={sc._id}\r\n              bgcolor={sc.bgColor}\r\n              background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n            >\r\n              {/* {sc.bgImg && (\r\n                <DImage height=\"100%\">\r\n                  <img\r\n                    src={\r\n                      sc.bgImg !== null || sc.bgImg !== undefined\r\n                        ? `/images/cms/home/${sc.bgImg}`\r\n                        : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"showcase\"\r\n                  />\r\n                </DImage>\r\n              )} */}\r\n\r\n              <Overlay\r\n                flex\r\n                bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                justify={\r\n                  sc.position === \"left\"\r\n                    ? \"flex-start\"\r\n                    : sc.position === \"right\"\r\n                    ? \"flex-end\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                talign={\r\n                  sc.position === \"left\"\r\n                    ? \"left\"\r\n                    : sc.position === \"right\"\r\n                    ? \"right\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                align=\"center\"\r\n                className={sc.dark ? \"dark\" : \"\"}\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h1>{sc.title}</h1>\r\n                  <h2>{sc.subtitle}</h2>\r\n                  <p>{sc.paragraph}</p>\r\n                  <JButton\r\n                    className={sc.dark ? \"dark\" : \"\"}\r\n                    dark={sc.dark ? true : false}\r\n                  >\r\n                    Book Appointment\r\n                    <Link to=\"/appointment\" />\r\n                  </JButton>\r\n                </div>\r\n              </Overlay>\r\n              <MouseScroll\r\n                onClick={scrollDown}\r\n                inverted={sc.dark ? true : false}\r\n              />\r\n            </DShowCase>\r\n          ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  height: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  display: \"block\",\r\n};\r\n\r\nexport default Showcase;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories($active: Boolean) {\r\n    categories(active: $active) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n        active\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n        active\r\n      }\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices($active: Boolean) {\r\n    allServices(active: $active) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      active\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID, $active: Boolean) {\r\n    services(categoryId: $categoryId, active: $active) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      active\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      active\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DFancyText = styled.h1`\r\n  font-size: ${(props) => (props.size ? props.size : \"22px\")};\r\n  letter-spacing: 2px;\r\n  margin: 24px auto;\r\n  text-align: center;\r\n  font-family: \"Playfair Display\";\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  display: table;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  &:before,\r\n  &:after {\r\n    border-top-width: 2px;\r\n    border-top-style: solid;\r\n    border-top-color: ${(props) =>\r\n      props.color\r\n        ? props.color\r\n        : props.alt\r\n        ? ({ theme }) => theme.light\r\n        : ({ theme }) => theme.dark};\r\n    content: \"\";\r\n    display: table-cell;\r\n    position: relative;\r\n    top: 0.5em;\r\n    width: 100px;\r\n    min-width: 30px;\r\n  }\r\n  &:before {\r\n    right: 3%;\r\n  }\r\n  &:after {\r\n    left: 3%;\r\n  }\r\n  @media (max-width: 768px) {\r\n    margin: 0 auto;\r\n\r\n    font-size: 18px;\r\n  }\r\n\r\n  @media (max-width: 360px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DFancyText } from \"./styled/text\";\r\n\r\nconst FancyText = (props) => {\r\n  return <DFancyText {...props}>{props.children}</DFancyText>;\r\n};\r\n\r\nexport default FancyText;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\nimport { StyledIconBase } from \"@styled-icons/styled-icon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst colors = {\r\n  red: ({ theme }) => theme.red,\r\n  blue: ({ theme }) => theme.blue,\r\n  bluer: ({ theme }) => theme.bluer,\r\n  green: ({ theme }) => theme.green,\r\n  yellow: ({ theme }) => theme.yellow,\r\n  primary: ({ theme }) => theme.primary,\r\n  secondary: ({ theme }) => theme.secondary,\r\n  dark: ({ theme }) => theme.dark,\r\n  light: ({ theme }) => theme.light,\r\n  grey: ({ theme }) => theme.grey,\r\n};\r\n\r\nconst getTxtColor = (props) => {\r\n  if (props.color === \"primary\") return colors.primary;\r\n  if (props.color === \"secondary\") return colors.secondary;\r\n  if (props.color === \"dark\") return colors.dark;\r\n  if (props.color === \"grey\") return colors.grey;\r\n  if (props.color === \"light\") return colors.light;\r\n  if (props.color === \"bluer\") return colors.bluer;\r\n  if (props.color === \"blue\") return colors.blue;\r\n  if (props.color === \"red\") return colors.red;\r\n  if (props.color === \"green\") return colors.green;\r\n  if (props.color === \"yellow\") return colors.yellow;\r\n\r\n  return colors.light;\r\n};\r\n\r\nconst getNotifColor = (props) => {\r\n  if (props.info) return colors.primary;\r\n  if (props.secondary) return colors.secondary;\r\n  if (props.dark) return colors.dark;\r\n  if (props.grey) return colors.grey;\r\n  if (props.light) return colors.light;\r\n  if (props.bluer || props.default) return colors.bluer;\r\n  if (props.primary) return colors.blue;\r\n  if (props.alert) return colors.red;\r\n  if (props.confirm) return colors.green;\r\n  if (props.warning) return colors.yellow;\r\n  if (props.basic) return \"transparent\";\r\n  if (props.disabled) return \"#e9e4f0\";\r\n\r\n  return colors.blue;\r\n};\r\n\r\nconst getBGColor = (props) => {\r\n  if (props.bgprimary) return colors.primary;\r\n  if (props.bgsecondary) return colors.secondary;\r\n  if (props.bgdark) return colors.dark;\r\n  if (props.bggrey) return colors.grey;\r\n  if (props.bglight) return colors.light;\r\n  if (props.bgbluer || props.default) return colors.bluer;\r\n  if (props.bgblue) return colors.blue;\r\n  if (props.bgalert) return colors.red;\r\n  if (props.bgconfirm) return colors.green;\r\n  if (props.bgwarning) return colors.yellow;\r\n  if (props.basic) return \"transparent\";\r\n  if (props.disabled) return \"#e9e4f0\";\r\n\r\n  return \"transparent\";\r\n};\r\n\r\nconst getBtnColor = (props) => {\r\n  if (props.info) return colors.primary;\r\n  if (props.secondary) return colors.secondary;\r\n  if (props.dark) return colors.dark;\r\n  if (props.grey) return colors.grey;\r\n  if (props.light) return colors.light;\r\n  if (props.bluer || props.default) return colors.bluer;\r\n  if (props.primary) return colors.blue;\r\n  if (props.alert) return colors.red;\r\n  if (props.confirm) return colors.green;\r\n  if (props.warning) return colors.yellow;\r\n  if (props.basic) return \"transparent\";\r\n  if (props.disabled) return \"#e9e4f0\";\r\n\r\n  return colors.blue;\r\n};\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${(props) => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${(props) => (props.size ? props.size : \"36px\")};\r\n  width: ${(props) =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${(props) => (props.pad ? props.pad : \"4px 10px\")};\r\n  line-height: 1.42857143;\r\n  margin: ${(props) =>\r\n    props.margin ? props.margin : props.center ? \"1.5% auto\" : \"1.5%\"};\r\n  text-align: center;\r\n  text-transform: ${(props) => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n\r\n\r\n\r\n  border-radius: ${(props) =>\r\n    props.radius ? props.radius : props.circle ? \"50%\" : \"5px\"};\r\n  border-width: ${(props) => (props.basic ? \"1px\" : \"0\")};\r\n  border-style: ${(props) => props.basic && \"solid\"};\r\n  border-color: ${(props) => getBtnColor(props)};\r\n      \r\n  color:  ${(props) => getTxtColor(props)};\r\n\r\n  background: ${(props) => getBtnColor(props)};\r\n\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      background: #e9e4f0;\r\n      color: #d3cce3;\r\n    `};\r\n\r\n\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n  \r\n \r\n  &:hover {\r\n        opacity: 0.9;\r\n  };\r\n   \r\n\r\n \r\n\r\n  &:focus {\r\n    background: darken(${colors.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n\r\n  ${(props) =>\r\n    props.flex &&\r\n    css`\r\n      display: flex;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n    `};\r\n`;\r\n\r\nexport const DButtonFree = styled(DButton)`\r\n  position: absolute;\r\n  top: ${(props) => props.top && props.top};\r\n  left: ${(props) => props.left && props.left};\r\n  bottom: ${(props) => props.bottom && props.bottom};\r\n  right: ${(props) => props.right && props.right};\r\n`;\r\n\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  position: relative;\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  letter-spacing: ${(props) => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${(props) => (props.weight ? props.weight : 500)};\r\n  padding: ${(props) => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${(props) => (props.m ? props.m : \"2%\")};\r\n  background: ${(props) => getBGColor(props)};\r\n  color: ${(props) => getTxtColor(props)} !important;\r\n  border-radius: ${(props) => props.rounded && \"5px\"};\r\n  text-align: ${(props) => (props.textalign ? props.textalign : \"left\")};\r\n  text-transform: ${(props) => props.tt && props.tt};\r\n  width: ${(props) => (props.w ? props.w : \"auto\")};\r\n  display: ${(props) => (props.flex ? \"flex\" : \"inline-block\")};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n  }\r\n\r\n  ${(props) =>\r\n    props.hover &&\r\n    css`\r\n      opacity: 0.8;\r\n      cursor: pointer;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.breakWord &&\r\n    css`\r\n      overflow-wrap: break-word;\r\n      word-break: break-word;\r\n      hyphens: auto;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.pointer &&\r\n    css`\r\n      &:before {\r\n        position: absolute;\r\n        width: 8px;\r\n        height: 8px;\r\n        z-index: -1;\r\n        border: 1px solid ${(props) => getTxtColor(props)};\r\n        border-left: 1px solid transparent;\r\n        background: ${(props) => getTxtColor(props)};\r\n        filter: brightness(90%);\r\n\r\n        top: 100%;\r\n        left: 50%;\r\n        margin-left: -4px;\r\n        content: \"\";\r\n        transform: rotate(45deg);\r\n        margin-top: -4px;\r\n      }\r\n    `};\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${colors.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${colors.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${(props) => (props.bg ? props.bg : colors.dark)};\r\n    color: ${(props) => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${(props) =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${(props) => (props.activeBg ? props.activeBg : colors.blue)};\r\n      color: ${(props) =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${(props) => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${(props) =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${colors.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${colors.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${(props) =>\r\n    props.alert\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.success\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.warning\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(255, 255, 255,1.0)\"};\r\n  height: auto;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n  z-index: 5;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    min-width: 200px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 50px;\r\n\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .close {\r\n    height: 90%;\r\n    margin: 1% auto;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    fontweight: bold;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.p`\r\n  text-align: ${(props) =>\r\n    props.center ? \"center\" : props.left ? \"left\" : \"right\"};\r\n  cursor: pointer !important;\r\n\r\n  span {\r\n    color: ${(props) => (props.color ? props.color : colors.secondary)};\r\n    display: inline-block;\r\n    position: relative;\r\n    font-weight: 700;\r\n    font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n    &:after {\r\n      content: \"\\f061\";\r\n      font-family: FontAwesome;\r\n      ${(props) =>\r\n        props.hover\r\n          ? css`\r\n              margin-left: -10px;\r\n              opacity: 0;\r\n            `\r\n          : css`\r\n              margin-left: 5px;\r\n              opacity: 1;\r\n            `};\r\n      vertical-align: middle;\r\n      transition: margin 0.3s, opacity 0.3s;\r\n    }\r\n    a {\r\n      color: ${colors.secondary};\r\n    }\r\n    &:hover {\r\n      &:after {\r\n        margin-left: 5px;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollUp = styled(Icon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: block;\r\n`;\r\n\r\nexport const IconCustom = styled(Icon)`\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n  transition: all 0.5s ease;\r\n  margin: 2%;\r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const IconWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${(props) => getTxtColor(props)};\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n\r\n  ${StyledIconBase} {\r\n    color: ${(props) => getTxtColor(props)};\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n    transition: all 0.5s ease;\r\n    margin: ${(props) =>\r\n      props.mcenter ? \"0 auto\" : props.margin ? props.margin : \"5px\"};\r\n    outline: none;\r\n    padding: ${(props) => (props.pad ? props.pad : \"0\")};\r\n    visibility: visible;\r\n    pointer-events: all;\r\n    transition: visibility 200ms, opacity 0.3s ease-in-out;\r\n\r\n    ${(props) =>\r\n      props.bgcolor &&\r\n      css`\r\n        background-color: ${props.bgcolor};\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.shadow &&\r\n      css`\r\n        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.12), 0 2px 2px rgba(0, 0, 0, 0.12),\r\n          0 4px 4px rgba(0, 0, 0, 0.12), 0 8px 8px rgba(0, 0, 0, 0.12),\r\n          0 16px 16px rgba(0, 0, 0, 0.12);\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.invisible &&\r\n      css`\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        pointer-events: none;\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.size &&\r\n      css`\r\n        width: ${props.size};\r\n        height: ${props.size};\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.mini\r\n        ? css`\r\n            width: 9px;\r\n            height: 9px;\r\n          `\r\n        : props.tiny\r\n        ? css`\r\n            width: 18px;\r\n            height: 18px;\r\n          `\r\n        : props.small\r\n        ? css`\r\n            width: 22px;\r\n            height: 22px;\r\n          `\r\n        : props.medium\r\n        ? css`\r\n            width: 26px;\r\n            height: 26px;\r\n          `\r\n        : props.large\r\n        ? css`\r\n            width: 32px;\r\n            height: 32px;\r\n          `\r\n        : css`\r\n            width: 25px;\r\n            height: 25px;\r\n          `};\r\n\r\n    ${(props) =>\r\n      props.circle &&\r\n      css`\r\n        border-radius: 100%;\r\n      `};\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      transform: scale(1.1);\r\n\r\n      ${(props) =>\r\n        props.menu &&\r\n        css`\r\n          border-radius: 100%;\r\n          background: #ccc;\r\n        `}\r\n    }\r\n\r\n    ${(props) =>\r\n      props.bottomcenter &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        bottom: 2%;\r\n        left: 0;\r\n        right: 0;\r\n        margin: 0 auto;\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.topright &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        top: 2%;\r\n        right: 0;\r\n        margin: 0 auto;\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.right &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        top: 2%;\r\n        right: 0;\r\n        bottom: 0;\r\n        margin: 0 auto;\r\n      `};\r\n  }\r\n\r\n  &:hover {\r\n    ${StyledIconBase} {\r\n      opacity: 1;\r\n      transform: scale(1.1);\r\n\r\n      ${(props) =>\r\n        props.menu &&\r\n        css`\r\n          border-radius: 100%;\r\n          background: #ccc;\r\n        `}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DotsVertical = styled(DotsVerticalRounded)`\r\n  color: #232323;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    border-radius: 100%;\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nexport const DLink = styled(Link)`\r\n  color: ${(props) => (props.color ? props.color : \"#232323\")} !important;\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  padding-bottom: 5px;\r\n  &:hover {\r\n    color: ${colors.secondary} !important;\r\n    border-bottom: ${(props) => props.borderb && \"1px solid #232323\"};\r\n    border-bottom-color: ${colors.secondary};\r\n  }\r\n`;\r\n\r\nexport const DInput = styled.input`\r\n  padding: 10px;\r\n  width: ${(props) => (props.width ? props.width : \"auto\")};\r\n  height: 100%;\r\n  border: 1px solid rgba(0, 0, 0, 0.4);\r\n  border-radius: ${(props) => (props.radius ? props.radius : \"5px\")};\r\n  outline: none;\r\n  ${(props) =>\r\n    props.margin &&\r\n    css`\r\n      margin: ${props.margin};\r\n    `};\r\n  ${(props) =>\r\n    props.textAlign &&\r\n    css`\r\n      text-align: ${props.textAlign};\r\n    `};\r\n  ${(props) =>\r\n    props.error &&\r\n    css`\r\n      background: #fff6f6 !important;\r\n      color: #ce9a99 !important;\r\n      font-weight: 700;\r\n      border-color: #ce9a99 !important;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.fluid &&\r\n    css`\r\n      width: 100%;\r\n    `};\r\n  &:focus {\r\n    box-shadow: 0 0 2px 1px ${colors.primary};\r\n  }\r\n`;\r\n\r\nexport const DSelect = styled.select`\r\n  padding: 10px;\r\n  width: auto;\r\n  height: 100%;\r\n  border: 1px solid rgba(0, 0, 0, 0.4);\r\n  border-radius: 5px;\r\n  outline: none;\r\n\r\n  ${(props) =>\r\n    props.fluid &&\r\n    css`\r\n      width: 100%;\r\n    `};\r\n  &:focus {\r\n    box-shadow: 0 0 2px 1px ${colors.primary};\r\n  }\r\n`;\r\n\r\nexport const CheckLabel = styled.label`\r\n  font-weight: ${(props) =>\r\n    props.weight === \"fw500\" ? \"500 !important\" : \"700 !important\"};\r\n  color: ${(props) =>\r\n    props.color === \"green\"\r\n      ? colors.green\r\n      : props.color === \"bluer\"\r\n      ? colors.bluer\r\n      : props.color === \"blue\"\r\n      ? \"rgba(33, 147, 176, 0.7)\"\r\n      : props.color === \"dark\"\r\n      ? colors.dark\r\n      : props.color === \"grey\"\r\n      ? colors.grey\r\n      : colors.secondary};\r\n  text-transform: ${(props) => (props.textt ? props.textt : \"none\")};\r\n`;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"../../styled/utils\";\r\n\r\nconst ReadMore = (props) => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_HOME_SECTION } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DCard,\r\n  DImage,\r\n} from \"../../styled/containers\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst CategorySection = ({ setRef }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const [categorySection, setCategorySection] = useState({});\r\n\r\n  const {\r\n    data: dataCategories,\r\n    loading: loadingCategories,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataCategories) {\r\n      setIsCategories(dataCategories.categories);\r\n    }\r\n  }, [dataCategories]);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setCategorySection(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <DSection\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      pad=\"20px 0\"\r\n      bgcolor={categorySection.bgColor}\r\n      ref={setRef}\r\n    >\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n        className={categorySection.dark ? \"dark\" : \"\"}\r\n      >\r\n        {categorySection && (\r\n          <>\r\n            {categorySection.title !== \"\" && (\r\n              <FancyText size=\"28px\" alt={categorySection.dark ? true : false}>\r\n                {categorySection.title}\r\n              </FancyText>\r\n            )}\r\n            {categorySection.subtitle !== \"\" && (\r\n              <h3>{categorySection.subtitle}</h3>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <Content height=\"100%\" width=\"100%\">\r\n          {loadingCategories ? (\r\n            <DGrid four gap=\"20px\">\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n            </DGrid>\r\n          ) : (\r\n            <DGrid\r\n              two={categorySection.grid === 2 ? true : false}\r\n              three={categorySection.grid === 3 ? true : false}\r\n              four={categorySection.grid === 4 ? true : false}\r\n              gap=\"20px\"\r\n            >\r\n              {isCategories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/zeadmin/category/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategorySection;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees($active: Boolean) {\r\n    employees(active: $active) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      level\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      categoryServices {\r\n        _id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int, $active: Boolean) {\r\n    aestheticiansReceps(limit: $limit, active: $active) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      level\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      categoryServices {\r\n        _id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      level\r\n      dateOfBirth\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      categoryServices {\r\n        _id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const JCard = styled.figure`\r\n  background-color: #fff;\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  height: ${(props) => (props.height ? props.height : \"auto\")};\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  -webkit-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n  font-size: 12px;\r\n  margin: 24px auto;\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  img {\r\n    backface-visibility: hidden;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    background-color: #fe8c00;\r\n    opacity: 0.5;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  &:before {\r\n    -webkit-transform: skew(30deg) translateX(-80%);\r\n    transform: skew(30deg) translateX(-80%);\r\n  }\r\n\r\n  &:after {\r\n    -webkit-transform: skew(-30deg) translateX(-70%);\r\n    transform: skew(-30deg) translateX(-70%);\r\n  }\r\n\r\n  figcaption {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    padding: 25px 40% 25px 20px;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      background-color: #2193b0;\r\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\r\n      content: \"\";\r\n      opacity: 0.5;\r\n      z-index: -1;\r\n    }\r\n\r\n    &::before {\r\n      -webkit-transform: skew(30deg) translateX(-100%);\r\n      transform: skew(30deg) translateX(-100%);\r\n    }\r\n\r\n    &::after {\r\n      -webkit-transform: skew(-30deg) translateX(-90%);\r\n      transform: skew(-30deg) translateX(-90%);\r\n    }\r\n\r\n    h3,\r\n    p {\r\n      margin: 0;\r\n      opacity: 0;\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: ${(props) => (props.titleSize ? props.titleSize : \"36px\")};\r\n      font-weight: 700;\r\n      line-height: 1em;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n      font-size: 1em;\r\n    }\r\n  }\r\n\r\n  &:hover h3,\r\n  &.hover h3,\r\n  &:hover p,\r\n  &.hover p {\r\n    -webkit-transform: translateY(0);\r\n    transform: translateY(0);\r\n    opacity: 0.9;\r\n    -webkit-transition-delay: 0.2s;\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover:before,\r\n  &.hover:before {\r\n    -webkit-transform: skew(30deg) translateX(-20%);\r\n    transform: skew(30deg) translateX(-20%);\r\n    -webkit-transition-delay: 0.05s;\r\n    transition-delay: 0.05s;\r\n  }\r\n\r\n  &:hover:after,\r\n  &.hover:after {\r\n    -webkit-transform: skew(-30deg) translateX(-10%);\r\n    transform: skew(-30deg) translateX(-10%);\r\n  }\r\n\r\n  &:hover figcaption:before,\r\n  &.hover figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-40%);\r\n    transform: skew(30deg) translateX(-40%);\r\n    -webkit-transition-delay: 0.15s;\r\n    transition-delay: 0.15s;\r\n  }\r\n\r\n  &:hover figcaption:after,\r\n  &.hover figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-30%);\r\n    transform: skew(-30deg) translateX(-30%);\r\n    -webkit-transition-delay: 0.1s;\r\n    transition-delay: 0.1s;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nexport const JCard2 = styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    background: #fff;\r\n    max-width: 100%;\r\n    min-width: 240px;\r\n    height: 400px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n\r\n    .thumbnail {\r\n      width: 100%;\r\n      height:100%;\r\n      overflow: hidden;\r\n      border-radius: 10px 10px 0 0;\r\n      background: #eee;\r\n      img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n       object-fit: cover;\r\n      }\r\n    }\r\n\r\n \r\n    .post-content {\r\n      position: absolute;\r\n      bottom: 0;\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border-radius: 0 0 10px 10px;\r\n      .category {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 0;\r\n        background: ${({ theme }) => theme.secondary};\r\n        padding: 10px 15px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n      }\r\n      .title {\r\n        color: #ccc;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n      }\r\n      .sub_title {\r\n        margin: 0;\r\n        padding: 0 0 20px;\r\n        color: ${({ theme }) => theme.secondary};\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n      }\r\n\r\n      .description {\r\n          height: 10px;\r\n          margin-top: 12px;\r\n         \r\n          &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            background-color: #f5f5f5;\r\n          }\r\n\r\n          &::-webkit-scrollbar {\r\n            width: 10px;\r\n            background-color: #f5f5f5;\r\n          }\r\n          &::-webkit-scrollbar-thumb {\r\n            background-image: -webkit-gradient(\r\n              linear,\r\n              left bottom,\r\n              left top,\r\n              color-stop(0.44, rgb(122, 153, 217)),\r\n              color-stop(0.72, rgb(73, 125, 189)),\r\n              color-stop(0.86, rgb(28, 58, 148))\r\n            );\r\n          }\r\n        \r\n          p{\r\n            color: #232323;\r\n            font-size: 14px;\r\n            line-height: 1.8em;\r\n            opacity: 0;\r\n            \r\n            pointer-events: none;\r\n            transition: all 0.45s ease;\r\n            &:first-of-type {\r\n              margin-top: 1.25rem;\r\n              &:before {\r\n                content: \"\";\r\n                position: absolute;\r\n                height: 5px;\r\n                background: ${({ theme }) => theme.blue};\r\n                width: 35px;\r\n                top: -0.75rem;\r\n                border-radius: 3px;\r\n              }\r\n            }\r\n          }\r\n        \r\n        }\r\n     \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .thumbnail {\r\n        background-color: #000;\r\n    \r\n        img {\r\n          -webkit-transform: scale(1.1);\r\n          -moz-transform: scale(1.1);\r\n          transform: scale(1.1);\r\n          opacity: 0.8;\r\n          transition: all 0.8s ease-in;\r\n        }\r\n        transition: all 0.8s ease-in-out;\r\n\r\n      }\r\n      .post-content{\r\n        .description{\r\n          height: 175px;\r\n          transition: height 0.6s ease-in-out;\r\n          overflow: ${(props) => props.oflow && \"auto\"};\r\n          p{\r\n            cursor: default;\r\n            pointer-events: auto;\r\n            -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n            opacity: 0.9;\r\n            -webkit-transition-delay: 0.6s;\r\n            transition-delay: 0.6s;\r\n          }\r\n         \r\n        }\r\n        \r\n      }\r\n     \r\n\r\n    }\r\n  \r\n`;\r\n\r\nexport const JCard3 = styled.div`\r\n  .description {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #fff;\r\n    z-index: 1;\r\n\r\n    h1 {\r\n      line-height: 1;\r\n      margin: 0;\r\n      font-size: 1.7rem;\r\n    }\r\n    h4 {\r\n      font-size: 1rem;\r\n      font-weight: 300;\r\n      text-transform: capitalize;\r\n      color: #a2a2a2;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      margin: 1rem 0 0;\r\n      font-size: 16px;\r\n      &:first-of-type {\r\n        margin-top: 1.25rem;\r\n        &:before {\r\n          content: \"\";\r\n          position: absolute;\r\n          height: 5px;\r\n          background: ${({ theme }) => theme.blue};\r\n          width: 35px;\r\n          top: -0.75rem;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JCard4 = styled.figure`\r\n  position: relative;\r\n  margin: 10px auto;\r\n  min-width: 90%;\r\n  max-width: 315px;\r\n  width: 100%;\r\n  height: ${(props) => props.height && props.height};\r\n  color: #000000;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n  font-size: 14px;\r\n\r\n  & * {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .profile-image {\r\n    display: inline-block;\r\n    width: ${(props) => (props.imgw ? props.imgw : \"80%\")};\r\n    height: ${(props) => (props.imgh ? props.imgh : \"280px\")};\r\n    z-index: 1;\r\n    position: relative;\r\n    margin: ${(props) => props.margin && props.margin};\r\n    top: ${(props) => props.top && props.top};\r\n    right: ${(props) => props.right && props.right};\r\n    bottom: ${(props) => props.bottom && props.bottom};\r\n    left: ${(props) => props.left && props.left};\r\n    padding: 10px;\r\n    border: 2px solid #6dd5ed;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      vertical-align: top;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    .profile-image {\r\n      border-color: #2193b0;\r\n    }\r\n    figcaption {\r\n      box-shadow: ${(props) =>\r\n        props.bs\r\n          ? props.bs\r\n          : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n            \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n            \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n            \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n            \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n    }\r\n  }\r\n\r\n  figcaption {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    padding: 125px 25px 25px;\r\n    margin-top: -100px;\r\n    display: inline-block;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.11)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.11)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.11)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.11)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.11)\")};\r\n\r\n    h3,\r\n    h4,\r\n    p {\r\n      margin: 0 0 5px;\r\n    }\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    h4 {\r\n      color: #8c8c8c;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n      letter-spacing: 1px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .icons {\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .linkToPage {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const DTestimonialCard = styled.div`\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  outline: 0;\r\n  border: 0;\r\n  position: relative;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n\r\n  figure {\r\n    position: relative;\r\n    float: left;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    min-width: 90%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    color: #000000;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    background: #2193b0;\r\n    background: -webkit-linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n\r\n    padding: 15px;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n\r\n    & *,\r\n    & *::before,\r\n    & *::after {\r\n      -webkit-box-sizing: border-box;\r\n      box-sizing: border-box;\r\n      -webkit-transition: all 0.35s ease;\r\n      transition: all 0.35s ease;\r\n    }\r\n\r\n    .profile {\r\n      width: 100px;\r\n      height: 100px;\r\n      border-radius: 100%;\r\n      display: inline-block;\r\n      position: relative;\r\n      overflow: hidden;\r\n      -webkit-box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      margin-bottom: 10px;\r\n      border: solid 5px #fe8c00;\r\n      border-color: ${({ theme }) => theme.blue};\r\n\r\n      img {\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    figcaption {\r\n      position: relative;\r\n      width: 100%;\r\n\r\n      h5,\r\n      h4,\r\n      blockquote {\r\n        margin: 0;\r\n      }\r\n\r\n      h5,\r\n      h4 {\r\n        text-transform: uppercase;\r\n        font-weight: 500;\r\n      }\r\n\r\n      h4 {\r\n        color: #274046;\r\n      }\r\n\r\n      h4,\r\n      h5 {\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n      }\r\n\r\n      blockquote {\r\n        font-size: 1em;\r\n        padding: 45px 20px 40px 50px;\r\n        margin-top: 30px;\r\n        background: #ffffff;\r\n        border-radius: 5px;\r\n        -webkit-box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        text-align: left;\r\n        position: relative;\r\n\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n\r\n        &::before,\r\n        &::after {\r\n          font-family: \"FontAwesome\";\r\n          position: absolute;\r\n          font-size: 22px;\r\n          opacity: 0.25;\r\n          color: ${(props) =>\r\n            props.inverted\r\n              ? ({ theme }) => theme.light\r\n              : ({ theme }) => theme.dark};\r\n        }\r\n\r\n        &::before {\r\n          content: \"\\f10d\";\r\n          top: 20px;\r\n          left: 20px;\r\n        }\r\n        &::after {\r\n          content: \"\\f10e\";\r\n          bottom: 10px;\r\n          right: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \"figure{background: transparent; figcaption{blockquote{box-shadow: none; background: transparent}}}\"}\r\n`;\r\n\r\nexport const GalleryCard = styled.div`\r\n  position: relative;\r\n  flex: 0 1 15rem;\r\n  background-color: #fff;\r\n  padding-bottom: 5rem;\r\n  transition: background-color 0.2s cubic-bezier(0.5, 0.3, 0.8, 0.06);\r\n  color: #000;\r\n  margin: ${(props) => (props.margin ? props.margin : \"3px\")};\r\n\r\n  .thumb {\r\n    position: relative;\r\n    ${(props) =>\r\n      props.size === \"large\"\r\n        ? css`\r\n            width: 20rem;\r\n            height: 15rem;\r\n          `\r\n        : css`\r\n            width: 15rem;\r\n            height: 10rem;\r\n          `};\r\n\r\n    perspective-origin: 50% 0%;\r\n    ${(props) =>\r\n      props.size === \"large\"\r\n        ? css`\r\n            perspective: 900px;\r\n          `\r\n        : css`\r\n            perspective: 600px;\r\n          `};\r\n    z-index: 1;\r\n\r\n    &-image,\r\n    &-shadow {\r\n      position: absolute;\r\n      display: block;\r\n      ${(props) =>\r\n        props.size === \"large\"\r\n          ? css`\r\n              width: 20rem;\r\n              height: 15rem;\r\n            `\r\n          : css`\r\n              width: 15rem;\r\n              height: 10rem;\r\n            `};\r\n      transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1);\r\n    }\r\n\r\n    &-shadow {\r\n      opacity: 0.8;\r\n    }\r\n    &-shadow:nth-child(1) {\r\n      opacity: 0.6;\r\n      background-color: ${({ theme }) => theme.primary};\r\n      transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1) 0.07s;\r\n    }\r\n\r\n    &-shadow:nth-child(2) {\r\n      opacity: 0.7;\r\n      background-color: ${({ theme }) => theme.blue};\r\n      transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1) 0.05s;\r\n    }\r\n\r\n    &-shadow:nth-child(3) {\r\n      background-color: ${({ theme }) => theme.bluer};\r\n      transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1) 0.03s;\r\n    }\r\n\r\n    &-image {\r\n      position: relative;\r\n      background-image: url(${(props) => props.background && props.background});\r\n      background-size: auto 100%;\r\n      background-position: center;\r\n      background-repeat: no-repeat;\r\n      background-color: #607d8b;\r\n      &::before {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        background-color: #3f51b5;\r\n        content: \"\";\r\n        opacity: 0;\r\n        transition: opacity 0.1s;\r\n      }\r\n    }\r\n  }\r\n\r\n  .title,\r\n  .explore {\r\n    position: absolute;\r\n    bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 5rem;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    transition: all 0.2s cubic-bezier(0.5, 0.3, 0.8, 0.06);\r\n  }\r\n\r\n  .title span,\r\n  .explore span {\r\n    padding: 0.5rem;\r\n    flex: 1 1 auto;\r\n    text-align: center;\r\n  }\r\n\r\n  .explore {\r\n    opacity: 0;\r\n    transform: translate(0, -1rem);\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: #673ab7;\r\n  }\r\n\r\n  .btn {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 5rem;\r\n    padding: 0.5rem 1rem;\r\n    background-color: #fff;\r\n    border-radius: 2rem;\r\n    border: 2px solid #3f51b5;\r\n    color: #fff;\r\n    font-size: 0.75rem;\r\n    font-weight: 600;\r\n    transform: translate(-50%, 2rem);\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    opacity: 0;\r\n    outline: none;\r\n    z-index: 4;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:hover .thumb {\r\n    z-index: 3;\r\n  }\r\n\r\n  &:hover .title {\r\n    opacity: 0;\r\n  }\r\n\r\n  &:hover .explore {\r\n    opacity: 1;\r\n    transform: translate(0, 1rem);\r\n    transition: all 0.2s cubic-bezier(0.42, 0, 0.58, 1) 0.1s;\r\n  }\r\n\r\n  &:hover .thumb-image {\r\n    transform: scale(1.05) translate(0, -1rem) rotateX(25deg);\r\n  }\r\n\r\n  &:hover .thumb-image::before {\r\n    opacity: 0.4;\r\n  }\r\n\r\n  &:hover .thumb-shadow:nth-child(3) {\r\n    transform: scale(1.02) translate(0, -0.3rem) rotateX(15deg);\r\n  }\r\n\r\n  &:hover .thumb-shadow:nth-child(2) {\r\n    transform: ${(props) =>\r\n        props.size === \"large\" ? \"scale(0.94)\" : \"scale(0.9)\"}\r\n      translate(0, 1rem) rotateX(15deg);\r\n  }\r\n\r\n  &:hover .thumb-shadow:nth-child(1) {\r\n    transform: ${(props) =>\r\n        props.size === \"large\" ? \"scale(0.88)\" : \"scale(0.82)\"}\r\n      translate(0, 2.4rem) rotateX(5deg);\r\n  }\r\n\r\n  &:hover .btn {\r\n    opacity: 1;\r\n    color: #3f51b5;\r\n    transform: translate(-50%, 0);\r\n  }\r\n\r\n  &:hover .btn:hover {\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 5;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport { JCard4 } from \"../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport FancyText from \"../../FancyText\";\r\n\r\nconst TeamSection = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4,\r\n      active: true,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <FancyText size=\"28px\">Our Team</FancyText>\r\n\r\n      <DGrid four gap=\"25px\">\r\n        {loading_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          employeesAR &&\r\n          employeesAR.map((employee) => (\r\n            <Content margin=\"0 auto\" width=\"90%\" height=\"100%\">\r\n              <JCard4 data-emp={employee._id} key={employee._id}>\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={\r\n                      employee.photo\r\n                        ? `/images/employees/${employee.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                    }\r\n                    alt={employee.photo}\r\n                  />\r\n                </div>\r\n                <figcaption>\r\n                  <h3>\r\n                    {employee.title} {employee.firstName} {employee.lastName}\r\n                  </h3>\r\n                  <h4>{employee.role}</h4>\r\n                  <p>\r\n                    {employee.bio.length > 100\r\n                      ? parser(employee.bio.substr(0, 100) + \"...\")\r\n                      : parser(employee.bio.substr(0, 100))}\r\n                  </p>\r\n                  <ReadMore hover={0}>Read More</ReadMore>\r\n                </figcaption>\r\n                <Link to=\"/about\" className=\"linkToPage\" />\r\n              </JCard4>\r\n            </Content>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n\r\n      <Link to=\"/about/#team\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2,\r\n    margin: \"0 auto\",\r\n  },\r\n};\r\n\r\nexport default TeamSection;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: flex;\r\n  justify-column: center;\r\n  align-items: center;\r\n  flex-direction: ${(props) => (props.row ? \"row\" : \"column\")};\r\n\r\n  .ring {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${(props) =>\r\n      props.mini\r\n        ? \"12px\"\r\n        : props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"90px\"\r\n        : \"10em\"};\r\n    height: ${(props) =>\r\n      props.mini\r\n        ? \"12px\"\r\n        : props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"90px\"\r\n        : \"12em\"};\r\n\r\n    div {\r\n      box-sizing: border-box;\r\n      display: block;\r\n      position: absolute;\r\n      width: ${(props) =>\r\n        props.mini\r\n          ? \"9px\"\r\n          : props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"72px\"\r\n          : \"10em\"};\r\n      height: ${(props) =>\r\n        props.mini\r\n          ? \"9px\"\r\n          : props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"72px\"\r\n          : \"10em\"};\r\n      margin: ${(props) =>\r\n        props.mini\r\n          ? \"1px\"\r\n          : props.tiny\r\n          ? \"2px\"\r\n          : props.small\r\n          ? \"3px\"\r\n          : props.medium\r\n          ? \"6px\"\r\n          : \"10px\"};\r\n      border: ${(props) =>\r\n        props.mini\r\n          ? \"1px solid rgba(255,255,255,0.7)\"\r\n          : props.tiny\r\n          ? \"1px solid #fff\"\r\n          : props.small\r\n          ? \"2px solid #fff\"\r\n          : props.medium\r\n          ? \"3px solid #fff\"\r\n          : \"4px  solid #fff\"};\r\n\r\n      border-radius: 50%;\r\n      animation: ${keyring} 1.2s infinite linear; //cubic-bezier(0.5, 0, 0.5, 1) infinite\r\n      border-color: ${(props) =>\r\n        props.inverted\r\n          ? \"#fff rgba(255, 255, 255, 0.2) rgba(255, 255, 255, 0.2) rgba(255, 255, 255, 0.2)\"\r\n          : \"#203A43 rgba(32, 58, 67, 0.2) rgba(32, 58, 67, 0.2) rgba(32, 58, 67, 0.2)\"};\r\n    }\r\n\r\n    div:nth-child(1) {\r\n      animation-delay: -0.45s;\r\n    }\r\n    div:nth-child(2) {\r\n      animation-delay: -0.3s;\r\n    }\r\n    div:nth-child(3) {\r\n      animation-delay: -0.15s;\r\n    }\r\n  }\r\n\r\n  .content-text {\r\n    margin: 0 2px;\r\n    letter-spacing: 2px;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    font-size: ${(props) =>\r\n      props.tiny\r\n        ? \"12px\"\r\n        : props.small\r\n        ? \"13px\"\r\n        : props.medium\r\n        ? \"14px\"\r\n        : \"16px\"};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = (props) => {\r\n  return (\r\n    <SpinnerRing {...props}>\r\n      <div className=\"ring\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"content-text\">{props.content}</div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { FETCH_HOME_SECTION, FETCH_ABOUT_CMS } from \"../../../util/graphql/cms\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Section2Styled, Content } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AboutSection = ({ nextSection }) => {\r\n  const [isAboutSection, setIsAboutSection] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const {\r\n    data: aboutChange,\r\n    loading: loadAboutChange,\r\n  } = useQuery(FETCH_HOME_SECTION, { variables: { sectionName: \"ABOUT\" } });\r\n\r\n  useEffect(() => {\r\n    if (aboutChange) {\r\n      setIsAboutSection(aboutChange.homeCMS);\r\n    }\r\n  }, [aboutChange]);\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled\r\n      ref={(el) => (section2 = el)}\r\n      alt={isAboutSection.alt === true ? true : false}\r\n    >\r\n      <div className=\"sec2-container\" ref={nextSection}>\r\n        <div className=\"sec2-inner\">\r\n          {loadAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner medium />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n                <ReadMore>\r\n                  <Link to=\"/about/#story\">Learn More</Link>\r\n                </ReadMore>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={(el) => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default AboutSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst PromoSection1 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/appointment\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default PromoSection1;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const FETCH_CONTACT_INFO = gql`\r\n  query contact {\r\n    contact {\r\n      _id\r\n      address\r\n      lat\r\n      lng\r\n      mapKey\r\n      phone\r\n      mobile\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { Marker } from \"@styled-icons/foundation\";\r\n\r\nconst MapComponent = ({ lat, lng, mapKey }) => {\r\n  console.log(mapKey);\r\n  return (\r\n    <Content\r\n      height=\"70vh\"\r\n      width=\"100%\"\r\n      bgcolor=\"#ccc\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{\r\n          key: mapKey,\r\n        }}\r\n        defaultCenter={{ lat, lng }}\r\n        defaultZoom={15}\r\n      >\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            transform: \"translate(-50%,-50%)\",\r\n          }}\r\n          lat={14.326171}\r\n          lng={120.9369621}\r\n          text=\"MARKER\"\r\n        >\r\n          <Marker color=\"#fe8c00\" size=\"48px\" />\r\n        </div>\r\n      </GoogleMapReact>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    setValues,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DInput, DLabel } from \"../../styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst regex = /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/;\r\n\r\nconst ContactInquiry = ({ address, phone, mobile }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email,\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"90%\" height=\"100%\" margin=\"0 auto\" pad=\"20px\">\r\n      <DGrid two>\r\n        <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Location</label>\r\n              <input\r\n                value={address}\r\n                readOnly\r\n                style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Phone</label>\r\n              <input\r\n                value={phone}\r\n                readOnly\r\n                style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Mobile</label>\r\n              <input\r\n                value={mobile}\r\n                readOnly\r\n                style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Content>\r\n        <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Field>\r\n              <label>Name</label>\r\n              <input name=\"name\" value={values.name} onChange={handleChange} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Email</label>\r\n              {values.email.match(regex) ? (\r\n                \"\"\r\n              ) : errors.emailX || errors.email ? (\r\n                <DLabel rounded color=\"red\" bglight>\r\n                  {errors.emailX || errors.email}\r\n                </DLabel>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <DInput\r\n                error={\r\n                  values.email.match(regex)\r\n                    ? null\r\n                    : errors.emailX || errors.email\r\n                    ? true\r\n                    : null\r\n                }\r\n                fluid\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <label>Subject</label>\r\n              {values.subject.trim() !== \"\" ? (\r\n                \"\"\r\n              ) : errors.subject ? (\r\n                <DLabel rounded color=\"red\" bglight>\r\n                  {errors.subject}\r\n                </DLabel>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <DInput\r\n                error={\r\n                  values.subject.trim() !== \"\"\r\n                    ? null\r\n                    : errors.subject\r\n                    ? true\r\n                    : null\r\n                }\r\n                fluid\r\n                type=\"text\"\r\n                name=\"subject\"\r\n                value={values.subject}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Message</label>\r\n              {values.message.trim() !== \"\" ? (\r\n                \"\"\r\n              ) : errors.message ? (\r\n                <DLabel rounded color=\"red\" bglight>\r\n                  {errors.message}\r\n                </DLabel>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <textarea\r\n                name=\"message\"\r\n                value={values.message}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <DButton fluid type=\"submit\">\r\n              {loading ? (\r\n                <Spinner small row inverted content=\"Sending\" />\r\n              ) : (\r\n                \"Send\"\r\n              )}\r\n            </DButton>\r\n          </Form>\r\n        </Content>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ContactInquiry;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_CONTACT_INFO } from \"../../../util/graphql/contact\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nimport MapComponent from \"./MapComponent\";\r\nimport ContactInquiry from \"./ContactInquiry\";\r\n\r\nconst ContactMap = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const { data: contactData, loading: loadContact } = useQuery(\r\n    FETCH_CONTACT_INFO\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (contactData) setContacts(contactData.contact);\r\n  }, [contactData]);\r\n\r\n  return (\r\n    <DSection height=\"100%\" width=\"100%\" id=\"contact\">\r\n      {loadContact ? (\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"80vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          <Spinner content=\"Fetching data...\" />\r\n        </Content>\r\n      ) : (\r\n        <>\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"20vh\"\r\n          >\r\n            <FancyText size=\"38px\">Contact Us</FancyText>\r\n          </Content>\r\n          {contacts &&\r\n            contacts.map((cont) => (\r\n              <>\r\n                <ContactInquiry\r\n                  address={cont.address}\r\n                  phone={cont.phone}\r\n                  mobile={cont.mobile}\r\n                />\r\n                <MapComponent\r\n                  lat={cont.lat}\r\n                  lng={cont.lng}\r\n                  mapKey={cont.mapKey}\r\n                />\r\n              </>\r\n            ))}\r\n        </>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ContactMap;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_TESTIMONIALS = gql`\r\n  query testimonials($active: Boolean) {\r\n    testimonials(active: $active) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USER_REVIEW = gql`\r\n  query userTestimonial($userId: ID) {\r\n    userTestimonial(userId: $userId) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_VIEWS = gql`\r\n  query testimonialsView($limit: Int) {\r\n    testimonialsView(limit: $limit) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_TESTIMONIALS, FETCH_USER_REVIEW, FETCH_VIEWS };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_VIEWS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, Overlay } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst TestimonialSection = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const { data: dataReviews, loading: loadReviews } = useQuery(FETCH_VIEWS, {\r\n    variables: {\r\n      limit: 0,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonialsView);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      width=\"100%\"\r\n      mcenter\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      {loadReviews ? (\r\n        <Spinner inverted medium />\r\n      ) : (\r\n        <Content width=\"80%\" height=\"auto\" margin=\"auto\" pad=\"50px 0\">\r\n          <Slider {...settings}>\r\n            {reviews &&\r\n              reviews.map((rev) => (\r\n                <DTestimonialCard basic inverted>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          rev.user.photo\r\n                            ? `/images/users/${rev.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n\r\n                    <figcaption>\r\n                      <h4>\r\n                        {rev.user.firstName} {rev.user.lastName}{\" \"}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={rev.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>{rev.message}</blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        </Content>\r\n      )}\r\n\r\n      <Overlay\r\n        bg={\"rgba(0,0,0,0.5)\"}\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        pad=\"20px\"\r\n      >\r\n        <FancyText size=\"28px\" alt>\r\n          What Our Client Say\r\n        </FancyText>\r\n      </Overlay>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  fade: true,\r\n  infinite: true,\r\n  autoplay: true,\r\n  speed: 1000,\r\n  autoplaySpeed: 4000,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nexport default TestimonialSection;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { ScrollUp, DButton } from \"../../styled/utils\";\r\nimport \"./scroll.css\";\r\n\r\nclass ScrollButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(\r\n      0,\r\n      window.pageYOffset - (this.props.scrollPx ? this.props.scrollPx : \"100\")\r\n    );\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delay ? this.props.delay : \"16.66\"\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        title=\"Back to top\"\r\n        className=\"scroll\"\r\n        onClick={() => {\r\n          this.scrollToTop();\r\n        }}\r\n      >\r\n        <ScrollUp name=\"chevron up\" size=\"large\" className=\"arrow-up\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ScrollButton;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategorySection from \"../../components/main/home/CategorySection\";\r\nimport TeamSection from \"../../components/main/home/TeamSection\";\r\nimport AboutSection from \"../../components/main/home/AboutSection\";\r\nimport PromoSection1 from \"../../components/main/home/PromoSection1\";\r\nimport ContactMap from \"../../components/main/home/ContactMap\";\r\nimport TestimonialSection from \"../../components/main/home/TestimonialSection\";\r\nimport { DContainer } from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Home = () => {\r\n  const nextSection = useRef();\r\n  const card1 = \"/images/card1.jpg\";\r\n  const scrolling = useScroll(300);\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton />}\r\n      <Showcase nextSection={nextSection} />\r\n\r\n      <AboutSection nextSection={nextSection} />\r\n\r\n      <CategorySection cards={card1} />\r\n      <PromoSection1 />\r\n      <TeamSection cards={card1} />\r\n      <TestimonialSection />\r\n      <ContactMap />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { DSection, Content, DImage } from \"../../styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = ({ content, aboutUS }) => {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768\r\n            ? \"column\"\r\n            : aboutUS.missionvision.alt\r\n            ? \"row-reverse\"\r\n            : \"row\"\r\n        }\r\n        margin=\"24px auto 0 auto\"\r\n        ref={content}\r\n        id=\"story\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"24px\"\r\n        >\r\n          <h3>{aboutUS && aboutUS.missionvision.mission.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.mission.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.mission.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.mission.paragraph}</p>\r\n          <h3>{aboutUS && aboutUS.missionvision.vision.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.vision.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.vision.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.vision.paragraph}</p>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.missionvision.photo\r\n                  ? `/images/cms/about/${aboutUS.missionvision.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768 ? \"column\" : aboutUS.story.alt ? \"row-reverse\" : \"row\"\r\n        }\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"90%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.story.photo\r\n                  ? `/images/cms/about/${aboutUS.story.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"20px\"\r\n          style={{ maxHeight: \"90vh\" }}\r\n        >\r\n          <h3>{aboutUS.story.title}</h3>\r\n          {aboutUS.story.subtitle !== \"\" && <h4>{aboutUS.story.subtitle}</h4>}\r\n          <p\r\n            style={{\r\n              fontSize: \"15px\",\r\n              letterSpacing: \"2px\",\r\n              lineHeight: 1.8,\r\n              textAlign: \"justify\",\r\n              overflowWrap: \"break-word\",\r\n              overflow: \"auto\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            {aboutUS.story.paragraph}\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../styled/card\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst TeamDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModal = (event) => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JCard4 data-emp={employee._id} onClick={handleModal}>\r\n        <div className=\"profile-image\">\r\n          <img\r\n            src={\r\n              employee.photo\r\n                ? `/images/employees/${employee.photo}`\r\n                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n            }\r\n            alt={employee.photo}\r\n          />\r\n        </div>\r\n        <figcaption>\r\n          <h3>\r\n            {employee.title} {employee.firstName} {employee.lastName}\r\n          </h3>\r\n          <h4>{employee.role}</h4>\r\n          <p>\r\n            {employee.bio.length > 100\r\n              ? parser(employee.bio.substr(0, 100) + \"...\")\r\n              : parser(employee.bio.substr(0, 100))}\r\n          </p>\r\n          <ReadMore hover={0}>Read More</ReadMore>\r\n          <div className=\"icons\">\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-reddit\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-vimeo\"></i>\r\n            </a>\r\n          </div>\r\n        </figcaption>\r\n      </JCard4>\r\n      <Modal size=\"small\" open={open} onClose={() => setOpen(false)} closeIcon>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4 top={\"-60px\"}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{employee.firstName}</h1>\r\n                <h4>{employee.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {parser(employee.bio)}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport FancyText from \"../../FancyText\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nconst Team = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const { data: dataEmployees, loading: loadingEmployees } = useQuery(\r\n    FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n    {\r\n      variables: { limit: 0, active: true },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmployees) {\r\n      setEmployees(dataEmployees.aestheticiansReceps);\r\n    }\r\n  }, [dataEmployees]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        fixed\r\n        id=\"team\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n        >\r\n          <FancyText size=\"48px\">Our TEAM</FancyText>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        pad=\"10px 0\"\r\n        mcenter\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          {loadingEmployees ? (\r\n            <Content\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              width=\"90%\"\r\n              height=\"100%\"\r\n            >\r\n              <Spinner content=\"Fetching data...\" />\r\n            </Content>\r\n          ) : (\r\n            <DGrid three gap=\"20px\">\r\n              {employees &&\r\n                employees.map((emp) => (\r\n                  <TeamDetails key={emp._id} employee={emp} />\r\n                ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","export const scrollView = ref => {\r\n  if (ref.current)\r\n    ref.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\"\r\n    });\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../util/graphql/cms\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport Story from \"../../components/main/about/Story\";\r\nimport Team from \"../../components/main/about/Team\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst About = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n\r\n      <>\r\n        <DSection\r\n          background={\r\n            about.bgImg\r\n              ? `/images/cms/about/${about.bgImg}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          bgcolor={about.bgColor}\r\n          height=\"85vh\"\r\n          fixed\r\n          id=\"about\"\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className=\"dark\"\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>\r\n              {about.title ? about.title : \"ABOUT US\"}\r\n            </h1>\r\n            {loadAbout && <Spinner medium inverted />}\r\n            {about.subtitle !== \"\" && <h3>{about.subtitles}</h3>}\r\n            <MouseScroll onClick={scrollDown} />\r\n          </Content>\r\n          <Overlay bgc={about.overlay ? true : false} />\r\n        </DSection>\r\n        {loadAbout ? (\r\n          <DSection\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"space-around\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            margin=\"20px auto\"\r\n            pad=\"20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Skeleton height=\"100%\" width=\"100%\" />\r\n              <Skeleton width=\"100%\" height={20} count={10} />\r\n            </DGrid>\r\n          </DSection>\r\n        ) : (\r\n          <Story content={content} aboutUS={dataAbout.aboutUsCMS} />\r\n        )}\r\n      </>\r\n\r\n      <Team />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/login\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS,\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted() {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\",\r\n          }}\r\n        >\r\n          <Link to=\"/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const RadioStyle = styled.div`\r\n  height: ${(props) => (props.size ? props.size : \"auto\")};\r\n  width: auto;\r\n\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.1);\r\n  margin: 5px 0;\r\n  .radio {\r\n    position: absolute;\r\n    clip: rect(0, 0, 0, 0);\r\n    height: 1px;\r\n    width: 1px;\r\n    border: 0;\r\n    overflow: hidden;\r\n    &:checked {\r\n      & + .radio-label {\r\n        background-color: #2193b0;\r\n        color: #fff;\r\n        font-weight: 700;\r\n        box-shadow: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .radio-label {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background-color: #e4e4e4;\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-size: 14px;\r\n    line-height: 1;\r\n    text-align: center;\r\n\r\n    padding: 8px 16px;\r\n\r\n    transition: all 0.1s ease-in-out;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RadioGroupStyle = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-flow: row wrap;\r\n  overflow: hidden;\r\n\r\n  ${RadioStyle} {\r\n    &:first-of-type {\r\n      border-radius: 5px 0 0 5px;\r\n    }\r\n    &:last-of-type {\r\n      border-radius: 0 5px 5px 0;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { RadioStyle, RadioGroupStyle } from \"./styled/inputs\";\r\n\r\nconst RadioGroup = (props) => {\r\n  return <RadioGroupStyle>{props.children}</RadioGroupStyle>;\r\n};\r\n\r\nconst RadioInput = (props) => {\r\n  return (\r\n    <RadioStyle>\r\n      <input type=\"radio\" className=\"radio\" {...props} />\r\n      <label className=\"radio-label\" htmlFor={props.id}>\r\n        {props.label}\r\n      </label>\r\n    </RadioStyle>\r\n  );\r\n};\r\n\r\nexport default { RadioInput, RadioGroup };\r\n","import moment from \"moment\";\r\n\r\nconst timeLineLabels = (\r\n  desiredStartTime,\r\n  timeLength,\r\n  interval,\r\n  breakTimeLength = 0\r\n) => {\r\n  const periodsInADay = moment\r\n    .duration(timeLength + breakTimeLength, \"MINUTES\")\r\n    .as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nexport default timeLineLabels;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport DRadio from \"../../DRadio\";\r\nimport moment from \"moment\";\r\nimport timeLineLabels from \"../../../util/hooks/timeLineLabels\";\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue,\r\n  calendarSize,\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n  const [isEmp, setIsEmp] = useState({});\r\n  const [isServ, setIsServ] = useState({});\r\n\r\n  const handleTimeChanged = (event) => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_employee) {\r\n      setIsEmp(data_employee);\r\n    }\r\n  }, [data_employee]);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setIsServ(data_service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n      },\r\n    }\r\n  );\r\n\r\n  if (isEmp && isServ && data_appointments) {\r\n    const workStart = isEmp.employee && isEmp.employee.schedule.workStart;\r\n    const workLength = isEmp.employee && isEmp.employee.schedule.workLength;\r\n    const breakStart = isEmp.employee && isEmp.employee.schedule.breakStart;\r\n    const breakLength = isEmp.employee && isEmp.employee.schedule.breakLength;\r\n\r\n    isEmp.employee && isEmp.employee.schedule.day.map((d) => days.push(d));\r\n    data_appointments.checkedAppointments.map((occcupied) =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = isServ.service.duration;\r\n\r\n    const workingTime = timeLineLabels(\r\n      startTime,\r\n      workLength,\r\n      intervalTime,\r\n      breakLength\r\n    );\r\n    const breakTime = timeLineLabels(breakStime, breakLength, 30);\r\n\r\n    let initialTime = workingTime.filter((item) => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter((oras) => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map((ft) => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content height=\"100%\" width=\"100%\" flex justify=\"center\" align=\"center\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          peekNextMonth\r\n          showMonthDropdown\r\n          showYearDropdown\r\n          dropdownMode=\"select\"\r\n          calendarClassName={calendarSize}\r\n          inline\r\n        />\r\n      </Content>\r\n\r\n      {isEmp &&\r\n        data_service &&\r\n        (loading_employee || loading_appointments || loading_service ? (\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <Spinner content=\"Fetching available time slot...\" medium />\r\n          </Content>\r\n        ) : (\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"space-around\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <DLabel size=\"16px\" color=\"bluer\" weight={700} rounded>\r\n              Time Slot\r\n            </DLabel>\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              maxh={\"300px\"}\r\n              flex\r\n              align=\"flex-start\"\r\n              justify=\"flex-start\"\r\n              flow=\"column wrap\"\r\n              hoverflow\r\n            >\r\n              {times.map((time) => (\r\n                <Content width=\"auto\" height=\"30px\" margin={\"5px\"} key={time}>\r\n                  <div className=\"pretty p-default p-curve\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"time\"\r\n                      value={time}\r\n                      onChange={handleTimeChanged}\r\n                    />\r\n                    <div className=\"state p-info-o\">\r\n                      <label style={styles.label}>{time}</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              ))}\r\n            </Content>\r\n          </Content>\r\n        ))}\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700,\r\n  },\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\nimport { DContainer, DSection, Content } from \"../components/styled/containers\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      bgcolor={({ theme }) => theme.dark}\r\n      className=\"dark\"\r\n    >\r\n      <h1 style={{ fontSize: \"100px\" }} s>\r\n        PAGE 404\r\n      </h1>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Page404 from \"../../../pages/Page404\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst AppointmentInputs = ({\r\n  categoryValue,\r\n  setCategoryValue,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n}) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (data_categories) {\r\n      setCategories(data_categories.categories);\r\n    }\r\n  }, [data_categories]);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services },\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryValue,\r\n      active: true,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp,\r\n    },\r\n  ] = useLazyQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId: categoryValue,\r\n      active: true,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_serviceEmp) {\r\n      setEmployees(data_serviceEmp.category.employees);\r\n    }\r\n  }, [data_serviceEmp]);\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setCategoryValue(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify={wid <= 1024 ? \"center\" : \"flex-start\"}\r\n      align={wid <= 1024 ? \"center\" : \"flex-start\"}\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h3>Appointment Details</h3>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Select Service Category\r\n          </label>\r\n          {loading_categories ? (\r\n            <Spinner row content=\"Loading...\" small />\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryValue}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Service Category...\r\n              </option>\r\n              {categories &&\r\n                categories.map((category) => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        {called && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select Sub-Service\r\n            </label>\r\n            {loading_services ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                placeholder=\"Services...\"\r\n                name=\"service\"\r\n                onChange={handleServiceChange}\r\n                value={serviceValue}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"38px\",\r\n                  padding: \"0.5em\",\r\n                  border: \"1px solid rgba(34,36,38,.15)\",\r\n                  cursor: \"pointer\",\r\n                  position: \"relative\",\r\n                  outline: \"0\",\r\n                  visibility: \"visible\",\r\n                  textAlign: \"left\",\r\n                }}\r\n                className=\"input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Sub-Services...\r\n                </option>\r\n                {services &&\r\n                  services.map((service) => (\r\n                    <option key={service._id} value={service._id}>\r\n                      {service.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n\r\n        {calledServiceEmp && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select Aesthetician\r\n            </label>\r\n            {loading_serviceEmp ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                name=\"employee\"\r\n                value={employeeVal}\r\n                onChange={handleEmployeeChange}\r\n                className=\"input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Aesthetician...\r\n                </option>\r\n                {employees &&\r\n                  employees.map((servEmp) => (\r\n                    <option key={servEmp._id} value={servEmp._id}>\r\n                      {servEmp.firstName}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const [service, setService] = useState({});\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setService(data_service.service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {loading_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input value={service.name} readOnly style={{ width: \"60%\" }} />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          {/* <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field> */}\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\n// import { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\n\r\nconst Appointment = () => {\r\n  const { width: wid } = useWindowSize();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"space-between\"\r\n        align={wid <= 1024 ? \"center\" : \"flex-start\"}\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        margin=\"24px auto\"\r\n      >\r\n        {/* <DGrid two> */}\r\n        {/* <DSection\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            background={\r\n              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            }\r\n            height=\"100vh\"\r\n          >\r\n            <Overlay\r\n              hovOpac=\"1\"\r\n              opac=\"0\"\r\n              bg={\"rgba(0,0,0,0.7)\"}\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <div className=\"overlay-box\">\r\n                <div className=\"overlay-box__content dark\">\r\n                  <h1>Advertisement</h1>\r\n                </div>\r\n              </div>\r\n            </Overlay>\r\n          </DSection> */}\r\n\r\n        {/* <DGrid custom=\"1fr 2fr\" gap=\"10px\"> */}\r\n        <Content\r\n          flex\r\n          justify={wid <= 1024 ? \"center\" : \"flex-start\"}\r\n          align=\"flex-start\"\r\n          width=\"80%\"\r\n          height=\"100%\"\r\n        >\r\n          <AppointmentInputs\r\n            categoryValue={categoryValue}\r\n            setCategoryValue={setCategoryValue}\r\n            employeeVal={employeeVal}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n          />\r\n        </Content>\r\n\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DGrid>\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              calendarSize={\"calendar_large\"}\r\n            />\r\n            <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n              <DButton\r\n                size=\"50px\"\r\n                onClick={() => setOpen(true)}\r\n                disabled={\r\n                  categoryValue === \"\" ||\r\n                  serviceValue === \"\" ||\r\n                  employeeVal === \"\" ||\r\n                  selectedTime === \"\"\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                Book an Appointment\r\n              </DButton>\r\n              <Confirmation\r\n                open={open}\r\n                setOpen={setOpen}\r\n                serviceValue={serviceValue}\r\n                employeeVal={employeeVal}\r\n                startDate={startDate}\r\n                selectedTime={selectedTime}\r\n              />\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n        {/* </DGrid> */}\r\n        {/* </DGrid> */}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_GALLERIES = gql`\r\n  query galleries($active: Boolean) {\r\n    galleries(active: $active) {\r\n      _id\r\n      title\r\n      active\r\n      photos {\r\n        _id\r\n        name\r\n        caption\r\n        src\r\n        height\r\n        width\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_GALLERY = gql`\r\n  query gallery($id: ID!, $active: Boolean) {\r\n    gallery(_id: $id, active: $active) {\r\n      _id\r\n      title\r\n      active\r\n      photos {\r\n        _id\r\n        name\r\n        caption\r\n        src\r\n        height\r\n        width\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_GALLERIES, FETCH_GALLERY };\r\n","import React from \"react\";\r\nimport { GalleryCard } from \"./styled/card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GalleryThumb = (props) => {\r\n  return (\r\n    <GalleryCard {...props}>\r\n      <div className=\"thumb\">\r\n        <div className=\"thumb-shadow\"></div>\r\n        <div className=\"thumb-shadow\"></div>\r\n        <div className=\"thumb-shadow\"></div>\r\n        <div className=\"thumb-image\"></div>\r\n      </div>\r\n      <div className=\"title\">\r\n        <span>{props.title}</span>\r\n      </div>\r\n      <div className=\"explore\">\r\n        <span>{props.subtitle}</span>\r\n      </div>\r\n      <button className=\"btn\">View More</button>\r\n      <Link to={props.link} />\r\n    </GalleryCard>\r\n  );\r\n};\r\n\r\nexport default GalleryThumb;\r\n","import React, { useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport { IconWrap } from \"./styled/utils\";\r\n\r\nconst ImageGalleryHover = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  margin: 2px;\r\n  img {\r\n    cursor: pointer;\r\n    transition: transform 0.7s ease-in-out, filter 0.5s ease;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .overlayImg {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    position: absolute;\r\n    height: 50px;\r\n    width: 100%;\r\n    top: 0;\r\n    padding: 10px 15px;\r\n    background: rgba(255, 255, 255, 0.7);\r\n    z-index: 2;\r\n    transform: translateY(-100%);\r\n    transition: transform 0.4s linear;\r\n  }\r\n\r\n  &:hover {\r\n    img {\r\n      transform: scale(1.1);\r\n      ${(props) =>\r\n        props.grayscale &&\r\n        css`\r\n          filter: grayscale(100%);\r\n        `};\r\n    }\r\n    .overlayImg {\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ImageSelected = ({\r\n  photo,\r\n  index,\r\n  menu,\r\n  grayscale,\r\n  setCurrentImage,\r\n  setViewerIsOpen,\r\n}) => {\r\n  // Open Light box\r\n  const openLightbox = () => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <ImageGalleryHover key={photo.id} grayscale={grayscale}>\r\n      <img alt={photo.alt} {...photo} onClick={openLightbox} />\r\n      {menu ? (\r\n        <div className=\"overlayImg\">\r\n          <IconWrap medium title={\"Cancel Update\"} color=\"bluer\">\r\n            <Edit onClick={() => alert(photo.id)} />\r\n          </IconWrap>\r\n          <IconWrap medium title={\"Cancel Update\"} color=\"secondary\">\r\n            <Cancel onClick={() => alert(photo.alt)} />\r\n          </IconWrap>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </ImageGalleryHover>\r\n  );\r\n};\r\n\r\nexport default ImageSelected;\r\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERIES } from \"../../util/graphql/gallery\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport GalleryThumb from \"../../components/GalleryThumb\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport ImageSelected from \"../../components/ImageSelected\";\r\n\r\nconst Gallery = () => {\r\n  let allPhotos = [];\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const { width: wid } = useWindowSize();\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const [galleries, setGalleries] = useState([]);\r\n\r\n  const {\r\n    data: dataGalleries,\r\n    loading: loadGalleries,\r\n    error,\r\n  } = useQuery(FETCH_GALLERIES, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataGalleries) {\r\n      setGalleries(dataGalleries.galleries);\r\n    }\r\n  }, [dataGalleries]);\r\n\r\n  const imageRenderer = useCallback(\r\n    ({ index, left, top, photo }) => (\r\n      <ImageSelected\r\n        index={index}\r\n        photo={photo}\r\n        left={left}\r\n        top={top}\r\n        setCurrentImage={setCurrentImage}\r\n        setViewerIsOpen={setViewerIsOpen}\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  if (galleries) {\r\n    galleries.map((g) => allPhotos.push(...g.photos));\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"gallery\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>Gallery</h1>\r\n          <h3>Love Your Skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      {loadGalleries ? (\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          minh=\"50vh\"\r\n          width=\"100%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Spinner content=\"Please wait while we fetch data...\" />\r\n        </Content>\r\n      ) : (\r\n        <>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"90%\"\r\n            flex\r\n            justify={wid < 768 && \"center\"}\r\n            align=\"center\"\r\n            margin=\"24px auto\"\r\n            flow=\"row wrap\"\r\n          >\r\n            {galleries.length > 0 &&\r\n              galleries.map((gallery) => (\r\n                <GalleryThumb\r\n                  background={\r\n                    gallery.photos.length > 0\r\n                      ? `/images/gallery/${gallery.photos[0].src}`\r\n                      : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  title=\"Event Photos\"\r\n                  subtitle=\"50 Event Photos\"\r\n                  link={`/album/${gallery._id}`}\r\n                />\r\n              ))}\r\n          </Content>\r\n          <DSection\r\n            height=\"100%\"\r\n            style={{ minHeight: \"100vh\" }}\r\n            width=\"90%\"\r\n            mcenter\r\n            pad=\"20px 0\"\r\n            ref={content}\r\n          >\r\n            <h3>All Photos</h3>\r\n\r\n            <MyGallery\r\n              photos={allPhotos.map((photo) => ({\r\n                height: photo.height,\r\n                width: photo.width,\r\n                src: `/images/gallery/${photo.src}`,\r\n                alt: photo.alt,\r\n                id: photo._id,\r\n              }))}\r\n              renderImage={imageRenderer}\r\n              directions=\"column\"\r\n            />\r\n            <ModalGateway>\r\n              {viewerIsOpen ? (\r\n                <Modal onClose={closeLightbox}>\r\n                  <Carousel\r\n                    currentIndex={currentImage}\r\n                    views={allPhotos.map((photo) => ({\r\n                      ...photo,\r\n                      src: `/images/gallery/${photo.src}`,\r\n                      srcset: photo.srcSet,\r\n                      caption:\r\n                        photo.caption !== null\r\n                          ? `${photo.name} - ${photo.caption}`\r\n                          : photo.name,\r\n                      alt: photo.src,\r\n                    }))}\r\n                  />\r\n                </Modal>\r\n              ) : null}\r\n            </ModalGateway>\r\n          </DSection>\r\n        </>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERY } from \"../../util/graphql/gallery\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport ImageSelected from \"../../components/ImageSelected\";\r\n\r\nconst Album = (props) => {\r\n  const albumId = props.match.params._id;\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const { width: wid } = useWindowSize();\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const [albumPhotos, setAlbumPhotos] = useState([]);\r\n\r\n  const { data: dataGallery, loading: loadGallery } = useQuery(FETCH_GALLERY, {\r\n    variables: { id: albumId, active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataGallery) {\r\n      setAlbumPhotos(dataGallery.gallery.photos);\r\n    }\r\n  }, [dataGallery]);\r\n\r\n  const imageRenderer = useCallback(\r\n    ({ index, left, top, photo }) => (\r\n      <ImageSelected\r\n        index={index}\r\n        photo={photo}\r\n        left={left}\r\n        top={top}\r\n        setCurrentImage={setCurrentImage}\r\n        setViewerIsOpen={setViewerIsOpen}\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"65vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>\r\n            {dataGallery && dataGallery.gallery.title} Photos\r\n          </h1>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      {loadGallery ? (\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          minh=\"50vh\"\r\n          width=\"100%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Spinner content=\"Please wait while we fetch data...\" />\r\n        </Content>\r\n      ) : (\r\n        <>\r\n          <DSection\r\n            height=\"100%\"\r\n            style={{ minHeight: \"100vh\" }}\r\n            width=\"90%\"\r\n            mcenter\r\n            pad=\"20px 0\"\r\n            ref={content}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                marginBottom: \"24px\",\r\n              }}\r\n            >\r\n              <MyGallery\r\n                photos={albumPhotos.map((photo) => ({\r\n                  height: photo.height,\r\n                  width: photo.width,\r\n                  src: `/images/gallery/${photo.src}`,\r\n                  alt: photo.src,\r\n                  id: photo._id,\r\n                  key: photo._id,\r\n                }))}\r\n                renderImage={imageRenderer}\r\n                columns={wid >= 500 ? 2 : wid >= 900 ? 3 : wid >= 1500 ? 4 : 2}\r\n                directions=\"column\"\r\n              />\r\n              <ModalGateway>\r\n                {viewerIsOpen ? (\r\n                  <Modal\r\n                    onClose={closeLightbox}\r\n                    styles={{\r\n                      blanket: (base) => ({\r\n                        ...base,\r\n                        backgroundColor: \"rgba(0,0,0,0.9)\",\r\n                      }),\r\n                      positioner: (base) => ({\r\n                        ...base,\r\n                        display: \"block\",\r\n                      }),\r\n                    }}\r\n                  >\r\n                    <Carousel\r\n                      styles={customStyles}\r\n                      currentIndex={currentImage}\r\n                      views={albumPhotos.map((photo) => ({\r\n                        ...photo,\r\n                        src: `/images/gallery/${photo.src}`,\r\n                        caption:\r\n                          photo.caption !== null\r\n                            ? `${photo.name} - ${photo.caption}`\r\n                            : photo.name,\r\n                        alt: photo.src,\r\n                      }))}\r\n                    />\r\n                  </Modal>\r\n                ) : null}\r\n              </ModalGateway>\r\n            </div>\r\n          </DSection>\r\n        </>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  footer: (base) => ({\r\n    ...base,\r\n    backgroundColor: \"rgba(255,255,255,0.7)\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    padding: 20,\r\n  }),\r\n};\r\n\r\nexport default Album;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nimport { Marker } from \"@styled-icons/foundation\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email,\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    },\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyAF8qgxG2aEudQxqxsKjZF1n7MkGXURvoo\",\r\n            }}\r\n            defaultCenter={{ lat: 14.326171, lng: 120.9369621 }}\r\n            defaultZoom={15}\r\n          >\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                transform: \"translate(-50%,-50%)\",\r\n              }}\r\n              lat={14.326171}\r\n              lng={120.9369621}\r\n              text=\"MARKER\"\r\n            >\r\n              <Marker color=\"#fe8c00\" size=\"48px\" />\r\n            </div>\r\n          </GoogleMapReact>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { Rating, Icon, Modal, Form, TextArea } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalReview = ({ openReview, setOpenReview, user, userReview }) => {\r\n  const [rate, setRate] = useState(userReview ? userReview.rating : 1);\r\n  const [message, setMessage] = useState(userReview ? userReview.message : \"\");\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const mutation = userReview ? UPDATE_REVIEW : ADD_REVIEW;\r\n\r\n  const [addOrUpdate, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      id: userReview && userReview._id,\r\n      rating: rate,\r\n      message: message,\r\n    },\r\n    refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n\r\n    onCompleted() {\r\n      toaster.notify(\r\n        userReview\r\n          ? \"Successfully Update a review\"\r\n          : \"Successfully Added a review\"\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleRate = (e, { rating }) => {\r\n    setRate(rating);\r\n  };\r\n\r\n  const handleMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    addOrUpdate();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"mini\"\r\n      open={openReview}\r\n      onClose={() => {\r\n        setOpenReview(false);\r\n        setEdit(false);\r\n      }}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>\r\n        <Icon name=\"pencil\" />\r\n        Write A Review\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field>\r\n            <Rating\r\n              rating={rate}\r\n              maxRating={5}\r\n              onRate={handleRate}\r\n              icon=\"star\"\r\n              size=\"huge\"\r\n              style={{ margin: \"0 auto\" }}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <TextArea\r\n              style={{ minHeight: 100 }}\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={handleMessage}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {!userReview || edit ? (\r\n          <DButton confirm onClick={handleSave}>\r\n            {loading ? (\r\n              <Spinner inverted small />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleEdit}>\r\n            <Icon name=\"edit\" />\r\n            Edit\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_REVIEW = gql`\r\n  mutation addTestimonial($rating: Int, $message: String) {\r\n    addTestimonial(inputTestimonial: { rating: $rating, message: $message }) {\r\n      _id\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_REVIEW = gql`\r\n  mutation updateTestimonial($id: ID!, $rating: Int, $message: String) {\r\n    updateTestimonial(_id: $id, rating: $rating, message: $message) {\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalReview;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_REVIEW } from \"../../../util/graphql/testimonial\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport ModalReview from \"./ModalReview\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Review = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [userReview, setUserReview] = useState({});\r\n  const [openReview, setOpenReview] = useState(false);\r\n\r\n  const { data: dataUserReview, loading: loadUserReview } = useQuery(\r\n    FETCH_USER_REVIEW,\r\n    {\r\n      variables: { userId: user ? user.userId : \"\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataUserReview) {\r\n      setUserReview(dataUserReview.userTestimonial);\r\n    }\r\n  }, [dataUserReview]);\r\n\r\n  const handleOpenReview = () => {\r\n    if (user) {\r\n      setOpenReview(true);\r\n    } else {\r\n      toaster.notify(\"You must sign in n order to write a review. Thank you!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      margin=\"1rem auto\"\r\n    >\r\n      {loadUserReview ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <>\r\n          <DButton\r\n            radius=\"25px\"\r\n            center\r\n            color=\"bluer\"\r\n            onClick={handleOpenReview}\r\n          >\r\n            <Icon name=\"pencil\" />\r\n            Write a review\r\n          </DButton>\r\n          <ModalReview\r\n            openReview={openReview}\r\n            setOpenReview={setOpenReview}\r\n            userReview={dataUserReview && dataUserReview.userTestimonial}\r\n            user={user}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, DGrid } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport Review from \"./Review\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\n\r\nconst TestimonialCard = ({ content }) => {\r\n  const [isTestimonials, setIsTestimonials] = useState([]);\r\n\r\n  const {\r\n    data: dataTestimonials,\r\n    loading: loadTestimonials,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataTestimonials) {\r\n      setIsTestimonials(dataTestimonials.testimonials);\r\n    }\r\n  }, [dataTestimonials]);\r\n\r\n  return (\r\n    <DSection height=\"100%\" width=\"100%\" mcenter ref={content}>\r\n      <Review />\r\n      <Content width=\"80%\" height=\"100%\" margin=\"0 auto\" pad=\"50px 0\">\r\n        {loadTestimonials ? (\r\n          <DGrid three gap=\"20px\">\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n          </DGrid>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {isTestimonials &&\r\n              isTestimonials.map((testimonial) => (\r\n                <DTestimonialCard key={testimonial._id}>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          testimonial.user && testimonial.user.photo !== null\r\n                            ? `/images/users/${testimonial.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n                    <figcaption>\r\n                      <h4>\r\n                        {testimonial.user &&\r\n                          testimonial.user.firstName +\r\n                            \" \" +\r\n                            testimonial.user.lastName}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={testimonial.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>\r\n                        <span\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            right: \"10px\",\r\n                            fontSize: \"10px\",\r\n                            color: \"#bbb\",\r\n                          }}\r\n                        >\r\n                          {moment(parseInt(testimonial.updatedAt)).format(\"LL\")}\r\n                        </span>\r\n                        {testimonial.message}\r\n                      </blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        )}\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  infinite: true,\r\n  speed: 500,\r\n  rows: 2,\r\n  slidesPerRow: 3,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesPerRow: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 768,\r\n      settings: {\r\n        slidesPerRow: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default TestimonialCard;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport TestimonialCard from \"../../components/main/testimonial/TestimonialCard\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\n\r\nconst Testimonials = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"tstmnl\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\", fontWeight: 700 }}>\r\n            What Our Client Says\r\n          </h1>\r\n          {/* <h3>We continously improve our service</h3> */}\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <TestimonialCard content={content} />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport parser from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\n\r\nconst Services = () => {\r\n  const sectionDown = useRef();\r\n  const scrolling = useScroll(500);\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY, {\r\n    variables: { active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(sectionDown);\r\n  };\r\n\r\n  return (\r\n    <DContainer id=\"services\">\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\" }}>Our Services</h1>\r\n          <h3>It's time to take care of your skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay\r\n          bg={\"linear-gradient(to top, rgba(0,0,0,0.3), rgba(255,255,255,0.1))\"}\r\n        />\r\n      </DSection>\r\n      <DSection\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n        mcenter\r\n        pad=\"24px\"\r\n        height=\"100%\"\r\n        ref={sectionDown}\r\n      >\r\n        <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n          {loading ? (\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner content=\"Loading...\" />\r\n            </Content>\r\n          ) : (\r\n            <DGrid three gap=\"24px\" med7={\"1fr\"}>\r\n              {isCategories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/service/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CATEGORY_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n  Overlay,\r\n  DCard,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { JCard2 } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ServiceDetails from \"../../components/main/services/ServiceDetails\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Service = (props) => {\r\n  const categoryId = props.match.params._id;\r\n  const history = useHistory();\r\n  const [isReadMore, setIsReadMore] = useState(false);\r\n\r\n  const [isServices, setIsServices] = useState([]);\r\n\r\n  const { data, loading } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsServices(data.category.services);\r\n    }\r\n  }, [data]);\r\n\r\n  const backHist = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"50vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          fluid\r\n          height=\"100%\"\r\n          className=\"dark\"\r\n        >\r\n          {!data ? (\r\n            <Spinner inverted />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ fontSize: \"22px\" }}>{data.category.name}</h1>\r\n              <p style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                {parser(data.category.description)}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Content flex width=\"90%\" height=\"50px\" margin=\"20px auto\">\r\n        <DButton onClick={backHist}>\r\n          <Icon name=\"arrow left\" /> <span>Back to Services</span>\r\n        </DButton>\r\n      </Content>\r\n      {loading ? (\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"80vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        </Content>\r\n      ) : (\r\n        <DSection\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          mcenter\r\n          pad=\"24px\"\r\n          height=\"100%\"\r\n        >\r\n          <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n            <DGrid three gap=\"20px\">\r\n              {isServices &&\r\n                isServices.map(\r\n                  (service) =>\r\n                    service.active === true && (\r\n                      <JCard2\r\n                        key={service._id}\r\n                        oflow={isReadMore ? true : false}\r\n                        onPointerLeave={() => setIsReadMore(false)}\r\n                      >\r\n                        <div className=\"thumbnail\">\r\n                          <img\r\n                            src={\r\n                              service.photo !== null\r\n                                ? `/images/service/${service.photo}`\r\n                                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/169963/photo-1429043794791-eb8f26f44081.jpeg\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"post-content\">\r\n                          <div className=\"category\">{service.name}</div>\r\n                          <h4 className=\"title\">{service.duration} mins</h4>\r\n                          <h4 className=\"title\">Php {service.price}</h4>\r\n                          <div className=\"description\">\r\n                            {isReadMore ? (\r\n                              <p>{parser(service.description)}</p>\r\n                            ) : (\r\n                              <p>\r\n                                {service.description.length > 100\r\n                                  ? parser(\r\n                                      service.description.substr(0, 100) + \"...\"\r\n                                    )\r\n                                  : parser(service.description.substr(0, 100))}\r\n                              </p>\r\n                            )}\r\n                            {service.description.length <= 100 ? (\r\n                              \"\"\r\n                            ) : (\r\n                              <ReadMore\r\n                                onClick={() => setIsReadMore(!isReadMore)}\r\n                              >\r\n                                {isReadMore ? \"Read Less\" : \"Read More\"}\r\n                              </ReadMore>\r\n                            )}\r\n\r\n                            {/* <ServiceDetails service={service} /> */}\r\n                          </div>\r\n                        </div>\r\n                      </JCard2>\r\n                    )\r\n                )}\r\n            </DGrid>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const { userId } = useContext(AuthContext);\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/\">\r\n            Explore\r\n          </DButton>\r\n          <DButton\r\n            as={Link}\r\n            to={userId ? `/account/${userId}` : `/login`}\r\n          >\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/home\" basic>\r\n            Explore\r\n          </DButton>\r\n         \r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid=\"true\">\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid=\"true\">\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values,\r\n    },\r\n  });\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = (props) => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hcolor}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  // const [addInfo, setAddInfo] = useState(\"\");\r\n  // const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  // const handleMessage = e => {\r\n  //   setAddInfo(e.target.value);\r\n  // };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              categoryValue={categoryValue}\r\n              setCategoryValue={setCategoryValue}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [currentAppoint, setCurrentAppoint] = useState([]);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointData) {\r\n      setCurrentAppoint(currentAppointData.myCurrentAppointment);\r\n    }\r\n  }, [currentAppointData]);\r\n\r\n  console.log(currentAppoint);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppoint}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n    default:\r\n      return <h1>Something went wrong</h1>;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content,\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n \r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {dataLoading ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input value={myAppoint._id} readOnly style={styles.input} />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={myAppoint.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={myAppoint.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${myAppoint.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={myAppoint.status}\r\n                  readOnly\r\n                  style={\r\n                    myAppoint.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : myAppoint.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : myAppoint.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {myAppoint.status === \"CANCELLED\" || myAppoint.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Album from \"./main/Album\";\r\nimport Contact from \"./main/Contact\";\r\nimport Testimonials from \"./main/Testimonials\";\r\nimport Services from \"./main/Services\";\r\nimport Service from \"./main/Service\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`/`} component={Home} exact />\r\n        <Route path={`/about`} component={About} exact />\r\n        <Route path={`/contact`} component={Contact} exact />\r\n        <Route path={`/gallery`} component={Gallery} exact />\r\n        <Route path={`/album/:_id`} component={Album} exact />\r\n        <Route path={`/testimonials`} component={Testimonials} exact />\r\n        <Route path={`/services&rates`} component={Services} exact />\r\n        <Route path={`/service/:_id`} component={Service} exact />\r\n        <Route path={`/verified/:emailToken`} component={ThankYou} exact />\r\n        <UserPrivateRoute\r\n          path={`/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`/login`} component={Signin} exact />\r\n\r\n        <UserPrivateRoute path={`/account/:_id`} component={Account} exact />\r\n\r\n        <UserPrivateRoute\r\n          path={`/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute path={`/appointment`} component={Appointment} exact />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst UpcommingAppointments = ({ appointments, loading }) => {\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"18px\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 20px\"\r\n      color=\"bluer\"\r\n      rounded\r\n    >\r\n      Upcoming Appointments\r\n    </DLabel>\r\n  );\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map((appointment) => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n      progressPending={loading}\r\n      progressComponent={\r\n        <Spinner content=\"Please wait while we fetch our data...\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n  position: relative;\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-areas:\r\n      \"header\"\r\n      \"main\"\r\n      \"footer\";\r\n  }\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  margin: 0 auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n  overflow-y: auto;\r\n  transition: transform 0.4s ease-in-out;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n  .menu-close {\r\n    color: ${({ theme }) => theme.light};\r\n    display: none;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    position: fixed;\r\n    transform: ${(props) =>\r\n      props.openMenu ? \"translateX(0)\" : \"translateX(-100%)\"};\r\n\r\n    .menu-close {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  .burger-menu {\r\n    display: none;\r\n    position: fixed;\r\n    left: 10px;\r\n    cursor: pointer;\r\n    &:hover,\r\n    &:focus {\r\n      color: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    .burger-menu {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DImage, Overlay, DCard } from \"../../styled/containers\";\r\nimport { MenuAltLeft } from \"@styled-icons/boxicons-regular\";\r\n\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst Header = ({ handleOpenMenu }) => {\r\n  const { employeeLogout, employeeAuth } = useContext(AuthContext);\r\n  const empId = employeeAuth._id || employeeAuth.id;\r\n  const [empLog, setEmpLog] = useState({});\r\n\r\n  const { data: dataEmpLog, loading: loadEmpLog, error: errEmpLog } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: { employeeId: empId },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmpLog) setEmpLog(dataEmpLog.employee);\r\n  }, [dataEmpLog]);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <div className=\"burger-menu\">\r\n        <MenuAltLeft\r\n          size=\"36px\"\r\n          color={({ theme }) => theme.light}\r\n          className=\"burger-icon\"\r\n          onClick={handleOpenMenu}\r\n        />\r\n      </div>\r\n      {loadEmpLog ? (\r\n        <Spinner small />\r\n      ) : (\r\n        <Dropdown\r\n          trigger={\r\n            <DCard dw=\"50px\" dh=\"50px\" mcenter circle p=\"0px\" grayzoom>\r\n              <DImage circle height=\"100%\" width=\"100%\">\r\n                <img\r\n                  src={\r\n                    dataEmpLog &&\r\n                    dataEmpLog.employee &&\r\n                    `/images/employees/${dataEmpLog.employee.photo}`\r\n                  }\r\n                  alt={empLog.lastName}\r\n                />\r\n              </DImage>\r\n            </DCard>\r\n          }\r\n          pointing=\"top right\"\r\n          icon={null}\r\n        >\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item disabled>\r\n              Signed is as{\" \"}\r\n              <strong>\r\n                {empLog.firstName} {empLog.lastName}\r\n              </strong>\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as={Link} to={`/zeadmin/paccount/${empId}`}>\r\n              <Icon name=\"user\" />\r\n              Account\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={handleLogout}>\r\n              <Icon name=\"sign out\" />\r\n              Sign out\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      )}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  BookContent,\r\n  Report,\r\n  MessageSquare,\r\n  MessageRoundedDetail,\r\n  CalendarEvent,\r\n  MapAlt,\r\n} from \"@styled-icons/boxicons-solid\";\r\n\r\nimport { Gallery, Service } from \"@styled-icons/remix-fill\";\r\n\r\nimport {\r\n  ShortText,\r\n  AccountBox,\r\n  AccountCircle,\r\n  Dashboard,\r\n  Close,\r\n} from \"@styled-icons/material\";\r\nimport { FileDirectory } from \"@styled-icons/octicons\";\r\nimport { Profile } from \"@styled-icons/icomoon/Profile\";\r\nimport { Archive } from \"@styled-icons/entypo\";\r\n\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\n\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = ({ isOpenMenu, handleOpenMenu }) => {\r\n  return (\r\n    <SideNavLayout openMenu={isOpenMenu ? true : null}>\r\n      <Close\r\n        size=\"36px\"\r\n        className=\"menu-close\"\r\n        onClick={handleOpenMenu}\r\n        title=\"Close Menu\"\r\n      />\r\n\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <MessageRoundedDetail size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion\r\n        title={\"Accounts\"}\r\n        hcolor=\"#fff\"\r\n        icon={<AccountBox size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <AccountCircle size=\"16px\" style={styles.ml} />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        hcolor=\"#fff\"\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <BookContent size=\"16px\" style={styles.ml} />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <ShortText size=\"16px\" style={styles.ml} />\r\n            About\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_gallery\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Gallery size=\"16px\" style={styles.ml} />\r\n            Gallery\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_testimonial\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <MessageSquare size=\"16px\" style={styles.ml} />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <MapAlt size=\"16px\" style={styles.ml} />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<FileDirectory size=\"16px\" />}\r\n        hcolor=\"#fff\"\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" style={styles.ml} />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Profile size=\"16px\" style={styles.ml} />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/archives\" activeClassName=\"navlink-active\">\r\n          <span style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Archive size=\"16px\" style={styles.ml} />\r\n            Archive\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Report size=\"16px\" style={styles.ml} />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  ml: {\r\n    marginRight: \"5px\",\r\n  },\r\n};\r\n\r\nexport default SideNav;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = (props) => {\r\n  const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n\r\n  const handleOpenMenu = (e) => {\r\n    e.preventDefault();\r\n    setIsOpenMenu(!isOpenMenu);\r\n  };\r\n  return (\r\n    <LayoutContainer>\r\n      <Header handleOpenMenu={handleOpenMenu} />\r\n      <SideNav isOpenMenu={isOpenMenu} handleOpenMenu={handleOpenMenu} />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map((user) => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n      rad=\"0 0 10px 10px\"\r\n      bordtop={\"6px solid\"}\r\n      bordcolor={({ theme }) => theme.secondary}\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"blue\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <h4>0</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY,\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\",\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\",\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n      rad=\"0 0 10px 10px\"\r\n      bordtop={\"6px solid\"}\r\n      bordcolor={({ theme }) => theme.bluer}\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"green\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"red\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n      read\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      read\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n      read\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ,\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n      rad=\"0 0 10px 10px\"\r\n      bordtop={\"6px solid\"}\r\n      bordcolor={({ theme }) => theme.primary}\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"secondary\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"blue\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\n// import { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        mcenter\r\n      >\r\n        <Cards />\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            <UpcommingAppointments\r\n              appointments={appointments}\r\n              loading={loading}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Eye } from \"@styled-icons/fa-regular/Eye\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  const [isCurrentAppoint, setIsCurrentAppoint] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointmentData) {\r\n      setIsCurrentAppoint(currentAppointmentData.currentAppointments);\r\n    }\r\n  }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee.lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`} flex>\r\n          <Eye size=\"22px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      <DataTable\r\n        columns={columns}\r\n        data={isCurrentAppoint.map((currAppoint) => currAppoint)}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\n// import HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          {/* <DButton onClick={() => setOpen(true)}>New Appointment</DButton> */}\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton alert basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButton>\r\n        <DButton confirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  DCard,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLink, DLabel } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Icon } from \"semantic-ui-react\";\r\nimport { Service } from \"@styled-icons/remix-fill/Service\";\r\nimport { Bookmark } from \"@styled-icons/boxicons-solid/Bookmark\";\r\nimport { Clock } from \"@styled-icons/fa-solid/Clock\";\r\nimport { UserMd } from \"@styled-icons/fa-solid/UserMd\";\r\nimport { CalendarExclamation } from \"@styled-icons/boxicons-solid/CalendarExclamation\";\r\nimport { CalendarEvent } from \"@styled-icons/boxicons-solid/CalendarEvent\";\r\nimport { Timelapse } from \"@styled-icons/material/Timelapse\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = (props) => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  console.log(myAppoint.service);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"80%\"\r\n        height=\"100%\"\r\n        mcenter\r\n      >\r\n        {dataLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              width=\"100%\"\r\n              margin=\"24px 0\"\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n            >\r\n              <Breadcrumb size={\"large\"}>\r\n                <Breadcrumb.Section\r\n                  style={{ color: \"#2980B9\" }}\r\n                  onClick={() => history.goBack()}\r\n                >\r\n                  <h3>Appointments</h3>\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section>\r\n                  {myAppoint.user && (\r\n                    <strong>\r\n                      <DLink\r\n                        borderb=\"true\"\r\n                        size=\"16px\"\r\n                        color=\"#232323\"\r\n                        to={`/zeadmin/userInfo/${myAppoint.user._id}`}\r\n                      >\r\n                        {myAppoint.user.firstName} {myAppoint.user.lastName}\r\n                      </DLink>\r\n                      's appointment\r\n                    </strong>\r\n                  )}\r\n                </Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n\r\n            <DGrid\r\n              custom={\r\n                myAppoint.status === \"VERIFIED\" ||\r\n                myAppoint.status === \"PENDING\"\r\n                  ? \"3fr 200px\"\r\n                  : \"1fr\"\r\n              }\r\n              gap=\"5px\"\r\n            >\r\n              <DCard\r\n                dw={\r\n                  myAppoint.status === \"VERIFIED\" ||\r\n                  myAppoint.status === \"PENDING\"\r\n                    ? \"100%\"\r\n                    : \"80%\"\r\n                }\r\n                dh=\"100%\"\r\n                mcenter\r\n                flex\r\n                fcol\r\n                justifyBetween\r\n              >\r\n                <DGrid gap=\"5px\">\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Bookmark size=\"14px\" style={{ margin: \"0 2px\" }} />\r\n                      Appointment ID:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint._id}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarEvent size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Clock size=\"14px\" style={{ margin: \"0 2px\" }} /> Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.slot_start}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <UserMd size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.employee &&\r\n                          `${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Service size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.name}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Timelapse size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.duration} mins\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarExclamation\r\n                        size=\"14px\"\r\n                        style={{ margin: \"0 2px\" }}\r\n                      />\r\n                      Status:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        rounded\r\n                        w={\"auto\"}\r\n                        size=\"18px\"\r\n                        color={\r\n                          myAppoint.status === \"VERIFIED\"\r\n                            ? \"green\"\r\n                            : myAppoint.status === \"DONE\"\r\n                            ? \"bluer\"\r\n                            : myAppoint.status === \"CANCELLED\"\r\n                            ? \"red\"\r\n                            : myAppoint.status === \"RESCHEDULED\"\r\n                            ? \"blue\"\r\n                            : \"grey\"\r\n                        }\r\n                      >\r\n                        {myAppoint.status}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </DCard>\r\n              {(myAppoint.status === \"PENDING\" ||\r\n                myAppoint.status === \"VERIFIED\") && (\r\n                <Content\r\n                  width=\"90%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  direct=\"column\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <DButton\r\n                    confirm\r\n                    fluid=\"true\"\r\n                    onClick={() => setOpenDone(true)}\r\n                  >\r\n                    <Icon name=\"calendar check\" /> Confirm\r\n                  </DButton>\r\n                  <DButton fluid=\"true\">\r\n                    <Icon name=\"calendar alternate\" /> Rebook\r\n                  </DButton>\r\n                  <DButton\r\n                    alert\r\n                    fluid=\"true\"\r\n                    onClick={() => setOpenCancel(true)}\r\n                  >\r\n                    <Icon name=\"delete calendar\" /> Cancel\r\n                  </DButton>\r\n                </Content>\r\n              )}\r\n            </DGrid>\r\n          </>\r\n        )}\r\n\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  label: {\r\n    width: \"40%\",\r\n  },\r\n  input: {\r\n    width: \"60%\",\r\n  },\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services },\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal,\r\n    },\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp,\r\n    },\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue,\r\n    },\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map((category) => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map((service) => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map((servEmp) => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButton,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React from \"react\";\r\nimport { Toasted as Toast } from \"./styled/utils\";\r\nimport { Close } from \"@styled-icons/material/Close\";\r\n\r\nconst Toasted = (props) => {\r\n  return (\r\n    <Toast {...props}>\r\n      <span className=\"description\">{props.children}</span>\r\n      <span className=\"close\">\r\n        <Close size=\"14px\" />\r\n      </span>\r\n    </Toast>\r\n  );\r\n};\r\n\r\nexport default Toasted;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Toasted from \"../../Toasted\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, setValues, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\",\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days,\r\n    },\r\n    refetchQueries: [{ query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY }],\r\n\r\n    // update(cache, result) {\r\n    //   setOpen(false);\r\n    //   const data = cache.readQuery({\r\n    //     query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n    //   });\r\n\r\n    //   const newEmployee = result.data.createEmployee;\r\n    //   cache.writeQuery({\r\n    //     query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n    //     data: {\r\n    //       aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps],\r\n    //     },\r\n    //   });\r\n\r\n    //   values.title = \"\";\r\n    //   values.firstName = \"\";\r\n    //   values.lastName = \"\";\r\n    //   values.contact = \"\";\r\n    //   values.email = \"\";\r\n    //   values.role = \"\";\r\n    //   values.workStart = \"\";\r\n    //   values.workLength = \"\";\r\n    //   values.breakStart = \"\";\r\n    //   values.breakLength = \"\";\r\n    //   days = [];\r\n    // },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(res) {\r\n      setOpen(false);\r\n      setValues({\r\n        title: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        contact: \"\",\r\n        email: \"\",\r\n        role: \"\",\r\n        workStart: \"\",\r\n        workLength: \"\",\r\n        breakStart: \"\",\r\n        breakLength: \"\",\r\n      });\r\n      setDays([]);\r\n      toaster.notify(\r\n        ({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            New Employee Added\r\n          </Toasted>\r\n        ),\r\n        { position: \"bottom-right\" }\r\n      );\r\n    },\r\n  });\r\n\r\n  // const handleDayChange = (val) => {\r\n  //   setDays(val);\r\n  // };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Add New Employee</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {(Checkbox) => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>\r\n          Cancel\r\n        </DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small row content=\"Loading...\" /> : \"Add\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport Page404 from \"../../pages/Page404\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0,\r\n      active: true,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0.5,\r\n      hide: \"md\",\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/employees/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      grow: 0,\r\n      right: true,\r\n      cell: (row) => (\r\n        <DButton flex as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontWeight: \"700 !important\",\r\n        color: \"#232323\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\" mcenter>\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            columns={columns}\r\n            data={employeesAR}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={10}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loading_employeesAR}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n} from \"../../../util/graphql/employee\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport { Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { IconWrap, DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Schedule } from \"@styled-icons/material/Schedule\";\r\nimport { UserDetail } from \"@styled-icons/boxicons-solid/UserDetail\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  employee,\r\n  employeeId,\r\n  handleSchedule,\r\n  handleDetails,\r\n  s,\r\n}) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      { query: FETCH_EMPLOYEE_QUERY, variables: { employeeId } },\r\n    ],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Image Uploaded\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: employee.photo\r\n        ? `/images/employees/${employee.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"flex-start\"\r\n      align=\"center\"\r\n      mcenter\r\n      direct=\"column\"\r\n    >\r\n      <DCard\r\n        dw={wid < 524 ? \"70%\" : \"100%\"}\r\n        dh=\"250px\"\r\n        mcenter\r\n        p=\"0px\"\r\n        grayzoom\r\n      >\r\n        {loading ? (\r\n          <Spinner content=\"Loading...\" medium />\r\n        ) : (\r\n          <DImage height=\"100%\" width=\"100%\">\r\n            <img\r\n              src={\r\n                employee.photo !== undefined\r\n                  ? `/images/employees/${employee.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt={employee.name}\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n        )}\r\n        <IconWrap\r\n          {...getRootProps()}\r\n          bg={({ theme }) => theme.bluer}\r\n          circle\r\n          shadow\r\n          bottomcenter\r\n          small\r\n          pad=\"3px\"\r\n          bgcolor={({ theme }) => theme.bluer}\r\n        >\r\n          <Camera title=\"Upload\" />\r\n          <input {...getInputProps()} />\r\n        </IconWrap>\r\n      </DCard>\r\n\r\n      <DButton width=\"180px\" flex=\"true\" onClick={handleDetails}>\r\n        <UserDetail size=\"22px\" />\r\n        Details\r\n      </DButton>\r\n      <DButton width=\"180px\" flex=\"true\" onClick={handleSchedule}>\r\n        <Schedule size=\"22px\" title=\"Employee's Schdule Tab\" />\r\n        Schedule\r\n      </DButton>\r\n      <ModalGateway>\r\n        {viewerIsOpen ? (\r\n          <Modal onClose={closeLightbox}>\r\n            <Carousel views={images} />\r\n          </Modal>\r\n        ) : null}\r\n      </ModalGateway>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst DTextAreaStyled = styled.div`\r\n  display: ${(props) => (props.active ? \"block\" : \"none\")};\r\n  height: auto;\r\n  min-height: 30px;\r\n  max-height: 250px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  ${(props) =>\r\n    props.border &&\r\n    css`\r\n      border: 1px solid rgba(189, 195, 199, 0.8);\r\n      border-radius: 5px;\r\n    `};\r\n  padding: 5px;\r\n  color: ${(props) => (props.color ? props.color : ({ theme }) => theme.dark)};\r\n\r\n  ${(props) =>\r\n    props.par &&\r\n    css`\r\n      height: 250px;\r\n    `};\r\n`;\r\n\r\nconst DTextArea = (props) => {\r\n  return <DTextAreaStyled {...props}>{props.children}</DTextAreaStyled>;\r\n};\r\n\r\nexport default DTextArea;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel, IconWrap, DInput, DSelect, DButton } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\n// import { Cancel } from \"@styled-icons/typicons/Cancel\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport moment from \"moment\";\r\nimport parser from \"html-react-parser\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst regex = /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/;\r\nconst regexNum = /^\\d+$/;\r\n\r\nconst PersonalCard = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n  const [isEditPersonal, setIsEditPersonal] = useState(false);\r\n  const [startDate, setStartDate] = useState(\r\n    employee.dateOfBirth ? new Date(parseInt(employee.dateOfBirth)) : new Date()\r\n  );\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [personalValue, setPersonalValue] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email,\r\n  });\r\n\r\n  const [updatePersonalEmployee, { loading }] = useMutation(\r\n    UPDATE_EMPLOYEE_PERSONAL,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        title: personalValue.title,\r\n        firstName: personalValue.firstName,\r\n        lastName: personalValue.lastName,\r\n        contact: personalValue.contact,\r\n        email: personalValue.email,\r\n        bio: content,\r\n        dob: startDate,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      },\r\n      onCompleted() {\r\n        setIsEditPersonal(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Info Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handlePersonalValue = (e) => {\r\n    setPersonalValue({ ...personalValue, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const handleEditPersonal = () => {\r\n    setIsEditPersonal(!isEditPersonal);\r\n  };\r\n\r\n  const handleUpdatePersonal = () => {\r\n    updatePersonalEmployee();\r\n  };\r\n\r\n  return (\r\n    <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween overf>\r\n      <Content\r\n        flex\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n      >\r\n        <DLabel size={wid < 768 ? \"18px !important\" : \"22px\"} weight={700}>\r\n          Personal Details\r\n        </DLabel>\r\n        {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n          <>\r\n            <IconWrap\r\n              invisible={isEditPersonal ? true : null}\r\n              bgcolor={({ theme }) => theme.blue}\r\n              medium\r\n              title={\"Update Info\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              pad=\"3px\"\r\n            >\r\n              <Edit onClick={handleEditPersonal} />\r\n            </IconWrap>\r\n\r\n            <IconWrap\r\n              invisible={!isEditPersonal ? true : null}\r\n              medium\r\n              title={\"Cancel Update\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              color=\"red\"\r\n            >\r\n              <Cancel onClick={handleEditPersonal} />\r\n            </IconWrap>\r\n          </>\r\n        )}\r\n      </Content>\r\n\r\n      <Content\r\n        width={wid <= 768 ? \"90%\" : \"80%\"}\r\n        height=\"100%\"\r\n        margin=\"0 auto\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        {isEditPersonal ? (\r\n          <>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={700}\r\n                w={\"40%\"}\r\n                size=\"14px\"\r\n              >\r\n                Title:\r\n              </DLabel>\r\n              <Content\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"5px 10px\"\r\n              >\r\n                <DSelect\r\n                  name=\"title\"\r\n                  value={personalValue.title}\r\n                  onChange={handlePersonalValue}\r\n                >\r\n                  <option>Dr</option>\r\n                  <option>Mr</option>\r\n                  <option>Ms</option>\r\n                </DSelect>\r\n              </Content>\r\n            </Content>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={700}\r\n                w={\"40%\"}\r\n                size=\"14px\"\r\n              >\r\n                First Name:\r\n              </DLabel>\r\n              <Content\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"5px 10px\"\r\n                direct=\"column\"\r\n              >\r\n                {personalValue.firstName.trim() !== \"\" ? (\r\n                  \"\"\r\n                ) : errors.firstName ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    {errors.firstName}\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <DInput\r\n                  fluid\r\n                  error={\r\n                    personalValue.firstName.trim() !== \"\"\r\n                      ? null\r\n                      : errors.firstName\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={personalValue.firstName}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </Content>\r\n            </Content>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={700}\r\n                w={\"40%\"}\r\n                size=\"14px\"\r\n              >\r\n                Last Name:\r\n              </DLabel>\r\n              <Content\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"5px 10px\"\r\n                direct=\"column\"\r\n              >\r\n                {personalValue.lastName.trim() !== \"\" ? (\r\n                  \"\"\r\n                ) : errors.lastName ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    {errors.lastName}\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <DInput\r\n                  error={\r\n                    personalValue.lastName.trim() !== \"\"\r\n                      ? null\r\n                      : errors.lastName\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  fluid\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  value={personalValue.lastName}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </Content>\r\n            </Content>\r\n          </>\r\n        ) : (\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n          >\r\n            <DLabel\r\n              flex\r\n              justifyEnd\r\n              alignCenter\r\n              weight={700}\r\n              w={\"40%\"}\r\n              size=\"14px\"\r\n            >\r\n              Name:\r\n            </DLabel>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"5px 10px\"\r\n            >\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.title}. {employee.firstName} {employee.lastName}\r\n              </DLabel>\r\n            </Content>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          style={{ zIndex: 10 }}\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Date of Birth:\r\n          </DLabel>\r\n          <Content\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {isEditPersonal ? (\r\n              <DatePicker\r\n                selected={startDate}\r\n                onChange={handleDateChanged}\r\n                showYearDropdown\r\n                showMonthDropdown\r\n                dropdownMode=\"select\"\r\n                className=\"datepicker\"\r\n              />\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.dateOfBirth &&\r\n                  moment(parseInt(employee.dateOfBirth)).format(\"LL\")}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Contact:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            pad=\"5px 10px\"\r\n            direct=\"column\"\r\n          >\r\n            {isEditPersonal ? (\r\n              <>\r\n                {regexNum.test(personalValue.contact) &&\r\n                personalValue.contact.length === 11 ? (\r\n                  \"\"\r\n                ) : errors.contactX || errors.contactNum ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    Contact number must only contain number and must be 11\r\n                    digits\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <DInput\r\n                  error={\r\n                    regexNum.test(personalValue.contact) &&\r\n                    personalValue.contact.length === 11\r\n                      ? null\r\n                      : errors.contactX || errors.contactNum\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  fluid\r\n                  type=\"text\"\r\n                  name=\"contact\"\r\n                  value={personalValue.contact}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </>\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.contact}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Email:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            pad=\"5px\"\r\n            direct=\"column\"\r\n          >\r\n            {isEditPersonal ? (\r\n              <>\r\n                {personalValue.email.match(regex) ? (\r\n                  \"\"\r\n                ) : errors.emailX || errors.email ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    {errors.emailX || errors.email}\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <DInput\r\n                  error={\r\n                    personalValue.email.match(regex)\r\n                      ? null\r\n                      : errors.emailX || errors.email\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  fluid\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={personalValue.email}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </>\r\n            ) : (\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={500}\r\n                size=\"14px\"\r\n                breakWord\r\n              >\r\n                {employee.email}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          margin=\"12px auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Bio:\r\n          </DLabel>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            pad=\"3px 15px\"\r\n          >\r\n            <DTextArea border active={isEditPersonal ? true : null}>\r\n              <CKEditor\r\n                onInit={(editor) => {\r\n                  // Insert the toolbar before the editable area.\r\n                  editor.ui\r\n                    .getEditableElement()\r\n                    .parentElement.insertBefore(\r\n                      editor.ui.view.toolbar.element,\r\n                      editor.ui.getEditableElement()\r\n                    );\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setContent(data);\r\n                }}\r\n                editor={DecoupledEditor}\r\n                data={content}\r\n              />\r\n            </DTextArea>\r\n\r\n            <DTextArea\r\n              border\r\n              active={!isEditPersonal ? true : null}\r\n              color={!content ? \"#ccc\" : null}\r\n            >\r\n              {content\r\n                ? parser(content)\r\n                : `Write something about ${employee.title}. ${employee.firstName} ${employee.lastName} ...`}\r\n            </DTextArea>\r\n          </Content>\r\n        </Content>\r\n      </Content>\r\n      {isEditPersonal && (\r\n        <Content flex width=\"100%\" justify=\"flex-end\" align=\"center\">\r\n          <DButton confirm onClick={handleUpdatePersonal}>\r\n            {loading ? (\r\n              <Spinner inverted row small content=\"Loading...\" />\r\n            ) : (\r\n              \"Update\"\r\n            )}\r\n          </DButton>\r\n        </Content>\r\n      )}\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_PERSONAL = gql`\r\n  mutation updatePersonalEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $dob: String\r\n    $bio: String\r\n  ) {\r\n    updatePersonalEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      dateOfBirth: $dob\r\n      bio: $bio\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      dateOfBirth\r\n      bio\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalCard;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel, IconWrap, DSelect, DButton } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst EmployeeCard = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const [isEditEmpAcct, setIsEditEmpAcct] = useState(false);\r\n\r\n  const [empAcctValue, setEmpAcctValue] = useState({\r\n    role: employee.role,\r\n    level: employee.level,\r\n  });\r\n\r\n  const [updateEmpAcct, { loading: loadEmpAcct }] = useMutation(\r\n    UPDATE_EMPLOYEE_ACCT,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        role: empAcctValue.role,\r\n        level: parseInt(empAcctValue.level),\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        if (err.graphQLErrors[0].extensions.exception.errors.notauth) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted alert onClick={onClose}>\r\n              {err.graphQLErrors[0].extensions.exception.errors.notauth}\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      onCompleted() {\r\n        setIsEditEmpAcct(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Info Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleEmpAcctValue = (e) => {\r\n    setEmpAcctValue({ ...empAcctValue, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditEmplAcct = () => {\r\n    setIsEditEmpAcct(!isEditEmpAcct);\r\n  };\r\n\r\n  const handleUpdateEmplAcct = () => {\r\n    updateEmpAcct();\r\n  };\r\n\r\n  return (\r\n    <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween overf>\r\n      <Content\r\n        flex\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n      >\r\n        <DLabel size={wid < 768 ? \"18px !important\" : \"22px\"} weight={700}>\r\n          Personal Details\r\n        </DLabel>\r\n        {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n          <>\r\n            <IconWrap\r\n              invisible={isEditEmpAcct ? true : null}\r\n              bgcolor={({ theme }) => theme.green}\r\n              medium\r\n              title={\"Update Info\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              pad=\"3px\"\r\n            >\r\n              <Edit onClick={handleEditEmplAcct} />\r\n            </IconWrap>\r\n            <IconWrap\r\n              invisible={!isEditEmpAcct ? true : null}\r\n              medium\r\n              title={\"Cancel Update\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              color=\"red\"\r\n            >\r\n              <Cancel onClick={handleEditEmplAcct} />\r\n            </IconWrap>\r\n          </>\r\n        )}\r\n      </Content>\r\n\r\n      <Content\r\n        width=\"80%\"\r\n        height=\"100%\"\r\n        margin=\"0 auto\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Employee ID:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {/* {isEditEmpAcct &&\r\n            (employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3) ? (\r\n              <DInput\r\n                fluid\r\n                name=\"empId\"\r\n                value={empAcctValue.empId}\r\n                onChange={handleEmpAcctValue}\r\n              />\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.empId}\r\n              </DLabel>\r\n            )} */}\r\n\r\n            <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n              {employee.empId}\r\n            </DLabel>\r\n          </Content>\r\n        </Content>\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Title:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {isEditEmpAcct &&\r\n            (employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) ? (\r\n              <DSelect\r\n                name=\"role\"\r\n                value={empAcctValue.role}\r\n                onChange={handleEmpAcctValue}\r\n              >\r\n                <option>AESTHETICIAN</option>\r\n                <option>RECEPTIONIST</option>\r\n              </DSelect>\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={700} size=\"16px\">\r\n                {employee.role}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Level:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {isEditEmpAcct &&\r\n            (employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) ? (\r\n              <DSelect\r\n                name=\"level\"\r\n                value={empAcctValue.level}\r\n                onChange={handleEmpAcctValue}\r\n              >\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n              </DSelect>\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={700} size=\"16px\">\r\n                {employee.level}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n      </Content>\r\n      {isEditEmpAcct && (\r\n        <Content flex width=\"100%\" justify=\"flex-end\" align=\"center\">\r\n          <DButton confirm onClick={handleUpdateEmplAcct}>\r\n            {loadEmpAcct ? (\r\n              <Spinner inverted row small content=\"Loading...\" />\r\n            ) : (\r\n              \"Update\"\r\n            )}\r\n          </DButton>\r\n        </Content>\r\n      )}\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_ACCT = gql`\r\n  mutation updateAccountEmployee($employeeId: ID!, $role: String, $level: Int) {\r\n    updateAccountEmployee(_id: $employeeId, emprole: $role, emplevel: $level) {\r\n      _id\r\n      empId\r\n      role\r\n      level\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeCard;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { IconWrap } from \"../../styled/utils\";\r\nimport { Cross } from \"@styled-icons/entypo/Cross\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport Page404 from \"../../../pages/Page404\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst RemoveService = ({ categId, employeeId, refetchCategories }) => {\r\n  const [categValue, setCategValue] = useState(\"\");\r\n\r\n  const [removeService, { loading: loadRemoving }] = useMutation(\r\n    REMOVE_SERVICE,\r\n    {\r\n      variables: {\r\n        categoryId: categValue,\r\n        employeeId,\r\n      },\r\n      refetchQueries: [{ query: refetchCategories }],\r\n      onCompleted() {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Service Removed\r\n          </Toasted>\r\n        ));\r\n      },\r\n      onError() {\r\n        return <Page404 />;\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleCategoryValue = (e) => {\r\n    setCategValue(e.currentTarget.dataset.categid);\r\n  };\r\n\r\n  const handleRemoveService = () => {\r\n    removeService();\r\n  };\r\n  return (\r\n    <div data-categid={categId} onMouseOver={handleCategoryValue}>\r\n      {loadRemoving ? (\r\n        <Spinner mini inverted />\r\n      ) : (\r\n        <IconWrap tiny margin=\"0 2px\" onClick={handleRemoveService}>\r\n          <Cross />\r\n        </IconWrap>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst REMOVE_SERVICE = gql`\r\n  mutation removeService($employeeId: ID!, $categoryId: ID!) {\r\n    removeService(employeeId: $employeeId, categoryId: $categoryId) {\r\n      _id\r\n      categoryServices {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default RemoveService;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { DCard, Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, IconWrap, DButton, CheckLabel } from \"../../styled/utils\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular/Plus\";\r\nimport { Save } from \"@styled-icons/boxicons-solid/Save\";\r\n\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport RemoveService from \"./RemoveService\";\r\n\r\nconst ServiceCard = ({ employee }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const { width: wid } = useWindowSize();\r\n  const [openAddService, setOpenAddService] = useState(false);\r\n\r\n  const [isCategories, setIsCategories] = useState(\r\n    employee.categoryServices.map((categServ) => categServ._id)\r\n  );\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const {\r\n    data: categoryData,\r\n    loading: loadCategory,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      setCategories(categoryData.categories);\r\n    }\r\n  }, [categoryData]);\r\n\r\n  const [addService, { loading: loadAdd }] = useMutation(\r\n    ADD_SERVICES_MUTATION,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        categoryId: isCategories,\r\n      },\r\n      refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }],\r\n      onCompleted() {\r\n        setOpenAddService(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Service Added\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DCard dw=\"100%\" dh=\"100%\" maxh={wid < 768 ? \"300px\" : \"400px\"} flex fcol>\r\n        <Content\r\n          flex\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel size={wid < 768 ? \"18px !important\" : \"22px\"} weight={700}>\r\n            Services\r\n          </DLabel>\r\n          {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n            <IconWrap\r\n              small\r\n              title={\"Add Services\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              bgcolor={({ theme }) => theme.bluer}\r\n              onClick={() => setOpenAddService(true)}\r\n            >\r\n              <Plus />\r\n            </IconWrap>\r\n          )}\r\n        </Content>\r\n        <Content\r\n          width=\"90%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          hoverflow\r\n          margin=\"0 auto\"\r\n          flow={wid <= 768 ? \"column wrap\" : \"column wrap\"}\r\n          pad=\"10px\"\r\n        >\r\n          {employee.categoryServices.map((categ) => (\r\n            <Content\r\n              width=\"auto\"\r\n              height={wid < 768 ? \"15px\" : \"25px\"}\r\n              margin={wid < 1024 ? \"8px 3px\" : \"5px\"}\r\n              key={categ._id}\r\n            >\r\n              <DLabel rounded color=\"bluer\" pad=\"3px 8px\">\r\n                <DGrid\r\n                  custom=\"7fr 1fr\"\r\n                  med5={\"7fr 1fr\"}\r\n                  med7={\"7fr 1fr\"}\r\n                  med10={\"7fr 1fr\"}\r\n                >\r\n                  {categ.name}\r\n                  <RemoveService\r\n                    categId={categ._id}\r\n                    employeeId={employee._id}\r\n                    refetchCategories={FETCH_ALL_CATEGORIES_QUERY}\r\n                  />\r\n                </DGrid>\r\n              </DLabel>\r\n            </Content>\r\n          ))}\r\n        </Content>\r\n      </DCard>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={openAddService}\r\n        onClose={() => setOpenAddService(false)}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Add Services</Modal.Header>\r\n        <Modal.Content>\r\n          {loadCategory ? (\r\n            <Spinner medium content=\"Fetching Data...\" />\r\n          ) : (\r\n            <CheckboxGroup\r\n              name=\"categories\"\r\n              value={isCategories}\r\n              onChange={setIsCategories}\r\n            >\r\n              {(Checkbox) => (\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  maxh={wid < 768 ? \"350px\" : \"200px\"}\r\n                  flex\r\n                  flow=\"column wrap\"\r\n                  hoverflow\r\n                >\r\n                  {categories.map((category) => (\r\n                    <Content\r\n                      width=\"auto\"\r\n                      height=\"30px\"\r\n                      margin={wid < 1024 ? \"8px 3px\" : \"5px\"}\r\n                      key={category._id}\r\n                    >\r\n                      <div className=\"pretty p-default p-round p-smooth\">\r\n                        <Checkbox value={category._id} key={category._id} />\r\n                        <div className=\"state p-warning-o\">\r\n                          <CheckLabel textt=\"uppercase\" color=\"dark\">\r\n                            {category.name}\r\n                          </CheckLabel>\r\n                        </div>\r\n                      </div>\r\n                    </Content>\r\n                  ))}\r\n                </Content>\r\n              )}\r\n            </CheckboxGroup>\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n          >\r\n            <DButton confirm flex onClick={handleAddService}>\r\n              {loadAdd ? (\r\n                <Spinner small row inverted content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Save size=\"22px\" title=\"Update Content\" />\r\n                  Save\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $categoryId: [ID]) {\r\n    addService(employeeId: $employeeId, categoryId: $categoryId) {\r\n      _id\r\n      categoryServices {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceCard;\r\n","import React from \"react\";\r\n\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\n\r\nimport PersonalCard from \"./PersonalCard\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\nimport ServiceCard from \"./ServiceCard\";\r\n\r\nconst DetailsEmployee = ({ employee }) => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"5px\" med7=\"1fr\" med10=\"1fr\">\r\n        <PersonalCard employee={employee} />\r\n        <EmployeeCard employee={employee} />\r\n        <ServiceCard employee={employee} />\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default DetailsEmployee;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport {\r\n  DLabel,\r\n  IconWrap,\r\n  DSelect,\r\n  DButton,\r\n  CheckLabel,\r\n} from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport { Save } from \"@styled-icons/boxicons-solid/Save\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst ScheduleEmployee = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n  const [isEditSched, setIsEditSched] = useState(false);\r\n  const [schedValues, setSchedValues] = useState({\r\n    workStart: employee.schedule.workStart,\r\n    workLength: employee.schedule.workLength / 60,\r\n    breakStart: employee.schedule.breakStart,\r\n    breakLength: employee.schedule.breakLength / 60,\r\n  });\r\n\r\n  const [updateSchedule, { loading: loadSchedule }] = useMutation(\r\n    UPDATE_EMPLOYEE_SCHEDULE,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        workStart: schedValues.workStart,\r\n        breakStart: schedValues.breakStart,\r\n        workLength: parseInt(parseFloat(schedValues.workLength) * 60),\r\n        breakLength: parseInt(parseFloat(schedValues.breakLength) * 60),\r\n        day: days,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        console.log(err);\r\n        //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      },\r\n      onCompleted() {\r\n        setIsEditSched(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Schedule Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleEditSched = () => {\r\n    setIsEditSched(!isEditSched);\r\n  };\r\n\r\n  const handleSchedChange = (e) => {\r\n    setSchedValues({ ...schedValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleUpdateSched = () => {\r\n    updateSchedule();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"10px\" med10=\"1fr\" med7=\"1fr\">\r\n        <DCard dw=\"100%\" dh=\"100%\" p=\"10px\" flex fcol justifyBetween>\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <DLabel\r\n              size={wid < 768 ? \"18px !important\" : \"22px\"}\r\n              weight={700}\r\n              pad=\"0\"\r\n            >\r\n              Schedule Details\r\n            </DLabel>\r\n            {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n              <>\r\n                <IconWrap\r\n                  invisible={isEditSched ? true : null}\r\n                  bgcolor={({ theme }) => theme.blue}\r\n                  medium\r\n                  title={\"Update Info\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  pad=\"3px\"\r\n                >\r\n                  <Edit onClick={handleEditSched} />\r\n                </IconWrap>\r\n\r\n                <IconWrap\r\n                  invisible={!isEditSched ? true : null}\r\n                  medium\r\n                  title={\"Cancel Update\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  color=\"red\"\r\n                >\r\n                  <Cancel onClick={handleEditSched} />\r\n                </IconWrap>\r\n              </>\r\n            )}\r\n          </Content>\r\n          <Content height=\"100%\" width=\"100%\">\r\n            <DGrid custom=\"1fr 2fr\">\r\n              <Content\r\n                flex\r\n                width=\"90%\"\r\n                height=\"300px\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n                margin=\"0 auto\"\r\n                style={\r\n                  wid < 768\r\n                    ? { borderBottom: \"1px solid #ccc\" }\r\n                    : { borderRight: \"1px solid #ccc\" }\r\n                }\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Days\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"flex-start\"\r\n                  direct=\"column\"\r\n                  pad=\"0 20px\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <CheckboxGroup\r\n                    name=\"days\"\r\n                    value={days}\r\n                    onChange={setDays}\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    {(Checkbox) => (\r\n                      <>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sun\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Mon\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Tue\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Wed\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Thu\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Fri\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sat\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                height=\"300px\"\r\n                width=\"100%\"\r\n                margin=\"0 auto\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Hours\r\n                </DLabel>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                    pad=\"5px 10px\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Work\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        name=\"workStart\"\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workStart}\r\n                      >\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Work Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workLength}\r\n                        name=\"workLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                        <option value=\"5\">5 hours</option>\r\n                        <option value=\"6\">6 hours</option>\r\n                        <option value=\"7\">7 hours</option>\r\n                        <option value=\"8\">8 hours</option>\r\n                        <option value=\"9\">9 hours</option>\r\n                        <option value=\"10\">10 hours</option>\r\n                        <option value=\"11\">11 hours</option>\r\n                        <option value=\"12\">12 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? employee.schedule.workLength\r\n                          : employee.schedule.workLength / 60}{\" \"}\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.workLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Break\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakStart}\r\n                        name=\"breakStart\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Break Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakLength}\r\n                        name=\"breakLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value={\"0.5\"}>30 mins</option>\r\n                        <option value={\"1\"}>1 hour</option>\r\n                        <option value=\"2\">2 hours</option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? employee.schedule.breakLength\r\n                          : employee.schedule.breakLength / 60}{\" \"}\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.breakLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n            invisible={isEditSched ? false : true}\r\n          >\r\n            <DButton confirm flex onClick={handleUpdateSched}>\r\n              {loadSchedule ? (\r\n                <Spinner tiny row inverted content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Save size=\"22px\" title=\"Update Content\" />\r\n                  Save\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_SCHEDULE = gql`\r\n  mutation updateSchedule(\r\n    $employeeId: ID!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateSchedule(\r\n      _id: $employeeId\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ScheduleEmployee;\r\n","import React from \"react\";\r\nimport DetailsEmployee from \"./DetailsEmployee\";\r\nimport ScheduleEmployee from \"./ScheduleEmployee\";\r\nimport Page404 from \"../../../pages/Page404\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst Info = ({ isEmpInfo, employee }) => {\r\n  switch (isEmpInfo) {\r\n    case \"emp_details\":\r\n      return <DetailsEmployee employee={employee} />;\r\n    case \"emp_sched\":\r\n      return <ScheduleEmployee employee={employee} />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default Info;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n} from \"../../../util/graphql/employee\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Delete, DeleteForever } from \"@styled-icons/material\";\r\nimport { Warning } from \"@styled-icons/material-rounded\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport { Question } from \"@styled-icons/fa-solid\";\r\nimport { Popup, Modal, Grid } from \"semantic-ui-react\";\r\n\r\nconst EmployeeDelete = ({ employee }) => {\r\n  const history = useHistory();\r\n  const [isDlt, setIsDlt] = useState(false);\r\n\r\n  const [archiveEmployee, { loading: loadArchived }] = useMutation(\r\n    ARCHIVE_EMPLOYEE,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        active: false,\r\n      },\r\n\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n          variables: { active: true, limit: 0 },\r\n        },\r\n      ],\r\n      onCompleted() {\r\n        history.goBack();\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Content flex width=\"100%\" justify=\"flex-end\" align=\"center\">\r\n        <DButton flex bgalert onClick={() => setIsDlt(true)}>\r\n          <Delete size=\"22px\" title=\"Delete Employee Info\" />\r\n          Delete\r\n        </DButton>\r\n        <Popup\r\n          trigger={\r\n            <IconWrap\r\n              circle\r\n              shadow\r\n              bgcolor=\"#232323\"\r\n              tiny\r\n              mcenter\r\n              title=\"Info\"\r\n              pad=\"3px\"\r\n            >\r\n              <Question />\r\n            </IconWrap>\r\n          }\r\n          inverted\r\n          position=\"top right\"\r\n          size=\"tiny\"\r\n        >\r\n          <p style={{ fontWeight: 700 }}>\r\n            Store in archive or permanently delete this employee information.\r\n          </p>\r\n        </Popup>\r\n      </Content>\r\n      <Modal\r\n        basic\r\n        size=\"small\"\r\n        open={isDlt}\r\n        onClose={() => setIsDlt(false)}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>{`Archive Employee: ${employee.title} ${employee.firstName} ${employee.lastName}`}</Modal.Header>\r\n        <Modal.Content>\r\n          <p style={{ fontWeight: 500 }}>\r\n            Are you sure you want to put employee to archive? By doing so, it\r\n            will remove employee to other files. You can still restore after\r\n            this employee by going to{\" \"}\r\n            <strong>File Maintenance/Archive Files</strong>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <Content\r\n              flex\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <Popup\r\n                on=\"click\"\r\n                trigger={\r\n                  <DButton alert flex>\r\n                    <DeleteForever size=\"22px\" />\r\n                    Delete Permanently\r\n                  </DButton>\r\n                }\r\n                position=\"top center\"\r\n                inverted\r\n                flowing\r\n              >\r\n                <Grid divided columns={2}>\r\n                  <Grid.Column>\r\n                    <IconWrap size=\"22px\" color=\"green\" margin=\"0 auto\">\r\n                      <Check title=\"Confirm deleting permanently\" />\r\n                    </IconWrap>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <IconWrap size=\"22px\" color=\"red\" margin=\"0 auto\">\r\n                      <Cancel title=\"Cancel action\" />\r\n                    </IconWrap>\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </Popup>\r\n\r\n              <Popup\r\n                trigger={\r\n                  <IconWrap\r\n                    circle\r\n                    shadow\r\n                    color=\"yellow\"\r\n                    small\r\n                    mcenter\r\n                    title=\"Warning\"\r\n                  >\r\n                    <Warning />\r\n                  </IconWrap>\r\n                }\r\n                content={\r\n                  <p style={{ fontWeight: 700 }}>\r\n                    Deleting Permantly cannot be restored\r\n                  </p>\r\n                }\r\n                position=\"top right\"\r\n                size=\"tiny\"\r\n              />\r\n            </Content>\r\n\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-end\"\r\n              align=\"center\"\r\n            >\r\n              <DButton basic confirm onClick={() => archiveEmployee()}>\r\n                {loadArchived ? (\r\n                  <Spinner small inverted row content=\"Loading...\" />\r\n                ) : (\r\n                  <>\r\n                    <Check size=\"22px\" />\r\n                    Confirm\r\n                  </>\r\n                )}\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ARCHIVE_EMPLOYEE = gql`\r\n  mutation archiveEmployee($employeeId: ID!, $active: Boolean) {\r\n    archiveEmployee(_id: $employeeId, active: $active) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      level\r\n      active\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDelete;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\n\r\nimport Spinner from \"../../components/Spinner\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport PhotoBooth from \"../../components/admin/employees/PhotoBooth\";\r\nimport Info from \"../../components/admin/employees/Info\";\r\nimport EmployeeDelete from \"../../components/admin/employees/EmployeeDelete\";\r\n\r\nconst Employee = (props) => {\r\n  const employeeId = props.match.params._id;\r\n  const { width: wid } = useWindowSize();\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  //Storing switch key to localstorage\r\n  const stored = localStorage.getItem(\"empInfo\");\r\n  const [isEmpInfo, setIsEmpInfo] = useState(\r\n    stored === \"emp_details\"\r\n      ? \"emp_details\"\r\n      : stored === \"emp_sched\"\r\n      ? \"emp_sched\"\r\n      : \"emp_details\"\r\n  );\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  const handleDetails = () => {\r\n    setIsEmpInfo(\"emp_details\");\r\n    localStorage.setItem(\"empInfo\", \"emp_details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsEmpInfo(\"emp_sched\");\r\n    localStorage.setItem(\"empInfo\", \"emp_sched\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        minh=\"90vh\"\r\n      >\r\n        {employeeLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n            >\r\n              <Breadcrumb size={\"huge\"}>\r\n                <Breadcrumb.Section as={Link} to=\"/zeadmin/employees\">\r\n                  Employee\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider>/</Breadcrumb.Divider>\r\n                <Breadcrumb.Section\r\n                  active\r\n                >{`${employee.firstName} ${employee.lastName}'s Info`}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <PhotoBooth\r\n                  employee={employee}\r\n                  employeeId={employeeId}\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                />\r\n                <Content\r\n                  flex\r\n                  direct=\"column\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                >\r\n                  <Info\r\n                    isEmpInfo={isEmpInfo}\r\n                    employee={employeeData && employeeData.employee}\r\n                  />\r\n                  <EmployeeDelete employee={employee} />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form, Label } from \"semantic-ui-react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const [values, setValues] = useState({ title: \"\" });\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content,\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          variables: { active: true },\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          variables: { active: true },\r\n          data: { categories: [newCategory, ...data.categories] },\r\n        });\r\n      },\r\n      // refetchQueries: [\r\n      //   { query: FETCH_ALL_CATEGORIES_QUERY, variables: { active: true } },\r\n      // ],\r\n      onCompleted() {\r\n        setOpen(false);\r\n        setContent(\"\");\r\n        setValues({ title: \"\" });\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            New Category Add Successfully\r\n          </Toasted>\r\n        ));\r\n      },\r\n      // onError(err) {\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      //   toaster.notify(\"Something went Wrong\");\r\n      // },\r\n    }\r\n  );\r\n\r\n  const handleTitleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSaveCategory = () => {\r\n    createCategory();\r\n  };\r\n\r\n  const config = {\r\n    readonly: false,\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleTitleChange}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Description</Label>\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 5px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea border active>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-end\"\r\n          align=\"center\"\r\n        >\r\n          <DButton alert flex onClick={() => setOpen(false)}>\r\n            <Cancel size=\"22px\" />\r\n            No\r\n          </DButton>\r\n          <DButton confirm flex onClick={handleSaveCategory}>\r\n            {loading ? (\r\n              <Spinner inverted small content=\"Loading...\" />\r\n            ) : (\r\n              <>\r\n                <Check size=\"22px\" />\r\n                Yes\r\n              </>\r\n            )}\r\n          </DButton>\r\n        </Content>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  Overlay,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular/Plus\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport Page404 from \"../Page404\";\r\n\r\nconst Categories = () => {\r\n  const { width: wid } = useWindowSize();\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY, {\r\n    variables: { active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) return Page404;\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n          bgcolor=\"#eee\"\r\n          rounded\r\n          pad=\"3px 10px\"\r\n          height=\"5em\"\r\n        >\r\n          <Breadcrumb size=\"big\">\r\n            <Breadcrumb.Section>File Maintenance</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section active>Service Category</Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton\r\n            onClick={handleOpenModal}\r\n            flex\r\n            circle={wid < 768 ? true : null}\r\n          >\r\n            <Plus size=\"22px\" />\r\n            {wid > 768 && \"New Category\"}\r\n          </DButton>\r\n        </Content>\r\n\r\n        <Content width=\"100%\" height=\"100%\">\r\n          {loading ? (\r\n            <Spinner content=\"Please wait while we fetch your data\" />\r\n          ) : (\r\n            <DGrid three gap=\"15px\" margin=\"40px 0\">\r\n              {data &&\r\n                data.categories.map((category) => (\r\n                  <DCard\r\n                    key={category._id}\r\n                    dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                    dh=\"250px\"\r\n                    mcenter\r\n                    p=\"0px\"\r\n                    grayzoom\r\n                    overlaying\r\n                  >\r\n                    <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                      <img\r\n                        src={\r\n                          category.photo\r\n                            ? `/images/service/${category.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt={category.name}\r\n                      />\r\n                    </DImage>\r\n\r\n                    <Overlay\r\n                      bgc\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      initbox\r\n                    >\r\n                      <div className=\"overlay-box\">\r\n                        <div className=\"overlay-box__content dark\">\r\n                          <h3 className=\"title\">{category.name}</h3>\r\n\r\n                          {category.description.length > 100\r\n                            ? parser(\r\n                                category.description.substr(0, 100) + \"...\"\r\n                              )\r\n                            : parser(category.description.substr(0, 100))}\r\n\r\n                          <ReadMore center size=\"14px\">\r\n                            Learn More\r\n                          </ReadMore>\r\n                        </div>\r\n                      </div>\r\n                    </Overlay>\r\n                    <Link to={`/zeadmin/category/${category._id}`} />\r\n                  </DCard>\r\n                ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\nimport { IconWrap } from \"./styled/utils\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst MenuStyledDots = styled.div`\r\n  position: absolute;\r\n  width: auto;\r\n  height: auto;\r\n  z-index: 5;\r\n  ${(props) =>\r\n    props.middle &&\r\n    css`\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    `};\r\n  ${(props) =>\r\n    props.topright &&\r\n    css`\r\n      top: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.topleft &&\r\n    css`\r\n      top: 0;\r\n      left: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.bottomright &&\r\n    css`\r\n      bottom: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.middleright &&\r\n    css`\r\n      top: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.bottomleft &&\r\n    css`\r\n      bottom: 0;\r\n      left: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.middleleft &&\r\n    css`\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n    `};\r\n`;\r\n\r\nconst MenuDots = (props) => {\r\n  return (\r\n    <MenuStyledDots {...props}>\r\n      <Popup\r\n        style={{ zIndex: 2 }}\r\n        on=\"click\"\r\n        position=\"top right\"\r\n        trigger={\r\n          <IconWrap menu {...props} color=\"dark\">\r\n            <DotsVerticalRounded title=\"Menu\" />\r\n          </IconWrap>\r\n        }\r\n        flowing\r\n      >\r\n        {props.children}\r\n      </Popup>\r\n    </MenuStyledDots>\r\n  );\r\n};\r\n\r\nexport default MenuDots;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header, Popup, Grid } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport { Warning } from \"@styled-icons/material-rounded\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  // Archive category file\r\n  const [archivedCategory] = useMutation(ARCHIVE_CATEGORY, {\r\n    variables: { categoryId: category._id, active: false },\r\n    // refetchQueries: [\r\n    //   { query: FETCH_ALL_CATEGORIES_QUERY, variables: { active: true } },\r\n    // ],\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n        variables: { active: true },\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        (categ) => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n        variables: { active: true },\r\n        data: { categories: [...data.categories] },\r\n      });\r\n    },\r\n    onCompleted() {\r\n      historyCallback();\r\n    },\r\n  });\r\n  // Delete Permanently\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n        variables: { active: true },\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        (categ) => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n        variables: { active: true },\r\n        data: { categories: [...data.categories] },\r\n      });\r\n    },\r\n    onCompleted() {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id,\r\n    },\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      basic\r\n      size=\"small\"\r\n      open={open}\r\n      closeIcon\r\n      onClose={() => setOpen(false)}\r\n    >\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Archive this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p style={{ fontWeight: 700 }}>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n          >\r\n            <Popup\r\n              on=\"click\"\r\n              trigger={\r\n                <DButton alert flex>\r\n                  <DeleteForever size=\"22px\" />\r\n                  Delete Permanently\r\n                </DButton>\r\n              }\r\n              position=\"top center\"\r\n              flowing\r\n            >\r\n              <Grid divided columns={2}>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"green\" margin=\"0 auto\">\r\n                    <Check\r\n                      title=\"Confirm deleting permanently\"\r\n                      onClick={handleDeleteCategory}\r\n                    />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"red\" margin=\"0 auto\">\r\n                    <Cancel title=\"Cancel action\" />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Popup>\r\n\r\n            <Popup\r\n              trigger={\r\n                <IconWrap\r\n                  circle\r\n                  shadow\r\n                  color=\"yellow\"\r\n                  small\r\n                  mcenter\r\n                  title=\"Warning\"\r\n                >\r\n                  <Warning />\r\n                </IconWrap>\r\n              }\r\n              content={\r\n                <p style={{ fontWeight: 700 }}>\r\n                  Deleting Permantly cannot be restored\r\n                </p>\r\n              }\r\n              position=\"top right\"\r\n              size=\"tiny\"\r\n            />\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n          >\r\n            <DButton confirm basic onClick={() => archivedCategory()}>\r\n              Yes\r\n            </DButton>\r\n          </Content>\r\n        </Content>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ARCHIVE_CATEGORY = gql`\r\n  mutation archivedCategory($categoryId: ID!, $active: Boolean) {\r\n    archivedCategory(_id: $categoryId, active: $active) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport { Form, Label, Grid } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport { DButton, DLabel, IconWrap } from \"../../../components/styled/utils\";\r\nimport { Edit, Trash } from \"@styled-icons/boxicons-solid\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport MenuDots from \"../../../components/MenuDots\";\r\nimport DTextArea from \"../../../components/DTextArea\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\nimport parser from \"html-react-parser\";\r\nimport Toasted from \"../../../components/Toasted\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  // const [errors, setErrors] = useState({});\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name,\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content,\r\n    },\r\n\r\n    onCompleted() {\r\n      setIsEdit(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Category Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  // const config = {\r\n  //   removePlugins: [\"Table\", \"Image\", \"MediaEmbed\"],\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <MenuDots topright medium>\r\n            <Grid divided columns={2}>\r\n              <Grid.Column>\r\n                <DButton confirm onClick={handleEdit} flex>\r\n                  <IconWrap mcenter>\r\n                    <Edit size=\"22px\" title=\"Update Content\" />\r\n                  </IconWrap>\r\n                </DButton>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <DButton alert flex onClick={() => setOpen(true)}>\r\n                  <IconWrap mcenter>\r\n                    <Trash size=\"22px\" title=\"Archive or Permanently Delete\" />\r\n                  </IconWrap>\r\n                </DButton>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </MenuDots>\r\n\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <DLabel color={isEdit ? \"grey\" : \"blue\"} size=\"14px\" rounded>\r\n              Title\r\n            </DLabel>\r\n            {isEdit ? (\r\n              <Content\r\n                width=\"90%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Content>\r\n            ) : (\r\n              <Content\r\n                width=\"90%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"50%\"}\r\n                  size=\"18px\"\r\n                >\r\n                  {values.title}\r\n                </DLabel>\r\n              </Content>\r\n            )}\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <DLabel color={isEdit ? \"grey\" : \"blue\"} size=\"14px\" rounded>\r\n              Description\r\n            </DLabel>\r\n            <Content\r\n              width=\"90%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea border active={isEdit ? true : null}>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n\r\n              <DTextArea border active={!isEdit ? true : null}>\r\n                {parser(content)}\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n          {isEdit && (\r\n            <Content flex justify=\"flex-end\" align=\"center\" width=\"100%\">\r\n              <DButton type=\"submit\" onClick={handleSubmit}>\r\n                {loading ? (\r\n                  <Spinner small row inverted content=\"Loading...\" />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </DButton>\r\n              <DButton alert onClick={handleCancel}>\r\n                Cancel\r\n              </DButton>\r\n            </Content>\r\n          )}\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form, Label } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values, setValues } = useForm(\r\n    registerCallBack,\r\n    {\r\n      name: \"\",\r\n      price: \"\",\r\n      duration: \"\",\r\n    }\r\n  );\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId, active: true },\r\n      },\r\n    ],\r\n\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Service already Exist\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n      setValues({ name: \"\", price: \"\", duration: \"\" });\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          New Service Added Successfully\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"flex-start\"\r\n              direct=\"column\"\r\n              margin=\"12px auto\"\r\n            >\r\n              <Label style={styles.label}>Description</Label>\r\n              <Content\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 5px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DTextArea border active>\r\n                  <CKEditor\r\n                    onInit={(editor) => {\r\n                      // Insert the toolbar before the editable area.\r\n                      editor.ui\r\n                        .getEditableElement()\r\n                        .parentElement.insertBefore(\r\n                          editor.ui.view.toolbar.element,\r\n                          editor.ui.getEditableElement()\r\n                        );\r\n                    }}\r\n                    onChange={(event, editor) => {\r\n                      const data = editor.getData();\r\n                      setContent(data);\r\n                    }}\r\n                    editor={DecoupledEditor}\r\n                    data={content}\r\n                  />\r\n                </DTextArea>\r\n              </Content>\r\n            </Content>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? (\r\n            <Spinner small inverted row content=\"Loading...\" />\r\n          ) : (\r\n            \"Yes\"\r\n          )}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel, IconWrap } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular/Plus\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId,\r\n        active: true,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => (\r\n        <IconWrap color={\"green\"}>\r\n          <Grid size=\"22px\" />\r\n        </IconWrap>\r\n      ),\r\n      width: \"66px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0.7,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"74px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n      ),\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton flex width=\"56px\" size=\"36px\">\r\n          <Link to={`/zeadmin/service/${row._id}`} className=\"flex-center\">\r\n            <Eye size=\"22px\" title=\"View Service Information\" />\r\n          </Link>\r\n        </DButton>\r\n      ),\r\n      right: true,\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontWeight: \"500\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const title = (\r\n    <DLabel color=\"bluer\" size=\"18px\" rounded>\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <>\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <IconWrap\r\n          medium\r\n          title={\"Add Service\"}\r\n          topright\r\n          circle\r\n          shadow\r\n          bgcolor={({ theme }) => theme.bluer}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Plus />\r\n        </IconWrap>\r\n      </Content>\r\n      <DataTable\r\n        title={title}\r\n        columns={columns}\r\n        data={services.map((service) => service)}\r\n        responsive={true}\r\n        pagination\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        customStyles={customStyles}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading_services}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport { IconWrap } from \"../../components/styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../components/Toasted\";\r\nimport Page404 from \"../Page404\";\r\n\r\nconst Category = (props) => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [\r\n      { query: FETCH_CATEGORY_QUERY, variables: { categoryId: categoryId } },\r\n    ],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Upload Success\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId: categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: category.photo\r\n        ? `/images/service/${category.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        {dataLoading ? (\r\n          <Spinner content=\"Please wait while we fetch the data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n              bgcolor=\"#eee\"\r\n              rounded\r\n              pad=\"3px 10px\"\r\n              height=\"5em\"\r\n            >\r\n              <Breadcrumb size=\"big\">\r\n                <Breadcrumb.Section>File Maintenance</Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section as={Link} to=\"/zeadmin/categories\">\r\n                  Service Category\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section active>{category.name}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  mcenter\r\n                  direct=\"column\"\r\n                >\r\n                  <DCard\r\n                    dw={wid < 524 ? \"50%\" : \"100%\"}\r\n                    dh=\"250px\"\r\n                    mcenter\r\n                    p=\"0px\"\r\n                    grayzoom\r\n                  >\r\n                    {loading ? (\r\n                      <Spinner content=\"Loading...\" medium />\r\n                    ) : (\r\n                      <DImage height=\"100%\" width=\"100%\">\r\n                        <img\r\n                          src={\r\n                            category.photo\r\n                              ? `/images/service/${category.photo}`\r\n                              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt={category.name}\r\n                          onClick={openLightbox}\r\n                        />\r\n                      </DImage>\r\n                    )}\r\n                    <IconWrap\r\n                      {...getRootProps()}\r\n                      circle\r\n                      bottomcenter\r\n                      small\r\n                      pad=\"2px\"\r\n                      bgcolor={({ theme }) => theme.bluer}\r\n                    >\r\n                      <Camera title=\"Upload\" />\r\n                      <input {...getInputProps()} />\r\n                    </IconWrap>\r\n                  </DCard>\r\n\r\n                  <ModalGateway>\r\n                    {viewerIsOpen ? (\r\n                      <Modal onClose={closeLightbox}>\r\n                        <Carousel views={images} />\r\n                      </Modal>\r\n                    ) : null}\r\n                  </ModalGateway>\r\n                </Content>\r\n                <Content width=\"100%\" height=\"100%\">\r\n                  <DGrid gap=\"10px\">\r\n                    <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\" overf>\r\n                      <CategoryDetails\r\n                        category={data.category}\r\n                        historyCallback={historyCallback}\r\n                      />\r\n                    </DCard>\r\n                    <DCard dw=\"100%\" dh=\"100%\">\r\n                      <ServiceList categoryId={data.category._id} />\r\n                    </DCard>\r\n                  </DGrid>\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header, Grid, Popup } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport { Warning } from \"@styled-icons/material-rounded\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback,\r\n}) => {\r\n  const [archiveService, { loading: loadArchiveService }] = useMutation(\r\n    ARCHIVE_SERVICE,\r\n    {\r\n      variables: { serviceId: service._id, active: false },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_SERVICES_QUERY,\r\n          variables: { categoryId: service.category._id, active: true },\r\n        },\r\n      ],\r\n      onCompleted(data) {\r\n        serviceHistoryCallback();\r\n      },\r\n    }\r\n  );\r\n\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id,\r\n          active: true,\r\n        },\r\n      });\r\n\r\n      data.services = data.services.filter((serv) => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id,\r\n          active: true,\r\n        },\r\n        data: { services: [...data.services] },\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id,\r\n    },\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      basic\r\n      size=\"small\"\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      closeIcon\r\n    >\r\n      <Header icon=\"archive\" content={`Archive service: ${service.name}`} />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n          >\r\n            <Popup\r\n              on=\"click\"\r\n              trigger={\r\n                <DButton alert flex>\r\n                  <DeleteForever size=\"22px\" />\r\n                  Delete Permanently\r\n                </DButton>\r\n              }\r\n              position=\"top center\"\r\n              flowing\r\n            >\r\n              <Grid divided columns={2}>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"green\" margin=\"0 auto\">\r\n                    <Check\r\n                      title=\"Confirm deleting permanently\"\r\n                      onClick={handleDeleteService}\r\n                    />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"red\" margin=\"0 auto\">\r\n                    <Cancel title=\"Cancel action\" />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Popup>\r\n\r\n            <Popup\r\n              trigger={\r\n                <IconWrap\r\n                  circle\r\n                  shadow\r\n                  color=\"yellow\"\r\n                  small\r\n                  mcenter\r\n                  title=\"Warning\"\r\n                >\r\n                  <Warning />\r\n                </IconWrap>\r\n              }\r\n              content={\r\n                <p style={{ fontWeight: 700 }}>\r\n                  Deleting Permantly cannot be restored\r\n                </p>\r\n              }\r\n              position=\"top right\"\r\n              size=\"tiny\"\r\n            />\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n          >\r\n            <DButton basic confirm onClick={() => archiveService()}>\r\n              {loadArchiveService ? (\r\n                <Spinner inverted small row content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Check size=\"22px\" />\r\n                  Yes\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </Content>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ARCHIVE_SERVICE = gql`\r\n  mutation archivedService($serviceId: ID!, $active: Boolean) {\r\n    archivedService(_id: $serviceId, active: $active)\r\n  }\r\n`;\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label, Grid } from \"semantic-ui-react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport { DButton, DLabel, IconWrap } from \"../../../components/styled/utils\";\r\nimport MenuDots from \"../../../components/MenuDots\";\r\nimport { Edit, Trash } from \"@styled-icons/boxicons-solid\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport DTextArea from \"../../../components/DTextArea\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  // const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service && service.name,\r\n      price: service && service.price,\r\n      duration: service && service.duration,\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(values.duration),\r\n      description: content,\r\n    },\r\n\r\n    onCompleted() {\r\n      setIsEdit(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Service Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <MenuDots topright medium>\r\n          <Grid divided columns={2}>\r\n            <Grid.Column>\r\n              <DButton confirm onClick={handleEdit} flex>\r\n                <IconWrap mcenter>\r\n                  <Edit size=\"22px\" title=\"Update Content\" />\r\n                </IconWrap>\r\n              </DButton>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <DButton alert flex onClick={() => setOpen(true)}>\r\n                <IconWrap mcenter>\r\n                  <Trash size=\"22px\" title=\"Archive or Permanently Delete\" />\r\n                </IconWrap>\r\n              </DButton>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </MenuDots>\r\n\r\n        <DGrid gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                {isEdit ? (\r\n                  <input\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"60%\" }}\r\n                  />\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    {values.title}\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                {isEdit ? (\r\n                  <select\r\n                    name=\"duration\"\r\n                    value={values.duration}\r\n                    onChange={handleChange}\r\n                  >\r\n                    {/* <option></option> */}\r\n                    <option value=\"30\">30 mins</option>\r\n                    <option value=\"45\">45 mins</option>\r\n                    <option value=\"60\">60 mins</option>\r\n                    <option value=\"90\">90 mins</option>\r\n                    <option value=\"120\">120 mins</option>\r\n                    <option value=\"180\">180 mins</option>\r\n                    <option value=\"210\">210 mins</option>\r\n                  </select>\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    {values.duration} min\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                {isEdit ? (\r\n                  <input\r\n                    name=\"price\"\r\n                    value={values.price}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"60%\" }}\r\n                  />\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    Php {values.price}\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Description</Label>\r\n\r\n            <Content\r\n              width=\"90%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea border active={isEdit ? true : null}>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n              <DTextArea border active={!isEdit ? true : null}>\r\n                {parser(content)}\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n          {isEdit && (\r\n            <Content width=\"100%\" flex justify=\"flex-end\">\r\n              <DButton confirm onClick={handleSubmit}>\r\n                {loading ? (\r\n                  <Spinner row small inverted content=\"Loading...\" />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </DButton>\r\n              <DButton alert onClick={() => setIsEdit(false)}>\r\n                Cancel\r\n              </DButton>\r\n            </Content>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\",\r\n  },\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconWrap } from \"../../components/styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../components/Toasted\";\r\n\r\nconst Service = (props) => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState({});\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId,\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, [serviceData]);\r\n\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [\r\n      { query: FETCH_SINGLE_SERVICE_QUERY, variables: { serviceId } },\r\n    ],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Image Uploaded\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: service.photo\r\n        ? `/images/service/${service.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        mcenter\r\n      >\r\n        {serviceLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n              bgcolor=\"#eee\"\r\n              rounded\r\n              pad=\"3px 10px\"\r\n              height=\"5em\"\r\n            >\r\n              <Breadcrumb size=\"big\">\r\n                <Breadcrumb.Section as={Link} to=\"/zeadmin/categories\">\r\n                  Service Category\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section\r\n                  as={Link}\r\n                  to={`/zeadmin/category/${\r\n                    service.category && service.category._id\r\n                  }`}\r\n                >\r\n                  {service.category && service.category.name}\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right arrow\" />\r\n                <Breadcrumb.Section active>{service.name}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  mcenter\r\n                  direct=\"column\"\r\n                >\r\n                  <DCard\r\n                    dw={wid < 524 ? \"50%\" : \"100%\"}\r\n                    dh=\"250px\"\r\n                    mcenter\r\n                    p=\"0px\"\r\n                    grayzoom\r\n                  >\r\n                    {loading ? (\r\n                      <Spinner content=\"Loading...\" medium />\r\n                    ) : (\r\n                      <DImage height=\"100%\" width=\"100%\">\r\n                        <img\r\n                          src={\r\n                            service.photo\r\n                              ? `/images/service/${service.photo}`\r\n                              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt={service.name}\r\n                          onClick={openLightbox}\r\n                        />\r\n                      </DImage>\r\n                    )}\r\n                    <IconWrap\r\n                      {...getRootProps()}\r\n                      circle\r\n                      bottomcenter\r\n                      small\r\n                      bgcolor={({ theme }) => theme.bluer}\r\n                      pad=\"2px\"\r\n                    >\r\n                      <Camera title=\"Upload\" />\r\n                      <input {...getInputProps()} />\r\n                    </IconWrap>\r\n                  </DCard>\r\n\r\n                  <ModalGateway>\r\n                    {viewerIsOpen ? (\r\n                      <Modal onClose={closeLightbox}>\r\n                        <Carousel views={images} />\r\n                      </Modal>\r\n                    ) : null}\r\n                  </ModalGateway>\r\n                </Content>\r\n                <Content width=\"100%\" height=\"100%\">\r\n                  <DGrid gap=\"10px\">\r\n                    <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\" overf>\r\n                      <ServiceDetails\r\n                        service={serviceData.service}\r\n                        serviceHistoryCallback={serviceHistoryCallback}\r\n                      />\r\n                    </DCard>\r\n                  </DGrid>\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  // const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n  //   variables: {\r\n  //     inqId: inqId\r\n  //   }\r\n  // });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage,\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(\"Message sent\");\r\n    },\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n  };\r\n\r\n  const handleReplyMsg = (e) => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingInq ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{inq.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {inq.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {inq.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={inq.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={inq.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { DSection } from \"../../components/styled/containers\";\r\nimport { Popup, Icon, Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\nimport moment from \"moment\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n  const [inqVal, setInqVal] = useState(\"\");\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const [readInq, { loading: loadReadInq }] = useMutation(READ_INQ, {\r\n    variables: { inqId: inqVal },\r\n    refetchQueries: [{ query: FETCH_INQUIRIES }],\r\n  });\r\n\r\n  const handleRow = (e) => {\r\n    readInq();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleMouseOver = (e) => {\r\n    setInqVal(e.currentTarget.dataset.inqid);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true,\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: (row) => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      },\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"createdAt\",\r\n      sortable: true,\r\n      cell: (row) => moment(parseInt(row.createdAt)).format(\"LLL\"),\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"read\",\r\n      sortable: true,\r\n      format: (row) => {\r\n        return (\r\n          <span style={{ fontWeight: 700 }}>\r\n            {row.read ? \"Read\" : \"Unread\"}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              flex\r\n              data-inqid={row._id}\r\n              onClick={handleRow}\r\n              onMouseOver={handleMouseOver}\r\n            >\r\n              <Eye size=\"18px\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      ),\r\n      right: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        pad=\"24px 0\"\r\n      >\r\n        {/* <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n              Inquiry List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content> */}\r\n\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map((inq) => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={10}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          progressPending={loading_inquiries}\r\n          progressComponent={\r\n            <Spinner content=\"Please wait while we fetch our data...\" />\r\n          }\r\n        />\r\n\r\n        <ReplyModal inqId={inqVal} open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <Breadcrumb size={\"huge\"}>\r\n    <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n      Inquiry List\r\n    </Breadcrumb.Section>\r\n  </Breadcrumb>\r\n);\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nconst READ_INQ = gql`\r\n  mutation readInquiry($inqId: ID!) {\r\n    readInquiry(_id: $inqId)\r\n  }\r\n`;\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  id,\r\n  photo,\r\n  fetchEmployee,\r\n  handleDetails,\r\n  handleSchedule,\r\n}) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      flex\r\n      direct=\"column\"\r\n      margin=\"0 auto\"\r\n      align=\"center\"\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n    >\r\n      <DCard\r\n        circle\r\n        dh=\"200px\"\r\n        dw=\"200px\"\r\n        flex\r\n        justifyCenter\r\n        alignCenter\r\n        fcol\r\n        grayzoom\r\n      >\r\n        <DImage circle height=\"100%\" align=\"100%\">\r\n          {loading ? (\r\n            <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n              <Spinner small />\r\n            </Content>\r\n          ) : (\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/employees/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          )}\r\n        </DImage>\r\n        <IconWrap\r\n          {...getRootProps()}\r\n          bg={({ theme }) => theme.bluer}\r\n          circle\r\n          shadow\r\n          bottomcenter\r\n          small\r\n          pad=\"3px\"\r\n          bgcolor={({ theme }) => theme.bluer}\r\n        >\r\n          <Camera title=\"Upload\" />\r\n          <input {...getInputProps()} />\r\n        </IconWrap>\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel views={images} />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DCard>\r\n      <Content\r\n        width=\"80%\"\r\n        margin=\"24px auto\"\r\n        height=\"auto\"\r\n        flex\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        <DButton width=\"150px\" onClick={handleDetails} fluid>\r\n          Account Details\r\n        </DButton>\r\n        <DButton width=\"150px\" onClick={handleSchedule} fluid>\r\n          Schedule\r\n        </DButton>\r\n      </Content>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = (e) => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Successfully Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole,\r\n    },\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  // const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    employee.dateOfBirth ? new Date(parseInt(employee.dateOfBirth)) : new Date()\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Updated Successfully\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values,\r\n    },\r\n  });\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\nimport moment from \"moment\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {moment(parseInt(employee.dateOfBirth)).format(\"LL\")}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport {\r\n  DLabel,\r\n  IconWrap,\r\n  DSelect,\r\n  DButton,\r\n  CheckLabel,\r\n} from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport { Save } from \"@styled-icons/boxicons-solid/Save\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst AccountSched = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n  const [isEditSched, setIsEditSched] = useState(false);\r\n  const [schedValues, setSchedValues] = useState({\r\n    workStart: employee.schedule.workStart,\r\n    workLength: employee.schedule.workLength / 60,\r\n    breakStart: employee.schedule.breakStart,\r\n    breakLength: employee.schedule.breakLength / 60,\r\n  });\r\n\r\n  const [updateSchedule, { loading: loadSchedule }] = useMutation(\r\n    UPDATE_EMPLOYEE_SCHEDULE,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        workStart: schedValues.workStart,\r\n        breakStart: schedValues.breakStart,\r\n        workLength: parseInt(parseFloat(schedValues.workLength) * 60),\r\n        breakLength: parseInt(parseFloat(schedValues.breakLength) * 60),\r\n        day: days,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        console.log(err);\r\n        //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      },\r\n      onCompleted() {\r\n        setIsEditSched(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Schedule Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleEditSched = () => {\r\n    setIsEditSched(!isEditSched);\r\n  };\r\n\r\n  const handleSchedChange = (e) => {\r\n    setSchedValues({ ...schedValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleUpdateSched = () => {\r\n    updateSchedule();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"10px\" med10=\"1fr\" med7=\"1fr\">\r\n        <DCard dw=\"100%\" dh=\"100%\" p=\"10px\" flex fcol justifyBetween>\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <DLabel\r\n              size={wid < 768 ? \"18px !important\" : \"22px\"}\r\n              weight={700}\r\n              pad=\"0\"\r\n            >\r\n              Schedule Details\r\n            </DLabel>\r\n            {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n              <>\r\n                <IconWrap\r\n                  invisible={isEditSched ? true : null}\r\n                  bgcolor={({ theme }) => theme.blue}\r\n                  medium\r\n                  title={\"Update Info\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  pad=\"3px\"\r\n                >\r\n                  <Edit onClick={handleEditSched} />\r\n                </IconWrap>\r\n\r\n                <IconWrap\r\n                  invisible={!isEditSched ? true : null}\r\n                  medium\r\n                  title={\"Cancel Update\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  color=\"red\"\r\n                >\r\n                  <Cancel onClick={handleEditSched} />\r\n                </IconWrap>\r\n              </>\r\n            )}\r\n          </Content>\r\n          <Content height=\"100%\" width=\"100%\">\r\n            <DGrid custom=\"1fr 2fr\">\r\n              <Content\r\n                flex\r\n                width=\"90%\"\r\n                height=\"300px\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n                margin=\"0 auto\"\r\n                style={\r\n                  wid < 768\r\n                    ? { borderBottom: \"1px solid #ccc\" }\r\n                    : { borderRight: \"1px solid #ccc\" }\r\n                }\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Days\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"flex-start\"\r\n                  direct=\"column\"\r\n                  pad=\"0 20px\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <CheckboxGroup\r\n                    name=\"days\"\r\n                    value={days}\r\n                    onChange={setDays}\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    {(Checkbox) => (\r\n                      <>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sun\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Mon\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Tue\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Wed\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Thu\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Fri\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sat\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                height=\"300px\"\r\n                width=\"100%\"\r\n                margin=\"0 auto\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Hours\r\n                </DLabel>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                    pad=\"5px 10px\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Work\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        name=\"workStart\"\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workStart}\r\n                      >\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Work Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workLength}\r\n                        name=\"workLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                        <option value=\"5\">5 hours</option>\r\n                        <option value=\"6\">6 hours</option>\r\n                        <option value=\"7\">7 hours</option>\r\n                        <option value=\"8\">8 hours</option>\r\n                        <option value=\"9\">9 hours</option>\r\n                        <option value=\"10\">10 hours</option>\r\n                        <option value=\"11\">11 hours</option>\r\n                        <option value=\"12\">12 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? employee.schedule.workLength\r\n                          : employee.schedule.workLength / 60}{\" \"}\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.workLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Break\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakStart}\r\n                        name=\"breakStart\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Break Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakLength}\r\n                        name=\"breakLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value={\"0.5\"}>30 mins</option>\r\n                        <option value={\"1\"}>1 hour</option>\r\n                        <option value=\"2\">2 hours</option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? employee.schedule.breakLength\r\n                          : employee.schedule.breakLength / 60}{\" \"}\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.breakLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n            invisible={isEditSched ? false : true}\r\n          >\r\n            <DButton confirm flex onClick={handleUpdateSched}>\r\n              {loadSchedule ? (\r\n                <Spinner tiny row inverted content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Save size=\"22px\" title=\"Update Content\" />\r\n                  Save\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_SCHEDULE = gql`\r\n  mutation updateSchedule(\r\n    $employeeId: ID!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateSchedule(\r\n      _id: $employeeId\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched employee={employee} />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = (props) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const empId = props.match.params._id;\r\n  const [empPersonal, setEmpPersonal] = useState({});\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"schedule\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: empId || employeeAuth.id || employeeAuth._id,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (empData) setEmpPersonal(empData.employee);\r\n  }, [empData]);\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        {empLoading ? (\r\n          <Spinner content=\"Please wait while we fetch the data...\" />\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <PhotoBooth\r\n              handleDetails={handleDetails}\r\n              handleSchedule={handleSchedule}\r\n              photo={empData.employee.photo}\r\n              id={empData.employee._id}\r\n              fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n            />\r\n            <AccountInfo\r\n              employee={empData.employee || empPersonal}\r\n              fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n              isAccount={isAccount}\r\n            />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { DotsVertical } from \"../../components/styled/utils\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Profile\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Last Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.lastName}</div>,\r\n    },\r\n    {\r\n      name: \"First Name\",\r\n      selector: \"firstName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.firstName}</div>,\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: \"email\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.email}</div>,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        mcenter\r\n        style={{ minHeight: \"50vh\" }}\r\n      >\r\n        {loading_users ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map((getUser) => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId,\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue,\r\n      },\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n      },\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments],\r\n          },\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\",\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        confirm\r\n        onClick={() => setNewConfirm(true)}\r\n        disabled={\r\n          serviceValue === \"\" || employeeVal === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content style={{ overflow: \"hidden\" }}>\r\n          <DGrid custom=\"1fr 2fr\">\r\n            <AppointmentInputs\r\n              categoryValue={categoryValue}\r\n              setCategoryValue={setCategoryValue}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = (props) => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s Info\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SigninForm = () => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport { Input, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"./styled/utils\";\r\nimport { Content } from \"./styled/containers\";\r\n\r\nconst FilterInput = ({ filterText, onFilter, onClear, isPrint }) => (\r\n  <Content width=\"350px\" height=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <Input\r\n        id=\"search\"\r\n        type=\"text\"\r\n        icon={\r\n          <Icon\r\n            name={filterText.trim() === \"\" ? \"search\" : \"close\"}\r\n            inverted\r\n            circular\r\n            link\r\n            onClick={onClear}\r\n          />\r\n        }\r\n        value={filterText}\r\n        onChange={onFilter}\r\n        placeholder=\"Filter by status/date/service/last name...\"\r\n        fluid\r\n      />\r\n    </Content>\r\n  </Content>\r\n);\r\n\r\nexport default FilterInput;\r\n","import React, { useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content, DImage, DGrid } from \"../../styled/containers\";\r\nimport { DButton, DLabel, DInput } from \"../../styled/utils\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport moment from \"moment\";\r\nimport { Print } from \"react-easy-print\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport parser from \"html-react-parser\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\n\r\nconst FilePrint = ({ filteredItems, isPrintOpen, setIsPrintOpen }) => {\r\n  const [content, setContent] = useState(\r\n    \"Lorem ipsum dolor sit amet consectetur adipisicing elit.Voluptatum quo maiores nam distinctio reiciendis iusto quod aspernatur error corporis, sit debitis fugit consequatur adipisci similique quaerat nesciunt temporibus enim earum.\"\r\n  );\r\n  const [author, setAuthor] = useState({\r\n    one: \"\",\r\n    two: \"\",\r\n    titleOne: \"\",\r\n    titleTwo: \"\",\r\n  });\r\n\r\n  const handleAuthor = (e) => {\r\n    setAuthor({ ...author, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [isEditPrint, setIsEditPrint] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={isPrintOpen}\r\n        onClose={() => setIsPrintOpen(false)}\r\n        className=\"modalBgPrint\"\r\n      >\r\n        <Modal.Header>\r\n          <DButton\r\n            onClick={() => window.print()}\r\n            disabled={isEditPrint ? true : false}\r\n          >\r\n            <Icon name=\"print\" fitted /> Print\r\n          </DButton>\r\n          <DButton onClick={() => setIsEditPrint(!isEditPrint)}>\r\n            {isEditPrint ? (\r\n              <>\r\n                <Icon name=\"save\" fitted />\r\n                Save\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Icon name=\"edit\" fitted />\r\n                Edit\r\n              </>\r\n            )}\r\n          </DButton>\r\n        </Modal.Header>\r\n\r\n        <Modal.Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            width=\"100%\"\r\n            align=\"100%\"\r\n          >\r\n            <div\r\n              style={{ position: \"absolute\", top: 0, right: 0, opacity: 0.5 }}\r\n            >\r\n              <DImage objFit=\"contain\" circle height=\"200px\" width=\"200px\">\r\n                <img src=\"/images/logo.png\" />\r\n              </DImage>\r\n            </div>\r\n\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"flex-start\"\r\n              direct=\"column\"\r\n              margin=\"12px auto\"\r\n            >\r\n              <Content\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"40px 0 0 0\"\r\n              >\r\n                <DTextArea active={isEditPrint ? true : null}>\r\n                  <CKEditor\r\n                    onInit={(editor) => {\r\n                      // Insert the toolbar before the editable area.\r\n                      editor.ui\r\n                        .getEditableElement()\r\n                        .parentElement.insertBefore(\r\n                          editor.ui.view.toolbar.element,\r\n                          editor.ui.getEditableElement()\r\n                        );\r\n                    }}\r\n                    onChange={(event, editor) => {\r\n                      const data = editor.getData();\r\n                      setContent(data);\r\n                    }}\r\n                    editor={DecoupledEditor}\r\n                    data={content}\r\n                  />\r\n                </DTextArea>\r\n\r\n                <DTextArea\r\n                  active={!isEditPrint ? true : null}\r\n                  color={!content ? \"#ccc\" : null}\r\n                  style={{ marginTop: \"40px\" }}\r\n                >\r\n                  {parser(content)}\r\n                </DTextArea>\r\n              </Content>\r\n            </Content>\r\n            <DataTable\r\n              columns={columnsPrint}\r\n              data={filteredItems}\r\n              customStyles={customStyles}\r\n              dense\r\n            />\r\n            <Content width=\"90%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid two gap=\"50px\">\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  direct=\"column\"\r\n                  pad=\"10px\"\r\n                >\r\n                  <Content\r\n                    width=\"90%\"\r\n                    height=\"100%\"\r\n                    margin=\"12px auto\"\r\n                    pad=\"20px\"\r\n                    style={{ borderBottom: \"1px solid #000\" }}\r\n                  ></Content>\r\n                  {isEditPrint ? (\r\n                    <>\r\n                      <DInput\r\n                        name=\"one\"\r\n                        placeholder=\"Author\"\r\n                        value={author.one}\r\n                        onChange={handleAuthor}\r\n                        textAlign=\"center\"\r\n                        margin=\"3px\"\r\n                      />\r\n                      <DInput\r\n                        name=\"titleOne\"\r\n                        placeholder=\"Title\"\r\n                        value={author.titleOne}\r\n                        onChange={handleAuthor}\r\n                        textAlign=\"center\"\r\n                        margin=\"3px\"\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <h5>\r\n                        {author.one.trim() !== \"\" ? author.one : \"Author\"}\r\n                      </h5>\r\n                      <span>\r\n                        {author.titleOne.trim() !== \"\"\r\n                          ? author.titleOne\r\n                          : \"Title\"}\r\n                      </span>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  direct=\"column\"\r\n                  pad=\"10px\"\r\n                >\r\n                  <Content\r\n                    width=\"90%\"\r\n                    height=\"100%\"\r\n                    margin=\"12px auto\"\r\n                    pad=\"20px\"\r\n                    style={{ borderBottom: \"1px solid #000\" }}\r\n                  ></Content>\r\n                  {isEditPrint ? (\r\n                    <>\r\n                      <DInput\r\n                        name=\"two\"\r\n                        placeholder=\"Author\"\r\n                        value={author.two}\r\n                        onChange={handleAuthor}\r\n                        textAlign=\"center\"\r\n                        margin=\"3px\"\r\n                      />\r\n                      <DInput\r\n                        name=\"titleTwo\"\r\n                        placeholder=\"Title\"\r\n                        value={author.titleTwo}\r\n                        onChange={handleAuthor}\r\n                        textAlign=\"center\"\r\n                        margin=\"3px\"\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <h5>\r\n                        {author.two.trim() !== \"\" ? author.two : \"Author\"}\r\n                      </h5>\r\n                      <span>\r\n                        {author.titleTwo.trim() !== \"\"\r\n                          ? author.titleTwo\r\n                          : \"Title\"}\r\n                      </span>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Print printOnly name=\"foo\">\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          width=\"100%\"\r\n          align=\"100%\"\r\n        >\r\n          <div style={{ position: \"absolute\", top: 0, right: 0, opacity: 0.5 }}>\r\n            <DImage objFit=\"contain\" circle height=\"200px\" width=\"200px\">\r\n              <img src=\"/images/logo.png\" />\r\n            </DImage>\r\n          </div>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"40px 0 0 0\"\r\n            >\r\n              <p style={{ marginTop: \"40px\" }}>{parser(content)}</p>\r\n            </Content>\r\n          </Content>\r\n\r\n          <DataTable\r\n            columns={columnsPrint}\r\n            data={filteredItems}\r\n            customStyles={customStyles}\r\n            dense\r\n          />\r\n          <Content width=\"90%\" height=\"100%\" margin=\"24px auto\">\r\n            <DGrid two gap=\"50px\">\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n                pad=\"10px\"\r\n              >\r\n                <Content\r\n                  width=\"90%\"\r\n                  height=\"100%\"\r\n                  margin=\"12px auto\"\r\n                  pad=\"20px\"\r\n                  style={{ borderBottom: \"1px solid #000\" }}\r\n                ></Content>\r\n                <h5>{author.one}</h5>\r\n                <span>{author.titleOne}</span>\r\n              </Content>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n                pad=\"10px\"\r\n              >\r\n                <Content\r\n                  width=\"90%\"\r\n                  height=\"100%\"\r\n                  margin=\"12px auto\"\r\n                  pad=\"20px\"\r\n                  style={{ borderBottom: \"1px solid #000\" }}\r\n                ></Content>\r\n                <h5>{author.two}</h5>\r\n                <span>{author.titleTwo}</span>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </Content>\r\n      </Print>\r\n    </>\r\n  );\r\n};\r\n\r\nconst columnsPrint = [\r\n  {\r\n    cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n    width: \"56px\",\r\n    style: {\r\n      borderBottom: \"1px solid #fff\",\r\n      marginBottom: \"-1px\",\r\n    },\r\n  },\r\n  {\r\n    name: \"ID\",\r\n    selector: \"_id\",\r\n    wrap: true,\r\n    omit: true,\r\n  },\r\n  {\r\n    name: \"Client\",\r\n    selector: \"user\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) =>\r\n      `${row.user && row.user.firstName} ${row.user && row.user.lastName}`,\r\n    omit: true,\r\n  },\r\n  {\r\n    name: \"Aesthetician\",\r\n    selector: \"employee\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) =>\r\n      `${row.employee && row.employee.firstName} ${\r\n        row.employee && row.employee.lastName\r\n      }`,\r\n  },\r\n  {\r\n    name: \"Service\",\r\n    selector: \"service\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) => `${row.service && row.service.name}`,\r\n  },\r\n  {\r\n    name: \"Date\",\r\n    selector: \"date\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    selector: \"status\",\r\n    wrap: true,\r\n    sortable: true,\r\n    cell: (row) => (\r\n      <span\r\n        style={\r\n          row.status === \"CANCELLED\"\r\n            ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n            : row.status === \"DONE\"\r\n            ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n            : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n        }\r\n      >\r\n        {row.status}\r\n      </span>\r\n    ),\r\n  },\r\n];\r\nconst customStyles = {\r\n  rows: {\r\n    style: {\r\n      fontSize: \"11px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n      marginBottom: \"5px\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 20px\"\r\n    color=\"bluer\"\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\n\r\nexport default FilePrint;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\nimport FilterInput from \"../../FilterInput\";\r\nimport FilePrint from \"../report/FilePrint\";\r\nimport { NoPrint } from \"react-easy-print\";\r\n\r\nconst HistoryAppointments = ({ historyAppointments, loading }) => {\r\n  const [isPrintOpen, setIsPrintOpen] = useState(false);\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  const filteredItems = historyAppointments.filter(\r\n    (item) =>\r\n      item &&\r\n      (item.status.includes(filterText.toUpperCase()) ||\r\n        (item.service && item.service.name.includes(filterText)) ||\r\n        (item.employee && item.employee.lastName.includes(filterText)) ||\r\n        (item.user && item.user.lastName.includes(filterText)) ||\r\n        moment(parseInt(item.date)).format(\"LL\").includes(filterText) ||\r\n        (\r\n          item.status.toUpperCase() +\r\n          \"/\" +\r\n          moment(parseInt(item.date)).format(\"LL\").toUpperCase() +\r\n          \"/\" +\r\n          item.status.toUpperCase()\r\n        ).includes(filterText.toUpperCase()))\r\n  );\r\n\r\n  const subHeaderComponentMemo = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <FilterInput\r\n          onFilter={(e) => setFilterText(e.target.value)}\r\n          onClear={handleClear}\r\n          filterText={filterText}\r\n          isPrint={true}\r\n        />\r\n        <DButton onClick={() => setIsPrintOpen(true)}>\r\n          <Icon name=\"print\" fitted />\r\n        </DButton>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <FilePrint\r\n        filteredItems={filteredItems}\r\n        isPrintOpen={isPrintOpen}\r\n        setIsPrintOpen={setIsPrintOpen}\r\n      />\r\n\r\n      <NoPrint force>\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n        >\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={filteredItems}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            paginationResetDefaultPage={resetPaginationToggle}\r\n            subHeader\r\n            subHeaderComponent={subHeaderComponentMemo}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loading}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </NoPrint>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n    width: \"56px\",\r\n    style: {\r\n      borderBottom: \"1px solid #fff\",\r\n      marginBottom: \"-1px\",\r\n    },\r\n  },\r\n  {\r\n    name: \"ID\",\r\n    selector: \"_id\",\r\n    wrap: true,\r\n    omit: true,\r\n  },\r\n  {\r\n    name: \"Client\",\r\n    selector: \"user\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) =>\r\n      `${row.user && row.user.firstName} ${row.user && row.user.lastName}`,\r\n    omit: true,\r\n  },\r\n  {\r\n    name: \"Aesthetician\",\r\n    selector: \"employee\",\r\n    wrap: true,\r\n    sortable: true,\r\n    cell: (row) =>\r\n      row.employee !== null ? (\r\n        <span>\r\n          {row.employee.firstName} {row.employee.lastName}\r\n        </span>\r\n      ) : (\r\n        \"NF\"\r\n      ),\r\n  },\r\n  {\r\n    name: \"Service\",\r\n    selector: \"service\",\r\n    wrap: true,\r\n    sortable: true,\r\n    cell: (row) => (row.service ? row.service.name : \"NF\"),\r\n  },\r\n  {\r\n    name: \"Date\",\r\n    selector: \"date\",\r\n    wrap: true,\r\n    sortable: true,\r\n    format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    selector: \"status\",\r\n    wrap: true,\r\n    sortable: true,\r\n    cell: (row) => (\r\n      <span\r\n        style={\r\n          row.status === \"CANCELLED\"\r\n            ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n            : row.status === \"DONE\"\r\n            ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n            : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n        }\r\n      >\r\n        {row.status}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    name: \"Actions\",\r\n\r\n    cell: (row) => (\r\n      <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n        <Icon name=\"eye\" fitted />\r\n      </DButton>\r\n    ),\r\n    right: true,\r\n  },\r\n];\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n      marginBottom: \"5px\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 20px\"\r\n    color=\"bluer\"\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\nimport { NoPrint } from \"react-easy-print\";\r\nimport Page404 from \"../Page404\";\r\n\r\nconst FileReport = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData, error } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  if (error) return Page404;\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <NoPrint force>\r\n          <Content\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            margin=\"24px auto\"\r\n          >\r\n            <Breadcrumb size={\"huge\"}>\r\n              <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n                File Report\r\n              </Breadcrumb.Section>\r\n            </Breadcrumb>\r\n          </Content>\r\n        </NoPrint>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <HistoryAppointments\r\n            loading={loading}\r\n            historyAppointments={historyAppointments}\r\n          />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useUploadFile = () => {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  const onSelectedFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  return { preview, selectedFile, setSelectedFile, onSelectedFile };\r\n};\r\n\r\nexport default useUploadFile;\r\n","import React, { useRef } from \"react\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../../../styled/containers\";\r\n\r\nconst ImageSection = ({\r\n  isDark,\r\n  isPosition,\r\n  isColor,\r\n  preview,\r\n  selectedFile,\r\n  onSelectedFile,\r\n  values,\r\n  bgImg\r\n}) => {\r\n  const fileInput = useRef();\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n        <DImage dashed height=\"100%\" width=\"100%\">\r\n          {selectedFile ? (\r\n            <img src={preview} alt=\"showcase\" />\r\n          ) : (\r\n            bgImg && <img src={`/images/cms/home/${bgImg}`} alt=\"showcase\" />\r\n          )}\r\n        </DImage>\r\n\r\n        <Overlay\r\n          flex\r\n          bgr={isDark && isPosition === \"right\" ? true : false}\r\n          bgl={isDark && isPosition === \"left\" ? true : false}\r\n          bgc={isDark && isPosition === \"center\" ? true : false}\r\n          justify={\r\n            isPosition === \"left\"\r\n              ? \"flex-start\"\r\n              : isPosition === \"right\"\r\n              ? \"flex-end\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          talign={\r\n            isPosition === \"left\"\r\n              ? \"left\"\r\n              : isPosition === \"right\"\r\n              ? \"right\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          align=\"center\"\r\n          className={isDark ? \"dark\" : \"\"}\r\n        >\r\n          <div className=\"overlay-content\">\r\n            <h3>{values.title ? values.title : \"TITLE\"}</h3>\r\n            <h4>{values.subtitle ? values.subtitle : \"SUBTITLE\"}</h4>\r\n            <p className=\"ps\">\r\n              {values.paragraph\r\n                ? values.paragraph\r\n                : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec posuere ante orci, at interdum nunc maximus eu. Pellentesque tempus est ligula, sit ame\"}\r\n            </p>\r\n          </div>\r\n        </Overlay>\r\n      </DSection>\r\n\r\n      <Content width=\"80%\" margin=\"0 auto\" flex justify=\"center\" align=\"center\">\r\n        <input\r\n          type=\"file\"\r\n          value={undefined}\r\n          onChange={onSelectedFile}\r\n          style={{ display: \"none\" }}\r\n          ref={fileInput}\r\n\r\n          \r\n        />\r\n        <Popup\r\n          content=\"Select image for background slide\"\r\n          trigger={\r\n            <Icon\r\n              name=\"camera\"\r\n              size=\"large\"\r\n              onClick={handleInputClick}\r\n              style={{ cursor: \"pointer\", color: \"#2193b0\", opacity: 0.75 }}\r\n              className=\"icon_camera-custom\"\r\n            />\r\n          }\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSection;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../../styled/containers\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport useUploadFile from \"../../../../../util/hooks/useUploadFile\";\r\nimport ImageSection from \"./ImageSection\";\r\nimport toaster from \"toasted-notes\";\r\nimport \"./modal.custom.css\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalSlide = ({ open, setOpen, showcase }) => {\r\n  const [isDark, setIsDark] = useState(showcase ? showcase.dark : false);\r\n  const [isPosition, setIsPosition] = useState(\r\n    showcase ? showcase.position : \"left\"\r\n  );\r\n\r\n  const [isColor, setIsColor] = useState(\r\n    showcase ? showcase.bgColor : \"#FFFFFF\"\r\n  );\r\n  const [values, setValues] = useState({\r\n    title: showcase ? showcase.title : \"\",\r\n    subtitle: showcase ? showcase.subtitle : \"\",\r\n    paragraph: showcase ? showcase.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  // ADD OR UPDATE\r\n  const mutation = showcase ? UPDATE_SLIDE : ADD_NEW_SLIDE;\r\n\r\n  const [addOrUpdateSlide, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      showcaseId: showcase && showcase._id,\r\n      ...values,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      position: isPosition,\r\n      dark: isDark,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } },\r\n    ],\r\n    update() {\r\n      if (!showcase) {\r\n        values.title = \"\";\r\n        values.subtitle = \"\";\r\n        values.paragraph = \"\";\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n      setIsDark(false);\r\n      setIsPosition(\"left\");\r\n      setSelectedFile();\r\n      setIsColor(\"#E9E4F0\");\r\n      if (showcase) {\r\n        toaster.notify(\"Update Slide Successfully\");\r\n      } else {\r\n        toaster.notify(\"Add New Slide Successfully\");\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handlePosition = (event) => {\r\n    setIsPosition(event.target.value);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    addOrUpdateSlide();\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Add New Slide </Modal.Header>\r\n      <DGrid custom=\"2fr 1fr\" gap=\"10px\">\r\n        <Modal.Content style={{ padding: \"10px\" }}>\r\n          <ImageSection\r\n            isPosition={isPosition}\r\n            isDark={isDark}\r\n            isColor={isColor}\r\n            preview={preview}\r\n            selectedFile={selectedFile}\r\n            onSelectedFile={onSelectedFile}\r\n            values={values}\r\n            bgImg={showcase && showcase.bgImg}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Content scrolling>\r\n          <Content pad=\"10px\" width=\"100%\" height=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={values.subtitle || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  maxLength=\"150\"\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={values.paragraph || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Text Positioning</label>\r\n                <Content\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"left\"\r\n                      checked={isPosition === \"left\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Left</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"center\"\r\n                      checked={isPosition === \"center\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Center</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"right\"\r\n                      checked={isPosition === \"right\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Right</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay{\" \"}\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Dark</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n        </Modal.Content>\r\n      </DGrid>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" confirm onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n        <DButton alert>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_NEW_SLIDE = gql`\r\n  mutation addNewShowCase(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    addNewShowCase(\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_SLIDE = gql`\r\n  mutation updateShowcase(\r\n    $showcaseId: ID!\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    updateShowcase(\r\n      showcaseId: $showcaseId\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst NewSlide = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"add\" />\r\n        New Slide\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst EditSlide = ({ showcase }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"edit\" style={{ color: \"white\" }} fitted />\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} showcase={showcase} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSlide;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst RemoveSlide = ({ showcase }) => {\r\n  const [isOpenRemove, setIsOpenRemove] = useState(false);\r\n\r\n  const [removeSlide, { loading }] = useMutation(REMOVE_SLIDE, {\r\n    variables: {\r\n      showcaseId: showcase._id\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } }\r\n    ],\r\n    onCompleted() {\r\n      setIsOpenRemove(false);\r\n      toaster.notify(\"Slide Remove\", { position: \"bottom-right\" });\r\n    }\r\n  });\r\n\r\n  const handleRemoveSlide = e => {\r\n    e.preventDefault();\r\n    removeSlide();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton alert onClick={() => setIsOpenRemove(true)}>\r\n        <Icon name=\"trash\" fitted />\r\n      </DButton>\r\n      <Modal\r\n        basic\r\n        open={isOpenRemove}\r\n        closeIcon\r\n        onClose={() => setIsOpenRemove(false)}\r\n      >\r\n        <Modal.Header>Slide ID: {showcase._id}</Modal.Header>\r\n        <Modal.Content>\r\n          <h1>Are you sure you want to remove this slide?</h1>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton basic confirm onClick={handleRemoveSlide}>\r\n            {loading ? <Spinner inverted small /> : \"Yes\"}\r\n          </DButton>\r\n          <DButton basic alert onClick={() => setIsOpenRemove(false)}>\r\n            No\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst REMOVE_SLIDE = gql`\r\n  mutation removeShowcase($showcaseId: ID!) {\r\n    removeShowcase(showcaseId: $showcaseId)\r\n  }\r\n`;\r\n\r\nexport default RemoveSlide;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport {\r\n  DShowCase,\r\n  Overlay,\r\n  DSection,\r\n  DImage\r\n} from \"../../../../styled/containers\";\r\nimport NewSlide from \"./NewSlide\";\r\nimport EditSlide from \"./EditSlide\";\r\nimport RemoveSlide from \"./RemoveSlide\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Showcase = () => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  const { data: showcaseData, loading: dataLoading } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" mcenter>\r\n      <NewSlide />\r\n      <div style={{ position: \"relative\" }}>\r\n        {dataLoading ? (\r\n          <DShowCase height=\"80vh\">\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src=\"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                alt=\"showcase\"\r\n              />\r\n            </DImage>\r\n          </DShowCase>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {showcase.map(sc => (\r\n              <DShowCase\r\n                height=\"80vh\"\r\n                key={sc._id}\r\n                background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n                bgcolor={sc.bgColor}\r\n              >\r\n                <Overlay\r\n                  flex\r\n                  bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                  bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                  bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                  justify={\r\n                    sc.position === \"left\"\r\n                      ? \"flex-start\"\r\n                      : sc.position === \"right\"\r\n                      ? \"flex-end\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  talign={\r\n                    sc.position === \"left\"\r\n                      ? \"left\"\r\n                      : sc.position === \"right\"\r\n                      ? \"right\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  align=\"center\"\r\n                  className={sc.dark ? \"dark\" : \"\"}\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h1>{sc.title}</h1>\r\n                    <h2>{sc.subtitle}</h2>\r\n                    <p>{sc.paragraph}</p>\r\n                  </div>\r\n                </Overlay>\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 20,\r\n                    zIndex: 2,\r\n                    width: \"auto\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <EditSlide showcase={sc} />\r\n                  <RemoveSlide showcase={sc} />\r\n                </div>\r\n              </DShowCase>\r\n            ))}\r\n          </Slider>\r\n        )}\r\n      </div>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport Spinner from \"../../../../Spinner\";\r\n\r\nconst EditModal = ({ aboutBool }) => {\r\n  const [updateAboutSection, { loading }] = useMutation(UPDATE_ABOUT_SECTION, {\r\n    variables: { sectionName: \"ABOUT\" },\r\n  });\r\n\r\n  const handleReverse = () => {\r\n    updateAboutSection();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner small />\r\n      ) : (\r\n        <Popup\r\n          content=\"Toggle Position\"\r\n          trigger={\r\n            <div className=\"pretty p-switch p-fill p-toggle\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"alt\"\r\n                value={aboutBool}\r\n                onChange={handleReverse}\r\n                checked={aboutBool === true ? true : false}\r\n              />\r\n              <div className=\"state p-primary p-on\">\r\n                <label style={{ fontWeight: 500 }}>Reverse</label>\r\n              </div>\r\n              <div className=\"state p-warning p-off\">\r\n                <label style={{ fontWeight: 500 }}>Default</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n          inverted\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_SECTION = gql`\r\n  mutation updateAboutSection($sectionName: String!) {\r\n    updateAboutSection(sectionName: $sectionName) {\r\n      _id\r\n      sectionName\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_HOME_SECTION,\r\n  FETCH_ABOUT_CMS,\r\n} from \"../../../../../util/graphql/cms\";\r\nimport { Section2Styled, Content } from \"../../../../styled/containers\";\r\nimport EditModal from \"./EditModal\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst SectionAbout = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAboutSection, loading: loadingAboutSection } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: { sectionName: \"ABOUT\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataAboutSection) {\r\n      setIsAbout(dataAboutSection.homeCMS);\r\n    }\r\n  }, [dataAboutSection]);\r\n\r\n  const { data: dataAbout, loading: loadingAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  return (\r\n    <Section2Styled visible width=\"90%\" alt={isAbout.alt ? true : false}>\r\n      <div className=\"switch\">\r\n        {loadingAboutSection ? (\r\n          <Spinner tiny />\r\n        ) : (\r\n          <EditModal aboutBool={dataAboutSection.homeCMS.alt} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"sec2-container\">\r\n        <div className=\"sec2-inner\">\r\n          {loadingAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\">\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default SectionAbout;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"./styled/utils\";\r\n\r\nconst ReadMore = (props) => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../../../util/graphql/service\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  Overlay,\r\n  DImage,\r\n  DCard,\r\n} from \"../../../../styled/containers\";\r\nimport useWindowSize from \"../../../../../util/hooks/useWindowSize\";\r\nimport ReadMore from \"../../../../ReadMore\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport Page404 from \"../../../../../pages/Page404\";\r\n\r\nconst CategoryCards = ({ gridCount }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY, {\r\n    variables: { active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) return Page404;\r\n\r\n  return (\r\n    <Content height=\"100%\" width=\"100%\">\r\n      {loading ? (\r\n        <DGrid four gap=\"20px\">\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n        </DGrid>\r\n      ) : (\r\n        <DGrid\r\n          two={gridCount === 2 ? true : false}\r\n          three={gridCount === 3 ? true : false}\r\n          four={gridCount === 4 ? true : false}\r\n          gap=\"20px\"\r\n        >\r\n          {isCategories.map((category) => (\r\n            <DCard\r\n              key={category._id}\r\n              dw={wid < 524 ? \"70%\" : \"90%\"}\r\n              dh=\"250px\"\r\n              mcenter\r\n              p=\"0px\"\r\n              grayzoom\r\n              overlaying\r\n            >\r\n              <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                <img\r\n                  src={\r\n                    category.photo\r\n                      ? `/images/service/${category.photo}`\r\n                      : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  alt={category.name}\r\n                />\r\n              </DImage>\r\n\r\n              <Overlay\r\n                bgc\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                initbox\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h3 className=\"title\">{category.name}</h3>\r\n\r\n                    {category.description.length > 100\r\n                      ? parser(category.description.substr(0, 100) + \"...\")\r\n                      : parser(category.description.substr(0, 100))}\r\n\r\n                    <ReadMore center size=\"14px\">\r\n                      Learn More\r\n                    </ReadMore>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DCard>\r\n          ))}\r\n        </DGrid>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { Content } from \"../../../../styled/containers\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\"\r\n];\r\n\r\nconst UpdateSectCategory = ({\r\n  setOpenCatSec,\r\n  openCatSec,\r\n  categorySectionInfo\r\n}) => {\r\n  const [isColor, setIsColor] = useState(\r\n    categorySectionInfo && categorySectionInfo.bgColor\r\n  );\r\n\r\n  const [isDark, setIsDark] = useState(\r\n    categorySectionInfo && categorySectionInfo.dark\r\n  );\r\n\r\n  const [gridCount, setGridCount] = useState(\r\n    categorySectionInfo && categorySectionInfo.grid\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: categorySectionInfo && categorySectionInfo.title,\r\n    subtitle: categorySectionInfo && categorySectionInfo.subtitle,\r\n    paragraph: categorySectionInfo && categorySectionInfo.paragraph\r\n  });\r\n\r\n  const [updateSectionCategory, { loading }] = useMutation(\r\n    UPDATE_CATEGORY_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n        ...values,\r\n        grid: gridCount,\r\n        dark: isDark,\r\n        bgColor: isColor\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_HOME_SECTION, variables: { sectionName: \"CATEGORY\" } }\r\n      ],\r\n      onCompleted() {\r\n        setOpenCatSec(false);\r\n        toaster.notify(\"Update Category Section\");\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = color => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleGrid = event => {\r\n    setGridCount(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    updateSectionCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={openCatSec}\r\n      onClose={() => setOpenCatSec(false)}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>Update Section Category</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Form>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              name=\"title\"\r\n              value={values.title || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Subtitle</label>\r\n            <input\r\n              name=\"subtitle\"\r\n              value={values.subtitle || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Paragraph</label>\r\n            <TextArea\r\n              maxLength=\"150\"\r\n              style={{ minHeight: 100 }}\r\n              name=\"paragraph\"\r\n              value={values.paragraph || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Background-color{\" \"}\r\n              <Popup\r\n                content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n\r\n            <BlockPicker\r\n              width=\"200px\"\r\n              triangle=\"hide\"\r\n              color={isColor}\r\n              colors={colors}\r\n              onChange={handleChangeComplete}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Text Contrast{\" \"}\r\n              <Popup\r\n                content=\"Change the text to white if background is dark and dark text if background is light\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n            <Content\r\n              flex\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-switch p-fill\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"dark\"\r\n                  value={isDark}\r\n                  checked={isDark === true ? true : false}\r\n                  onChange={handleDark}\r\n                />\r\n                <div className=\"state p-info\">\r\n                  <label>{isDark === true ? \"Light\" : \"Dark\"}</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Grid Count Display</label>\r\n            <Content\r\n              flex\r\n              justify=\"space-around\"\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"2\"\r\n                  checked={gridCount === 2 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Two</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"3\"\r\n                  checked={gridCount === 3 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Three</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"4\"\r\n                  checked={gridCount === 4 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Four</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_CATEGORY_SECTION = gql`\r\n  mutation updateHomeSection(\r\n    $sectionName: String\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $grid: Int\r\n  ) {\r\n    updateHomeSection(\r\n      sectionName: $sectionName\r\n      inputHomeContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        grid: $grid\r\n      }\r\n    ) {\r\n      _id\r\n      sectionName\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgColor\r\n      dark\r\n      grid\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UpdateSectCategory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { DSection, Content } from \"../../../../styled/containers\";\r\nimport { DButtonFree } from \"../../../../styled/utils\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport FancyText from \"../../../../FancyText\";\r\nimport CategoryCards from \"./CategoryCards\";\r\nimport UpdateSectCategory from \"./UpdateSectCategory\";\r\n\r\nconst SectionCategory = () => {\r\n  const [sectCategory, setSectCategory] = useState({});\r\n  const [openCatSec, setOpenCatSec] = useState(false);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setSectCategory(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        margin=\"48px auto\"\r\n        pad=\"10px\"\r\n        bgcolor={sectCategory.bgColor}\r\n      >\r\n        <Popup\r\n          content=\"Update Category Section\"\r\n          trigger={\r\n            <DButtonFree top={0} right={0} onClick={() => setOpenCatSec(true)}>\r\n              <Icon name=\"edit\" fitted />\r\n            </DButtonFree>\r\n          }\r\n          position=\"top right\"\r\n        />\r\n\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Content\r\n            width=\"auto\"\r\n            height=\"auto\"\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            className={sectCategory.dark ? \"dark\" : \"\"}\r\n          >\r\n            <FancyText alt={sectCategory.dark ? true : false}>\r\n              {sectCategory.title}\r\n            </FancyText>\r\n            <h3>\r\n              {sectCategory.subtitle !== \"\"\r\n                ? sectCategory.subtitle\r\n                : \"SUBTITLE\"}\r\n            </h3>\r\n            <p>\r\n              {sectCategory.paragraph !== \"\"\r\n                ? sectCategory.paragraph\r\n                : \"PARAGRAPH\"}\r\n            </p>\r\n          </Content>\r\n          {!loadSectionCategory && (\r\n            <UpdateSectCategory\r\n              openCatSec={openCatSec}\r\n              setOpenCatSec={setOpenCatSec}\r\n              categorySectionInfo={sectionCategory.homeCMS}\r\n            />\r\n          )}\r\n\r\n          <CategoryCards gridCount={sectCategory.grid} />\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionCategory;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/showcase/Showcase\";\r\nimport SectionAbout from \"../../../components/admin/cms/home/sectionabout/SectionAbout\";\r\nimport SectionCategory from \"../../../components/admin/cms/home/sectioncategory/SectionCategory\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\nimport { IconWrap } from \"../../../components/styled/utils\";\r\nimport { ChevronRight } from \"@styled-icons/boxicons-solid/ChevronRight\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Content\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        margin=\"20px auto\"\r\n        align=\"center\"\r\n      >\r\n        <div>\r\n          <h3>Content Management</h3>\r\n        </div>\r\n        <div style={{ margin: \"0 5px\" }}>\r\n          <IconWrap size=\"22px\" color=\"dark\">\r\n            <ChevronRight />\r\n          </IconWrap>\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to=\"/zeadmin/cms_home\"\r\n            style={{\r\n              fontSize: \"18px\",\r\n              fontWeight: 700,\r\n              borderBottom: \"2px solid\",\r\n              paddingBottom: \"5px\",\r\n            }}\r\n          >\r\n            Home\r\n          </Link>\r\n        </div>\r\n      </Content>\r\n      <Showcase />\r\n      <SectionAbout />\r\n      <SectionCategory />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalHeading = ({ isAbout }) => {\r\n  const fileInput = useRef();\r\n  const [openHead, setOpenHead] = useState(false);\r\n  const [isDark, setIsDark] = useState(isAbout ? isAbout.dark : false);\r\n  const [isOverlay, setIsOverlay] = useState(isAbout ? isAbout.overlay : false);\r\n  const [headers, setHeaders] = useState({\r\n    title: isAbout ? isAbout.title : \"\",\r\n    subtitle: isAbout ? isAbout.subtitle : \"\",\r\n    paragraph: isAbout ? isAbout.paragraph : \"\",\r\n  });\r\n  const [isColor, setIsColor] = useState(isAbout ? isAbout.bgColor : \"#FFFFFF\");\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  const [updateAboutUs, { loading }] = useMutation(UPDATE_ABOUT_HEADER, {\r\n    variables: {\r\n      ...headers,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      dark: isDark,\r\n      overlay: isOverlay,\r\n    },\r\n\r\n    onCompleted() {\r\n      setOpenHead(false);\r\n      toaster.notify(\"Update Successful\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeHeaders = (e) => {\r\n    setHeaders({ ...headers, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleOverlay = () => {\r\n    setIsOverlay(!isOverlay);\r\n  };\r\n\r\n  const handleSaveHeader = () => {\r\n    updateAboutUs();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenHead(true)}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openHead} onClose={() => setOpenHead(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isAbout.bgImg && (\r\n                    <img\r\n                      src={`/images/cms/about/${isAbout.bgImg}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n\r\n              <Overlay bgc={isOverlay ? true : false}>\r\n                <Content\r\n                  flex\r\n                  justify=\"center\"\r\n                  direct=\"column\"\r\n                  align=\"center\"\r\n                  width=\"50%\"\r\n                  margin=\"0 auto\"\r\n                  height=\"100%\"\r\n                  style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n                  className={isDark ? \"dark\" : \"\"}\r\n                >\r\n                  <h1 style={{ fontSize: \"22px\" }}>\r\n                    {headers.title ? headers.title : \"TITLE\"}\r\n                  </h1>\r\n                  <h4> {headers.subtitle ? headers.subtitle : \"SUBTITLE\"}</h4>\r\n                </Content>\r\n              </Overlay>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={headers.title || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={headers.subtitle || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Text Contrast\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Light</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"overlay\"\r\n                      value={isOverlay}\r\n                      checked={isOverlay === true ? true : false}\r\n                      onChange={handleOverlay}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Off</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveHeader}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_HEADER = gql`\r\n  mutation updateAboutUs(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $overlay: Boolean\r\n  ) {\r\n    updateAboutUs(\r\n      inputAbout: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        overlay: $overlay\r\n      }\r\n    ) {\r\n      _id\r\n      title\r\n      subtitle\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalHeading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, Overlay } from \"../../../styled/containers\";\r\nimport MouseScroll from \"../../../MouseScroll\";\r\nimport ModalHeading from \"./ModalHeading\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Heading = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n\r\n  const {\r\n    data: dataAboutContent,\r\n    loading: loadAboutContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataAboutContent) {\r\n      setIsAbout(dataAboutContent.aboutUsCMS);\r\n    }\r\n  }, [dataAboutContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadAboutContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          background={isAbout.bgImg && `/images/cms/about/${isAbout.bgImg}`}\r\n          bgcolor={isAbout.bgColors}\r\n          width=\"90%\"\r\n          mcenter\r\n          height=\"55vh\"\r\n          fixed\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className={isAbout.dark ? \"dark\" : \"\"}\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>{isAbout.title}</h1>\r\n            {isAbout.subtitle !== \"\" && <h4>{isAbout.subtitle}</h4>}\r\n            <MouseScroll />\r\n          </Content>\r\n          <Overlay bgc={isAbout.overlay ? true : false} />\r\n          <ModalHeading isAbout={dataAboutContent.aboutUsCMS} />\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, TextArea } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalStory = ({ isStory }) => {\r\n  const fileInput = useRef();\r\n  const [openStory, setOpenStory] = useState(false);\r\n  const [reverse, setReverse] = useState(isStory ? isStory.alt : false);\r\n\r\n  const [stories, setStories] = useState({\r\n    title: isStory ? isStory.title : \"\",\r\n    subtitle: isStory ? isStory.subtitle : \"\",\r\n    paragraph: isStory ? isStory.paragraph : \"\",\r\n  });\r\n\r\n  const { preview, selectedFile, onSelectedFile } = useUploadFile();\r\n\r\n  const [updateStory, { loading }] = useMutation(UPDATE_ABOUT_STORY, {\r\n    variables: {\r\n      ...stories,\r\n      photo: selectedFile,\r\n      alt: reverse,\r\n    },\r\n    onCompleted() {\r\n      setOpenStory(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeStory = (e) => {\r\n    setStories({ ...stories, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverse = () => {\r\n    setReverse(!reverse);\r\n  };\r\n\r\n  const handleSaveStory = () => {\r\n    updateStory();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenStory(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openStory} onClose={() => setOpenStory(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isStory.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isStory.photo}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={stories.title || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={stories.subtitle || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={stories.paragraph || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={reverse}\r\n                      checked={reverse === true ? true : false}\r\n                      onChange={handleReverse}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveStory}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_STORY = gql`\r\n  mutation updateStory(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateStory(\r\n      inputStory: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      _id\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalStory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\nimport ModalStory from \"./ModalStory\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isStory, setIsStory] = useState({});\r\n\r\n  const {\r\n    data: dataStoryContent,\r\n    loading: loadStoryContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataStoryContent) {\r\n      setIsStory(dataStoryContent.aboutUsCMS.story);\r\n    }\r\n  }, [dataStoryContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadStoryContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          mcenter\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768 ? \"column\" : isStory.alt ? \"row-reverse\" : \"row\"\r\n          }\r\n        >\r\n          <ModalStory isStory={dataStoryContent.aboutUsCMS.story} />\r\n\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isStory\r\n                    ? `/images/cms/about/${isStory.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"20px\"\r\n            style={{ maxHeight: \"90vh\" }}\r\n          >\r\n            <h3>{isStory.title}</h3>\r\n            {isStory.subtitle !== \"\" && <h4>{isStory.subtitle}</h4>}\r\n            <p\r\n              style={{\r\n                fontSize: \"15px\",\r\n                letterSpacing: \"2px\",\r\n                lineHeight: 1.8,\r\n                textAlign: \"justify\",\r\n                overflowWrap: \"break-word\",\r\n                overflow: \"auto\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              {isStory.paragraph}\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, Divider, TextArea } from \"semantic-ui-react\";\r\nimport { DImage, Content, DSection, DGrid } from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalMissionVision = ({ isMissionVision }) => {\r\n  const fileInputMV = useRef();\r\n  const [openMission, setOpenMission] = useState(false);\r\n  const [reverseMV, setReverseMV] = useState(\r\n    isMissionVision ? isMissionVision.alt : false\r\n  );\r\n\r\n  const [valuesMV, setValuesMV] = useState({\r\n    mtitle: isMissionVision ? isMissionVision.mission.title : \"\",\r\n    msubtitle: isMissionVision ? isMissionVision.mission.subtitle : \"\",\r\n    mparagraph: isMissionVision ? isMissionVision.mission.paragraph : \"\",\r\n    vtitle: isMissionVision ? isMissionVision.vision.title : \"\",\r\n    vsubtitle: isMissionVision ? isMissionVision.vision.subtitle : \"\",\r\n    vparagraph: isMissionVision ? isMissionVision.vision.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview: previewMV,\r\n    selectedFile: selectedFileMV,\r\n    onSelectedFile: onSelectedFileMV,\r\n  } = useUploadFile();\r\n\r\n  const [updateMission, { loading }] = useMutation(UPDATE_ABOUT_MISSIONVISION, {\r\n    variables: {\r\n      ...valuesMV,\r\n      photo: selectedFileMV,\r\n      alt: reverseMV,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_ABOUT_CMS, variables: { contentName: \"ABOUTUS\" } },\r\n    ],\r\n    onCompleted() {\r\n      setOpenMission(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClickMV = () => {\r\n    fileInputMV.current.click();\r\n  };\r\n\r\n  const handleChangeValues = (e) => {\r\n    setValuesMV({ ...valuesMV, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverseMV = () => {\r\n    setReverseMV(!reverseMV);\r\n  };\r\n\r\n  const handleSaveMV = () => {\r\n    updateMission();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        onClick={() => setOpenMission(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openMission} onClose={() => setOpenMission(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid two gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFileMV ? (\r\n                  <img src={previewMV} alt=\"showcase\" />\r\n                ) : (\r\n                  isMissionVision.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isMissionVision.photo}`}\r\n                      alt=\"about\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFileMV}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInputMV}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClickMV}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Divider horizontal>Mission</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"mtitle\"\r\n                  value={valuesMV.mtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"msubtitle\"\r\n                  value={valuesMV.msubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"mparagraph\"\r\n                  value={valuesMV.mparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Divider horizontal>Vision</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"vtitle\"\r\n                  value={valuesMV.vtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"vsubtitle\"\r\n                  value={valuesMV.vsubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"vparagraph\"\r\n                  value={valuesMV.vparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"reverse\"\r\n                      value={reverseMV}\r\n                      checked={reverseMV === true ? true : false}\r\n                      onChange={handleReverseMV}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveMV}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_MISSIONVISION = gql`\r\n  mutation updateMission(\r\n    $mtitle: String\r\n    $msubtitle: String\r\n    $mparagraph: String\r\n    $vtitle: String\r\n    $vsubtitle: String\r\n    $vparagraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateMission(\r\n      inputMissionVision: {\r\n        mtitle: $mtitle\r\n        msubtitle: $msubtitle\r\n        mparagraph: $mparagraph\r\n        vtitle: $vtitle\r\n        vsubtitle: $vsubtitle\r\n        vparagraph: $vparagraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalMissionVision;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport ModalMissionVision from \"./ModalMissionVision\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isMission, setIsMission] = useState({});\r\n\r\n  const { data: dataMissionVision, loading: loadMissionVision } = useQuery(\r\n    FETCH_ABOUT_CMS,\r\n    {\r\n      variables: {\r\n        contentName: \"ABOUTUS\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataMissionVision) {\r\n      setIsMission(dataMissionVision.aboutUsCMS.missionvision);\r\n    }\r\n  }, [dataMissionVision]);\r\n\r\n  return (\r\n    <>\r\n      {loadMissionVision ? (\r\n        <DSection\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          mcenter\r\n        >\r\n          <Skeleton width=\"50%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768\r\n              ? \"column\"\r\n              : isMission.alt === true\r\n              ? \"row-reverse\"\r\n              : \"row\"\r\n          }\r\n          margin=\"24px auto\"\r\n        >\r\n          <ModalMissionVision\r\n            isMissionVision={dataMissionVision.aboutUsCMS.missionvision}\r\n          />\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"24px\"\r\n          >\r\n            <h3>{isMission.mission && isMission.mission.title}</h3>\r\n            {isMission.mission && isMission.mission.subtitle !== \"\" && (\r\n              <h4>{isMission.mission.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.mission && isMission.mission.paragraph}</p>\r\n            <h3>{isMission.vision && isMission.vision.title}</h3>\r\n            {isMission.vision && isMission.vision.subtitle !== \"\" && (\r\n              <h4>{isMission.vision.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.vision && isMission.vision.paragraph}</p>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isMission.photo\r\n                    ? `/images/cms/about/${isMission.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n      s\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Heading from \"../../../components/admin/cms/about/Heading\";\r\nimport Story from \"../../../components/admin/cms/about/Story\";\r\nimport Mission from \"../../../components/admin/cms/about/Mission\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Layout>\r\n      <Content\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        margin=\"20px auto\"\r\n        align=\"center\"\r\n      >\r\n        <div>\r\n          <h3>Content Management</h3>\r\n        </div>\r\n        <div style={{ margin: \"0 1em\" }}>\r\n          <Icon name=\"angle right\" size=\"large\" fitted />\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to=\"/zeadmin/cms_about\"\r\n            style={{\r\n              fontSize: \"18px\",\r\n              fontWeight: 700,\r\n              borderBottom: \"2px solid\",\r\n              paddingBottom: \"5px\",\r\n            }}\r\n          >\r\n            About Us\r\n          </Link>\r\n        </div>\r\n      </Content>\r\n      <Heading />\r\n      <Mission />\r\n      <Story />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst ToggleView = ({ swid, tggl }) => {\r\n  const [toggleValue, setToggleValue] = useState(\"\");\r\n\r\n  const [toggleTestimonial, { loading: loadToggle }] = useMutation(\r\n    TOGGLE_REVIEW,\r\n    {\r\n      variables: {\r\n        id: toggleValue,\r\n      },\r\n      refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n    }\r\n  );\r\n\r\n  const hoverSwitch = (e) => {\r\n    setToggleValue(e.currentTarget.dataset.sid);\r\n  };\r\n\r\n  const handleSwitch = (e) => {\r\n    toggleTestimonial();\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      content=\"Switch on to display testimonial in Home Page\"\r\n      style={style.popContent}\r\n      inverted\r\n      trigger={\r\n        <div\r\n          className=\"pretty p-switch p-fill\"\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          {loadToggle ? (\r\n            <Spinner tiny />\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"checkbox\"\r\n                data-sid={swid}\r\n                checked={tggl === true ? true : false}\r\n                onMouseOver={hoverSwitch}\r\n                onChange={handleSwitch}\r\n              />\r\n              <div className=\"state p-success\">\r\n                <label></label>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID!) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n      view\r\n    }\r\n  }\r\n`;\r\n\r\nconst style = {\r\n  popContent: {\r\n    borderRadius: 0,\r\n    opacity: 0.7,\r\n    padding: \"2em\",\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default ToggleView;\r\n","import React, { useState } from \"react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\n\r\nconst ModalView = ({ ridd, open, setOpen }) => {\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Content>{ridd}</Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalView;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\n\r\nimport { Modal, Icon, Popup } from \"semantic-ui-react\";\r\nimport { Archive } from \"@styled-icons/boxicons-solid/Archive\";\r\nimport { DeleteForever } from \"@styled-icons/material/DeleteForever\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\n\r\nconst DeleteView = ({ ridd, rvw, isDltModal, setIsDltModal }) => {\r\n  const { width: wdth } = useWindowSize();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [archiveTestimonial, { loading: loadArchive }] = useMutation(\r\n    ARCHIVED_REVIEW,\r\n    {\r\n      variables: { id: ridd },\r\n      refetchQueries: [\r\n        { query: FETCH_TESTIMONIALS, variables: { active: true } },\r\n      ],\r\n      onCompleted() {\r\n        toaster.notify(\"Testimonial was sent to archive files\");\r\n      },\r\n      onError(err) {\r\n        if (err.graphQLErrors[0].extensions.exception.errors.unauth) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted alert onClick={onClose}>\r\n                {err.graphQLErrors[0].extensions.exception.errors.unauth}\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleArchive = () => {\r\n    archiveTestimonial();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"small\"\r\n        basic\r\n        closeIcon\r\n        onClose={() => setIsDltModal(false)}\r\n        open={isDltModal}\r\n        style={{ zIndex: 9 }}\r\n      >\r\n        <Modal.Header>\r\n          <Archive size=\"22px\" /> Archived this User's Review?\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <h3>\r\n            Name: {rvw.user.firstName} {rvw.user.firstName}\r\n          </h3>\r\n          <h4>Message:</h4>\r\n          <p style={{ textIndent: \"1em\" }}>\r\n            <strong>{rvw.message}</strong>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            width={wdth <= 768 ? \"100%\" : \"90%\"}\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <Content width=\"auto\">\r\n              <Popup\r\n                content=\"Deleting will permanently erase this review\"\r\n                trigger={\r\n                  <DButton alert style={{ fontSize: \"12px\" }}>\r\n                    <DeleteForever size=\"22px\" /> Delete Permanently\r\n                  </DButton>\r\n                }\r\n                inverted\r\n              />\r\n            </Content>\r\n            <Content width=\"auto\" flex justify=\"space-around\" align=\"center\">\r\n              <DButton confirm onClick={handleArchive} basic>\r\n                {loadArchive ? (\r\n                  <Spinner inverted small />\r\n                ) : (\r\n                  <>\r\n                    <Icon name=\"check\" /> Yes\r\n                  </>\r\n                )}\r\n              </DButton>\r\n\r\n              <DButton alert onClick={() => setIsDltModal(false)} basic>\r\n                <Icon name=\"ban\" /> No\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ARCHIVED_REVIEW = gql`\r\n  mutation archiveTestimonial($id: ID!) {\r\n    archiveTestimonial(_id: $id)\r\n  }\r\n`;\r\n\r\nexport default DeleteView;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { DotsVertical } from \"../../../components/styled/utils\";\r\nimport { Popup, Grid, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport ModalView from \"../../../components/admin/testimonial/ModalView\";\r\nimport DeleteView from \"../../../components/admin/testimonial/DeleteView\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nconst MenuView = ({ menuId, review }) => {\r\n  const [menuValue, setMenuValue] = useState(\"\");\r\n  const [isDltModal, setIsDltModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const handleMenu = (e) => {\r\n    setMenuValue(e.currentTarget.dataset.rid);\r\n  };\r\n\r\n  const modalDeleteShow = () => {\r\n    setIsDltModal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        on=\"click\"\r\n        trigger={\r\n          <DotsVertical\r\n            size=\"24px\"\r\n            data-rid={menuId}\r\n            onMouseOver={handleMenu}\r\n          />\r\n        }\r\n        flowing\r\n        position=\"top right\"\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Grid\r\n          centered\r\n          divided\r\n          columns={\r\n            employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3 ? 2 : 1\r\n          }\r\n        >\r\n          {(employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3) && (\r\n            <Grid.Column textAlign=\"center\">\r\n              <DButton alert>\r\n                <Icon name=\"trash\" fitted onClick={modalDeleteShow} />\r\n              </DButton>\r\n            </Grid.Column>\r\n          )}\r\n\r\n          <Grid.Column>\r\n            <DButton confirm onClick={() => setOpen(true)}>\r\n              <Icon name=\"eye\" fitted />\r\n            </DButton>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Popup>\r\n\r\n      <DeleteView\r\n        ridd={menuValue}\r\n        rvw={review}\r\n        setIsDltModal={setIsDltModal}\r\n        isDltModal={isDltModal}\r\n      />\r\n      <ModalView ridd={menuValue} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\nimport { IconWrap } from \"../../../components/styled/utils\";\r\nimport { ChevronRight } from \"@styled-icons/boxicons-solid/ChevronRight\";\r\nimport ToggleView from \"../../../components/admin/testimonial/ToggleView\";\r\nimport MenuView from \"../../../components/admin/testimonial/MenuView\";\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nconst Testimonial = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const {\r\n    data: dataReviews,\r\n    loading: loadReviews,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonials);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: (row) => <ToggleView swid={row._id} tggl={row.view} />,\r\n      width: \"80px\",\r\n      button: true,\r\n      style: {\r\n        borderBottom: \"1px solid #FFFFFF\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"user.lastName\",\r\n      sortable: true,\r\n      format: (row) => `${row.user.firstName} ${row.user.lastName}`,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => <MenuView menuId={row._id} review={row} />,\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        mcenter\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          margin=\"20px auto\"\r\n          align=\"center\"\r\n        >\r\n          <div>\r\n            <h3>Content Management</h3>\r\n          </div>\r\n          <div style={{ margin: \"0 5px\" }}>\r\n            <IconWrap size=\"22px\" color=\"dark\">\r\n              <ChevronRight />\r\n            </IconWrap>\r\n          </div>\r\n          <div>\r\n            <Link\r\n              to=\"/zeadmin/cms_testimonial\"\r\n              style={{\r\n                fontSize: \"18px\",\r\n                fontWeight: 700,\r\n                borderBottom: \"2px solid\",\r\n                paddingBottom: \"5px\",\r\n              }}\r\n            >\r\n              Testimonials\r\n            </Link>\r\n          </div>\r\n        </Content>\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            columns={columns}\r\n            data={reviews.map((rev) => rev)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loadReviews}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Testimonial;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERIES } from \"../../../../util/graphql/gallery\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DInput } from \"../../../styled/utils\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport Toasted from \"../../../Toasted\";\r\n\r\nconst NewAlbum = () => {\r\n  const [albumOpen, setAlbumOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const [newAlbum, { loading: loadNewAlbum }] = useMutation(NEW_ALBUM, {\r\n    variables: {\r\n      title,\r\n    },\r\n    refetchQueries: [{ query: FETCH_GALLERIES, variables: { active: true } }],\r\n    onCompleted() {\r\n      setAlbumOpen(false);\r\n      setTitle(\"\");\r\n      toaster.notify(\r\n        ({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            New Album Added\r\n          </Toasted>\r\n        ),\r\n        { position: \"bottom-right\" }\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleTitle = (e) => {\r\n    setTitle(e.currentTarget.value);\r\n  };\r\n\r\n  const handleNewAlbum = (e) => {\r\n    e.preventDefault();\r\n    newAlbum();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton flex onClick={() => setAlbumOpen(true)}>\r\n        <Plus size=\"22px\" />\r\n        New album\r\n      </DButton>\r\n      <Modal\r\n        size=\"mini\"\r\n        open={albumOpen}\r\n        onClose={() => setAlbumOpen(false)}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>New Album</Modal.Header>\r\n        <Modal.Content>\r\n          <DInput\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleTitle}\r\n            fluid\r\n            placeholder=\"Album Title\"\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAlbum}>\r\n            {loadNewAlbum ? (\r\n              <Spinner small inverted row content=\"Loading...\" />\r\n            ) : (\r\n              \"Save\"\r\n            )}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_ALBUM = gql`\r\n  mutation addGallery($title: String) {\r\n    addGallery(title: $title) {\r\n      _id\r\n      title\r\n      active\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewAlbum;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERIES } from \"../../../util/graphql/gallery\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport GalleryThumb from \"../../../components/GalleryThumb\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport NewAlbum from \"../../../components/admin/cms/gallery/NewAlbum\";\r\nimport ImageSelected from \"../../../components/ImageSelected\";\r\n\r\nconst Gallery = () => {\r\n  let allPhotos = [];\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const [galleries, setGalleries] = useState([]);\r\n\r\n  const {\r\n    data: dataGalleries,\r\n    loading: loadGalleries,\r\n    error,\r\n  } = useQuery(FETCH_GALLERIES, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataGalleries) {\r\n      setGalleries(dataGalleries.galleries);\r\n    }\r\n  }, [dataGalleries]);\r\n\r\n  const imageRenderer = useCallback(\r\n    ({ index, left, top, key, photo }) => (\r\n      <ImageSelected\r\n        key={key}\r\n        index={index}\r\n        photo={photo}\r\n        left={left}\r\n        top={top}\r\n        setCurrentImage={setCurrentImage}\r\n        setViewerIsOpen={setViewerIsOpen}\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const columns = (containerWidth) => {\r\n    let columns = 2;\r\n    if (containerWidth >= 500) columns = 2;\r\n    if (containerWidth >= 900) columns = 3;\r\n    if (containerWidth >= 1500) columns = 4;\r\n    return columns;\r\n  };\r\n\r\n  if (galleries) {\r\n    galleries.map((g) => allPhotos.push(...g.photos));\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        minh=\"90vh\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n          bgcolor=\"#eee\"\r\n          rounded\r\n          pad=\"10px\"\r\n          height=\"5em\"\r\n        >\r\n          <Breadcrumb size=\"big\">\r\n            <Breadcrumb.Section>Content Management</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section active>Gallery</Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <NewAlbum />\r\n        </Content>\r\n\r\n        {loadGalleries ? (\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            minh=\"50vh\"\r\n            width=\"100%\"\r\n            margin=\"0 auto\"\r\n          >\r\n            <Spinner content=\"Please wait while we fetch data...\" medium />\r\n          </Content>\r\n        ) : (\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            align=\"center\"\r\n            margin=\"0 auto\"\r\n            flow=\"row wrap\"\r\n          >\r\n            {galleries.length > 0 ? (\r\n              galleries.map((gallery) => (\r\n                <GalleryThumb\r\n                  key={gallery._id}\r\n                  background={\r\n                    gallery.photos.length > 0\r\n                      ? `/images/gallery/${gallery.photos[0].src}`\r\n                      : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  title={`${gallery.title} Photos`}\r\n                  subtitle={`${gallery.photos.length}${\r\n                    gallery.photos.length > 20 ? \"+\" : \"\"\r\n                  } ${gallery.title} Photo${\r\n                    gallery.photos.length > 1 ? \"s\" : \"\"\r\n                  }`}\r\n                  link={`/zeadmin/album/${gallery._id}`}\r\n                />\r\n              ))\r\n            ) : (\r\n              <h3\r\n                style={{\r\n                  height: \"50vh\",\r\n                  width: \"100%\",\r\n                  margin: \"0 auto\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                Add new album\r\n              </h3>\r\n            )}\r\n          </Content>\r\n        )}\r\n\r\n        <div style={{ width: \"100%\", marginBottom: \"36px\" }}>\r\n          <h3>All Photos</h3>\r\n\r\n          <MyGallery\r\n            photos={allPhotos.map((photo) => ({\r\n              height: photo.height,\r\n              width: photo.width,\r\n              src: `/images/gallery/${photo.src}`,\r\n              alt: photo.src,\r\n              id: photo._id,\r\n              key: photo._id,\r\n            }))}\r\n            renderImage={imageRenderer}\r\n            columns={columns}\r\n            directions=\"column\"\r\n          />\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel\r\n                  currentIndex={currentImage}\r\n                  views={allPhotos.map((photo) => ({\r\n                    ...photo,\r\n                    src: `/images/gallery/${photo.src}`,\r\n                    caption:\r\n                      photo.caption !== null\r\n                        ? `${photo.name} - ${photo.caption}`\r\n                        : photo.name,\r\n                    alt: photo.src,\r\n                  }))}\r\n                />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </div>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERY } from \"../../../../util/graphql/gallery\";\r\nimport { Content } from \"../../../styled/containers\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport Toasted from \"../../../Toasted\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst NewPhotoDrop = ({ albumId }) => {\r\n  const [addGalleryPhoto, { loading }] = useMutation(ADD_PHOTOS, {\r\n    refetchQueries: [\r\n      { query: FETCH_GALLERY, variables: { id: albumId, active: true } },\r\n    ],\r\n    onCompleted() {\r\n      toaster.notify(\r\n        ({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Upload Success\r\n          </Toasted>\r\n        ),\r\n        { position: \"bottom-right\" }\r\n      );\r\n    },\r\n  });\r\n\r\n  // DROPZONE\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      acceptedFiles.forEach((file) => {\r\n        addGalleryPhoto({ variables: { id: albumId, image: file } });\r\n        const reader = new FileReader();\r\n\r\n        reader.onabort = () => console.log(\"file reading was aborted\");\r\n        reader.onerror = () => console.log(\"file reading has failed\");\r\n        reader.onload = () => {\r\n          // Do whatever you want with the file contents\r\n          const binaryStr = reader.result;\r\n          console.log(binaryStr);\r\n        };\r\n        reader.readAsArrayBuffer(file);\r\n      });\r\n    },\r\n    [addGalleryPhoto]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"100px\"\r\n      rounded\r\n      margin=\"24px auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      style={{\r\n        border: \"2px dashed #D3CCE3\",\r\n        outline: \"none\",\r\n        cursor: \"pointer\",\r\n        color: \"#D3CCE3\",\r\n      }}\r\n      {...getRootProps({ className: \"dropzone\" })}\r\n    >\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p style={{ fontSize: \"18px\", fontWeight: 700 }}>\r\n          Drop the files here ...\r\n        </p>\r\n      ) : (\r\n        <p style={{ fontSize: \"18px\" }}>\r\n          Drag 'n' drop some files here, or click to select files\r\n        </p>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst ADD_PHOTOS = gql`\r\n  mutation addGalleryPhoto($id: ID!, $image: [Upload]) {\r\n    addGalleryPhoto(_id: $id, image: $image) {\r\n      _id\r\n      title\r\n      active\r\n      photos {\r\n        _id\r\n        name\r\n        caption\r\n        src\r\n        height\r\n        width\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewPhotoDrop;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_GALLERY } from \"../../../util/graphql/gallery\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\nimport { DButton, DInput } from \"../../../components/styled/utils\";\r\nimport { Breadcrumb, Modal } from \"semantic-ui-react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal as ModalImage, ModalGateway } from \"react-images\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport ImageSelected from \"../../../components/ImageSelected\";\r\nimport NewPhotoDrop from \"../../../components/admin/cms/gallery/NewPhotoDrop\";\r\n\r\nconst Album = (props) => {\r\n  const albumId = props.match.params._id;\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const [albumPhotos, setAlbumPhotos] = useState([]);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data: dataGallery, loading: loadGallery } = useQuery(FETCH_GALLERY, {\r\n    variables: { id: albumId, active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataGallery) {\r\n      setAlbumPhotos(dataGallery.gallery.photos);\r\n    }\r\n  }, [dataGallery]);\r\n\r\n  const imageRenderer = useCallback(\r\n    ({ index, left, top, key, photo }) => (\r\n      <ImageSelected\r\n        key={key}\r\n        index={index}\r\n        photo={photo}\r\n        left={left}\r\n        top={top}\r\n        menu={true}\r\n        grayscale={true}\r\n        setCurrentImage={setCurrentImage}\r\n        setViewerIsOpen={setViewerIsOpen}\r\n      />\r\n    ),\r\n    []\r\n  );\r\n\r\n  // Close Lightbox\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const columns = (containerWidth) => {\r\n    let columns = 2;\r\n    if (containerWidth >= 500) columns = 2;\r\n    if (containerWidth >= 900) columns = 3;\r\n    if (containerWidth >= 1500) columns = 4;\r\n    return columns;\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        minh=\"90vh\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n          bgcolor=\"#eee\"\r\n          rounded\r\n          pad=\"10px\"\r\n          height=\"5em\"\r\n        >\r\n          <Breadcrumb size=\"big\">\r\n            <Breadcrumb.Section>Content Management</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>Gallery</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section active>\r\n              {dataGallery && dataGallery.gallery.title} Photos\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <Content flex justify=\"flex-end\" align=\"center\" width=\"100%\">\r\n          <NewPhotoDrop albumId={albumId} />\r\n        </Content>\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            marginBottom: \"24px\",\r\n          }}\r\n        >\r\n          <MyGallery\r\n            photos={albumPhotos.map((photo) => ({\r\n              height: photo.height,\r\n              width: photo.width,\r\n              src: `/images/gallery/${photo.src}`,\r\n              alt: photo.src,\r\n              id: photo._id,\r\n              key: photo._id,\r\n            }))}\r\n            renderImage={imageRenderer}\r\n            columns={wid >= 500 ? 2 : wid >= 900 ? 3 : wid >= 1500 ? 4 : 2}\r\n            directions=\"column\"\r\n          />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <ModalImage\r\n                onClose={closeLightbox}\r\n                styles={{\r\n                  blanket: (base) => ({\r\n                    ...base,\r\n                    backgroundColor: \"rgba(0,0,0,0.9)\",\r\n                  }),\r\n                  positioner: (base) => ({\r\n                    ...base,\r\n                    display: \"block\",\r\n                  }),\r\n                }}\r\n              >\r\n                <Carousel\r\n                  styles={customStyles}\r\n                  currentIndex={currentImage}\r\n                  views={albumPhotos.map((photo) => ({\r\n                    ...photo,\r\n                    src: `/images/gallery/${photo.src}`,\r\n                    caption:\r\n                      photo.caption !== null\r\n                        ? `${photo.name} - ${photo.caption}`\r\n                        : photo.name,\r\n                    alt: photo.src,\r\n                  }))}\r\n                />\r\n              </ModalImage>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </div>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  footer: (base) => ({\r\n    ...base,\r\n    backgroundColor: \"rgba(255,255,255,0.7)\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    padding: 20,\r\n  }),\r\n};\r\n\r\nexport default Album;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_CONTACT_INFO } from \"../../../util/graphql/contact\";\r\nimport { Modal, Form, Input } from \"semantic-ui-react\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Toasted from \"../../Toasted\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ContactModal = () => {\r\n  const [isOpenContact, setIsOpenContact] = useState(false);\r\n  const [contactVals, setContactVals] = useState({\r\n    address: \"\",\r\n    lat: \"\",\r\n    lng: \"\",\r\n    mapKey: \"\",\r\n    phone: \"\",\r\n    mobile: \"\",\r\n  });\r\n\r\n  const [addContact, { loading: loadContact }] = useMutation(ADD_CONTACT_INFO, {\r\n    variables: {\r\n      address: contactVals.address,\r\n      lat: parseFloat(contactVals.lat),\r\n      lng: parseFloat(contactVals.lng),\r\n      mapKey: contactVals.mapKey,\r\n      phone: contactVals.phone,\r\n      mobile: contactVals.mobile,\r\n    },\r\n    refetchQueries: [{ query: FETCH_CONTACT_INFO }],\r\n    onCompleted() {\r\n      setIsOpenContact(false);\r\n\r\n      toaster.notify(\r\n        ({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            New Contact Info Added\r\n          </Toasted>\r\n        ),\r\n        { position: \"bottom-right\" }\r\n      );\r\n\r\n      setContactVals({\r\n        address: \"\",\r\n        lat: \"\",\r\n        lng: \"\",\r\n        mapKey: \"\",\r\n        phone: \"\",\r\n        mobile: \"\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleContactVals = (e) => {\r\n    setContactVals({ ...contactVals, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleNewContact = (e) => {\r\n    e.preventDefault();\r\n    addContact();\r\n  };\r\n\r\n  console.log(contactVals);\r\n  return (\r\n    <>\r\n      <DButton flex onClick={() => setIsOpenContact(true)}>\r\n        <Plus size=\"22px\" /> Contacts\r\n      </DButton>\r\n      <Modal\r\n        size=\"small\"\r\n        open={isOpenContact}\r\n        closeIcon\r\n        onClose={() => setIsOpenContact(false)}\r\n      >\r\n        <Modal.Header>New Contact Details</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Address</label>\r\n              <Input\r\n                fluid\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={contactVals.address}\r\n                onChange={handleContactVals}\r\n              />\r\n            </Form.Field>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>Latitude</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"lat\"\r\n                  value={contactVals.lat}\r\n                  onChange={handleContactVals}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Longitude</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"lng\"\r\n                  value={contactVals.lng}\r\n                  onChange={handleContactVals}\r\n                />\r\n              </Form.Field>\r\n            </Form.Group>\r\n\r\n            <Form.Field>\r\n              <label>Map Api Key</label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"mapKey\"\r\n                value={contactVals.mapKey}\r\n                onChange={handleContactVals}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Phone Number</label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                value={contactVals.phone}\r\n                onChange={handleContactVals}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Mobile Number</label>\r\n              <Input\r\n                label=\"+63\"\r\n                name=\"mobile\"\r\n                value={contactVals.mobile}\r\n                onChange={handleContactVals}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton flex onClick={handleNewContact}>\r\n            {loadContact ? (\r\n              <Spinner small row inverted content=\"Adding...\" />\r\n            ) : (\r\n              \"Add\"\r\n            )}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ADD_CONTACT_INFO = gql`\r\n  mutation addContact(\r\n    $address: String\r\n    $lat: Float\r\n    $lng: Float\r\n    $mapKey: String\r\n    $phone: String\r\n    $mobile: String\r\n  ) {\r\n    addContact(\r\n      address: $address\r\n      lat: $lat\r\n      lng: $lng\r\n      mapKey: $mapKey\r\n      phone: $phone\r\n      mobile: $mobile\r\n    ) {\r\n      _id\r\n      address\r\n      lat\r\n      lng\r\n      mapKey\r\n      phone\r\n      mobile\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ContactModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CONTACT_INFO } from \"../../../util/graphql/contact\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport ContactModal from \"../../../components/admin/contact/ContactModal\";\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nconst Contact = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const {\r\n    data: dataContactInfo,\r\n    loading: loadContactInfo,\r\n    error: errContactInfo,\r\n  } = useQuery(FETCH_CONTACT_INFO);\r\n\r\n  useEffect(() => {\r\n    if (dataContactInfo) setContacts(dataContactInfo.contact);\r\n  }, [dataContactInfo]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        minh=\"90vh\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n          bgcolor=\"#eee\"\r\n          rounded\r\n          pad=\"10px\"\r\n          height=\"5em\"\r\n        >\r\n          <Breadcrumb size=\"big\">\r\n            <Breadcrumb.Section>Content Management</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section active>Contact Info</Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          {contacts.length < 1 && <ContactModal />}\r\n        </Content>\r\n        <DSection width=\"100%\" height=\"100%\" flex direct=\"column\">\r\n          <Content>Details</Content>\r\n          <Content>Map</Content>\r\n        </DSection>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n} from \"../../../../util/graphql/employee\";\r\nimport { DButton, IconWrap } from \"../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../../styled/card\";\r\nimport { Modal, Popup, Grid } from \"semantic-ui-react\";\r\nimport { DeleteForever, Restore, Warning } from \"@styled-icons/material\";\r\n\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport parser from \"html-react-parser\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\n\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../Toasted\";\r\nimport Spinner from \"../../../Spinner\";\r\n\r\nconst ArchEmpView = ({ empId, empView, setEmpView }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [emp, setEmp] = useState({});\r\n  const [popWarning, setPopWarning] = useState(false);\r\n\r\n  const { data: empData, loading: empLoad } = useQuery(FETCH_EMPLOYEE_QUERY, {\r\n    variables: { employeeId: empId },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (empData) setEmp(empData.employee);\r\n  }, [empData]);\r\n\r\n  // DELETE\r\n  const [deleteEmployee, { loading: loadResult }] = useMutation(\r\n    DELETE_EMP_PERM,\r\n    {\r\n      variables: {\r\n        empId,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n          variables: { limit: 0, active: false },\r\n        },\r\n      ],\r\n      onCompleted(res) {\r\n        setEmpView(false);\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted success onClick={onClose}>\r\n              Successfully Deleted\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      },\r\n    }\r\n  );\r\n  // END DELETE\r\n\r\n  // RESTORE\r\n  const [archiveEmployee, { loading: loadArchived }] = useMutation(\r\n    RESTORE_EMPLOYEE,\r\n    {\r\n      variables: {\r\n        employeeId: empId,\r\n        active: true,\r\n      },\r\n\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n          variables: { active: false, limit: 0 },\r\n        },\r\n      ],\r\n      onCompleted() {\r\n        setEmpView(false);\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted success onClick={onClose}>\r\n              Successfully Restored\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      },\r\n    }\r\n  );\r\n  // END RESTORE\r\n\r\n  const handleWarning = () => {\r\n    setPopWarning(!popWarning);\r\n  };\r\n\r\n  const handleDeleteConfirm = (e) => {\r\n    e.preventDefault();\r\n    deleteEmployee();\r\n  };\r\n\r\n  const confirmRestore = (e) => {\r\n    e.preventDefault();\r\n    archiveEmployee();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size={wid < 1024 ? \"tiny\" : \"small\"}\r\n        open={empView}\r\n        onClose={() => setEmpView(false)}\r\n        closeIcon\r\n      >\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4\r\n              top={\"-30px\"}\r\n              imgh=\"250px\"\r\n              imgw={wid <= 768 ? \"50%\" : \"75%\"}\r\n            >\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    emp.photo\r\n                      ? `/images/employees/${emp.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={emp.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{emp.firstName}</h1>\r\n                <h4>{emp.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {emp.bio ? parser(emp.bio) : emp.bio}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <Content\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <Content\r\n              flex\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <Popup\r\n                open={popWarning}\r\n                trigger={\r\n                  <DButton alert flex onClick={handleWarning}>\r\n                    <DeleteForever size=\"22px\" />\r\n                    Delete Permanently\r\n                  </DButton>\r\n                }\r\n                position=\"top center\"\r\n                flowing\r\n              >\r\n                <DGrid two gap=\"5px\">\r\n                  <IconWrap\r\n                    size=\"22px\"\r\n                    color=\"green\"\r\n                    margin=\"0 auto\"\r\n                    onClick={handleDeleteConfirm}\r\n                  >\r\n                    {loadResult ? (\r\n                      <Spinner small row content=\"Deleting...\" />\r\n                    ) : (\r\n                      <>\r\n                        <Check title=\"Confirm deleting permanently\" />\r\n                        Confirm\r\n                      </>\r\n                    )}\r\n                  </IconWrap>\r\n\r\n                  <IconWrap\r\n                    size=\"22px\"\r\n                    color=\"red\"\r\n                    margin=\"0 auto\"\r\n                    onClick={() => setPopWarning(false)}\r\n                  >\r\n                    <Cancel title=\"Cancel action\" />\r\n                    Cancel\r\n                  </IconWrap>\r\n                </DGrid>\r\n              </Popup>\r\n\r\n              <Popup\r\n                trigger={\r\n                  <IconWrap\r\n                    circle\r\n                    color=\"secondary\"\r\n                    small\r\n                    mcenter\r\n                    title=\"Warning\"\r\n                  >\r\n                    <Warning />\r\n                  </IconWrap>\r\n                }\r\n                content={\r\n                  <p style={{ fontWeight: 700 }}>\r\n                    Deleting Permantly cannot be restored\r\n                  </p>\r\n                }\r\n                position=\"top right\"\r\n                size=\"tiny\"\r\n                inverted\r\n              />\r\n            </Content>\r\n\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-end\"\r\n              align=\"center\"\r\n            >\r\n              <DButton confirm onClick={confirmRestore}>\r\n                {loadArchived ? (\r\n                  <Spinner row small content=\"Restoring...\" />\r\n                ) : (\r\n                  <>\r\n                    <Restore size=\"22px\" />\r\n                    Restore\r\n                  </>\r\n                )}\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DELETE_EMP_PERM = gql`\r\n  mutation deleteEmployee($empId: ID!) {\r\n    deleteEmployee(_id: $empId)\r\n  }\r\n`;\r\n\r\nconst RESTORE_EMPLOYEE = gql`\r\n  mutation archiveEmployee($employeeId: ID!, $active: Boolean) {\r\n    archiveEmployee(_id: $employeeId, active: $active) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      level\r\n      active\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ArchEmpView;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../../util/graphql/employee\";\r\n\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap, DLabel } from \"../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../styled/containers\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\n\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../Toasted\";\r\nimport Spinner from \"../../../Spinner\";\r\n\r\nconst ArchEmpDelete = ({ empId }) => {\r\n  const [popDelete, setPopDelete] = useState(false);\r\n\r\n  const [deleteEmployee, { loading: loadResult }] = useMutation(\r\n    DELETE_EMP_PERM,\r\n    {\r\n      variables: {\r\n        empId,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n          variables: { limit: 0, active: false },\r\n        },\r\n      ],\r\n      onCompleted(res) {\r\n        setPopDelete(false);\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted success onClick={onClose}>\r\n              Successfully Deleted\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleDeleteNotif = () => {\r\n    setPopDelete(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = (e) => {\r\n    e.preventDefault();\r\n    deleteEmployee();\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      open={popDelete}\r\n      trigger={\r\n        <DButton alert flex onClick={handleDeleteNotif}>\r\n          <DeleteForever size=\"22px\" />\r\n        </DButton>\r\n      }\r\n      position=\"top right\"\r\n      flowing\r\n    >\r\n      <Content\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        direct=\"column\"\r\n      >\r\n        <DLabel w=\"100%\" size=\"14px\" weight={700}>\r\n          Delete Confirm?\r\n        </DLabel>\r\n        <Content width=\"100%\" height=\"100%\">\r\n          <DGrid two gap=\"5px\">\r\n            <IconWrap\r\n              size=\"22px\"\r\n              color=\"green\"\r\n              margin=\"0 auto\"\r\n              onClick={handleDeleteConfirm}\r\n            >\r\n              {loadResult ? (\r\n                <Spinner small row content=\"Deleting...\" />\r\n              ) : (\r\n                <>\r\n                  <Check title=\"Confirm deleting permanently\" />\r\n                  Confirm\r\n                </>\r\n              )}\r\n            </IconWrap>\r\n\r\n            <IconWrap\r\n              size=\"22px\"\r\n              color=\"red\"\r\n              margin=\"0 auto\"\r\n              onClick={() => setPopDelete(false)}\r\n            >\r\n              <Cancel title=\"Cancel action\" />\r\n              Cancel\r\n            </IconWrap>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nconst DELETE_EMP_PERM = gql`\r\n  mutation deleteEmployee($empId: ID!) {\r\n    deleteEmployee(_id: $empId)\r\n  }\r\n`;\r\n\r\nexport default ArchEmpDelete;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../../util/graphql/employee\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap, DLabel } from \"../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../styled/containers\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport { Restore } from \"@styled-icons/material\";\r\n\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\n\r\nconst ArchEmpRestore = ({ empId }) => {\r\n  const [popRestore, setPopRestore] = useState(false);\r\n\r\n  const [archiveEmployee, { loading: loadArchived }] = useMutation(\r\n    RESTORE_EMPLOYEE,\r\n    {\r\n      variables: {\r\n        employeeId: empId,\r\n        active: true,\r\n      },\r\n\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n          variables: { active: false, limit: 0 },\r\n        },\r\n      ],\r\n    }\r\n  );\r\n\r\n  const confirmRestore = (e) => {\r\n    e.preventDefault();\r\n    archiveEmployee();\r\n  };\r\n\r\n  const handleRestoreConfirm = () => {\r\n    setPopRestore(true);\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      open={popRestore}\r\n      trigger={\r\n        <DButton flex confirm flex onClick={handleRestoreConfirm}>\r\n          <Restore size=\"22px\" />\r\n        </DButton>\r\n      }\r\n      position=\"top right\"\r\n      flowing\r\n    >\r\n      <Content\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        direct=\"column\"\r\n      >\r\n        <DLabel w=\"100%\" size=\"14px\" weight={700}>\r\n          Restore this file?\r\n        </DLabel>\r\n        <Content width=\"100%\" height=\"100%\">\r\n          <DGrid two gap=\"5px\">\r\n            <IconWrap\r\n              size=\"22px\"\r\n              color=\"green\"\r\n              margin=\"0 auto\"\r\n              onClick={confirmRestore}\r\n            >\r\n              {loadArchived ? (\r\n                <Spinner row small content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Check title=\"Confirm restoration of this file\" />\r\n                  Confirm\r\n                </>\r\n              )}\r\n            </IconWrap>\r\n\r\n            <IconWrap\r\n              size=\"22px\"\r\n              color=\"red\"\r\n              margin=\"0 auto\"\r\n              onClick={() => setPopRestore(false)}\r\n            >\r\n              <Cancel title=\"Cancel action\" />\r\n              Cancel\r\n            </IconWrap>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nconst RESTORE_EMPLOYEE = gql`\r\n  mutation archiveEmployee($employeeId: ID!, $active: Boolean) {\r\n    archiveEmployee(_id: $employeeId, active: $active) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      level\r\n      active\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ArchEmpRestore;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../../util/graphql/employee\";\r\n\r\nimport { DButton } from \"../../../styled/utils\";\r\nimport { Content } from \"../../../styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../../Spinner\";\r\n\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\n\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\nimport ArchEmpView from \"./ArchEmpView\";\r\nimport ArchEmpDelete from \"./ArchEmpDelete\";\r\nimport ArchEmpRestore from \"./ArchEmpRestore\";\r\nimport Page404 from \"../../../../pages/Page404\";\r\n\r\nconst ArchEmp = () => {\r\n  const [archEmp, setArchEmp] = useState([]);\r\n  const [empView, setEmpView] = useState(false);\r\n  const [empValue, setEmpValue] = useState(\"\");\r\n\r\n  const {\r\n    data: archEmpData,\r\n    loading: archEmpLoad,\r\n    error: archEmpErr,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: { limit: 0, active: false },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (archEmpData) setArchEmp(archEmpData.aestheticiansReceps);\r\n  }, [archEmpData]);\r\n\r\n  const handleMenu = (e) => {\r\n    setEmpValue(e.currentTarget.dataset.eid);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0.5,\r\n      hide: \"md\",\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/employees/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"active\",\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row) =>\r\n        row.active ? (\r\n          <span\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"14px\",\r\n              color: \"#0f9b0f\",\r\n            }}\r\n          >\r\n            Active\r\n          </span>\r\n        ) : (\r\n          <span\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"14px\",\r\n              color: \"#f12711\",\r\n            }}\r\n          >\r\n            Inactive\r\n          </span>\r\n        ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      grow: 1,\r\n      cell: (row) => (\r\n        <Content\r\n          flex\r\n          margin=\"0 auto\"\r\n          align=\"center\"\r\n          justify=\"center\"\r\n          width=\"300px\"\r\n          height=\"100%\"\r\n          pad=\"3px 0\"\r\n          flow=\"row nowrap\"\r\n          data-eid={row._id}\r\n          onMouseOver={handleMenu}\r\n        >\r\n          <DButton flex onClick={() => setEmpView(true)}>\r\n            <Eye size={\"18px\"} title=\"View Details\" />\r\n          </DButton>\r\n\r\n          <ArchEmpRestore empId={empValue} />\r\n          <ArchEmpDelete empId={empValue} />\r\n        </Content>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {archEmpErr ? <Page404 /> : null}\r\n      <DataTable\r\n        columns={columns}\r\n        data={archEmp}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={10}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={archEmpLoad}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n\r\n      <ArchEmpView empId={empValue} empView={empView} setEmpView={setEmpView} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700 !important\",\r\n      color: \"#232323\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default ArchEmp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n} from \"../../../../util/graphql/service\";\r\nimport { DButton, IconWrap } from \"../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../../styled/card\";\r\nimport { Modal, Popup } from \"semantic-ui-react\";\r\nimport { DeleteForever, Restore, Warning } from \"@styled-icons/material\";\r\n\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport parser from \"html-react-parser\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\n\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../Toasted\";\r\nimport Spinner from \"../../../Spinner\";\r\n\r\nconst ArchServCategView = ({ categoryId, categoryView, setCategoryView }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [categ, setCateg] = useState({});\r\n  const [popWarnCateg, setPopWarnCateg] = useState(false);\r\n\r\n  // QUERY CATEGORY\r\n  const { data: categoryData, loading: categoryLoad } = useQuery(\r\n    FETCH_CATEGORY_QUERY,\r\n    {\r\n      variables: { categoryId },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (categoryData) setCateg(categoryData.category);\r\n  }, [categoryData]);\r\n\r\n  // DELETE CATEGORY\r\n  const [deleteCategory, { loading: loadResult }] = useMutation(\r\n    DELETE_CATEG_PERM,\r\n    {\r\n      variables: {\r\n        categoryId,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          variables: { active: false },\r\n        },\r\n      ],\r\n      onCompleted() {\r\n        setCategoryView(false);\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted success onClick={onClose}>\r\n              Successfully Deleted\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      },\r\n    }\r\n  );\r\n  // END DELETE\r\n\r\n  // RESTORE\r\n  const [archiveServCategory, { loading: loadArchServCategory }] = useMutation(\r\n    RESTORE_SERVICE_CATEGORY,\r\n    {\r\n      variables: {\r\n        categoryId,\r\n        active: true,\r\n      },\r\n\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          variables: { active: false },\r\n        },\r\n      ],\r\n\r\n      update(cache) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          variables: { active: false },\r\n        });\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          variables: { active: true },\r\n          data: { categories: [...data.categories] },\r\n        });\r\n      },\r\n\r\n      onCompleted() {\r\n        setCategoryView(false);\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted success onClick={onClose}>\r\n              Successfully Restored\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      },\r\n    }\r\n  );\r\n  // END RESTORE\r\n\r\n  const handleWarning = () => {\r\n    setPopWarnCateg(!popWarnCateg);\r\n  };\r\n\r\n  const handleDeleteConfirm = (e) => {\r\n    e.preventDefault();\r\n    deleteCategory();\r\n  };\r\n\r\n  const confirmRestoreCateg = (e) => {\r\n    e.preventDefault();\r\n    archiveServCategory();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size={wid < 1024 ? \"tiny\" : \"small\"}\r\n        open={categoryView}\r\n        onClose={() => setCategoryView(false)}\r\n        closeIcon\r\n      >\r\n        {categoryLoad ? (\r\n          <Spinner medium content=\"Please wait while we fetch data...\" />\r\n        ) : (\r\n          <DGrid two>\r\n            <Modal.Content>\r\n              <JCard4\r\n                top={\"-30px\"}\r\n                imgh=\"250px\"\r\n                imgw={wid <= 768 ? \"50%\" : \"75%\"}\r\n              >\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={\r\n                      categ.photo\r\n                        ? `/images/service/${categ.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                    }\r\n                    alt={categ.photo}\r\n                  />\r\n                </div>\r\n              </JCard4>\r\n            </Modal.Content>\r\n            <Modal.Content scrolling className=\"modal-content2\">\r\n              <JCard3>\r\n                <div className=\"description\">\r\n                  <h1>{categ.name}</h1>\r\n\r\n                  <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                    {categ.description\r\n                      ? parser(categ.description)\r\n                      : categ.description}\r\n                  </p>\r\n                </div>\r\n              </JCard3>\r\n            </Modal.Content>\r\n          </DGrid>\r\n        )}\r\n        <Modal.Actions>\r\n          <Content\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <Content\r\n              flex\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <Popup\r\n                open={popWarnCateg}\r\n                trigger={\r\n                  <DButton alert flex onClick={handleWarning}>\r\n                    <DeleteForever size=\"22px\" />\r\n                    Delete Permanently\r\n                  </DButton>\r\n                }\r\n                position=\"top center\"\r\n                flowing\r\n              >\r\n                <DGrid two gap=\"5px\">\r\n                  <IconWrap\r\n                    size=\"22px\"\r\n                    color=\"green\"\r\n                    margin=\"0 auto\"\r\n                    onClick={handleDeleteConfirm}\r\n                  >\r\n                    {loadResult ? (\r\n                      <Spinner small row content=\"Deleting...\" />\r\n                    ) : (\r\n                      <>\r\n                        <Check title=\"Confirm deleting permanently\" />\r\n                        Confirm\r\n                      </>\r\n                    )}\r\n                  </IconWrap>\r\n\r\n                  <IconWrap\r\n                    size=\"22px\"\r\n                    color=\"red\"\r\n                    margin=\"0 auto\"\r\n                    onClick={() => setPopWarnCateg(false)}\r\n                  >\r\n                    <Cancel title=\"Cancel action\" />\r\n                    Cancel\r\n                  </IconWrap>\r\n                </DGrid>\r\n              </Popup>\r\n\r\n              <Popup\r\n                trigger={\r\n                  <IconWrap\r\n                    circle\r\n                    color=\"secondary\"\r\n                    small\r\n                    mcenter\r\n                    title=\"Warning\"\r\n                  >\r\n                    <Warning />\r\n                  </IconWrap>\r\n                }\r\n                content={\r\n                  <p style={{ fontWeight: 700 }}>\r\n                    Deleting Permantly cannot be restored\r\n                  </p>\r\n                }\r\n                position=\"top right\"\r\n                size=\"tiny\"\r\n                inverted\r\n              />\r\n            </Content>\r\n\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-end\"\r\n              align=\"center\"\r\n            >\r\n              <DButton confirm onClick={confirmRestoreCateg}>\r\n                {loadArchServCategory ? (\r\n                  <Spinner row small content=\"Restoring...\" />\r\n                ) : (\r\n                  <>\r\n                    <Restore size=\"22px\" />\r\n                    Restore\r\n                  </>\r\n                )}\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEG_PERM = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nconst RESTORE_SERVICE_CATEGORY = gql`\r\n  mutation archivedCategory($categoryId: ID!, $active: Boolean) {\r\n    archivedCategory(_id: $categoryId, active: $active) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ArchServCategView;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../../util/graphql/service\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap, DLabel } from \"../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../styled/containers\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport { Restore } from \"@styled-icons/material\";\r\n\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\n\r\nconst ArchServCategRestore = ({ categoryId }) => {\r\n  const [popCategRestore, setPopCategRestore] = useState(false);\r\n\r\n  const [archiveServCategory, { loading: loadServCategory }] = useMutation(\r\n    RESTORE_SERVICE_CATEGORY,\r\n    {\r\n      variables: {\r\n        categoryId,\r\n        active: true,\r\n      },\r\n\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          variables: { active: false },\r\n        },\r\n      ],\r\n    }\r\n  );\r\n\r\n  const confirmServCategRestore = (e) => {\r\n    e.preventDefault();\r\n    archiveServCategory();\r\n  };\r\n\r\n  const handleServCategRestoreConfirm = () => {\r\n    setPopCategRestore(true);\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      open={popCategRestore}\r\n      trigger={\r\n        <DButton flex confirm flex onClick={handleServCategRestoreConfirm}>\r\n          <Restore size=\"22px\" />\r\n        </DButton>\r\n      }\r\n      position=\"top right\"\r\n      flowing\r\n    >\r\n      <Content\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        direct=\"column\"\r\n      >\r\n        <DLabel w=\"100%\" size=\"14px\" color=\"dark\" weight={700}>\r\n          Restore this file?\r\n        </DLabel>\r\n        <Content width=\"100%\" height=\"100%\">\r\n          <DGrid two gap=\"5px\">\r\n            <IconWrap\r\n              size=\"22px\"\r\n              color=\"green\"\r\n              margin=\"0 auto\"\r\n              onClick={confirmServCategRestore}\r\n            >\r\n              {loadServCategory ? (\r\n                <Spinner row small content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Check title=\"Confirm restoration of this file\" />\r\n                  Confirm\r\n                </>\r\n              )}\r\n            </IconWrap>\r\n\r\n            <IconWrap\r\n              size=\"22px\"\r\n              color=\"red\"\r\n              margin=\"0 auto\"\r\n              onClick={() => setPopCategRestore(false)}\r\n            >\r\n              <Cancel title=\"Cancel action\" />\r\n              Cancel\r\n            </IconWrap>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nconst RESTORE_SERVICE_CATEGORY = gql`\r\n  mutation archivedCategory($categoryId: ID!, $active: Boolean) {\r\n    archivedCategory(_id: $categoryId, active: $active) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ArchServCategRestore;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../../util/graphql/service\";\r\n\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap, DLabel } from \"../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../styled/containers\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\n\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../Toasted\";\r\nimport Spinner from \"../../../Spinner\";\r\n\r\nconst ArchServCategDelete = ({ categoryId }) => {\r\n  const [popCategDelete, setPopCategDelete] = useState(false);\r\n\r\n  const [deleteServCateg, { loading: loadServCateg }] = useMutation(\r\n    DELETE_SERVICE_CATEGORY,\r\n    {\r\n      variables: {\r\n        categoryId,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          variables: { active: false },\r\n        },\r\n      ],\r\n      onCompleted(res) {\r\n        setPopCategDelete(false);\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted success onClick={onClose}>\r\n              Successfully Deleted\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleServCategDeleteNotif = () => {\r\n    setPopCategDelete(true);\r\n  };\r\n\r\n  const handleServCategDeleteConfirm = (e) => {\r\n    e.preventDefault();\r\n    deleteServCateg();\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      open={popCategDelete}\r\n      trigger={\r\n        <DButton alert flex onClick={handleServCategDeleteNotif}>\r\n          <DeleteForever size=\"22px\" />\r\n        </DButton>\r\n      }\r\n      position=\"top right\"\r\n      flowing\r\n    >\r\n      <Content\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        direct=\"column\"\r\n      >\r\n        <DLabel w=\"100%\" color=\"dark\" size=\"14px\" weight={700}>\r\n          Delete Confirm?\r\n        </DLabel>\r\n        <Content width=\"100%\" height=\"100%\">\r\n          <DGrid two gap=\"5px\">\r\n            <IconWrap\r\n              size=\"22px\"\r\n              color=\"green\"\r\n              margin=\"0 auto\"\r\n              onClick={handleServCategDeleteConfirm}\r\n            >\r\n              {loadServCateg ? (\r\n                <Spinner small row content=\"Deleting...\" />\r\n              ) : (\r\n                <>\r\n                  <Check title=\"Confirm deleting permanently\" />\r\n                  Confirm\r\n                </>\r\n              )}\r\n            </IconWrap>\r\n\r\n            <IconWrap\r\n              size=\"22px\"\r\n              color=\"red\"\r\n              margin=\"0 auto\"\r\n              onClick={() => setPopCategDelete(false)}\r\n            >\r\n              <Cancel title=\"Cancel action\" />\r\n              Cancel\r\n            </IconWrap>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_CATEGORY = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default ArchServCategDelete;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../../util/graphql/service\";\r\nimport { DButton, DLabel } from \"../../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\nimport { Restore } from \"@styled-icons/material/Restore\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Page404 from \"../../../../pages/Page404\";\r\nimport { DCard, Content } from \"../../../styled/containers\";\r\nimport ArchServCategView from \"./ArchServCategView\";\r\nimport ArchServCategRestore from \"./ArchServCategRestore\";\r\nimport ArchServCategDelete from \"./ArchServCategDelete\";\r\n\r\nconst ArchServCateg = () => {\r\n  const [archServCateg, setArchServCateg] = useState([]);\r\n  const [categoryIdVal, setCategoryIdVal] = useState(\"\");\r\n  const [categoryView, setCategoryView] = useState(false);\r\n\r\n  const {\r\n    data: servCategData,\r\n    loading: servCategLoad,\r\n    error: servCategErr,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY, { variables: { active: false } });\r\n\r\n  useEffect(() => {\r\n    if (servCategData) setArchServCateg(servCategData.categories);\r\n  }, [servCategData]);\r\n\r\n  const handleCategoryHover = (e) => {\r\n    setCategoryIdVal(e.currentTarget.dataset.categoryid);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0.5,\r\n      hide: \"md\",\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.photo}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <span>{row.name}</span>,\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"active\",\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row) =>\r\n        row.active ? (\r\n          <span\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"14px\",\r\n              color: \"#0f9b0f\",\r\n            }}\r\n          >\r\n            Active\r\n          </span>\r\n        ) : (\r\n          <span\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"14px\",\r\n              color: \"#f12711\",\r\n            }}\r\n          >\r\n            Inactive\r\n          </span>\r\n        ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      grow: 1,\r\n      cell: (row) => (\r\n        <Content\r\n          flex\r\n          margin=\"0 auto\"\r\n          align=\"center\"\r\n          justify=\"center\"\r\n          width=\"300px\"\r\n          height=\"100%\"\r\n          pad=\"3px 0\"\r\n          flow=\"row nowrap\"\r\n          data-categoryid={row._id}\r\n          onMouseOver={handleCategoryHover}\r\n        >\r\n          <DButton flex onClick={() => setCategoryView(true)}>\r\n            <Eye size={\"18px\"} title=\"View Details\" />\r\n          </DButton>\r\n          <ArchServCategRestore categoryId={row._id} />\r\n          <ArchServCategDelete categoryId={row._id} />\r\n        </Content>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <DCard dw=\"100%\" dh=\"100%\" margin=\"12px auto\" flex fcol>\r\n        <DLabel size=\"22px\" bgblue color=\"light\" rounded>\r\n          Service Categories\r\n        </DLabel>\r\n        <DataTable\r\n          columns={columns}\r\n          data={archServCateg}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={10}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          progressPending={servCategLoad}\r\n          progressComponent={\r\n            <Spinner content=\"Please wait while we fetch our data...\" />\r\n          }\r\n        />\r\n      </DCard>\r\n      <ArchServCategView\r\n        categoryId={categoryIdVal}\r\n        categoryView={categoryView}\r\n        setCategoryView={setCategoryView}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700 !important\",\r\n      color: \"#232323\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default ArchServCateg;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n  FETCH_ALL_SERVICES_QUERY,\r\n} from \"../../../../util/graphql/service\";\r\nimport { DButton, IconWrap } from \"../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../../styled/card\";\r\nimport { Modal, Popup } from \"semantic-ui-react\";\r\nimport { DeleteForever, Restore, Warning } from \"@styled-icons/material\";\r\n\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport parser from \"html-react-parser\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\n\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../Toasted\";\r\nimport Spinner from \"../../../Spinner\";\r\n\r\nconst ArchServSubView = ({ serviceId, serviceView, setServiceView }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [serv, setServ] = useState({});\r\n  const [popWarnServ, setPopWarnServ] = useState(false);\r\n\r\n  // QUERY CATEGORY\r\n  const { data: serviceData, loading: serviceLoad } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: { serviceId },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (serviceData) setServ(serviceData.service);\r\n  }, [serviceData]);\r\n\r\n  // DELETE CATEGORY\r\n  const [deleteService, { loading: loadServiceResult }] = useMutation(\r\n    DELETE_SERVICE_PERM,\r\n    {\r\n      variables: {\r\n        serviceId,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_ALL_SERVICES_QUERY,\r\n          variables: { active: false },\r\n        },\r\n      ],\r\n      onCompleted() {\r\n        setServiceView(false);\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted success onClick={onClose}>\r\n              Successfully Deleted\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      },\r\n    }\r\n  );\r\n  // END DELETE\r\n\r\n  // RESTORE\r\n  const [archiveServSub, { loading: loadArchServSub }] = useMutation(\r\n    RESTORE_SERVICE_SUB,\r\n    {\r\n      variables: {\r\n        serviceId,\r\n        active: true,\r\n      },\r\n\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_ALL_SERVICES_QUERY,\r\n          variables: { active: false },\r\n        },\r\n      ],\r\n\r\n      update(cache) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_SERVICES_QUERY,\r\n          variables: { active: false },\r\n        });\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_SERVICES_QUERY,\r\n          variables: { active: true },\r\n          data: { services: [...data.services] },\r\n        });\r\n      },\r\n\r\n      onCompleted() {\r\n        setServiceView(false);\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted success onClick={onClose}>\r\n              Successfully Restored\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      },\r\n    }\r\n  );\r\n  // END RESTORE\r\n\r\n  const handleWarning = () => {\r\n    setPopWarnServ(!popWarnServ);\r\n  };\r\n\r\n  const handleDeleteServiceConfirm = (e) => {\r\n    e.preventDefault();\r\n    deleteService();\r\n  };\r\n\r\n  const confirmRestoreServ = (e) => {\r\n    e.preventDefault();\r\n    archiveServSub();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size={wid < 1024 ? \"tiny\" : \"small\"}\r\n        open={serviceView}\r\n        onClose={() => setServiceView(false)}\r\n        closeIcon\r\n      >\r\n        {serviceLoad ? (\r\n          <Spinner medium content=\"Please wait while we fetch data...\" />\r\n        ) : (\r\n          <DGrid two>\r\n            <Modal.Content>\r\n              <JCard4\r\n                top={\"-30px\"}\r\n                imgh=\"250px\"\r\n                imgw={wid <= 768 ? \"50%\" : \"75%\"}\r\n              >\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={\r\n                      serv.photo\r\n                        ? `/images/service/${serv.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                    }\r\n                    alt={serv.photo}\r\n                  />\r\n                </div>\r\n              </JCard4>\r\n            </Modal.Content>\r\n            <Modal.Content scrolling className=\"modal-content2\">\r\n              <JCard3>\r\n                <div className=\"description\">\r\n                  <h1>{serv.name}</h1>\r\n\r\n                  <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                    {serv.description\r\n                      ? parser(serv.description)\r\n                      : serv.description}\r\n                  </p>\r\n                </div>\r\n              </JCard3>\r\n            </Modal.Content>\r\n          </DGrid>\r\n        )}\r\n        <Modal.Actions>\r\n          <Content\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <Content\r\n              flex\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <Popup\r\n                open={popWarnServ}\r\n                trigger={\r\n                  <DButton alert flex onClick={handleWarning}>\r\n                    <DeleteForever size=\"22px\" />\r\n                    Delete Permanently\r\n                  </DButton>\r\n                }\r\n                position=\"top center\"\r\n                flowing\r\n              >\r\n                <DGrid two gap=\"5px\">\r\n                  <IconWrap\r\n                    size=\"22px\"\r\n                    color=\"green\"\r\n                    margin=\"0 auto\"\r\n                    onClick={handleDeleteServiceConfirm}\r\n                  >\r\n                    {loadServiceResult ? (\r\n                      <Spinner small row content=\"Deleting...\" />\r\n                    ) : (\r\n                      <>\r\n                        <Check title=\"Confirm deleting permanently\" />\r\n                        Confirm\r\n                      </>\r\n                    )}\r\n                  </IconWrap>\r\n\r\n                  <IconWrap\r\n                    size=\"22px\"\r\n                    color=\"red\"\r\n                    margin=\"0 auto\"\r\n                    onClick={() => setPopWarnServ(false)}\r\n                  >\r\n                    <Cancel title=\"Cancel action\" />\r\n                    Cancel\r\n                  </IconWrap>\r\n                </DGrid>\r\n              </Popup>\r\n\r\n              <Popup\r\n                trigger={\r\n                  <IconWrap\r\n                    circle\r\n                    color=\"secondary\"\r\n                    small\r\n                    mcenter\r\n                    title=\"Warning\"\r\n                  >\r\n                    <Warning />\r\n                  </IconWrap>\r\n                }\r\n                content={\r\n                  <p style={{ fontWeight: 700 }}>\r\n                    Deleting Permantly cannot be restored\r\n                  </p>\r\n                }\r\n                position=\"top right\"\r\n                size=\"tiny\"\r\n                inverted\r\n              />\r\n            </Content>\r\n\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-end\"\r\n              align=\"center\"\r\n            >\r\n              <DButton confirm onClick={confirmRestoreServ}>\r\n                {loadArchServSub ? (\r\n                  <Spinner row small inverted content=\"Restoring...\" />\r\n                ) : (\r\n                  <>\r\n                    <Restore size=\"22px\" />\r\n                    Restore\r\n                  </>\r\n                )}\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_PERM = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nconst RESTORE_SERVICE_SUB = gql`\r\n  mutation archivedService($serviceId: ID!, $active: Boolean) {\r\n    archivedService(_id: $serviceId, active: $active)\r\n  }\r\n`;\r\n\r\nexport default ArchServSubView;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_SERVICES_QUERY } from \"../../../../util/graphql/service\";\r\nimport { DButton, DLabel } from \"../../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\nimport { Restore } from \"@styled-icons/material/Restore\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Page404 from \"../../../../pages/Page404\";\r\nimport parser from \"html-react-parser\";\r\nimport { DCard, Content } from \"../../../styled/containers\";\r\nimport ArchServSubView from \"./ArchServSubView\";\r\n\r\nconst ArchServSub = () => {\r\n  const [archServices, setArchServices] = useState([]);\r\n  const [serviceIdVal, setServiceIdVal] = useState(\"\");\r\n  const [serviceView, setServiceView] = useState(false);\r\n\r\n  const {\r\n    data: servicesData,\r\n    loading: servicesLoad,\r\n    error: servicesErr,\r\n  } = useQuery(FETCH_ALL_SERVICES_QUERY, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (servicesData) setArchServices(servicesData.allServices);\r\n  }, [servicesData]);\r\n\r\n  const handleServiceHover = (e) => {\r\n    setServiceIdVal(e.currentTarget.dataset.serviceid);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0.5,\r\n      hide: \"md\",\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.photo}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <span>{row.name}</span>,\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      cell: (row) =>\r\n        row.description.length > 100\r\n          ? parser(row.description.substr(0, 100)) + \"...\"\r\n          : parser(row.description.substr(0, 100)),\r\n    },\r\n\r\n    {\r\n      name: \"Status\",\r\n      selector: \"active\",\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row) =>\r\n        row.active ? (\r\n          <span\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"14px\",\r\n              color: \"#0f9b0f\",\r\n            }}\r\n          >\r\n            Active\r\n          </span>\r\n        ) : (\r\n          <span\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"14px\",\r\n              color: \"#f12711\",\r\n            }}\r\n          >\r\n            Inactive\r\n          </span>\r\n        ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      grow: 1,\r\n      cell: (row) => (\r\n        <Content\r\n          flex\r\n          margin=\"0 auto\"\r\n          align=\"center\"\r\n          justify=\"center\"\r\n          width=\"300px\"\r\n          height=\"100%\"\r\n          pad=\"3px 0\"\r\n          flow=\"row nowrap\"\r\n          data-serviceid={row._id}\r\n          onMouseOver={handleServiceHover}\r\n        >\r\n          <DButton flex onClick={() => setServiceView(true)}>\r\n            <Eye size={\"18px\"} title=\"View Details\" />\r\n          </DButton>\r\n          <DButton flex confirm>\r\n            <Restore size={\"18px\"} title=\"Restore file\" />\r\n          </DButton>\r\n          <DButton flex alert>\r\n            <DeleteForever size={\"18px\"} title=\"Delete Permanently\" />\r\n          </DButton>\r\n        </Content>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <DCard dw=\"100%\" dh=\"100%\" margin=\"12px auto\" flex fcol>\r\n        <DLabel size=\"22px\" bgblue color=\"light\" rounded>\r\n          Sub Services\r\n        </DLabel>\r\n        <DataTable\r\n          columns={columns}\r\n          data={archServices}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={10}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          progressPending={servicesLoad}\r\n          progressComponent={\r\n            <Spinner content=\"Please wait while we fetch our data...\" />\r\n          }\r\n        />\r\n      </DCard>\r\n      <ArchServSubView\r\n        serviceId={serviceIdVal}\r\n        serviceView={serviceView}\r\n        setServiceView={setServiceView}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700 !important\",\r\n      color: \"#232323\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default ArchServSub;\r\n","import React from \"react\";\r\nimport { DSection } from \"../../../styled/containers\";\r\n\r\nimport ArchServCateg from \"./ArchServCateg\";\r\nimport ArchServSub from \"./ArchServSub\";\r\n\r\nconst ArchServ = () => {\r\n  return (\r\n    <DSection\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      mcenter\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n    >\r\n      <ArchServCateg />\r\n      <ArchServSub />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ArchServ;\r\n","import React from \"react\";\r\nimport ArchEmp from \"./employee/ArchEmp\";\r\nimport ArchServ from \"./service/ArchServ\";\r\n\r\nconst Archiving = ({ isArchive }) => {\r\n  switch (isArchive) {\r\n    case \"arch-emp\":\r\n      return <ArchEmp />;\r\n\r\n    case \"arch-serv\":\r\n      return <ArchServ />;\r\n\r\n    case \"arch-review\":\r\n      return <h1>Review</h1>;\r\n\r\n    default:\r\n      return <h3>Not Found</h3>;\r\n  }\r\n};\r\n\r\nexport default Archiving;\r\n","import React, { useState } from \"react\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport DRadio from \"../../components/DRadio\";\r\nimport Archiving from \"../../components/admin/archive/Archiving\";\r\n\r\nconst Archive = () => {\r\n  const stored = localStorage.getItem(\"archive\");\r\n  const [isArchive, setIsArchive] = useState(\r\n    stored === \"arch-emp\"\r\n      ? \"arch-emp\"\r\n      : stored === \"arch-serv\"\r\n      ? \"arch-serv\"\r\n      : \"arch-emp\"\r\n  );\r\n\r\n  const handleRadio = (e) => {\r\n    setIsArchive(e.target.value);\r\n    localStorage.setItem(\"archive\", e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n          bgcolor=\"#eee\"\r\n          rounded\r\n          pad=\"3px 10px\"\r\n          height=\"5em\"\r\n        >\r\n          <Breadcrumb size=\"big\">\r\n            <Breadcrumb.Section>File Maintenance</Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section active>Archive</Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"6px auto\"\r\n          bgcolor=\"#eee\"\r\n          rounded\r\n          pad=\"3px 10px\"\r\n          height=\"100%\"\r\n        >\r\n          <DRadio.RadioGroup>\r\n            <DRadio.RadioInput\r\n              checked={isArchive === \"arch-emp\" ? true : false}\r\n              label=\"Employee\"\r\n              name=\"archive\"\r\n              value=\"arch-emp\"\r\n              id=\"employee\"\r\n              onChange={handleRadio}\r\n            />\r\n            <DRadio.RadioInput\r\n              checked={isArchive === \"arch-serv\" ? true : false}\r\n              label=\"Service\"\r\n              name=\"archive\"\r\n              value=\"arch-serv\"\r\n              id=\"service\"\r\n              onChange={handleRadio}\r\n            />\r\n          </DRadio.RadioGroup>\r\n        </Content>\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <Archiving isArchive={isArchive} />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Archive;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport PrintProvider, { NoPrint } from \"react-easy-print\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\n\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport About from \"./admin/cms/About\";\r\nimport Testimonial from \"./admin/cms/Testimonial\";\r\nimport Gallery from \"./admin/cms/Gallery\";\r\nimport Album from \"./admin/cms/Album\";\r\nimport Contact from \"./admin/cms/Contact\";\r\nimport Archive from \"./admin/Archive\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <PrintProvider>\r\n      <NoPrint>\r\n        <Switch>\r\n          <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n\r\n          <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n          <Redirect from=\"/zeadmin\" to=\"/zeadmin/dashboard\" exact />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/appointment/:_id\"\r\n            component={AppointmentDetails}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/appointments\"\r\n            component={Appointments}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/paccount/:_id\"\r\n            component={PersonalAccount}\r\n          />\r\n          <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/userInfo/:_id\"\r\n            component={UserInfo}\r\n          />\r\n          <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/new_appointment\"\r\n            component={NewAppointment}\r\n          />\r\n\r\n          <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/employee/:_id\"\r\n            component={Employee}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/categories\"\r\n            component={Categories}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/category/:_id\"\r\n            component={Category}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/service/:_id\"\r\n            component={Service}\r\n          />\r\n          <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n          <PrivateRoute exact path=\"/zeadmin/cms_about\" component={About} />\r\n          <PrivateRoute exact path=\"/zeadmin/cms_gallery\" component={Gallery} />\r\n          <PrivateRoute exact path=\"/zeadmin/album/:_id\" component={Album} />\r\n          <PrivateRoute exact path=\"/zeadmin/cms_contact\" component={Contact} />\r\n          <PrivateRoute exact path=\"/zeadmin/archives\" component={Archive} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/zeadmin/cms_testimonial\"\r\n            component={Testimonial}\r\n          />\r\n          <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n          <Route component={Page404} />\r\n        </Switch>\r\n      </NoPrint>\r\n    </PrintProvider>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#FFFFFF\",\r\n  grey: \"#D3CCE3\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\",\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Main from \"./pages/Main\";\r\nimport Admin from \"./pages/Admin\";\r\nimport Page404 from \"./pages/Page404\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./components/theme\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Switch>\r\n            {/* <Redirect from=\"/\" to=\"/zessence\" exact /> */}\r\n            <Route path=\"/zeadmin\" component={Admin} />\r\n            <Route path=\"/\" component={Main} />\r\n\r\n            <Route component={Page404} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`,\r\n      },\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ApolloProvider from \"./ApolloProvider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"toasted-notes/src/styles.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\r\nimport \"./css/slick-theme.custom.css\";\r\nimport \"./css/slick.custom.css\";\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}