{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","util/hooks/useScroll.js","components/main/navigation/Navigation.js","util/graphql/cms.js","components/styled/containers.js","components/styled/button.js","components/styled/scroll.styled.js","components/MouseScroll.js","components/main/home/Showcase.js","util/graphql/service.js","components/styled/text.js","components/FancyText.js","components/styled/utils.js","components/main/utils/ReadMore.js","util/hooks/useWindowSize.js","components/main/home/CategorySection.js","util/graphql/employee.js","components/styled/card.js","components/main/home/TeamSection.js","components/styled/loader.js","components/Spinner.js","components/main/home/AboutSection.js","components/main/home/PromoSection1.js","util/graphql/testimonial.js","components/main/home/TestimonialSection.js","components/main/utils/ScrollButton.js","pages/main/Home.js","components/main/about/Story.js","components/main/about/TeamDetails.js","components/main/about/Team.js","util/useScrollDown.js","pages/main/About.js","util/hooks/useForm.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","util/hooks/timeLineLabels.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Gallery.js","pages/main/Contact.js","components/main/testimonial/ModalReview.js","components/main/testimonial/Review.js","components/main/testimonial/TestimonialCard.js","pages/main/Testimonials.js","pages/main/Services.js","pages/main/Service.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/Toasted.js","components/admin/employees/PhotoBooth.js","components/DTextArea.js","components/admin/employees/PersonalCard.js","components/admin/employees/EmployeeCard.js","components/admin/employees/RemoveService.js","components/admin/employees/ServiceCard.js","components/admin/employees/DetailsEmployee.js","components/admin/employees/ScheduleEmployee.js","components/admin/employees/Info.js","components/admin/employees/EmployeeDelete.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/MenuDots.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","components/admin/appointment/HistoryAppointments.js","pages/admin/FileReport.js","util/hooks/useUploadFile.js","components/admin/cms/home/showcase/ImageSection.js","components/admin/cms/home/showcase/ModalSlide.js","components/admin/cms/home/showcase/NewSlide.js","components/admin/cms/home/showcase/EditSlide.js","components/admin/cms/home/showcase/RemoveSlide.js","components/admin/cms/home/showcase/Showcase.js","components/admin/cms/home/sectionabout/EditModal.js","components/admin/cms/home/sectionabout/SectionAbout.js","components/ReadMore.js","components/admin/cms/home/sectioncategory/CategoryCards.js","components/admin/cms/home/sectioncategory/UpdateSectCategory.js","components/admin/cms/home/sectioncategory/SectionCategory.js","pages/admin/cms/Home.js","components/admin/cms/about/ModalHeading.js","components/admin/cms/about/Heading.js","components/admin/cms/about/ModalStory.js","components/admin/cms/about/Story.js","components/admin/cms/about/ModalMissionVision.js","components/admin/cms/about/Mission.js","pages/admin/cms/About.js","components/admin/testimonial/ToggleView.js","components/admin/testimonial/ModalView.js","components/admin/testimonial/DeleteView.js","components/admin/testimonial/MenuView.js","pages/admin/cms/Testimonial.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","DropdownCustomNav","Dropdown","Burger","setOpen","onClick","useScroll","scrollVal","useState","scrolling","setScrolling","scrollTop","setScrollTop","scrollH","undefined","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Navigation","ref","handler","node","useRef","listener","event","current","contains","document","useContext","handleLogout","trigger","style","fontSize","Icon","name","firstName","scrollBehavior","el","scrollIntoView","behavior","block","className","src","alt","to","userId","_id","scroll","simple","Menu","Item","as","Link","disabled","FETCH_THE_SHOWCASE","gql","FETCH_HOME_SECTION","FETCH_ABOUT_CMS","columns","rows","DContainer","div","DShowCase","height","bgcolor","background","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","med10","med7","med5","DSection","width","mcenter","pad","flex","justify","align","flow","direct","minh","css","maxh","Content","fluid","fixed","bordered","bordbtm","rounded","br1","bs","weight","color","size","bluer","imgHeight","imgWidth","invisible","hoverflow","Overlay","bgr","bgl","bgc","pointer","opac","hovOpac","initbox","cwidth","talign","cmarg","fs","DImage","dashed","m","grayscaling","DCard","p","dh","dw","justifyCenter","justifyAround","justifyBetween","jusitfyFend","alignCenter","alignAround","alignBetween","alignFend","fcol","overf","grayzoom","overlaying","DFooterLinks","DFooter","footer","Section2Styled","visible","JButton","button","keyframes","DMouseScroll","inverted","basic","MouseScroll","Showcase","nextSection","showcase","setShowcase","scrollDown","useQuery","variables","sectionName","showcaseData","data","dataLoading","loading","error","showcaseCMS","content","position","id","dots","infinite","fade","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","adaptiveHeight","responsive","breakpoint","settings","arrows","map","sc","key","bgColor","bgImg","title","subtitle","paragraph","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","DFancyText","h1","FancyText","children","ripple","colors","red","green","yellow","grey","DButton","fSize","center","text","radius","alert","warning","confirm","default","DButtonFree","top","left","bottom","right","DLabel","label","ls","textalign","tt","w","txtColor","hover","breakWord","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","success","ReadMore","ScrollUp","IconWrap","StyledIconBase","shadow","mini","tiny","small","medium","large","menu","bottomcenter","topright","DotsVertical","DotsVerticalRounded","DLink","borderb","DInput","input","DSelect","select","CheckLabel","textt","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","CategorySection","setRef","wid","useWindowSize","isCategories","setIsCategories","categorySection","setCategorySection","dataCategories","loadingCategories","categories","sectionCategory","homeCMS","grid","category","photo","description","length","parser","substr","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","figure","titleSize","JCard2","oflow","JCard3","JCard4","DTestimonialCard","styles","dloading","display","justifyContent","alignItems","flexDirection","lineHeight","TeamSection","cards","employeesAR","setEmployeesAR","limit","data_employeesAR","loading_employeesAR","aestheticiansReceps","count","employee","data-emp","lastName","role","bio","keyring","SpinnerRing","row","Spinner","AboutSection","isAboutSection","setIsAboutSection","about","setAbout","aboutChange","contentName","dataAbout","loadAbout","aboutUsCMS","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","visibility","from","y","ease","Power3","easeOut","scale","animate","story","missionvision","PromoSection1","FETCH_TESTIMONIALS","FETCH_USER_REVIEW","FETCH_VIEWS","TestimonialSection","reviews","setReviews","dataReviews","loadReviews","testimonialsView","rev","Rating","rating","maxRating","icon","message","ScrollButton","intervalId","pageYOffset","clearInterval","this","scrollPx","setInterval","scrollStep","bind","delay","setState","scrollToTop","React","Component","Home","card1","Story","aboutUS","mission","vision","maxHeight","letterSpacing","textAlign","overflowWrap","overflow","padding","TeamDetails","href","Modal","onClose","closeIcon","Team","employees","setEmployees","dataEmployees","loadingEmployees","minHeight","emp","scrollView","About","minWidth","subtitles","overlay","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","push","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","border","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","history","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","console","log","loginUser","userX","general","Signin","timeLineLabels","desiredStartTime","timeLength","interval","breakTimeLength","periodsInADay","moment","duration","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","calendarSize","days","times","appointmentTimes","isEmp","setIsEmp","isServ","setIsServ","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","loading_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","schedule","workLength","breakStart","breakLength","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","calendarClassName","inline","time","Page404","s","AppointmentInputs","categoryValue","setCategoryValue","setServiceValue","setEmployeeVal","setCategories","services","setServices","loading_categories","data_categories","useLazyQuery","categoryId","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","cursor","outline","servEmp","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","useHistory","addInfo","setAddInfo","setService","cache","result","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","toaster","notify","status","expiredLog","check","start","Header","readOnly","toDateString","Actions","Appointment","photos","Gallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","index","currentIndex","views","x","srcset","srcSet","caption","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","ADD_REVIEW","UPDATE_REVIEW","ModalReview","openReview","setOpenReview","userReview","rate","setRate","setMessage","edit","setEdit","mutation","addOrUpdate","onRate","TextArea","Review","setUserReview","dataUserReview","loadUserReview","userTestimonial","slidesPerRow","TestimonialCard","isTestimonials","setIsTestimonials","dataTestimonials","loadTestimonials","testimonials","testimonial","parseInt","updatedAt","Testimonials","Services","sectionDown","Service","params","isReadMore","setIsReadMore","isServices","setIsServices","goBack","onPointerLeave","price","VERRIFIED_APPOINTMENT","ThankYou","emailToken","go","appointmentId","verifiedAppointment","onload","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","dateOfBirth","contact","updateUser","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","Accordion","setActive","contentRef","scrollHeight","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","CANCEL_APPOINTMENT_MUTATION","absoluteCenter","transform","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","new","Popup","circular","mouseEnterDelay","mouseLeaveDelay","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","currentAppoint","setCurrentAppoint","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","cell","fitted","wide","Grid","divided","Column","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","currentTarget","compact","historyAppoint","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","AppointmentDetails","schedDate","myAppoint","setMyAppoint","margn","jusitfy","Main","path","exact","UpcommingAppointments","marginBottom","progressPending","progressComponent","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","pointing","SideNav","activeClassName","Layout","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","CurrentAppointments","isCurrentAppoint","setIsCurrentAppoint","currentAppointmentData","currAppoint","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","Divider","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","timelineLabels","NewDateTime","NewAppointmentDetails","setServiceEmp","CREATE_GUEST_APPOINTMENT","myAppointments","createGuestAppointment","NewAppointment","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","Checkbox","class","Employees","grow","hide","empId","level","aesrep","UPLOAD_EMPLOYEE_PHOTO","PhotoBooth","handleSchedule","addEmployeePhoto","DTextAreaStyled","par","DTextArea","regex","regexNum","UPDATE_EMPLOYEE_PERSONAL","PersonalCard","isEditPersonal","setIsEditPersonal","setContent","personalValue","setPersonalValue","dob","updatePersonalEmployee","handlePersonalValue","handleEditPersonal","trim","test","contactX","contactNum","onInit","editor","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","getData","DecoupledEditor","UPDATE_EMPLOYEE_ACCT","EmployeeCard","isEditEmpAcct","setIsEditEmpAcct","empAcctValue","setEmpAcctValue","notauth","updateEmpAcct","loadEmpAcct","handleEmpAcctValue","handleEditEmplAcct","REMOVE_SERVICE","RemoveService","categId","refetchCategories","categValue","setCategValue","removeService","loadRemoving","data-categid","onMouseOver","dataset","categid","ADD_SERVICES_MUTATION","ServiceCard","openAddService","setOpenAddService","categoryServices","categServ","categoryData","loadCategory","addService","loadAdd","categ","DetailsEmployee","UPDATE_EMPLOYEE_SCHEDULE","ScheduleEmployee","isEditSched","setIsEditSched","schedValues","setSchedValues","parseFloat","updateSchedule","loadSchedule","handleEditSched","handleSchedChange","borderRight","Info","isEmpInfo","ARCHIVE_EMPLOYEE","EmployeeDelete","isDlt","setIsDlt","archiveEmployee","loadArchived","on","flowing","Employee","setEmployee","setIsEmpInfo","employeeLoading","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","Categories","MenuStyledDots","middle","topleft","bottomright","middleright","bottomleft","middleleft","MenuDots","ARCHIVE_CATEGORY","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","archivedCategory","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","isEdit","setIsEdit","updateCategory","CREATE_NEW_SERVICE","NewService","createService","serviceExist","ServiceList","UPLOAD_CATEGORY_PHOTO","Category","setCategory","addCategoryPhoto","ARCHIVE_SERVICE","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","archiveService","loadArchiveService","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","serviceData","serviceLoading","addServicePhoto","link","replace","REPLY_MESSAGE","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","loadingInq","inquiry","replyInquiry","column","READ_INQ","Inquiry","setInquiries","inqVal","setInqVal","data_inquiries","loading_inquiries","readInq","handleMouseOver","inqid","msg","trimString","substring","data-inqid","fetchEmployee","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","updateEmployee","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","empData","empLoading","User","setUsers","data_users","loading_users","allowOverflow","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","HistoryAppointments","historyAppointments","setHistoryAppointments","historyAppointmentData","appointmentHistory","FileReport","useUploadFile","selectedFile","setSelectedFile","preview","setPreview","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectedFile","files","ImageSection","isDark","isPosition","isColor","fileInput","click","opacity","ADD_NEW_SLIDE","UPDATE_SLIDE","ModalSlide","setIsDark","setIsPosition","setIsColor","showcaseId","addOrUpdateSlide","handlePosition","maxLength","checked","triangle","hex","NewSlide","EditSlide","REMOVE_SLIDE","RemoveSlide","isOpenRemove","setIsOpenRemove","removeSlide","UPDATE_ABOUT_SECTION","EditModal","aboutBool","updateAboutSection","SectionAbout","isAbout","setIsAbout","dataAboutSection","loadingAboutSection","loadingAbout","CategoryCards","gridCount","UPDATE_CATEGORY_SECTION","UpdateSectCategory","setOpenCatSec","openCatSec","categorySectionInfo","setGridCount","updateSectionCategory","handleGrid","SectionCategory","sectCategory","setSectCategory","loadSectionCategory","UPDATE_ABOUT_HEADER","ModalHeading","openHead","setOpenHead","isOverlay","setIsOverlay","headers","setHeaders","updateAboutUs","handleChangeHeaders","Heading","dataAboutContent","loadAboutContent","bgColors","UPDATE_ABOUT_STORY","ModalStory","isStory","openStory","setOpenStory","reverse","setReverse","stories","setStories","updateStory","handleChangeStory","setIsStory","dataStoryContent","loadStoryContent","UPDATE_ABOUT_MISSIONVISION","ModalMissionVision","isMissionVision","fileInputMV","openMission","setOpenMission","reverseMV","setReverseMV","mtitle","msubtitle","mparagraph","vtitle","vsubtitle","vparagraph","valuesMV","setValuesMV","previewMV","selectedFileMV","onSelectedFileMV","updateMission","handleChangeValues","horizontal","isMission","setIsMission","dataMissionVision","loadMissionVision","paddingBottom","Mission","TOGGLE_REVIEW","popContent","ToggleView","swid","tggl","toggleValue","setToggleValue","toggleTestimonial","loadToggle","data-sid","sid","ModalView","ridd","ARCHIVED_REVIEW","DeleteView","rvw","isDltModal","setIsDltModal","wdth","unauth","archiveTestimonial","loadArchive","textIndent","MenuView","menuId","review","menuValue","setMenuValue","data-rid","rid","centered","Testimonial","Admin","App","uploadLink","createUploadLink","uri","authLink","setContext","Authorization","client","ApolloClient","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.297222a1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null,\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: (userData) => {},\r\n  employeeLogin: (employeeData) => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {},\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload,\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData,\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData,\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${(props) => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 12vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"li a {color: #fff}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n      &:nth-child(7) {\r\n        transition-delay: 0s, 400ms;\r\n      }\r\n      &:nth-child(8) {\r\n        transition-delay: 0s, 450ms;\r\n      }\r\n      &:nth-child(9) {\r\n        transition-delay: 0s, 500ms;\r\n      }\r\n      &:nth-child(10) {\r\n        transition-delay: 0s, 550ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \".avatarLog {color: #fff}\"};\r\n\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const DropdownCustomNav = styled(Dropdown)`\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & a {\r\n    color: #232323;\r\n    font-weight: 700;\r\n  }\r\n  & a:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & .customDropMenu a {\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.primary} !important;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"color: #fff; a {color: #fff}\"};\r\n\r\n  @media (max-width: 1024px) {\r\n    a {\r\n      color: #ffff;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n    a:hover {\r\n      color: ${({ theme }) => theme.secondary};\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n  }\r\n\r\n  .customDropMenu .customDropMenuItem {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #232323 !important;\r\n    font-size: 14px !important;\r\n  }\r\n  .customDropMenu .customDropMenuItem:hover {\r\n    color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll(scrollVal) {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const scrollH = scrollVal !== undefined ? scrollVal : 100;\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > scrollH);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport {\r\n  DNavigation,\r\n  DMainMenu,\r\n  DRightMenu,\r\n  DropdownCustomNav,\r\n} from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  // let history = useHistory();\r\n\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    // history.push(\"\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const scrollBehavior = (el) =>\r\n    el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to={`/#home`} scroll={scrollBehavior}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/services&rates/#services\" scroll={scrollBehavior}>\r\n              Services\r\n            </Link>\r\n          </li>\r\n\r\n          {/* <Link to=\"/about\">About&nbsp;Us</Link> */}\r\n          <DropdownCustomNav\r\n            trigger={\r\n              <Link to=\"/about/#about\" scroll={scrollBehavior}>\r\n                About&nbsp;Us\r\n              </Link>\r\n            }\r\n            simple\r\n            scrolled={scrolling ? true : undefined}\r\n          >\r\n            <Dropdown.Menu className=\"customDropMenu\">\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#story\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Story\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#team\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Team\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </DropdownCustomNav>\r\n\r\n          <li>\r\n            <Link to=\"/gallery/#gallery\" scroll={scrollBehavior}>\r\n              Gallery\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/testimonials/#tstmnl\" scroll={scrollBehavior}>\r\n              Testimonials\r\n            </Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger} className=\"avatarLog\">\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_THE_SHOWCASE = gql`\r\n  query showcaseCMS($sectionName: String) {\r\n    showcaseCMS(sectionName: $sectionName) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HOME_SECTION = gql`\r\n  query homeCMS($sectionName: String) {\r\n    homeCMS(sectionName: $sectionName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      grid\r\n      dark\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_ABOUT_CMS = gql`\r\n  query aboutUsCMS($contentName: String) {\r\n    aboutUsCMS(contentName: $contentName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_THE_SHOWCASE, FETCH_HOME_SECTION, FETCH_ABOUT_CMS };\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n  margin-top: 12vh;\r\n`;\r\n\r\nexport const DShowCase = styled.div`\r\n  width: 100%;\r\n\r\n  height: ${(props) => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: calc(100% - 20%) calc(100% - 20%);\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n  h1,\r\n  h2,\r\n  p {\r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n\r\n  @media (max-width: 360px) {\r\n    width: 100%;\r\n    background-position: calc(100% - 30%) calc(100% - 30%);\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    h1,\r\n    h2,\r\n    p {\r\n      margin-left: 0px;\r\n    }\r\n    h1,\r\n    h2 {\r\n      font-size: 14px;\r\n    }\r\n    p {\r\n      font-size: 12px;\r\n    }\r\n    button {\r\n      margin-left: 0px;\r\n      font-size: 14px;\r\n      padding: 0.5em 0.8em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: ${(props) =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${(props) => props.gap && props.gap};\r\n  grid-template-rows: ${(props) =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${(props) => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${(props) => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med10 ? props.med10 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med7 ? props.med7 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: ${(props) => (props.med5 ? props.med5 : \"1fr\")};\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${(props) => (props.height ? props.height : \"400px\")};\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  margin: ${(props) =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  position: relative;\r\n\r\n  ${(props) =>\r\n    props.minh &&\r\n    css`\r\n      min-height: ${props.minh};\r\n    `};\r\n  ${(props) =>\r\n    props.maxh &&\r\n    css`\r\n      min-height: ${props.maxh};\r\n    `};\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${(props) => props.height && props.height};\r\n  width: ${(props) =>\r\n    props.width ? props.width : props.fluid ? \"100%\" : \"50%\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  display: ${(props) => (props.flex ? \"flex\" : \"block\")};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${(props) => props.margin && props.margin};\r\n  background: url('${(props) =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${(props) => props.fixed && \"fixed\"};\r\n  background-color: ${(props) => props.bgcolor && props.bgcolor};\r\n  border-width: ${(props) => props.bordered && \"1px\"};\r\n  border-style: ${(props) => props.bordered && \"solid\"};\r\n  border-color: ${(props) =>\r\n    props.bordbtm && \"transparent transparent #ccc transparent\"};\r\n  border-radius: ${(props) =>\r\n    props.rounded\r\n      ? \"10px\"\r\n      : props.br1\r\n      ? \"0% 24% 26% 39% / 20% 0% 100% 0% \"\r\n      : \"0\"};\r\n  box-shadow: ${(props) =>\r\n    props.bs &&\r\n    (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n    \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n    \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n    \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n    \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n  z-index: 2;\r\n  font-weight: ${(props) => props.weight && props.weight};\r\n\r\n  ${(props) =>\r\n    props.maxh &&\r\n    css`\r\n      max-height: ${props.maxh};\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.flow &&\r\n    css`\r\n      flex-flow: ${props.flow};\r\n    `};\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  span {\r\n    color: ${(props) => props.color && props.color};\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${(props) => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${(props) => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${(props) => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${(props) => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n\r\n  visibility: visible;\r\n  pointer-events: all;\r\n  transition: visibility 200ms, opacity 0.3s ease-in-out;\r\n\r\n  ${(props) =>\r\n    props.invisible &&\r\n    css`\r\n      visibility: hidden;\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.hoverflow &&\r\n    css`\r\n      &:hover {\r\n        overflow: auto;\r\n      }\r\n    `};\r\n\r\n\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${(props) =>\r\n    props.bg\r\n      ? props.bg\r\n      : props.bgr\r\n      ? \"linear-gradient(270deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgl\r\n      ? \"linear-gradient(90deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgc\r\n      ? \"rgba(0,0,0,0.4)\"\r\n      : \"rgba(0, 0, 0, 0)\"};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  opacity: ${(props) => props.opac && props.opac};\r\n  transition: opacity 0.6s ease;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${(props) => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: ${(props) => (props.initbox ? \"110%\" : \"0\")};\r\n    height: 110%;\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transform-origin: center;\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      height: 100%;\r\n      width: 85%;\r\n      text-align: center;\r\n      margin: auto;\r\n      transform: rotate(-45deg);\r\n\r\n      .title {\r\n        text-transform: uppercase;\r\n        margin: 1px auto;\r\n      }\r\n      p {\r\n        height: auto;\r\n        font-size: 11px;\r\n      }\r\n\r\n      .title,\r\n      p {\r\n        letter-spacing: 2px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${(props) => (props.cwidth ? props.cwidth : \"80%\")};\r\n    text-align: ${(props) => (props.talign ? props.talign : \"left\")};\r\n    height: auto;\r\n    margin: ${(props) => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    padding: 10px 40px;\r\n\r\n    h1,\r\n    h2,\r\n    p {\r\n      letter-spacing: 5px;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    h3,\r\n    h4,\r\n    .ps {\r\n      letter-spacing: 1px;\r\n      line-height: 1.4;\r\n    }\r\n    .ps {\r\n      font-size: 10px;\r\n    }\r\n\r\n    h1 {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"60px\")};\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${(props) => (props.height ? props.height : \"300px\")};\r\n  width: ${(props) => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${(props) =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  border: ${(props) =>\r\n    props.bordered\r\n      ? \"1px solid #000\"\r\n      : props.dashed\r\n      ? \"1px dashed #ccc\"\r\n      : \"none\"};\r\n  margin: ${(props) => (props.m ? props.m : \"0 auto\")};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: pointer;\r\n\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    transition: all 0.6s ease-in-out;\r\n    ${(props) =>\r\n      props.grayscaling &&\r\n      css`\r\n        filter: grayscale(100%);\r\n      `}\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: ${(props) => (props.p ? props.p : \"10px\")};\r\n  height: ${(props) => (props.dh ? props.dh : \"300px\")};\r\n  width: ${(props) => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  margin: ${(props) => (props.mcenter ? \"0 auto\" : props.margin)};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => (props.fcol ? \"column\" : \"row\")};\r\n\r\n  ${(props) =>\r\n    props.maxh &&\r\n    css`\r\n      max-height: ${props.maxh};\r\n    `};\r\n\r\n  overflow: ${(props) => (props.overf ? \"visible\" : \"hidden\")};\r\n  background: ${(props) => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${(props) =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n        \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n        \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 3;\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n  ${(props) =>\r\n    props.grayzoom &&\r\n    css`\r\n      &:hover {\r\n        ${DImage} {\r\n          img {\r\n            filter: grayscale(0);\r\n            transform: scale(1.2);\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.overlaying &&\r\n    css`\r\n      &:hover {\r\n        ${Overlay} {\r\n          opacity: 0;\r\n          pointer-events: none;\r\n        }\r\n      }\r\n    `}\r\n\r\n    ${(props) =>\r\n      props.hoverflow &&\r\n      css`\r\n        &:hover {\r\n          overflow: auto;\r\n        }\r\n      `};\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  position: relative;\r\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\r\n  max-height: 100vh;\r\n  min-height: 30vh;\r\n  height: 100%;\r\n  width: ${(props) => (props.width ? props.width : \"90%\")};\r\n  margin: 24px auto;\r\n  text-align: center;\r\n\r\n  .switch {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: auto;\r\n    margin-bottom: 24px;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 24px;\r\n  }\r\n\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n    padding-top: 48px;\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: space-between;\r\n      ${(props) => props.alt && \"flex-direction: row-reverse\"};\r\n      margin: 0 auto;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 90%;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            text-align: left;\r\n            margin-bottom: 24px;\r\n            .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding: 12px;\r\n            margin-bottom: 56px;\r\n            text-align: justify;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 55%;\r\n        height: 100%;\r\n        position: relative;\r\n\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n              object-fit: cover;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    .sec2-container {\r\n      width: 100%;\r\n      .sec2-inner {\r\n        width: 100%;\r\n        justify-content: center;\r\n        margin: 0 auto;\r\n        .sec2-content {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .sec2-images {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 18px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const JButton = styled.button`\r\n  position: relative;\r\n  padding: 1em 1.5em;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 18px;\r\n  margin: 1em 0.8em;\r\n  color: ${({ theme }) => theme.secondary};\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n\r\n  &::after,\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 20%;\r\n    height: 20%;\r\n    border: 2px solid;\r\n    transition: all 0.6s ease;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  &::after {\r\n    bottom: -2px;\r\n    right: -2px;\r\n    border-top-color: transparent;\r\n    border-left-color: transparent;\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &::before {\r\n    top: -2px;\r\n    left: -2px;\r\n    border-bottom-color: transparent;\r\n    border-right-color: transparent;\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:hover:after,\r\n  &:hover:before {\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst scroll = keyframes`\r\n\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    10% {\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    }\r\n    100% {\r\n        transform: translateY(5px);\r\n        opacity: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const DMouseScroll = styled.div`\r\n  position: absolute;\r\n  top: 85%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n\r\n  &:hover {\r\n    .mousey {\r\n      opacity: 1;\r\n      left: 50%;\r\n    }\r\n    .scroll-downs {\r\n      &::before,\r\n      &::after {\r\n        top: 50%;\r\n        left: 50%;\r\n        border: 1px solid rgba(0, 0, 0, 0.5);\r\n      }\r\n    }\r\n  }\r\n\r\n  .scroll-downs {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      content: \"\";\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px solid rgba(0, 0, 0, 0.25);\r\n      transform: translate(-50%, -50%);\r\n      border-radius: 100%;\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n    &::before {\r\n      top: 48%;\r\n      left: 60%;\r\n    }\r\n\r\n    &::after {\r\n      top: 52%;\r\n      left: 52%;\r\n    }\r\n  }\r\n\r\n  .mousey {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 2px;\r\n    padding: 3px 5px;\r\n    height: 15px;\r\n    border: 2px solid #232323;\r\n    border-radius: 25px;\r\n    opacity: 0.75;\r\n    box-sizing: content-box;\r\n    background: #232323;\r\n  }\r\n\r\n  .scroller {\r\n    width: 2px;\r\n    height: 5px;\r\n    border-radius: 25%;\r\n    background-color: #fff;\r\n    animation-name: ${scroll};\r\n    animation-duration: 2.2s;\r\n    animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.inverted &&\r\n    \".mousey{background: #ffffff; border-color: #ffffff;} .scroller{background-color: #232323;} .scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.25)}} &:hover{.scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.5)}}}\"}\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \".mousey{background: transparent; border-width: 1px;} .scroller{background-color: #fff;} \"}\r\n`;\r\n","import React from \"react\";\r\nimport { DMouseScroll } from \"./styled/scroll.styled\";\r\n\r\nconst MouseScroll = props => {\r\n  return (\r\n    <DMouseScroll {...props}>\r\n      <div className=\"scroll-downs\">\r\n        <div className=\"mousey\">\r\n          <div className=\"scroller\"></div>\r\n        </div>\r\n      </div>\r\n    </DMouseScroll>\r\n  );\r\n};\r\n\r\nexport default MouseScroll;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { JButton } from \"../../styled/button\";\r\nimport Slider from \"react-slick\";\r\nimport MouseScroll from \"../../MouseScroll\";\r\n\r\nconst Showcase = ({ nextSection }) => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(nextSection);\r\n  };\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n    adaptiveHeight: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          arrows: false,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }} id=\"home\">\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"90vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcase.map((sc) => (\r\n            <DShowCase\r\n              height=\"90vh\"\r\n              key={sc._id}\r\n              bgcolor={sc.bgColor}\r\n              background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n            >\r\n              {/* {sc.bgImg && (\r\n                <DImage height=\"100%\">\r\n                  <img\r\n                    src={\r\n                      sc.bgImg !== null || sc.bgImg !== undefined\r\n                        ? `/images/cms/home/${sc.bgImg}`\r\n                        : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"showcase\"\r\n                  />\r\n                </DImage>\r\n              )} */}\r\n\r\n              <Overlay\r\n                flex\r\n                bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                justify={\r\n                  sc.position === \"left\"\r\n                    ? \"flex-start\"\r\n                    : sc.position === \"right\"\r\n                    ? \"flex-end\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                talign={\r\n                  sc.position === \"left\"\r\n                    ? \"left\"\r\n                    : sc.position === \"right\"\r\n                    ? \"right\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                align=\"center\"\r\n                className={sc.dark ? \"dark\" : \"\"}\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h1>{sc.title}</h1>\r\n                  <h2>{sc.subtitle}</h2>\r\n                  <p>{sc.paragraph}</p>\r\n                  <JButton\r\n                    className={sc.dark ? \"dark\" : \"\"}\r\n                    dark={sc.dark ? true : false}\r\n                  >\r\n                    Book Appointment\r\n                    <Link to=\"/appointment\" />\r\n                  </JButton>\r\n                </div>\r\n              </Overlay>\r\n              <MouseScroll\r\n                onClick={scrollDown}\r\n                inverted={sc.dark ? true : false}\r\n              />\r\n            </DShowCase>\r\n          ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  height: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  display: \"block\",\r\n};\r\n\r\nexport default Showcase;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories($active: Boolean) {\r\n    categories(active: $active) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n        active\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n        active\r\n      }\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices($active: Boolean) {\r\n    allServices(active: $active) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      active\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID, $active: Boolean) {\r\n    services(categoryId: $categoryId, active: $active) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      active\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      active\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DFancyText = styled.h1`\r\n  font-size: ${(props) => (props.size ? props.size : \"22px\")};\r\n  letter-spacing: 2px;\r\n  margin: 24px auto;\r\n  text-align: center;\r\n  font-family: \"Playfair Display\";\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  display: table;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  &:before,\r\n  &:after {\r\n    border-top-width: 2px;\r\n    border-top-style: solid;\r\n    border-top-color: ${(props) =>\r\n      props.color\r\n        ? props.color\r\n        : props.alt\r\n        ? ({ theme }) => theme.light\r\n        : ({ theme }) => theme.dark};\r\n    content: \"\";\r\n    display: table-cell;\r\n    position: relative;\r\n    top: 0.5em;\r\n    width: 100px;\r\n    min-width: 30px;\r\n  }\r\n  &:before {\r\n    right: 3%;\r\n  }\r\n  &:after {\r\n    left: 3%;\r\n  }\r\n  @media (max-width: 768px) {\r\n    margin: 0 auto;\r\n\r\n    font-size: 18px;\r\n  }\r\n\r\n  @media (max-width: 360px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DFancyText } from \"./styled/text\";\r\n\r\nconst FancyText = props => {\r\n  return <DFancyText {...props}>{props.children}</DFancyText>;\r\n};\r\n\r\nexport default FancyText;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\nimport { StyledIconBase } from \"@styled-icons/styled-icon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst colors = {\r\n  red: ({ theme }) => theme.red,\r\n  blue: ({ theme }) => theme.blue,\r\n  bluer: ({ theme }) => theme.bluer,\r\n  green: ({ theme }) => theme.green,\r\n  yellow: ({ theme }) => theme.yellow,\r\n  primary: ({ theme }) => theme.primary,\r\n  secondary: ({ theme }) => theme.secondary,\r\n  dark: ({ theme }) => theme.dark,\r\n  light: ({ theme }) => theme.light,\r\n  grey: ({ theme }) => theme.grey,\r\n};\r\n\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${(props) => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${(props) => (props.size ? props.size : \"36px\")};\r\n  width: ${(props) =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${(props) => (props.pad ? props.pad : \"4px 10px\")};\r\n  line-height: 1.42857143;\r\n  margin: ${(props) => (props.center ? \"1.5% auto\" : \"1.5%\")};\r\n  text-align: center;\r\n  text-transform: ${(props) => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n\r\n\r\n\r\n  border-radius: ${(props) =>\r\n    props.radius ? props.radius : props.circle ? \"50%\" : \"5px\"};\r\n  border-width: ${(props) => (props.basic ? \"1px\" : \"0\")};\r\n  border-style: ${(props) => props.basic && \"solid\"};\r\n  border-color: ${(props) =>\r\n    props.alert\r\n      ? colors.red\r\n      : props.warning\r\n      ? colors.yellow\r\n      : props.confirm\r\n      ? colors.green\r\n      : props.primary\r\n      ? colors.primary\r\n      : props.default\r\n      ? colors.bluer\r\n      : colors.blue};\r\n      \r\n  color: ${(props) =>\r\n    props.red\r\n      ? colors.red\r\n      : props.yellow\r\n      ? colors.yellow\r\n      : props.green\r\n      ? colors.green\r\n      : props.primary\r\n      ? colors.primary\r\n      : props.bluer\r\n      ? colors.bluer\r\n      : colors.light};\r\n\r\n  background: ${(props) =>\r\n    props.basic\r\n      ? \"transparent\"\r\n      : props.alert\r\n      ? colors.red\r\n      : props.warning\r\n      ? colors.yellow\r\n      : props.confirm\r\n      ? colors.green\r\n      : props.primary\r\n      ? colors.primary\r\n      : props.default\r\n      ? colors.bluer\r\n      : colors.blue};\r\n\r\n  ${(props) =>\r\n    props.disabled &&\r\n    css`\r\n      background: #e9e4f0;\r\n      color: #d3cce3;\r\n    `};\r\n\r\n\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n   opacity: 0.8;\r\n   color: #fff;\r\n   background: ${(props) =>\r\n     props.disabled\r\n       ? \"#e9e4f0\"\r\n       : props.alert\r\n       ? colors.red\r\n       : props.warning\r\n       ? colors.yellow\r\n       : props.confirm\r\n       ? colors.green\r\n       : props.primary\r\n       ? colors.primary\r\n       : props.default\r\n       ? colors.bluer\r\n       : colors.blue};\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${colors.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n\r\n  ${(props) =>\r\n    props.flex &&\r\n    css`\r\n      display: flex;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n    `};\r\n`;\r\n\r\nexport const DButtonFree = styled(DButton)`\r\n  position: absolute;\r\n  top: ${(props) => props.top && props.top};\r\n  left: ${(props) => props.left && props.left};\r\n  bottom: ${(props) => props.bottom && props.bottom};\r\n  right: ${(props) => props.right && props.right};\r\n`;\r\n\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  position: relative;\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  letter-spacing: ${(props) => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${(props) => (props.weight ? props.weight : 500)};\r\n  padding: ${(props) => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${(props) => (props.m ? props.m : \"2%\")};\r\n  background: ${(props) => (props.bgcolor ? props.bgcolor : \"transparent\")};\r\n  border-radius: ${(props) => props.rounded && \"5px\"};\r\n  text-align: ${(props) => (props.textalign ? props.textalign : \"left\")};\r\n  text-transform: ${(props) => props.tt && props.tt};\r\n  width: ${(props) => (props.w ? props.w : \"auto\")};\r\n  display: ${(props) => (props.flex ? \"flex\" : \"inline-block\")};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n  }\r\n  ${(props) =>\r\n    props.txtColor &&\r\n    css`\r\n      font-weight: 700;\r\n      color: ${props.txtColor === \"primary\"\r\n        ? colors.primary\r\n        : props.txtColor === \"secondary\"\r\n        ? colors.secondary\r\n        : props.txtColor === \"green\"\r\n        ? colors.green\r\n        : props.txtColor === \"red\"\r\n        ? colors.red\r\n        : props.txtColor === \"blue\"\r\n        ? colors.blue\r\n        : props.txtColor === \"bluer\"\r\n        ? colors.bluer\r\n        : props.txtColor === \"yellow\"\r\n        ? colors.yellow\r\n        : props.txtColor === \"dark\"\r\n        ? colors.dark\r\n        : colors.grey};\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.color &&\r\n    css`\r\n      color: ${colors.light};\r\n      font-weight: 700;\r\n      background-color: ${props.color === \"primary\"\r\n        ? colors.primary\r\n        : props.color === \"secondary\"\r\n        ? colors.secondary\r\n        : props.color === \"green\"\r\n        ? colors.green\r\n        : props.color === \"red\"\r\n        ? colors.red\r\n        : props.color === \"blue\"\r\n        ? colors.blue\r\n        : props.color === \"bluer\"\r\n        ? colors.bluer\r\n        : props.color === \"yellow\"\r\n        ? colors.yellow\r\n        : props.color === \"dark\"\r\n        ? colors.dark\r\n        : colors.grey};\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.hover &&\r\n    css`\r\n      opacity: 0.8;\r\n      cursor: pointer;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.breakWord &&\r\n    css`\r\n      overflow-wrap: break-word;\r\n      word-break: break-word;\r\n      hyphens: auto;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.pointer &&\r\n    css`\r\n      &:before {\r\n        position: absolute;\r\n        width: 8px;\r\n        height: 8px;\r\n        z-index: -1;\r\n        border: 1px solid\r\n          ${props.color === \"primary\"\r\n            ? colors.primary\r\n            : props.color === \"secondary\"\r\n            ? colors.secondary\r\n            : props.color === \"green\"\r\n            ? colors.green\r\n            : props.color === \"red\"\r\n            ? colors.red\r\n            : props.color === \"blue\"\r\n            ? colors.blue\r\n            : props.color === \"bluer\"\r\n            ? colors.bluer\r\n            : props.color === \"yellow\"\r\n            ? colors.yellow\r\n            : props.color === \"dark\"\r\n            ? colors.dark\r\n            : colors.grey};\r\n        border-left: 1px solid transparent;\r\n        background: ${props.color === \"primary\"\r\n          ? colors.primary\r\n          : props.color === \"secondary\"\r\n          ? colors.secondary\r\n          : props.color === \"green\"\r\n          ? colors.green\r\n          : props.color === \"red\"\r\n          ? colors.red\r\n          : props.color === \"blue\"\r\n          ? colors.blue\r\n          : props.color === \"bluer\"\r\n          ? colors.bluer\r\n          : props.color === \"yellow\"\r\n          ? colors.yellow\r\n          : props.color === \"dark\"\r\n          ? colors.dark\r\n          : colors.grey};\r\n        filter: brightness(90%);\r\n\r\n        top: 100%;\r\n        left: 50%;\r\n        margin-left: -4px;\r\n        content: \"\";\r\n        transform: rotate(45deg);\r\n        margin-top: -4px;\r\n      }\r\n    `};\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${colors.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${colors.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${(props) => (props.bg ? props.bg : colors.dark)};\r\n    color: ${(props) => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${(props) =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${(props) =>\r\n        props.activeBg ? props.activeBg : colors.blue};\r\n      color: ${(props) =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${(props) => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${(props) =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${colors.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${colors.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${(props) =>\r\n    props.alert\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.success\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.warning\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(255, 255, 255,1.0)\"};\r\n  height: auto;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n  z-index: 5;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    min-width: 200px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 50px;\r\n\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .close {\r\n    height: 90%;\r\n    margin: 1% auto;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    fontweight: bold;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.p`\r\n  text-align: ${(props) =>\r\n    props.center ? \"center\" : props.left ? \"left\" : \"right\"};\r\n  cursor: pointer !important;\r\n\r\n  span {\r\n    color: ${(props) =>\r\n      props.color ? props.color : colors.secondary};\r\n    display: inline-block;\r\n    position: relative;\r\n    font-weight: 700;\r\n    font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n    &:after {\r\n      content: \"\\f061\";\r\n      font-family: FontAwesome;\r\n      ${(props) =>\r\n        props.hover\r\n          ? css`\r\n              margin-left: -10px;\r\n              opacity: 0;\r\n            `\r\n          : css`\r\n              margin-left: 5px;\r\n              opacity: 1;\r\n            `};\r\n      vertical-align: middle;\r\n      transition: margin 0.3s, opacity 0.3s;\r\n    }\r\n    a {\r\n      color: ${colors.secondary};\r\n    }\r\n    &:hover {\r\n      &:after {\r\n        margin-left: 5px;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollUp = styled(Icon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: block;\r\n`;\r\n\r\nexport const IconCustom = styled(Icon)`\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n  transition: all 0.5s ease;\r\n  margin: 2%;\r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const IconWrap = styled.div`\r\n  ${StyledIconBase} {\r\n    color: ${(props) =>\r\n      props.color === \"primary\"\r\n        ? colors.primary\r\n        : props.color === \"bluer\"\r\n        ? colors.bluer\r\n        : props.color === \"red\"\r\n        ? colors.red\r\n        : props.color === \"green\"\r\n        ? colors.green\r\n        : props.color === \"yellow\"\r\n        ? colors.yellow\r\n        : props.color === \"grey\"\r\n        ? colors.grey\r\n        : props.color === \"dark\"\r\n        ? colors.dark\r\n        : \"#fff\"};\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n    transition: all 0.5s ease;\r\n    margin: ${(props) =>\r\n      props.mcenter ? \"0 auto\" : props.margin ? props.margin : \"5px\"};\r\n    outline: none;\r\n    padding: ${(props) => (props.pad ? props.pad : \"0\")};\r\n    visibility: visible;\r\n    pointer-events: all;\r\n    transition: visibility 200ms, opacity 0.3s ease-in-out;\r\n\r\n    ${(props) =>\r\n      props.bgcolor &&\r\n      css`\r\n        background-color: ${props.bgcolor};\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.shadow &&\r\n      css`\r\n        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.12), 0 2px 2px rgba(0, 0, 0, 0.12),\r\n          0 4px 4px rgba(0, 0, 0, 0.12), 0 8px 8px rgba(0, 0, 0, 0.12),\r\n          0 16px 16px rgba(0, 0, 0, 0.12);\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.invisible &&\r\n      css`\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        pointer-events: none;\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.size &&\r\n      css`\r\n        width: ${props.size};\r\n        height: ${props.size};\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.mini\r\n        ? css`\r\n            width: 9px;\r\n            height: 9px;\r\n          `\r\n        : props.tiny\r\n        ? css`\r\n            width: 18px;\r\n            height: 18px;\r\n          `\r\n        : props.small\r\n        ? css`\r\n            width: 22px;\r\n            height: 22px;\r\n          `\r\n        : props.medium\r\n        ? css`\r\n            width: 26px;\r\n            height: 26px;\r\n          `\r\n        : props.large\r\n        ? css`\r\n            width: 32px;\r\n            height: 32px;\r\n          `\r\n        : css`\r\n            width: 25px;\r\n            height: 25px;\r\n          `};\r\n\r\n    ${(props) =>\r\n      props.circle &&\r\n      css`\r\n        border-radius: 100%;\r\n      `};\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      transform: scale(1.1);\r\n\r\n      ${(props) =>\r\n        props.menu &&\r\n        css`\r\n          border-radius: 100%;\r\n          background: #ccc;\r\n        `}\r\n    }\r\n\r\n    ${(props) =>\r\n      props.bottomcenter &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        bottom: 2%;\r\n        left: 0;\r\n        right: 0;\r\n        margin: 0 auto;\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.topright &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        top: 2%;\r\n        right: 0;\r\n        margin: 0 auto;\r\n      `};\r\n\r\n    ${(props) =>\r\n      props.right &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        top: 2%;\r\n        right: 0;\r\n        bottom: 0;\r\n        margin: 0 auto;\r\n      `};\r\n  }\r\n`;\r\n\r\nexport const DotsVertical = styled(DotsVerticalRounded)`\r\n  color: #232323;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    border-radius: 100%;\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nexport const DLink = styled(Link)`\r\n  color: ${(props) => (props.color ? props.color : \"#232323\")} !important;\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  padding-bottom: 5px;\r\n  &:hover {\r\n    color: ${colors.secondary} !important;\r\n    border-bottom: ${(props) => props.borderb && \"1px solid #232323\"};\r\n    border-bottom-color: ${colors.secondary};\r\n  }\r\n`;\r\n\r\nexport const DInput = styled.input`\r\n  padding: 10px;\r\n  width: auto;\r\n  height: 100%;\r\n  border: 1px solid rgba(0, 0, 0, 0.4);\r\n  border-radius: 5px;\r\n  outline: none;\r\n\r\n  ${(props) =>\r\n    props.error &&\r\n    css`\r\n      background: #fff6f6;\r\n      color: #ce9a99;\r\n      font-weight: 700;\r\n      border-color: #ce9a99;\r\n    `};\r\n\r\n  ${(props) =>\r\n    props.fluid &&\r\n    css`\r\n      width: 100%;\r\n    `};\r\n  &:focus {\r\n    box-shadow: 0 0 2px 1px ${colors.primary};\r\n  }\r\n`;\r\n\r\nexport const DSelect = styled.select`\r\n  padding: 10px;\r\n  width: auto;\r\n  height: 100%;\r\n  border: 1px solid rgba(0, 0, 0, 0.4);\r\n  border-radius: 5px;\r\n  outline: none;\r\n\r\n  ${(props) =>\r\n    props.fluid &&\r\n    css`\r\n      width: 100%;\r\n    `};\r\n  &:focus {\r\n    box-shadow: 0 0 2px 1px ${colors.primary};\r\n  }\r\n`;\r\n\r\nexport const CheckLabel = styled.label`\r\n  font-weight: ${(props) =>\r\n    props.weight === \"fw500\" ? \"500 !important\" : \"700 !important\"};\r\n  color: ${(props) =>\r\n    props.color === \"green\"\r\n      ? colors.green\r\n      : props.color === \"bluer\"\r\n      ? colors.bluer\r\n      : props.color === \"blue\"\r\n      ? \"rgba(33, 147, 176, 0.7)\"\r\n      : props.color === \"dark\"\r\n      ? colors.dark\r\n      : props.color === \"grey\"\r\n      ? colors.grey\r\n      : colors.secondary};\r\n  text-transform: ${(props) => (props.textt ? props.textt : \"none\")};\r\n`;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"../../styled/utils\";\r\n\r\nconst ReadMore = (props) => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_HOME_SECTION } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DCard,\r\n  DImage,\r\n} from \"../../styled/containers\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst CategorySection = ({ setRef }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const [categorySection, setCategorySection] = useState({});\r\n\r\n  const { data: dataCategories, loading: loadingCategories } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategories) {\r\n      setIsCategories(dataCategories.categories);\r\n    }\r\n  }, [dataCategories]);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setCategorySection(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <DSection\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      pad=\"20px 0\"\r\n      bgcolor={categorySection.bgColor}\r\n      ref={setRef}\r\n    >\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n        className={categorySection.dark ? \"dark\" : \"\"}\r\n      >\r\n        {categorySection && (\r\n          <>\r\n            {categorySection.title !== \"\" && (\r\n              <FancyText size=\"28px\" alt={categorySection.dark ? true : false}>\r\n                {categorySection.title}\r\n              </FancyText>\r\n            )}\r\n            {categorySection.subtitle !== \"\" && (\r\n              <h3>{categorySection.subtitle}</h3>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <Content height=\"100%\" width=\"100%\">\r\n          {loadingCategories ? (\r\n            <DGrid four gap=\"20px\">\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n            </DGrid>\r\n          ) : (\r\n            <DGrid\r\n              two={categorySection.grid === 2 ? true : false}\r\n              three={categorySection.grid === 3 ? true : false}\r\n              four={categorySection.grid === 4 ? true : false}\r\n              gap=\"20px\"\r\n            >\r\n              {isCategories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/zeadmin/category/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategorySection;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees($active: Boolean) {\r\n    employees(active: $active) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      level\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      categoryServices {\r\n        _id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int, $active: Boolean) {\r\n    aestheticiansReceps(limit: $limit, active: $active) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      level\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      categoryServices {\r\n        _id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      level\r\n      dateOfBirth\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      categoryServices {\r\n        _id\r\n        name\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const JCard = styled.figure`\r\n  background-color: #fff;\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  height: ${(props) => (props.height ? props.height : \"auto\")};\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  -webkit-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n  font-size: 12px;\r\n  margin: 24px auto;\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  img {\r\n    backface-visibility: hidden;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    background-color: #fe8c00;\r\n    opacity: 0.5;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  &:before {\r\n    -webkit-transform: skew(30deg) translateX(-80%);\r\n    transform: skew(30deg) translateX(-80%);\r\n  }\r\n\r\n  &:after {\r\n    -webkit-transform: skew(-30deg) translateX(-70%);\r\n    transform: skew(-30deg) translateX(-70%);\r\n  }\r\n\r\n  figcaption {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    padding: 25px 40% 25px 20px;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      background-color: #2193b0;\r\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\r\n      content: \"\";\r\n      opacity: 0.5;\r\n      z-index: -1;\r\n    }\r\n\r\n    &::before {\r\n      -webkit-transform: skew(30deg) translateX(-100%);\r\n      transform: skew(30deg) translateX(-100%);\r\n    }\r\n\r\n    &::after {\r\n      -webkit-transform: skew(-30deg) translateX(-90%);\r\n      transform: skew(-30deg) translateX(-90%);\r\n    }\r\n\r\n    h3,\r\n    p {\r\n      margin: 0;\r\n      opacity: 0;\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: ${(props) => (props.titleSize ? props.titleSize : \"36px\")};\r\n      font-weight: 700;\r\n      line-height: 1em;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n      font-size: 1em;\r\n    }\r\n  }\r\n\r\n  &:hover h3,\r\n  &.hover h3,\r\n  &:hover p,\r\n  &.hover p {\r\n    -webkit-transform: translateY(0);\r\n    transform: translateY(0);\r\n    opacity: 0.9;\r\n    -webkit-transition-delay: 0.2s;\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover:before,\r\n  &.hover:before {\r\n    -webkit-transform: skew(30deg) translateX(-20%);\r\n    transform: skew(30deg) translateX(-20%);\r\n    -webkit-transition-delay: 0.05s;\r\n    transition-delay: 0.05s;\r\n  }\r\n\r\n  &:hover:after,\r\n  &.hover:after {\r\n    -webkit-transform: skew(-30deg) translateX(-10%);\r\n    transform: skew(-30deg) translateX(-10%);\r\n  }\r\n\r\n  &:hover figcaption:before,\r\n  &.hover figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-40%);\r\n    transform: skew(30deg) translateX(-40%);\r\n    -webkit-transition-delay: 0.15s;\r\n    transition-delay: 0.15s;\r\n  }\r\n\r\n  &:hover figcaption:after,\r\n  &.hover figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-30%);\r\n    transform: skew(-30deg) translateX(-30%);\r\n    -webkit-transition-delay: 0.1s;\r\n    transition-delay: 0.1s;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nexport const JCard2 = styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    background: #fff;\r\n    max-width: 100%;\r\n    min-width: 240px;\r\n    height: 400px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n\r\n    .thumbnail {\r\n      width: 100%;\r\n      height:100%;\r\n      overflow: hidden;\r\n      border-radius: 10px 10px 0 0;\r\n      background: #eee;\r\n      img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n       object-fit: cover;\r\n      }\r\n    }\r\n\r\n \r\n    .post-content {\r\n      position: absolute;\r\n      bottom: 0;\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border-radius: 0 0 10px 10px;\r\n      .category {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 0;\r\n        background: ${({ theme }) => theme.secondary};\r\n        padding: 10px 15px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n      }\r\n      .title {\r\n        color: #ccc;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n      }\r\n      .sub_title {\r\n        margin: 0;\r\n        padding: 0 0 20px;\r\n        color: ${({ theme }) => theme.secondary};\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n      }\r\n\r\n      .description {\r\n          height: 10px;\r\n          margin-top: 12px;\r\n         \r\n          &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            background-color: #f5f5f5;\r\n          }\r\n\r\n          &::-webkit-scrollbar {\r\n            width: 10px;\r\n            background-color: #f5f5f5;\r\n          }\r\n          &::-webkit-scrollbar-thumb {\r\n            background-image: -webkit-gradient(\r\n              linear,\r\n              left bottom,\r\n              left top,\r\n              color-stop(0.44, rgb(122, 153, 217)),\r\n              color-stop(0.72, rgb(73, 125, 189)),\r\n              color-stop(0.86, rgb(28, 58, 148))\r\n            );\r\n          }\r\n        \r\n          p{\r\n            color: #232323;\r\n            font-size: 14px;\r\n            line-height: 1.8em;\r\n            opacity: 0;\r\n            \r\n            pointer-events: none;\r\n            transition: all 0.45s ease;\r\n            &:first-of-type {\r\n              margin-top: 1.25rem;\r\n              &:before {\r\n                content: \"\";\r\n                position: absolute;\r\n                height: 5px;\r\n                background: ${({ theme }) => theme.blue};\r\n                width: 35px;\r\n                top: -0.75rem;\r\n                border-radius: 3px;\r\n              }\r\n            }\r\n          }\r\n        \r\n        }\r\n     \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .thumbnail {\r\n        background-color: #000;\r\n    \r\n        img {\r\n          -webkit-transform: scale(1.1);\r\n          -moz-transform: scale(1.1);\r\n          transform: scale(1.1);\r\n          opacity: 0.8;\r\n          transition: all 0.8s ease-in;\r\n        }\r\n        transition: all 0.8s ease-in-out;\r\n\r\n      }\r\n      .post-content{\r\n        .description{\r\n          height: 175px;\r\n          transition: height 0.6s ease-in-out;\r\n          overflow: ${(props) => props.oflow && \"auto\"};\r\n          p{\r\n            cursor: default;\r\n            pointer-events: auto;\r\n            -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n            opacity: 0.9;\r\n            -webkit-transition-delay: 0.6s;\r\n            transition-delay: 0.6s;\r\n          }\r\n         \r\n        }\r\n        \r\n      }\r\n     \r\n\r\n    }\r\n  \r\n`;\r\n\r\nexport const JCard3 = styled.div`\r\n  .description {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #fff;\r\n    z-index: 1;\r\n\r\n    h1 {\r\n      line-height: 1;\r\n      margin: 0;\r\n      font-size: 1.7rem;\r\n    }\r\n    h4 {\r\n      font-size: 1rem;\r\n      font-weight: 300;\r\n      text-transform: capitalize;\r\n      color: #a2a2a2;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      margin: 1rem 0 0;\r\n      font-size: 16px;\r\n      &:first-of-type {\r\n        margin-top: 1.25rem;\r\n        &:before {\r\n          content: \"\";\r\n          position: absolute;\r\n          height: 5px;\r\n          background: ${({ theme }) => theme.blue};\r\n          width: 35px;\r\n          top: -0.75rem;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JCard4 = styled.figure`\r\n  position: relative;\r\n  margin: 10px;\r\n  min-width: 230px;\r\n  max-width: 315px;\r\n  width: 100%;\r\n  height: ${(props) => props.height && props.height};\r\n  color: #000000;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n  font-size: 14px;\r\n\r\n  & * {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .profile-image {\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 300px;\r\n    z-index: 1;\r\n    position: relative;\r\n    margin: ${(props) => props.margin && props.margin};\r\n    top: ${(props) => props.top && props.top};\r\n    right: ${(props) => props.right && props.right};\r\n    bottom: ${(props) => props.bottom && props.bottom};\r\n    left: ${(props) => props.left && props.left};\r\n    padding: 10px;\r\n    border: 2px solid #6dd5ed;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      vertical-align: top;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    .profile-image {\r\n      border-color: #2193b0;\r\n    }\r\n    figcaption {\r\n      box-shadow: ${(props) =>\r\n        props.bs\r\n          ? props.bs\r\n          : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n            \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n            \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n            \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n            \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n    }\r\n  }\r\n\r\n  figcaption {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    padding: 125px 25px 25px;\r\n    margin-top: -100px;\r\n    display: inline-block;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.11)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.11)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.11)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.11)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.11)\")};\r\n\r\n    h3,\r\n    h4,\r\n    p {\r\n      margin: 0 0 5px;\r\n    }\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    h4 {\r\n      color: #8c8c8c;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n      letter-spacing: 1px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .icons {\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .linkToPage {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const DTestimonialCard = styled.div`\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  outline: 0;\r\n  border: 0;\r\n  position: relative;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n\r\n  figure {\r\n    position: relative;\r\n    float: left;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    min-width: 90%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    color: #000000;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    background: #2193b0;\r\n    background: -webkit-linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n\r\n    padding: 15px;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n\r\n    & *,\r\n    & *::before,\r\n    & *::after {\r\n      -webkit-box-sizing: border-box;\r\n      box-sizing: border-box;\r\n      -webkit-transition: all 0.35s ease;\r\n      transition: all 0.35s ease;\r\n    }\r\n\r\n    .profile {\r\n      width: 100px;\r\n      height: 100px;\r\n      border-radius: 100%;\r\n      display: inline-block;\r\n      position: relative;\r\n      overflow: hidden;\r\n      -webkit-box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      margin-bottom: 10px;\r\n      border: solid 5px #fe8c00;\r\n      border-color: ${({ theme }) => theme.blue};\r\n\r\n      img {\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    figcaption {\r\n      position: relative;\r\n      width: 100%;\r\n\r\n      h5,\r\n      h4,\r\n      blockquote {\r\n        margin: 0;\r\n      }\r\n\r\n      h5,\r\n      h4 {\r\n        text-transform: uppercase;\r\n        font-weight: 500;\r\n      }\r\n\r\n      h4 {\r\n        color: #274046;\r\n      }\r\n\r\n      h4,\r\n      h5 {\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n      }\r\n\r\n      blockquote {\r\n        font-size: 1em;\r\n        padding: 45px 20px 40px 50px;\r\n        margin-top: 30px;\r\n        background: #ffffff;\r\n        border-radius: 5px;\r\n        -webkit-box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        text-align: left;\r\n        position: relative;\r\n\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n\r\n        &::before,\r\n        &::after {\r\n          font-family: \"FontAwesome\";\r\n          position: absolute;\r\n          font-size: 22px;\r\n          opacity: 0.25;\r\n          color: ${(props) =>\r\n            props.inverted\r\n              ? ({ theme }) => theme.light\r\n              : ({ theme }) => theme.dark};\r\n        }\r\n\r\n        &::before {\r\n          content: \"\\f10d\";\r\n          top: 20px;\r\n          left: 20px;\r\n        }\r\n        &::after {\r\n          content: \"\\f10e\";\r\n          bottom: 10px;\r\n          right: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \"figure{background: transparent; figcaption{blockquote{box-shadow: none; background: transparent}}}\"}\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport { JCard4 } from \"../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport FancyText from \"../../FancyText\";\r\n\r\nconst TeamSection = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <FancyText size=\"28px\">Our Team</FancyText>\r\n\r\n      <DGrid four gap=\"25px\">\r\n        {loading_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          employeesAR &&\r\n          employeesAR.map((employee) => (\r\n            <Content margin=\"0 auto\" width=\"90%\" height=\"100%\">\r\n              <JCard4 data-emp={employee._id} key={employee._id}>\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={\r\n                      employee.photo\r\n                        ? `/images/employees/${employee.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                    }\r\n                    alt={employee.photo}\r\n                  />\r\n                </div>\r\n                <figcaption>\r\n                  <h3>\r\n                    {employee.title} {employee.firstName} {employee.lastName}\r\n                  </h3>\r\n                  <h4>{employee.role}</h4>\r\n                  <p>\r\n                    {employee.bio.length > 50\r\n                      ? parser(employee.bio.substr(0, 50) + \"...\")\r\n                      : parser(employee.bio.substr(0, 50))}\r\n                  </p>\r\n                  <ReadMore hover={0}>Read More</ReadMore>\r\n                </figcaption>\r\n                <Link to=\"/about\" className=\"linkToPage\" />\r\n              </JCard4>\r\n            </Content>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n\r\n      <Link to=\"/about/#team\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2,\r\n    margin: \"0 auto\",\r\n  },\r\n};\r\n\r\nexport default TeamSection;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: flex;\r\n  justify-column: center;\r\n  align-items: center;\r\n  flex-direction: ${(props) => (props.row ? \"row\" : \"column\")};\r\n\r\n  .ring {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${(props) =>\r\n      props.mini\r\n        ? \"12px\"\r\n        : props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"90px\"\r\n        : \"10em\"};\r\n    height: ${(props) =>\r\n      props.mini\r\n        ? \"12px\"\r\n        : props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"90px\"\r\n        : \"12em\"};\r\n\r\n    div {\r\n      box-sizing: border-box;\r\n      display: block;\r\n      position: absolute;\r\n      width: ${(props) =>\r\n        props.mini\r\n          ? \"9px\"\r\n          : props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"72px\"\r\n          : \"10em\"};\r\n      height: ${(props) =>\r\n        props.mini\r\n          ? \"9px\"\r\n          : props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"72px\"\r\n          : \"10em\"};\r\n      margin: ${(props) =>\r\n        props.mini\r\n          ? \"1px\"\r\n          : props.tiny\r\n          ? \"2px\"\r\n          : props.small\r\n          ? \"3px\"\r\n          : props.medium\r\n          ? \"6px\"\r\n          : \"10px\"};\r\n      border: ${(props) =>\r\n        props.mini\r\n          ? \"1px solid rgba(255,255,255,0.7)\"\r\n          : props.tiny\r\n          ? \"1px solid #fff\"\r\n          : props.small\r\n          ? \"2px solid #fff\"\r\n          : props.medium\r\n          ? \"3px solid #fff\"\r\n          : \"4px  solid #fff\"};\r\n\r\n      border-radius: 50%;\r\n      animation: ${keyring} 1.2s infinite linear; //cubic-bezier(0.5, 0, 0.5, 1) infinite\r\n      border-color: ${(props) =>\r\n        props.inverted\r\n          ? \"#fff rgba(255, 255, 255, 0.2) rgba(255, 255, 255, 0.2) rgba(255, 255, 255, 0.2)\"\r\n          : \"#203A43 rgba(32, 58, 67, 0.2) rgba(32, 58, 67, 0.2) rgba(32, 58, 67, 0.2)\"};\r\n    }\r\n\r\n    div:nth-child(1) {\r\n      animation-delay: -0.45s;\r\n    }\r\n    div:nth-child(2) {\r\n      animation-delay: -0.3s;\r\n    }\r\n    div:nth-child(3) {\r\n      animation-delay: -0.15s;\r\n    }\r\n  }\r\n\r\n  .content-text {\r\n    margin: 0 2px;\r\n    letter-spacing: 2px;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    font-size: ${(props) =>\r\n      props.tiny\r\n        ? \"12px\"\r\n        : props.small\r\n        ? \"13px\"\r\n        : props.medium\r\n        ? \"14px\"\r\n        : \"16px\"};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = (props) => {\r\n  return (\r\n    <SpinnerRing {...props}>\r\n      <div className=\"ring\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"content-text\">{props.content}</div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { FETCH_HOME_SECTION, FETCH_ABOUT_CMS } from \"../../../util/graphql/cms\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Section2Styled, Content } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AboutSection = ({ nextSection }) => {\r\n  const [isAboutSection, setIsAboutSection] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const {\r\n    data: aboutChange,\r\n    loading: loadAboutChange,\r\n  } = useQuery(FETCH_HOME_SECTION, { variables: { sectionName: \"ABOUT\" } });\r\n\r\n  useEffect(() => {\r\n    if (aboutChange) {\r\n      setIsAboutSection(aboutChange.homeCMS);\r\n    }\r\n  }, [aboutChange]);\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled\r\n      ref={(el) => (section2 = el)}\r\n      alt={isAboutSection.alt === true ? true : false}\r\n    >\r\n      <div className=\"sec2-container\" ref={nextSection}>\r\n        <div className=\"sec2-inner\">\r\n          {loadAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner medium />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n                <ReadMore>\r\n                  <Link to=\"/about/#story\">Learn More</Link>\r\n                </ReadMore>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={(el) => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default AboutSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst PromoSection1 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/appointment\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default PromoSection1;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_TESTIMONIALS = gql`\r\n  query testimonials($active: Boolean) {\r\n    testimonials(active: $active) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USER_REVIEW = gql`\r\n  query userTestimonial($userId: ID) {\r\n    userTestimonial(userId: $userId) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_VIEWS = gql`\r\n  query testimonialsView($limit: Int) {\r\n    testimonialsView(limit: $limit) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_TESTIMONIALS, FETCH_USER_REVIEW, FETCH_VIEWS };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_VIEWS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, Overlay } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst TestimonialSection = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const { data: dataReviews, loading: loadReviews } = useQuery(FETCH_VIEWS, {\r\n    variables: {\r\n      limit: 0,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonialsView);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      width=\"100%\"\r\n      mcenter\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      {loadReviews ? (\r\n        <Spinner inverted medium />\r\n      ) : (\r\n        <Content width=\"80%\" height=\"auto\" margin=\"auto\" pad=\"50px 0\">\r\n          <Slider {...settings}>\r\n            {reviews &&\r\n              reviews.map((rev) => (\r\n                <DTestimonialCard basic inverted>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          rev.user.photo\r\n                            ? `/images/users/${rev.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n\r\n                    <figcaption>\r\n                      <h4>\r\n                        {rev.user.firstName} {rev.user.lastName}{\" \"}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={rev.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>{rev.message}</blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        </Content>\r\n      )}\r\n\r\n      <Overlay\r\n        bg={\"rgba(0,0,0,0.5)\"}\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        pad=\"20px\"\r\n      >\r\n        <FancyText size=\"28px\" alt>\r\n          What Our Client Say\r\n        </FancyText>\r\n      </Overlay>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  fade: true,\r\n  infinite: true,\r\n  autoplay: true,\r\n  speed: 1000,\r\n  autoplaySpeed: 4000,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nexport default TestimonialSection;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { ScrollUp, DButton } from \"../../styled/utils\";\r\nimport \"./scroll.css\";\r\n\r\nclass ScrollButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(\r\n      0,\r\n      window.pageYOffset - (this.props.scrollPx ? this.props.scrollPx : \"100\")\r\n    );\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delay ? this.props.delay : \"16.66\"\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        title=\"Back to top\"\r\n        className=\"scroll\"\r\n        onClick={() => {\r\n          this.scrollToTop();\r\n        }}\r\n      >\r\n        <ScrollUp name=\"chevron up\" size=\"large\" className=\"arrow-up\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ScrollButton;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategorySection from \"../../components/main/home/CategorySection\";\r\nimport TeamSection from \"../../components/main/home/TeamSection\";\r\nimport AboutSection from \"../../components/main/home/AboutSection\";\r\nimport PromoSection1 from \"../../components/main/home/PromoSection1\";\r\nimport TestimonialSection from \"../../components/main/home/TestimonialSection\";\r\nimport { DContainer } from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Home = () => {\r\n  const nextSection = useRef();\r\n  const card1 = \"/images/card1.jpg\";\r\n  const scrolling = useScroll(300);\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton />}\r\n      <Showcase nextSection={nextSection} />\r\n\r\n      <AboutSection nextSection={nextSection} />\r\n\r\n      <CategorySection cards={card1} />\r\n      <PromoSection1 />\r\n      <TeamSection cards={card1} />\r\n      <TestimonialSection />\r\n      <PromoSection1 />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { DSection, Content, DImage } from \"../../styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = ({ content, aboutUS }) => {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768\r\n            ? \"column\"\r\n            : aboutUS.missionvision.alt\r\n            ? \"row-reverse\"\r\n            : \"row\"\r\n        }\r\n        margin=\"24px auto 0 auto\"\r\n        ref={content}\r\n        id=\"story\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"24px\"\r\n        >\r\n          <h3>{aboutUS && aboutUS.missionvision.mission.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.mission.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.mission.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.mission.paragraph}</p>\r\n          <h3>{aboutUS && aboutUS.missionvision.vision.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.vision.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.vision.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.vision.paragraph}</p>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.missionvision.photo\r\n                  ? `/images/cms/about/${aboutUS.missionvision.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768 ? \"column\" : aboutUS.story.alt ? \"row-reverse\" : \"row\"\r\n        }\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"90%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.story.photo\r\n                  ? `/images/cms/about/${aboutUS.story.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"20px\"\r\n          style={{ maxHeight: \"90vh\" }}\r\n        >\r\n          <h3>{aboutUS.story.title}</h3>\r\n          {aboutUS.story.subtitle !== \"\" && <h4>{aboutUS.story.subtitle}</h4>}\r\n          <p\r\n            style={{\r\n              fontSize: \"15px\",\r\n              letterSpacing: \"2px\",\r\n              lineHeight: 1.8,\r\n              textAlign: \"justify\",\r\n              overflowWrap: \"break-word\",\r\n              overflow: \"auto\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            {aboutUS.story.paragraph}\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../styled/card\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst TeamDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModal = event => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JCard4 data-emp={employee._id} onClick={handleModal}>\r\n        <div className=\"profile-image\">\r\n          <img\r\n            src={\r\n              employee.photo\r\n                ? `/images/employees/${employee.photo}`\r\n                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n            }\r\n            alt={employee.photo}\r\n          />\r\n        </div>\r\n        <figcaption>\r\n          <h3>\r\n            {employee.title} {employee.firstName} {employee.lastName}\r\n          </h3>\r\n          <h4>{employee.role}</h4>\r\n          <p>\r\n            {employee.bio.length > 50\r\n              ? parser(employee.bio.substr(0, 50) + \"...\")\r\n              : parser(employee.bio.substr(0, 50))}\r\n          </p>\r\n          <ReadMore hover={0}>Read More</ReadMore>\r\n          <div className=\"icons\">\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-reddit\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-vimeo\"></i>\r\n            </a>\r\n          </div>\r\n        </figcaption>\r\n      </JCard4>\r\n      <Modal size=\"small\" open={open} onClose={() => setOpen(false)} closeIcon>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4 top={\"-60px\"}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{employee.firstName}</h1>\r\n                <h4>{employee.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {parser(employee.bio)}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nconst Team = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const { data: dataEmployees, loading: loadingEmployees } = useQuery(\r\n    FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmployees) {\r\n      setEmployees(dataEmployees.aestheticiansReceps);\r\n    }\r\n  }, [dataEmployees]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        fixed\r\n        id=\"team\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n        >\r\n          <h3>Our TEAM</h3>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        pad=\"10px 0\"\r\n        mcenter\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DGrid three gap=\"20px\">\r\n            {loadingEmployees ? (\r\n              <>\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n              </>\r\n            ) : (\r\n              employees &&\r\n              employees.map(emp => <TeamDetails key={emp._id} employee={emp} />)\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","export const scrollView = ref => {\r\n  if (ref.current)\r\n    ref.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\"\r\n    });\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../util/graphql/cms\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport Story from \"../../components/main/about/Story\";\r\nimport Team from \"../../components/main/about/Team\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst About = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n\r\n      <>\r\n        <DSection\r\n          background={\r\n            about.bgImg\r\n              ? `/images/cms/about/${about.bgImg}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          bgcolor={about.bgColor}\r\n          height=\"85vh\"\r\n          fixed\r\n          id=\"about\"\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className=\"dark\"\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>\r\n              {about.title ? about.title : \"ABOUT US\"}\r\n            </h1>\r\n            {loadAbout && <Spinner medium inverted />}\r\n            {about.subtitle !== \"\" && <h3>{about.subtitles}</h3>}\r\n            <MouseScroll onClick={scrollDown} />\r\n          </Content>\r\n          <Overlay bgc={about.overlay ? true : false} />\r\n        </DSection>\r\n        {loadAbout ? (\r\n          <DSection\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"space-around\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            margin=\"20px auto\"\r\n            pad=\"20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Skeleton height=\"100%\" width=\"100%\" />\r\n              <Skeleton width=\"100%\" height={20} count={10} />\r\n            </DGrid>\r\n          </DSection>\r\n        ) : (\r\n          <Story content={content} aboutUS={dataAbout.aboutUsCMS} />\r\n        )}\r\n      </>\r\n\r\n      <Team />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    setValues,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/login\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/home\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted() {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\",\r\n          }}\r\n        >\r\n          <Link to=\"/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import moment from \"moment\";\r\n\r\nconst timeLineLabels = (\r\n  desiredStartTime,\r\n  timeLength,\r\n  interval,\r\n  breakTimeLength = 0\r\n) => {\r\n  const periodsInADay = moment\r\n    .duration(timeLength + breakTimeLength, \"MINUTES\")\r\n    .as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nexport default timeLineLabels;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\nimport timeLineLabels from \"../../../util/hooks/timeLineLabels\";\r\n\r\n// const timelineLabels = (\r\n//   desiredStartTime,\r\n//   timeLength,\r\n//   interval,\r\n//   breakTimeLength = 0\r\n// ) => {\r\n//   const periodsInADay = moment\r\n//     .duration(timeLength + breakTimeLength, \"MINUTES\")\r\n//     .as(\"MINUTES\");\r\n\r\n//   let timeSlot = [];\r\n\r\n//   const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n//   for (let i = 0; i <= periodsInADay; i += interval) {\r\n//     startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n//     timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n//   }\r\n//   return timeSlot;\r\n// };\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue,\r\n  calendarSize,\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n  const [isEmp, setIsEmp] = useState({});\r\n  const [isServ, setIsServ] = useState({});\r\n\r\n  const handleTimeChanged = (event) => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_employee) {\r\n      setIsEmp(data_employee);\r\n    }\r\n  }, [data_employee]);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setIsServ(data_service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n      },\r\n    }\r\n  );\r\n\r\n  if (isEmp && isServ && data_appointments) {\r\n    const workStart = isEmp.employee && isEmp.employee.schedule.workStart;\r\n    const workLength = isEmp.employee && isEmp.employee.schedule.workLength;\r\n    const breakStart = isEmp.employee && isEmp.employee.schedule.breakStart;\r\n    const breakLength = isEmp.employee && isEmp.employee.schedule.breakLength;\r\n\r\n    isEmp.employee && isEmp.employee.schedule.day.map((d) => days.push(d));\r\n    data_appointments.checkedAppointments.map((occcupied) =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = isServ.service.duration;\r\n\r\n    const workingTime = timeLineLabels(\r\n      startTime,\r\n      workLength,\r\n      intervalTime,\r\n      breakLength\r\n    );\r\n    const breakTime = timeLineLabels(breakStime, breakLength, 30);\r\n\r\n    let initialTime = workingTime.filter((item) => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter((oras) => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map((ft) => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content height=\"100%\" width=\"100%\" flex justify=\"center\" align=\"center\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          peekNextMonth\r\n          showMonthDropdown\r\n          showYearDropdown\r\n          dropdownMode=\"select\"\r\n          calendarClassName={calendarSize}\r\n          inline\r\n        />\r\n      </Content>\r\n\r\n      {isEmp &&\r\n        data_service &&\r\n        (loading_employee || loading_appointments || loading_service ? (\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <Spinner content=\"Fetching available time slot...\" medium />\r\n          </Content>\r\n        ) : (\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"space-around\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <DLabel size=\"16px\" color=\"bluer\" weight={700} rounded>\r\n              Time Slot\r\n            </DLabel>\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              maxh={\"300px\"}\r\n              flex\r\n              align=\"flex-start\"\r\n              justify=\"flex-start\"\r\n              flow=\"column wrap\"\r\n              hoverflow\r\n            >\r\n              {times.map((time) => (\r\n                <Content width=\"auto\" height=\"20px\" margin={\"3px\"} key={time}>\r\n                  <div className=\"pretty p-default p-curve\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"time\"\r\n                      value={time}\r\n                      onChange={handleTimeChanged}\r\n                    />\r\n                    <div className=\"state p-info-o\">\r\n                      <label style={styles.label}>{time}</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              ))}\r\n            </Content>\r\n          </Content>\r\n        ))}\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700,\r\n  },\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\nimport { DContainer, DSection, Content } from \"../components/styled/containers\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      bgcolor={({ theme }) => theme.dark}\r\n      className=\"dark\"\r\n    >\r\n      <h1 style={{ fontSize: \"100px\" }} s>\r\n        PAGE 404\r\n      </h1>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  categoryValue,\r\n  setCategoryValue,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n}) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (data_categories) {\r\n      setCategories(data_categories.categories);\r\n    }\r\n  }, [data_categories]);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services },\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryValue,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp,\r\n    },\r\n  ] = useLazyQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId: categoryValue,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_serviceEmp) {\r\n      setEmployees(data_serviceEmp.category.employees);\r\n    }\r\n  }, [data_serviceEmp]);\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setCategoryValue(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"flex-start\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h3>Appointment Details</h3>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Select Service Category\r\n          </label>\r\n          {loading_categories ? (\r\n            <Spinner row content=\"Loading...\" small />\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryValue}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Service Category...\r\n              </option>\r\n              {categories &&\r\n                categories.map((category) => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        {called && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select Sub-Service\r\n            </label>\r\n            {loading_services ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                placeholder=\"Services...\"\r\n                name=\"service\"\r\n                onChange={handleServiceChange}\r\n                value={serviceValue}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"38px\",\r\n                  padding: \"0.5em\",\r\n                  border: \"1px solid rgba(34,36,38,.15)\",\r\n                  cursor: \"pointer\",\r\n                  position: \"relative\",\r\n                  outline: \"0\",\r\n                  visibility: \"visible\",\r\n                  textAlign: \"left\",\r\n                }}\r\n                className=\"input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Sub-Services...\r\n                </option>\r\n                {services &&\r\n                  services.map((service) => (\r\n                    <option key={service._id} value={service._id}>\r\n                      {service.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n\r\n        {calledServiceEmp && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select Aesthetician\r\n            </label>\r\n            {loading_serviceEmp ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                name=\"employee\"\r\n                value={employeeVal}\r\n                onChange={handleEmployeeChange}\r\n                className=\"input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Aesthetician...\r\n                </option>\r\n                {employees &&\r\n                  employees.map((servEmp) => (\r\n                    <option key={servEmp._id} value={servEmp._id}>\r\n                      {servEmp.firstName}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const [service, setService] = useState({});\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setService(data_service.service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {loading_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input value={service.name} readOnly style={{ width: \"60%\" }} />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\n// import { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n          <DSection\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            background={\r\n              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            }\r\n            height=\"100vh\"\r\n          >\r\n            <Overlay\r\n              hovOpac=\"1\"\r\n              opac=\"0\"\r\n              bg={\"rgba(0,0,0,0.7)\"}\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <div className=\"overlay-box\">\r\n                <div className=\"overlay-box__content dark\">\r\n                  <h1>Advertisement</h1>\r\n                </div>\r\n              </div>\r\n            </Overlay>\r\n          </DSection>\r\n\r\n          <DGrid>\r\n            <AppointmentInputs\r\n              categoryValue={categoryValue}\r\n              setCategoryValue={setCategoryValue}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                  calendarSize={\"calendar_large\"}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    disabled={\r\n                      categoryValue === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst photos = [\r\n  {\r\n    src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\r\n    width: 1,\r\n    height: 1,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  }\r\n];\r\n\r\nconst Gallery = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"gallery\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>Gallery</h1>\r\n          <h3>Love Your Skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        width=\"80%\"\r\n        mcenter\r\n        pad=\"20px 0\"\r\n        ref={content}\r\n      >\r\n        <MyGallery photos={photos} onClick={openLightbox} />\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel\r\n                currentIndex={currentImage}\r\n                views={photos.map(x => ({\r\n                  ...x,\r\n                  srcset: x.srcSet,\r\n                  caption: x.title\r\n                }))}\r\n              />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { Rating, Icon, Modal, Form, TextArea } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalReview = ({ openReview, setOpenReview, user, userReview }) => {\r\n  const [rate, setRate] = useState(userReview ? userReview.rating : 1);\r\n  const [message, setMessage] = useState(userReview ? userReview.message : \"\");\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const mutation = userReview ? UPDATE_REVIEW : ADD_REVIEW;\r\n\r\n  const [addOrUpdate, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      id: userReview && userReview._id,\r\n      rating: rate,\r\n      message: message,\r\n    },\r\n    refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n\r\n    onCompleted() {\r\n      toaster.notify(\r\n        userReview\r\n          ? \"Successfully Update a review\"\r\n          : \"Successfully Added a review\"\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleRate = (e, { rating }) => {\r\n    setRate(rating);\r\n  };\r\n\r\n  const handleMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    addOrUpdate();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"mini\"\r\n      open={openReview}\r\n      onClose={() => {\r\n        setOpenReview(false);\r\n        setEdit(false);\r\n      }}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>\r\n        <Icon name=\"pencil\" />\r\n        Write A Review\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field>\r\n            <Rating\r\n              rating={rate}\r\n              maxRating={5}\r\n              onRate={handleRate}\r\n              icon=\"star\"\r\n              size=\"huge\"\r\n              style={{ margin: \"0 auto\" }}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <TextArea\r\n              style={{ minHeight: 100 }}\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={handleMessage}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {!userReview || edit ? (\r\n          <DButton confirm onClick={handleSave}>\r\n            {loading ? (\r\n              <Spinner inverted small />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleEdit}>\r\n            <Icon name=\"edit\" />\r\n            Edit\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_REVIEW = gql`\r\n  mutation addTestimonial($rating: Int, $message: String) {\r\n    addTestimonial(inputTestimonial: { rating: $rating, message: $message }) {\r\n      _id\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_REVIEW = gql`\r\n  mutation updateTestimonial($id: ID!, $rating: Int, $message: String) {\r\n    updateTestimonial(_id: $id, rating: $rating, message: $message) {\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalReview;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_REVIEW } from \"../../../util/graphql/testimonial\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport ModalReview from \"./ModalReview\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Review = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [userReview, setUserReview] = useState({});\r\n  const [openReview, setOpenReview] = useState(false);\r\n\r\n  const { data: dataUserReview, loading: loadUserReview } = useQuery(\r\n    FETCH_USER_REVIEW,\r\n    {\r\n      variables: { userId: user ? user.userId : \"\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataUserReview) {\r\n      setUserReview(dataUserReview.userTestimonial);\r\n    }\r\n  }, [dataUserReview]);\r\n\r\n  const handleOpenReview = () => {\r\n    if (user) {\r\n      setOpenReview(true);\r\n    } else {\r\n      toaster.notify(\"You must sign in n order to write a review. Thank you!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      margin=\"1rem auto\"\r\n    >\r\n      {loadUserReview ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <>\r\n          <DButton basic radius=\"25px\" center bluer onClick={handleOpenReview}>\r\n            <Icon name=\"pencil\" />\r\n            Write a review\r\n          </DButton>\r\n          <ModalReview\r\n            openReview={openReview}\r\n            setOpenReview={setOpenReview}\r\n            userReview={dataUserReview && dataUserReview.userTestimonial}\r\n            user={user}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, DGrid } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport Review from \"./Review\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\n\r\nconst TestimonialCard = ({ content }) => {\r\n  const [isTestimonials, setIsTestimonials] = useState([]);\r\n\r\n  const {\r\n    data: dataTestimonials,\r\n    loading: loadTestimonials,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataTestimonials) {\r\n      setIsTestimonials(dataTestimonials.testimonials);\r\n    }\r\n  }, [dataTestimonials]);\r\n\r\n  return (\r\n    <DSection height=\"100%\" width=\"100%\" mcenter ref={content}>\r\n      <Review />\r\n      <Content width=\"80%\" height=\"100%\" margin=\"0 auto\" pad=\"50px 0\">\r\n        {loadTestimonials ? (\r\n          <DGrid three gap=\"20px\">\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n          </DGrid>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {isTestimonials &&\r\n              isTestimonials.map((testimonial) => (\r\n                <DTestimonialCard key={testimonial._id}>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          testimonial.user && testimonial.user.photo !== null\r\n                            ? `/images/users/${testimonial.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n                    <figcaption>\r\n                      <h4>\r\n                        {testimonial.user &&\r\n                          testimonial.user.firstName +\r\n                            \" \" +\r\n                            testimonial.user.lastName}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={testimonial.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>\r\n                        <span\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            right: \"10px\",\r\n                            fontSize: \"10px\",\r\n                            color: \"#bbb\",\r\n                          }}\r\n                        >\r\n                          {moment(parseInt(testimonial.updatedAt)).format(\"LL\")}\r\n                        </span>\r\n                        {testimonial.message}\r\n                      </blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        )}\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  infinite: true,\r\n  speed: 500,\r\n  rows: 2,\r\n  slidesPerRow: 3,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesPerRow: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 768,\r\n      settings: {\r\n        slidesPerRow: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default TestimonialCard;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport TestimonialCard from \"../../components/main/testimonial/TestimonialCard\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\n\r\nconst Testimonials = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"tstmnl\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\", fontWeight: 700 }}>\r\n            What Our Client Says\r\n          </h1>\r\n          {/* <h3>We continously improve our service</h3> */}\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <TestimonialCard content={content} />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport parser from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\n\r\nconst Services = () => {\r\n  const sectionDown = useRef();\r\n  const scrolling = useScroll(500);\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY, {\r\n    variables: { active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(sectionDown);\r\n  };\r\n\r\n  return (\r\n    <DContainer id=\"services\">\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\" }}>Our Services</h1>\r\n          <h3>It's time to take care of your skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay\r\n          bg={\"linear-gradient(to top, rgba(0,0,0,0.3), rgba(255,255,255,0.1))\"}\r\n        />\r\n      </DSection>\r\n      <DSection\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n        mcenter\r\n        pad=\"24px\"\r\n        height=\"100%\"\r\n        ref={sectionDown}\r\n      >\r\n        <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n          {loading ? (\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner content=\"Loading...\" />\r\n            </Content>\r\n          ) : (\r\n            <DGrid three gap=\"24px\" med7={\"1fr\"}>\r\n              {isCategories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/service/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CATEGORY_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n  Overlay,\r\n  DCard,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { JCard2 } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ServiceDetails from \"../../components/main/services/ServiceDetails\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Service = (props) => {\r\n  const categoryId = props.match.params._id;\r\n  const history = useHistory();\r\n  const [isReadMore, setIsReadMore] = useState(false);\r\n\r\n  const [isServices, setIsServices] = useState([]);\r\n\r\n  const { data, loading } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsServices(data.category.services);\r\n    }\r\n  }, [data]);\r\n\r\n  const backHist = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"50vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          fluid\r\n          height=\"100%\"\r\n          className=\"dark\"\r\n        >\r\n          {!data ? (\r\n            <Spinner inverted />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ fontSize: \"22px\" }}>{data.category.name}</h1>\r\n              <p style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                {parser(data.category.description)}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Content flex width=\"90%\" height=\"50px\" margin=\"20px auto\">\r\n        <DButton onClick={backHist}>\r\n          <Icon name=\"arrow left\" /> <span>Back to Services</span>\r\n        </DButton>\r\n      </Content>\r\n      {loading ? (\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"80vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        </Content>\r\n      ) : (\r\n        <DSection\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          mcenter\r\n          pad=\"24px\"\r\n          height=\"100%\"\r\n        >\r\n          <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n            <DGrid three gap=\"20px\">\r\n              {isServices &&\r\n                isServices.map(\r\n                  (service) =>\r\n                    service.active === true && (\r\n                      <JCard2\r\n                        key={service._id}\r\n                        oflow={isReadMore ? true : false}\r\n                        onPointerLeave={() => setIsReadMore(false)}\r\n                      >\r\n                        <div className=\"thumbnail\">\r\n                          <img\r\n                            src={\r\n                              service.photo !== null\r\n                                ? `/images/service/${service.photo}`\r\n                                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/169963/photo-1429043794791-eb8f26f44081.jpeg\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"post-content\">\r\n                          <div className=\"category\">{service.name}</div>\r\n                          <h4 className=\"title\">{service.duration} mins</h4>\r\n                          <h4 className=\"title\">Php {service.price}</h4>\r\n                          <div className=\"description\">\r\n                            {isReadMore ? (\r\n                              <p>{parser(service.description)}</p>\r\n                            ) : (\r\n                              <p>\r\n                                {service.description.length > 100\r\n                                  ? parser(\r\n                                      service.description.substr(0, 100) + \"...\"\r\n                                    )\r\n                                  : parser(service.description.substr(0, 100))}\r\n                              </p>\r\n                            )}\r\n                            {service.description.length <= 100 ? (\r\n                              \"\"\r\n                            ) : (\r\n                              <ReadMore\r\n                                onClick={() => setIsReadMore(!isReadMore)}\r\n                              >\r\n                                {isReadMore ? \"Read Less\" : \"Read More\"}\r\n                              </ReadMore>\r\n                            )}\r\n\r\n                            {/* <ServiceDetails service={service} /> */}\r\n                          </div>\r\n                        </div>\r\n                      </JCard2>\r\n                    )\r\n                )}\r\n            </DGrid>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const { userId } = useContext(AuthContext);\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/\">\r\n            Explore\r\n          </DButton>\r\n          <DButton\r\n            as={Link}\r\n            to={userId ? `/account/${userId}` : `/login`}\r\n          >\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/home\" basic>\r\n            Explore\r\n          </DButton>\r\n         \r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid=\"true\">\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid=\"true\">\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values,\r\n    },\r\n  });\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = (props) => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hoverColorText}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  // const [addInfo, setAddInfo] = useState(\"\");\r\n  // const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  // const handleMessage = e => {\r\n  //   setAddInfo(e.target.value);\r\n  // };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              categoryValue={categoryValue}\r\n              setCategoryValue={setCategoryValue}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [currentAppoint, setCurrentAppoint] = useState([]);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointData) {\r\n      setCurrentAppoint(currentAppointData.myCurrentAppointment);\r\n    }\r\n  }, [currentAppointData]);\r\n\r\n  console.log(currentAppoint);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppoint}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n    default:\r\n      return <h1>Something went wrong</h1>;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content,\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n \r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {dataLoading ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input value={myAppoint._id} readOnly style={styles.input} />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={myAppoint.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={myAppoint.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${myAppoint.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={myAppoint.status}\r\n                  readOnly\r\n                  style={\r\n                    myAppoint.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : myAppoint.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : myAppoint.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {myAppoint.status === \"CANCELLED\" || myAppoint.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Testimonials from \"./main/Testimonials\";\r\nimport Services from \"./main/Services\";\r\nimport Service from \"./main/Service\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`/`} component={Home} exact />\r\n        <Route path={`/about`} component={About} exact />\r\n        <Route path={`/contact`} component={Contact} exact />\r\n        <Route path={`/gallery`} component={Gallery} exact />\r\n        <Route path={`/testimonials`} component={Testimonials} exact />\r\n        <Route path={`/services&rates`} component={Services} exact />\r\n        <Route path={`/service/:_id`} component={Service} exact />\r\n        <Route path={`/verified/:emailToken`} component={ThankYou} exact />\r\n        <UserPrivateRoute\r\n          path={`/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`/login`} component={Signin} exact />\r\n\r\n        <UserPrivateRoute path={`/account/:_id`} component={Account} exact />\r\n\r\n        <UserPrivateRoute\r\n          path={`/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute path={`/appointment`} component={Appointment} exact />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst UpcommingAppointments = ({ appointments, loading }) => {\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"18px\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 20px\"\r\n      color=\"bluer\"\r\n      rounded\r\n    >\r\n      Upcoming Appointments\r\n    </DLabel>\r\n  );\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map((appointment) => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n      progressPending={loading}\r\n      progressComponent={\r\n        <Spinner content=\"Please wait while we fetch our data...\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n  position: relative;\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-areas:\r\n      \"header\"\r\n      \"main\"\r\n      \"footer\";\r\n  }\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, DImage, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Image, Icon } from \"semantic-ui-react\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Dropdown\r\n        trigger={\r\n          <DImage circle height=\"50px\" width=\"50px\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"avatar\"\r\n            />\r\n            <Overlay opac={0} hovOpac={1} />\r\n          </DImage>\r\n        }\r\n        pointing=\"top right\"\r\n        icon={null}\r\n      >\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to=\"/zeadmin/paccount\">\r\n            <Icon name=\"user\" />\r\n            Account\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={handleLogout}>\r\n            <Icon name=\"sign out\" />\r\n            Sign out\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      {/* <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton> */}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  BookContent,\r\n  Report,\r\n  MessageSquare,\r\n  MessageRoundedDetail,\r\n  CalendarEvent,\r\n} from \"@styled-icons/boxicons-solid\";\r\n\r\nimport { Service } from \"@styled-icons/remix-line/Service\";\r\n\r\nimport {\r\n  ShortText,\r\n  AccountBox,\r\n  AccountCircle,\r\n  Dashboard,\r\n} from \"@styled-icons/material\";\r\nimport { FileDirectory } from \"@styled-icons/octicons\";\r\nimport { Profile } from \"@styled-icons/icomoon/Profile\";\r\nimport { Archive } from \"@styled-icons/entypo\";\r\n\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\n\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <MessageRoundedDetail size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion title={\"Accounts\"} icon={<AccountBox size=\"16px\" />} fs=\"14px\">\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <AccountCircle size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <BookContent size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <ShortText size=\"16px\" />\r\n            About\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_testimonial\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <MessageSquare size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<FileDirectory size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Profile size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion title={\"Archive\"} icon={<Archive size=\"16px\" />} fs=\"14px\">\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Profile size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Report size=\"16px\" />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map(user => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n              \r\n                color=\"blue\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <Spinner small />\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY,\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\",\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\",\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"green\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"red\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n      read\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      read\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n      read\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ,\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"secondary\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                color=\"blue\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\n// import { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        mcenter\r\n      >\r\n        <Cards />\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            <UpcommingAppointments\r\n              appointments={appointments}\r\n              loading={loading}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Eye } from \"@styled-icons/fa-regular/Eye\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  const [isCurrentAppoint, setIsCurrentAppoint] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointmentData) {\r\n      setIsCurrentAppoint(currentAppointmentData.currentAppointments);\r\n    }\r\n  }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee.lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`} flex>\r\n          <Eye size=\"22px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      <DataTable\r\n        columns={columns}\r\n        data={isCurrentAppoint.map((currAppoint) => currAppoint)}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\n// import HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton alert basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButton>\r\n        <DButton confirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  DCard,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLink, DLabel } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Icon } from \"semantic-ui-react\";\r\nimport { Service } from \"@styled-icons/remix-fill/Service\";\r\nimport { Bookmark } from \"@styled-icons/boxicons-solid/Bookmark\";\r\nimport { Clock } from \"@styled-icons/fa-solid/Clock\";\r\nimport { UserMd } from \"@styled-icons/fa-solid/UserMd\";\r\nimport { CalendarExclamation } from \"@styled-icons/boxicons-solid/CalendarExclamation\";\r\nimport { CalendarEvent } from \"@styled-icons/boxicons-solid/CalendarEvent\";\r\nimport { Timelapse } from \"@styled-icons/material/Timelapse\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = (props) => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  console.log(myAppoint.service);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"80%\"\r\n        height=\"100%\"\r\n        mcenter\r\n      >\r\n        {dataLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              width=\"100%\"\r\n              margin=\"24px 0\"\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n            >\r\n              <Breadcrumb size={\"large\"}>\r\n                <Breadcrumb.Section\r\n                  style={{ color: \"#2980B9\" }}\r\n                  onClick={() => history.goBack()}\r\n                >\r\n                  <h3>Appointments</h3>\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section>\r\n                  {myAppoint.user && (\r\n                    <strong>\r\n                      <DLink\r\n                        borderb=\"true\"\r\n                        size=\"16px\"\r\n                        color=\"#232323\"\r\n                        to={`/zeadmin/userInfo/${myAppoint.user._id}`}\r\n                      >\r\n                        {myAppoint.user.firstName} {myAppoint.user.lastName}\r\n                      </DLink>\r\n                      's appointment\r\n                    </strong>\r\n                  )}\r\n                </Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n\r\n            <DGrid\r\n              custom={\r\n                myAppoint.status === \"VERIFIED\" ||\r\n                myAppoint.status === \"PENDING\"\r\n                  ? \"3fr 200px\"\r\n                  : \"1fr\"\r\n              }\r\n              gap=\"5px\"\r\n            >\r\n              <DCard\r\n                dw={\r\n                  myAppoint.status === \"VERIFIED\" ||\r\n                  myAppoint.status === \"PENDING\"\r\n                    ? \"100%\"\r\n                    : \"80%\"\r\n                }\r\n                dh=\"100%\"\r\n                mcenter\r\n                flex\r\n                fcol\r\n                justifyBetween\r\n              >\r\n                <DGrid gap=\"5px\">\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Bookmark size=\"14px\" style={{ margin: \"0 2px\" }} />\r\n                      Appointment ID:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint._id}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarEvent size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Clock size=\"14px\" style={{ margin: \"0 2px\" }} /> Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.slot_start}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <UserMd size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.employee &&\r\n                          `${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Service size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.name}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Timelapse size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.duration} mins\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarExclamation\r\n                        size=\"14px\"\r\n                        style={{ margin: \"0 2px\" }}\r\n                      />\r\n                      Status:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        rounded\r\n                        w={\"auto\"}\r\n                        size=\"18px\"\r\n                        color={\r\n                          myAppoint.status === \"VERIFIED\"\r\n                            ? \"green\"\r\n                            : myAppoint.status === \"DONE\"\r\n                            ? \"bluer\"\r\n                            : myAppoint.status === \"CANCELLED\"\r\n                            ? \"red\"\r\n                            : myAppoint.status === \"RESCHEDULED\"\r\n                            ? \"blue\"\r\n                            : \"grey\"\r\n                        }\r\n                      >\r\n                        {myAppoint.status}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </DCard>\r\n              {(myAppoint.status === \"PENDING\" ||\r\n                myAppoint.status === \"VERIFIED\") && (\r\n                <Content\r\n                  width=\"90%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  direct=\"column\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <DButton\r\n                    confirm\r\n                    fluid=\"true\"\r\n                    onClick={() => setOpenDone(true)}\r\n                  >\r\n                    <Icon name=\"calendar check\" /> Confirm\r\n                  </DButton>\r\n                  <DButton fluid=\"true\">\r\n                    <Icon name=\"calendar alternate\" /> Rebook\r\n                  </DButton>\r\n                  <DButton\r\n                    alert\r\n                    fluid=\"true\"\r\n                    onClick={() => setOpenCancel(true)}\r\n                  >\r\n                    <Icon name=\"delete calendar\" /> Cancel\r\n                  </DButton>\r\n                </Content>\r\n              )}\r\n            </DGrid>\r\n          </>\r\n        )}\r\n\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  label: {\r\n    width: \"40%\",\r\n  },\r\n  input: {\r\n    width: \"60%\",\r\n  },\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services },\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal,\r\n    },\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp,\r\n    },\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue,\r\n    },\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map((category) => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map((service) => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map((servEmp) => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButton,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\",\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days,\r\n    },\r\n    refetchQueries: [{ query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY }],\r\n\r\n    // update(cache, result) {\r\n    //   setOpen(false);\r\n    //   const data = cache.readQuery({\r\n    //     query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n    //   });\r\n\r\n    //   const newEmployee = result.data.createEmployee;\r\n    //   cache.writeQuery({\r\n    //     query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n    //     data: {\r\n    //       aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps],\r\n    //     },\r\n    //   });\r\n\r\n    //   values.title = \"\";\r\n    //   values.firstName = \"\";\r\n    //   values.lastName = \"\";\r\n    //   values.contact = \"\";\r\n    //   values.email = \"\";\r\n    //   values.role = \"\";\r\n    //   values.workStart = \"\";\r\n    //   values.workLength = \"\";\r\n    //   values.breakStart = \"\";\r\n    //   values.breakLength = \"\";\r\n    //   days = [];\r\n    // },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n  });\r\n\r\n  // const handleDayChange = (val) => {\r\n  //   setDays(val);\r\n  // };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {(Checkbox) => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport Page404 from \"../../pages/Page404\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0,\r\n      active: true,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0.5,\r\n      hide: \"md\",\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/employees/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      grow: 0,\r\n      right: true,\r\n      cell: (row) => (\r\n        <DButton flex as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontWeight: \"700 !important\",\r\n        color: \"#232323\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\" mcenter>\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            columns={columns}\r\n            data={employeesAR.map((aesrep) => aesrep)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loading_employeesAR}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\nimport { Toasted as Toast } from \"./styled/utils\";\r\nimport { Close } from \"@styled-icons/material/Close\";\r\n\r\nconst Toasted = (props) => {\r\n  return (\r\n    <Toast {...props}>\r\n      <span className=\"description\">{props.children}</span>\r\n      <span className=\"close\">\r\n        <Close size=\"14px\" />\r\n      </span>\r\n    </Toast>\r\n  );\r\n};\r\n\r\nexport default Toasted;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_EMPLOYEES_QUERY } from \"../../../util/graphql/employee\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport { Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { IconWrap, DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Schedule } from \"@styled-icons/material/Schedule\";\r\nimport { UserDetail } from \"@styled-icons/boxicons-solid/UserDetail\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  employee,\r\n  employeeId,\r\n  handleSchedule,\r\n  handleDetails,\r\n  s,\r\n}) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Image Uploaded\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: employee.photo\r\n        ? `/images/employees/${employee.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"flex-start\"\r\n      align=\"center\"\r\n      mcenter\r\n      direct=\"column\"\r\n    >\r\n      <DCard\r\n        dw={wid < 524 ? \"70%\" : \"100%\"}\r\n        dh=\"250px\"\r\n        mcenter\r\n        p=\"0px\"\r\n        grayzoom\r\n      >\r\n        {loading ? (\r\n          <Spinner content=\"Loading...\" medium />\r\n        ) : (\r\n          <DImage height=\"100%\" width=\"100%\">\r\n            <img\r\n              src={\r\n                employee.photo\r\n                  ? `/images/employees/${employee.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt={employee.name}\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n        )}\r\n        <IconWrap\r\n          {...getRootProps()}\r\n          bg={({ theme }) => theme.bluer}\r\n          circle\r\n          shadow\r\n          bottomcenter\r\n          small\r\n          pad=\"3px\"\r\n          bgcolor={({ theme }) => theme.bluer}\r\n        >\r\n          <Camera title=\"Upload\" />\r\n          <input {...getInputProps()} />\r\n        </IconWrap>\r\n      </DCard>\r\n\r\n      <DButton width=\"180px\" flex=\"true\" onClick={handleDetails}>\r\n        <UserDetail size=\"22px\" />\r\n        Details\r\n      </DButton>\r\n      <DButton width=\"180px\" flex=\"true\" onClick={handleSchedule}>\r\n        <Schedule size=\"22px\" title=\"Employee's Schdule Tab\" />\r\n        Schedule\r\n      </DButton>\r\n      <ModalGateway>\r\n        {viewerIsOpen ? (\r\n          <Modal onClose={closeLightbox}>\r\n            <Carousel views={images} />\r\n          </Modal>\r\n        ) : null}\r\n      </ModalGateway>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst DTextAreaStyled = styled.div`\r\n  display: ${(props) => (props.active ? \"block\" : \"none\")};\r\n  height: auto;\r\n  min-height: 30px;\r\n  max-height: 250px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  overflow: visible;\r\n  border: 1px solid rgba(189, 195, 199, 0.8);\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  color: ${(props) => (props.color ? props.color : ({ theme }) => theme.dark)};\r\n\r\n  ${(props) =>\r\n    props.par &&\r\n    css`\r\n      height: 250px;\r\n    `};\r\n`;\r\n\r\nconst DTextArea = (props) => {\r\n  return <DTextAreaStyled {...props}>{props.children}</DTextAreaStyled>;\r\n};\r\n\r\nexport default DTextArea;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel, IconWrap, DInput, DSelect, DButton } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\n// import { Cancel } from \"@styled-icons/typicons/Cancel\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport moment from \"moment\";\r\nimport parser from \"html-react-parser\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst regex = /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/;\r\nconst regexNum = /^\\d+$/;\r\n\r\nconst PersonalCard = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const [errors, setErrors] = useState({});\r\n  const [isEditPersonal, setIsEditPersonal] = useState(false);\r\n  const [startDate, setStartDate] = useState(\r\n    employee.dateOfBirth ? new Date(parseInt(employee.dateOfBirth)) : new Date()\r\n  );\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [personalValue, setPersonalValue] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email,\r\n  });\r\n\r\n  const [updatePersonalEmployee, { loading }] = useMutation(\r\n    UPDATE_EMPLOYEE_PERSONAL,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        title: personalValue.title,\r\n        firstName: personalValue.firstName,\r\n        lastName: personalValue.lastName,\r\n        contact: personalValue.contact,\r\n        email: personalValue.email,\r\n        bio: content,\r\n        dob: startDate,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      },\r\n      onCompleted() {\r\n        setIsEditPersonal(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Info Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handlePersonalValue = (e) => {\r\n    setPersonalValue({ ...personalValue, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const handleEditPersonal = () => {\r\n    setIsEditPersonal(!isEditPersonal);\r\n  };\r\n\r\n  const handleUpdatePersonal = () => {\r\n    updatePersonalEmployee();\r\n  };\r\n\r\n  return (\r\n    <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween overf>\r\n      <Content\r\n        flex\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n      >\r\n        <DLabel size={wid < 768 ? \"18px !important\" : \"22px\"} weight={700}>\r\n          Personal Details\r\n        </DLabel>\r\n        {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n          <>\r\n            <IconWrap\r\n              invisible={isEditPersonal ? true : null}\r\n              bgcolor={({ theme }) => theme.blue}\r\n              medium\r\n              title={\"Update Info\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              pad=\"3px\"\r\n            >\r\n              <Edit onClick={handleEditPersonal} />\r\n            </IconWrap>\r\n\r\n            <IconWrap\r\n              invisible={!isEditPersonal ? true : null}\r\n              medium\r\n              title={\"Cancel Update\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              color=\"red\"\r\n            >\r\n              <Cancel onClick={handleEditPersonal} />\r\n            </IconWrap>\r\n          </>\r\n        )}\r\n      </Content>\r\n\r\n      <Content\r\n        width={wid <= 768 ? \"90%\" : \"80%\"}\r\n        height=\"100%\"\r\n        margin=\"0 auto\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        {isEditPersonal ? (\r\n          <>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={700}\r\n                w={\"40%\"}\r\n                size=\"14px\"\r\n              >\r\n                Title:\r\n              </DLabel>\r\n              <Content\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"5px 10px\"\r\n              >\r\n                <DSelect\r\n                  name=\"title\"\r\n                  value={personalValue.title}\r\n                  onChange={handlePersonalValue}\r\n                >\r\n                  <option>Dr</option>\r\n                  <option>Mr</option>\r\n                  <option>Ms</option>\r\n                </DSelect>\r\n              </Content>\r\n            </Content>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={700}\r\n                w={\"40%\"}\r\n                size=\"14px\"\r\n              >\r\n                First Name:\r\n              </DLabel>\r\n              <Content\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"5px 10px\"\r\n                direct=\"column\"\r\n              >\r\n                {personalValue.firstName.trim() !== \"\" ? (\r\n                  \"\"\r\n                ) : errors.firstName ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    {errors.firstName}\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <DInput\r\n                  fluid\r\n                  error={\r\n                    personalValue.firstName.trim() !== \"\"\r\n                      ? null\r\n                      : errors.firstName\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={personalValue.firstName}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </Content>\r\n            </Content>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={700}\r\n                w={\"40%\"}\r\n                size=\"14px\"\r\n              >\r\n                Last Name:\r\n              </DLabel>\r\n              <Content\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"5px 10px\"\r\n                direct=\"column\"\r\n              >\r\n                {personalValue.lastName.trim() !== \"\" ? (\r\n                  \"\"\r\n                ) : errors.lastName ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    {errors.lastName}\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <DInput\r\n                  error={\r\n                    personalValue.lastName.trim() !== \"\"\r\n                      ? null\r\n                      : errors.lastName\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  fluid\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  value={personalValue.lastName}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </Content>\r\n            </Content>\r\n          </>\r\n        ) : (\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n          >\r\n            <DLabel\r\n              flex\r\n              justifyEnd\r\n              alignCenter\r\n              weight={700}\r\n              w={\"40%\"}\r\n              size=\"14px\"\r\n            >\r\n              Name:\r\n            </DLabel>\r\n            <Content\r\n              height=\"auto\"\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"5px 10px\"\r\n            >\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.title}. {employee.firstName} {employee.lastName}\r\n              </DLabel>\r\n            </Content>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          style={{ zIndex: 10 }}\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Date of Birth:\r\n          </DLabel>\r\n          <Content\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {isEditPersonal ? (\r\n              <DatePicker\r\n                selected={startDate}\r\n                onChange={handleDateChanged}\r\n                showYearDropdown\r\n                showMonthDropdown\r\n                dropdownMode=\"select\"\r\n                className=\"datepicker\"\r\n              />\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.dateOfBirth &&\r\n                  moment(parseInt(employee.dateOfBirth)).format(\"LL\")}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Contact:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            pad=\"5px 10px\"\r\n            direct=\"column\"\r\n          >\r\n            {isEditPersonal ? (\r\n              <>\r\n                {regexNum.test(personalValue.contact) &&\r\n                personalValue.contact.length === 11 ? (\r\n                  \"\"\r\n                ) : errors.contactX || errors.contactNum ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    Contact number must only contain number and must be 11\r\n                    digits\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <DInput\r\n                  error={\r\n                    regexNum.test(personalValue.contact) &&\r\n                    personalValue.contact.length === 11\r\n                      ? null\r\n                      : errors.contactX || errors.contactNum\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  fluid\r\n                  type=\"text\"\r\n                  name=\"contact\"\r\n                  value={personalValue.contact}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </>\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.contact}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Email:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            pad=\"5px\"\r\n            direct=\"column\"\r\n          >\r\n            {isEditPersonal ? (\r\n              <>\r\n                {personalValue.email.match(regex) ? (\r\n                  \"\"\r\n                ) : errors.emailX || errors.email ? (\r\n                  <DLabel rounded pointer color={\"red\"}>\r\n                    {errors.emailX || errors.email}\r\n                  </DLabel>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <DInput\r\n                  error={\r\n                    personalValue.email.match(regex)\r\n                      ? null\r\n                      : errors.emailX || errors.email\r\n                      ? true\r\n                      : null\r\n                  }\r\n                  fluid\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={personalValue.email}\r\n                  onChange={handlePersonalValue}\r\n                />\r\n              </>\r\n            ) : (\r\n              <DLabel\r\n                flex\r\n                justifyEnd\r\n                alignCenter\r\n                weight={500}\r\n                size=\"14px\"\r\n                breakWord\r\n              >\r\n                {employee.email}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          margin=\"12px auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Bio:\r\n          </DLabel>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            pad=\"3px 15px\"\r\n          >\r\n            <DTextArea active={isEditPersonal ? true : null}>\r\n              <CKEditor\r\n                onInit={(editor) => {\r\n                  // Insert the toolbar before the editable area.\r\n                  editor.ui\r\n                    .getEditableElement()\r\n                    .parentElement.insertBefore(\r\n                      editor.ui.view.toolbar.element,\r\n                      editor.ui.getEditableElement()\r\n                    );\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setContent(data);\r\n                }}\r\n                editor={DecoupledEditor}\r\n                data={content}\r\n              />\r\n            </DTextArea>\r\n\r\n            <DTextArea\r\n              active={!isEditPersonal ? true : null}\r\n              color={!content ? \"#ccc\" : null}\r\n            >\r\n              {content\r\n                ? parser(content)\r\n                : `Write something about ${employee.title}. ${employee.firstName} ${employee.lastName} ...`}\r\n            </DTextArea>\r\n          </Content>\r\n        </Content>\r\n      </Content>\r\n      {isEditPersonal && (\r\n        <Content flex width=\"100%\" justify=\"flex-end\" align=\"center\">\r\n          <DButton confirm onClick={handleUpdatePersonal}>\r\n            {loading ? (\r\n              <Spinner inverted row small content=\"Loading...\" />\r\n            ) : (\r\n              \"Update\"\r\n            )}\r\n          </DButton>\r\n        </Content>\r\n      )}\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_PERSONAL = gql`\r\n  mutation updatePersonalEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $dob: String\r\n    $bio: String\r\n  ) {\r\n    updatePersonalEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      dateOfBirth: $dob\r\n      bio: $bio\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      dateOfBirth\r\n      bio\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalCard;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel, IconWrap, DSelect, DButton } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst EmployeeCard = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const [isEditEmpAcct, setIsEditEmpAcct] = useState(false);\r\n\r\n  const [empAcctValue, setEmpAcctValue] = useState({\r\n    role: employee.role,\r\n    level: employee.level,\r\n  });\r\n\r\n  const [updateEmpAcct, { loading: loadEmpAcct }] = useMutation(\r\n    UPDATE_EMPLOYEE_ACCT,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        role: empAcctValue.role,\r\n        level: parseInt(empAcctValue.level),\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        if (err.graphQLErrors[0].extensions.exception.errors.notauth) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted alert onClick={onClose}>\r\n              {err.graphQLErrors[0].extensions.exception.errors.notauth}\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      onCompleted() {\r\n        setIsEditEmpAcct(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Info Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleEmpAcctValue = (e) => {\r\n    setEmpAcctValue({ ...empAcctValue, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditEmplAcct = () => {\r\n    setIsEditEmpAcct(!isEditEmpAcct);\r\n  };\r\n\r\n  const handleUpdateEmplAcct = () => {\r\n    updateEmpAcct();\r\n  };\r\n\r\n  return (\r\n    <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween overf>\r\n      <Content\r\n        flex\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n      >\r\n        <DLabel size={wid < 768 ? \"18px !important\" : \"22px\"} weight={700}>\r\n          Personal Details\r\n        </DLabel>\r\n        {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n          <>\r\n            <IconWrap\r\n              invisible={isEditEmpAcct ? true : null}\r\n              bgcolor={({ theme }) => theme.green}\r\n              medium\r\n              title={\"Update Info\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              pad=\"3px\"\r\n            >\r\n              <Edit onClick={handleEditEmplAcct} />\r\n            </IconWrap>\r\n            <IconWrap\r\n              invisible={!isEditEmpAcct ? true : null}\r\n              medium\r\n              title={\"Cancel Update\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              color=\"red\"\r\n            >\r\n              <Cancel onClick={handleEditEmplAcct} />\r\n            </IconWrap>\r\n          </>\r\n        )}\r\n      </Content>\r\n\r\n      <Content\r\n        width=\"80%\"\r\n        height=\"100%\"\r\n        margin=\"0 auto\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Employee ID:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {/* {isEditEmpAcct &&\r\n            (employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3) ? (\r\n              <DInput\r\n                fluid\r\n                name=\"empId\"\r\n                value={empAcctValue.empId}\r\n                onChange={handleEmpAcctValue}\r\n              />\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n                {employee.empId}\r\n              </DLabel>\r\n            )} */}\r\n\r\n            <DLabel flex justifyEnd alignCenter weight={500} size=\"16px\">\r\n              {employee.empId}\r\n            </DLabel>\r\n          </Content>\r\n        </Content>\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Title:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {isEditEmpAcct &&\r\n            (employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) ? (\r\n              <DSelect\r\n                name=\"role\"\r\n                value={empAcctValue.role}\r\n                onChange={handleEmpAcctValue}\r\n              >\r\n                <option>AESTHETICIAN</option>\r\n                <option>RECEPTIONIST</option>\r\n              </DSelect>\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={700} size=\"16px\">\r\n                {employee.role}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n\r\n        <Content\r\n          height=\"auto\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyEnd\r\n            alignCenter\r\n            weight={700}\r\n            w={\"40%\"}\r\n            size=\"14px\"\r\n          >\r\n            Level:\r\n          </DLabel>\r\n          <Content\r\n            height=\"auto\"\r\n            width=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            pad=\"5px 10px\"\r\n          >\r\n            {isEditEmpAcct &&\r\n            (employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) ? (\r\n              <DSelect\r\n                name=\"level\"\r\n                value={empAcctValue.level}\r\n                onChange={handleEmpAcctValue}\r\n              >\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n              </DSelect>\r\n            ) : (\r\n              <DLabel flex justifyEnd alignCenter weight={700} size=\"16px\">\r\n                {employee.level}\r\n              </DLabel>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n      </Content>\r\n      {isEditEmpAcct && (\r\n        <Content flex width=\"100%\" justify=\"flex-end\" align=\"center\">\r\n          <DButton confirm onClick={handleUpdateEmplAcct}>\r\n            {loadEmpAcct ? (\r\n              <Spinner inverted row small content=\"Loading...\" />\r\n            ) : (\r\n              \"Update\"\r\n            )}\r\n          </DButton>\r\n        </Content>\r\n      )}\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_ACCT = gql`\r\n  mutation updateAccountEmployee($employeeId: ID!, $role: String, $level: Int) {\r\n    updateAccountEmployee(_id: $employeeId, emprole: $role, emplevel: $level) {\r\n      _id\r\n      empId\r\n      role\r\n      level\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeCard;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { IconWrap } from \"../../styled/utils\";\r\nimport { Cross } from \"@styled-icons/entypo/Cross\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport Page404 from \"../../../pages/Page404\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst RemoveService = ({ categId, employeeId, refetchCategories }) => {\r\n  const [categValue, setCategValue] = useState(\"\");\r\n\r\n  const [removeService, { loading: loadRemoving }] = useMutation(\r\n    REMOVE_SERVICE,\r\n    {\r\n      variables: {\r\n        categoryId: categValue,\r\n        employeeId,\r\n      },\r\n      refetchQueries: [{ query: refetchCategories }],\r\n      onCompleted() {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Service Removed\r\n          </Toasted>\r\n        ));\r\n      },\r\n      onError() {\r\n        return <Page404 />;\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleCategoryValue = (e) => {\r\n    setCategValue(e.currentTarget.dataset.categid);\r\n  };\r\n\r\n  const handleRemoveService = () => {\r\n    removeService();\r\n  };\r\n  return (\r\n    <div data-categid={categId} onMouseOver={handleCategoryValue}>\r\n      {loadRemoving ? (\r\n        <Spinner mini inverted />\r\n      ) : (\r\n        <IconWrap tiny margin=\"0 2px\" onClick={handleRemoveService}>\r\n          <Cross />\r\n        </IconWrap>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst REMOVE_SERVICE = gql`\r\n  mutation removeService($employeeId: ID!, $categoryId: ID!) {\r\n    removeService(employeeId: $employeeId, categoryId: $categoryId) {\r\n      _id\r\n      categoryServices {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default RemoveService;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { DCard, Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, IconWrap, DButton, CheckLabel } from \"../../styled/utils\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular/Plus\";\r\nimport { Save } from \"@styled-icons/boxicons-solid/Save\";\r\n\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport RemoveService from \"./RemoveService\";\r\n\r\nconst ServiceCard = ({ employee }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const { width: wid } = useWindowSize();\r\n  const [openAddService, setOpenAddService] = useState(false);\r\n\r\n  const [isCategories, setIsCategories] = useState(\r\n    employee.categoryServices.map((categServ) => categServ._id)\r\n  );\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const { data: categoryData, loading: loadCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      setCategories(categoryData.categories);\r\n    }\r\n  }, [categoryData]);\r\n\r\n  const [addService, { loading: loadAdd }] = useMutation(\r\n    ADD_SERVICES_MUTATION,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        categoryId: isCategories,\r\n      },\r\n      refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }],\r\n      onCompleted() {\r\n        setOpenAddService(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Service Added\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DCard dw=\"100%\" dh=\"100%\" maxh={wid < 768 ? \"300px\" : \"400px\"} flex fcol>\r\n        <Content\r\n          flex\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <DLabel size={wid < 768 ? \"18px !important\" : \"22px\"} weight={700}>\r\n            Services\r\n          </DLabel>\r\n          {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n            <IconWrap\r\n              small\r\n              title={\"Add Services\"}\r\n              topright\r\n              circle\r\n              shadow\r\n              bgcolor={({ theme }) => theme.bluer}\r\n              onClick={() => setOpenAddService(true)}\r\n            >\r\n              <Plus />\r\n            </IconWrap>\r\n          )}\r\n        </Content>\r\n        <Content\r\n          width=\"90%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          hoverflow\r\n          margin=\"0 auto\"\r\n          flow={wid <= 768 ? \"column wrap\" : \"column wrap\"}\r\n          pad=\"10px\"\r\n        >\r\n          {employee.categoryServices.map((categ) => (\r\n            <Content\r\n              width=\"auto\"\r\n              height={wid < 768 ? \"15px\" : \"25px\"}\r\n              margin={wid < 1024 ? \"8px 3px\" : \"5px\"}\r\n              key={categ._id}\r\n            >\r\n              <DLabel rounded color=\"bluer\" pad=\"3px 8px\">\r\n                <DGrid\r\n                  custom=\"7fr 1fr\"\r\n                  med5={\"7fr 1fr\"}\r\n                  med7={\"7fr 1fr\"}\r\n                  med10={\"7fr 1fr\"}\r\n                >\r\n                  {categ.name}\r\n                  <RemoveService\r\n                    categId={categ._id}\r\n                    employeeId={employee._id}\r\n                    refetchCategories={FETCH_ALL_CATEGORIES_QUERY}\r\n                  />\r\n                </DGrid>\r\n              </DLabel>\r\n            </Content>\r\n          ))}\r\n        </Content>\r\n      </DCard>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={openAddService}\r\n        onClose={() => setOpenAddService(false)}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Add Services</Modal.Header>\r\n        <Modal.Content>\r\n          {loadCategory ? (\r\n            <Spinner medium content=\"Fetching Data...\" />\r\n          ) : (\r\n            <CheckboxGroup\r\n              name=\"categories\"\r\n              value={isCategories}\r\n              onChange={setIsCategories}\r\n            >\r\n              {(Checkbox) => (\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  maxh={wid < 768 ? \"350px\" : \"200px\"}\r\n                  flex\r\n                  flow=\"column wrap\"\r\n                  hoverflow\r\n                >\r\n                  {categories.map((category) => (\r\n                    <Content\r\n                      width=\"auto\"\r\n                      height=\"30px\"\r\n                      margin={wid < 1024 ? \"8px 3px\" : \"5px\"}\r\n                      key={category._id}\r\n                    >\r\n                      <div className=\"pretty p-default p-round p-smooth\">\r\n                        <Checkbox value={category._id} key={category._id} />\r\n                        <div className=\"state p-warning-o\">\r\n                          <CheckLabel textt=\"uppercase\" color=\"dark\">\r\n                            {category.name}\r\n                          </CheckLabel>\r\n                        </div>\r\n                      </div>\r\n                    </Content>\r\n                  ))}\r\n                </Content>\r\n              )}\r\n            </CheckboxGroup>\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n          >\r\n            <DButton confirm flex onClick={handleAddService}>\r\n              {loadAdd ? (\r\n                <Spinner small inverted content=\"Loadin...\" />\r\n              ) : (\r\n                <>\r\n                  <Save size=\"22px\" title=\"Update Content\" />\r\n                  Save\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $categoryId: [ID]) {\r\n    addService(employeeId: $employeeId, categoryId: $categoryId) {\r\n      _id\r\n      categoryServices {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceCard;\r\n","import React from \"react\";\r\n\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\n\r\nimport PersonalCard from \"./PersonalCard\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\nimport ServiceCard from \"./ServiceCard\";\r\n\r\nconst DetailsEmployee = ({ employee }) => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"5px\" med7=\"1fr\" med10=\"1fr\">\r\n        <PersonalCard employee={employee} />\r\n        <EmployeeCard employee={employee} />\r\n        <ServiceCard employee={employee} />\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default DetailsEmployee;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport {\r\n  DLabel,\r\n  IconWrap,\r\n  DSelect,\r\n  DButton,\r\n  CheckLabel,\r\n} from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Cancel } from \"@styled-icons/material/Cancel\";\r\nimport { Save } from \"@styled-icons/boxicons-solid/Save\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst ScheduleEmployee = ({ employee }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n  const [isEditSched, setIsEditSched] = useState(false);\r\n  const [schedValues, setSchedValues] = useState({\r\n    workStart: employee.schedule.workStart,\r\n    workLength: employee.schedule.workLength / 60,\r\n    breakStart: employee.schedule.breakStart,\r\n    breakLength: employee.schedule.breakLength / 60,\r\n  });\r\n\r\n  const [updateSchedule, { loading: loadSchedule }] = useMutation(\r\n    UPDATE_EMPLOYEE_SCHEDULE,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n        workStart: schedValues.workStart,\r\n        breakStart: schedValues.breakStart,\r\n        workLength: parseInt(parseFloat(schedValues.workLength) * 60),\r\n        breakLength: parseInt(parseFloat(schedValues.breakLength) * 60),\r\n        day: days,\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEE_QUERY,\r\n          variables: { employeeId: employee._id },\r\n        },\r\n      ],\r\n      onError(err) {\r\n        console.log(err);\r\n        //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      },\r\n      onCompleted() {\r\n        setIsEditSched(false);\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Schedule Updated\r\n          </Toasted>\r\n        ));\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleEditSched = () => {\r\n    setIsEditSched(!isEditSched);\r\n  };\r\n\r\n  const handleSchedChange = (e) => {\r\n    setSchedValues({ ...schedValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleUpdateSched = () => {\r\n    updateSchedule();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"10px\" med10=\"1fr\" med7=\"1fr\">\r\n        <DCard dw=\"100%\" dh=\"100%\" p=\"10px\" flex fcol justifyBetween>\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <DLabel\r\n              size={wid < 768 ? \"18px !important\" : \"22px\"}\r\n              weight={700}\r\n              pad=\"0\"\r\n            >\r\n              Schedule Details\r\n            </DLabel>\r\n            {(employeeAuth.role === \"ADMIN\" || employeeAuth.level > 2) && (\r\n              <>\r\n                <IconWrap\r\n                  invisible={isEditSched ? true : null}\r\n                  bgcolor={({ theme }) => theme.blue}\r\n                  medium\r\n                  title={\"Update Info\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  pad=\"3px\"\r\n                >\r\n                  <Edit onClick={handleEditSched} />\r\n                </IconWrap>\r\n\r\n                <IconWrap\r\n                  invisible={!isEditSched ? true : null}\r\n                  medium\r\n                  title={\"Cancel Update\"}\r\n                  topright\r\n                  circle\r\n                  shadow\r\n                  color=\"red\"\r\n                >\r\n                  <Cancel onClick={handleEditSched} />\r\n                </IconWrap>\r\n              </>\r\n            )}\r\n          </Content>\r\n          <Content height=\"100%\" width=\"100%\">\r\n            <DGrid custom=\"1fr 2fr\">\r\n              <Content\r\n                flex\r\n                width=\"90%\"\r\n                height=\"300px\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n                margin=\"0 auto\"\r\n                style={\r\n                  wid < 768\r\n                    ? { borderBottom: \"1px solid #ccc\" }\r\n                    : { borderRight: \"1px solid #ccc\" }\r\n                }\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Days\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"flex-start\"\r\n                  direct=\"column\"\r\n                  pad=\"0 20px\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <CheckboxGroup\r\n                    name=\"days\"\r\n                    value={days}\r\n                    onChange={setDays}\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    {(Checkbox) => (\r\n                      <>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sun\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Sunday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Mon\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Monday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Tue\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Tuesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Wed\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Wednesday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Thu\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Thursday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Fri\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Friday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pretty p-default p-curve p-thick p-smooth p-toggle\">\r\n                          <Checkbox\r\n                            value=\"Sat\"\r\n                            disabled={isEditSched ? false : true}\r\n                          />\r\n                          <div className=\"state p-info-o p-on\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"bluer\" : \"blue\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                          <div className=\"state p-off\">\r\n                            <CheckLabel\r\n                              textt=\"uppercase\"\r\n                              color={isEditSched ? \"dark\" : \"grey\"}\r\n                            >\r\n                              Saturday\r\n                            </CheckLabel>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                height=\"300px\"\r\n                width=\"100%\"\r\n                margin=\"0 auto\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                direct=\"column\"\r\n              >\r\n                <DLabel\r\n                  size={wid < 768 ? \"14px !important\" : \"18px\"}\r\n                  weight={700}\r\n                >\r\n                  Work Hours\r\n                </DLabel>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                    pad=\"5px 10px\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Work\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        name=\"workStart\"\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workStart}\r\n                      >\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Work Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.workLength}\r\n                        name=\"workLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                        <option value=\"5\">5 hours</option>\r\n                        <option value=\"6\">6 hours</option>\r\n                        <option value=\"7\">7 hours</option>\r\n                        <option value=\"8\">8 hours</option>\r\n                        <option value=\"9\">9 hours</option>\r\n                        <option value=\"10\">10 hours</option>\r\n                        <option value=\"11\">11 hours</option>\r\n                        <option value=\"12\">12 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? employee.schedule.workLength\r\n                          : employee.schedule.workLength / 60}{\" \"}\r\n                        {employee.schedule.workLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.workLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n                <Content\r\n                  height=\"auto\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"5px auto\"\r\n                >\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Start of Break\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakStart}\r\n                        name=\"breakStart\"\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"6:00 AM\">6:00 AM</option>\r\n                        <option value=\"7:00 AM\">7:00 AM</option>\r\n                        <option value=\"8:00 AM\">8:00 AM</option>\r\n                        <option value=\"9:00 AM\">9:00 AM</option>\r\n                        <option value=\"10:00 AM\">10:00 AM</option>\r\n                        <option value=\"11:00 AM\">11:00 AM</option>\r\n                        <option value=\"12:00 PM\">12:00 PM</option>\r\n                        <option value=\"1:00 PM\">1:00 PM</option>\r\n                        <option value=\"2:00 PM\">2:00 PM</option>\r\n                        <option value=\"3:00 PM\">3:00 PM</option>\r\n                        <option value=\"4:00 PM\">4:00 PM</option>\r\n                        <option value=\"5:00 PM\">5:00 PM</option>\r\n                        <option value=\"6:00 PM\">6:00 PM</option>\r\n                        <option value=\"7:00 PM\">7:00 PM</option>\r\n                        <option value=\"8:00 PM\">8:00 PM</option>\r\n                        <option value=\"9:00 PM\">9:00 PM</option>\r\n                        <option value=\"10:00 PM\">10:00 PM</option>\r\n                        <option value=\"11:00 PM\">11:00 PM</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakStart}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                  <Content\r\n                    height=\"auto\"\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    direct=\"column\"\r\n                  >\r\n                    <DLabel weight={500} size=\"13px\" rounded color=\"bluer\">\r\n                      Break Length\r\n                    </DLabel>\r\n                    {isEditSched ? (\r\n                      <DSelect\r\n                        onChange={handleSchedChange}\r\n                        value={schedValues.breakLength}\r\n                        name=\"breakLength\"\r\n                      >\r\n                        <option></option>\r\n                        <option value={\"0.5\"}>30 mins</option>\r\n                        <option value={\"1\"}>1 hour</option>\r\n                        <option value=\"2\">2 hours</option>\r\n                        <option value=\"3\">3 hours</option>\r\n                        <option value=\"4\">4 hours</option>\r\n                      </DSelect>\r\n                    ) : (\r\n                      <DLabel weight={700} size=\"16px\" flex justifyCenter>\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? employee.schedule.breakLength\r\n                          : employee.schedule.breakLength / 60}{\" \"}\r\n                        {employee.schedule.breakLength / 60 === 0.5\r\n                          ? \"mins\"\r\n                          : employee.schedule.breakLength / 60 === 1\r\n                          ? \"hour\"\r\n                          : \"hours\"}\r\n                      </DLabel>\r\n                    )}\r\n                  </Content>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n            invisible={isEditSched ? false : true}\r\n          >\r\n            <DButton confirm flex onClick={handleUpdateSched}>\r\n              {loadSchedule ? (\r\n                <Spinner tiny row inverted content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Save size=\"22px\" title=\"Update Content\" />\r\n                  Save\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_SCHEDULE = gql`\r\n  mutation updateSchedule(\r\n    $employeeId: ID!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateSchedule(\r\n      _id: $employeeId\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ScheduleEmployee;\r\n","import React from \"react\";\r\nimport DetailsEmployee from \"./DetailsEmployee\";\r\nimport ScheduleEmployee from \"./ScheduleEmployee\";\r\nimport Page404 from \"../../../pages/Page404\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst Info = ({ isEmpInfo, employee }) => {\r\n  switch (isEmpInfo) {\r\n    case \"emp_details\":\r\n      return <DetailsEmployee employee={employee} />;\r\n    case \"emp_sched\":\r\n      return <ScheduleEmployee employee={employee} />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default Info;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n} from \"../../../util/graphql/employee\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Delete, DeleteForever } from \"@styled-icons/material\";\r\nimport { Warning } from \"@styled-icons/material-rounded\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport { Question } from \"@styled-icons/fa-solid\";\r\nimport { Popup, Modal, Grid } from \"semantic-ui-react\";\r\n\r\nconst EmployeeDelete = ({ employee }) => {\r\n  const history = useHistory();\r\n  const [isDlt, setIsDlt] = useState(false);\r\n\r\n  const [archiveEmployee, { loading: loadArchived }] = useMutation(\r\n    ARCHIVE_EMPLOYEE,\r\n    {\r\n      variables: {\r\n        employeeId: employee._id,\r\n      },\r\n\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n          variables: { active: true, limit: 0 },\r\n        },\r\n      ],\r\n      onCompleted() {\r\n        history.goBack();\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Content flex width=\"100%\" justify=\"flex-end\" align=\"center\">\r\n        <DButton flex alert onClick={() => setIsDlt(true)}>\r\n          <IconWrap small mcenter title=\"Delete Employee Info\">\r\n            <Delete />\r\n          </IconWrap>\r\n          Delete\r\n        </DButton>\r\n        <Popup\r\n          trigger={\r\n            <IconWrap\r\n              circle\r\n              shadow\r\n              bgcolor=\"#232323\"\r\n              tiny\r\n              mcenter\r\n              title=\"Info\"\r\n              pad=\"3px\"\r\n            >\r\n              <Question />\r\n            </IconWrap>\r\n          }\r\n          inverted\r\n          position=\"top right\"\r\n          size=\"tiny\"\r\n        >\r\n          <p style={{ fontWeight: 700 }}>\r\n            Store in archive or permanently delete this employee information.\r\n          </p>\r\n        </Popup>\r\n      </Content>\r\n      <Modal\r\n        basic\r\n        size=\"small\"\r\n        open={isDlt}\r\n        onClose={() => setIsDlt(false)}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>{`Archive Employee: ${employee.title} ${employee.firstName} ${employee.lastName}`}</Modal.Header>\r\n        <Modal.Content>\r\n          <p style={{ fontWeight: 500 }}>\r\n            Are you sure you want to put employee to archive? By doing so, it\r\n            will remove employee to other files. You can still restore after\r\n            this employee by going to{\" \"}\r\n            <strong>File Maintenance/Archive Files</strong>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            <Content\r\n              flex\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n            >\r\n              <Popup\r\n                on=\"click\"\r\n                trigger={\r\n                  <DButton alert flex>\r\n                    <DeleteForever size=\"22px\" />\r\n                    Delete Permanently\r\n                  </DButton>\r\n                }\r\n                position=\"top center\"\r\n                inverted\r\n                flowing\r\n              >\r\n                <Grid divided columns={2}>\r\n                  <Grid.Column>\r\n                    <IconWrap size=\"22px\" color=\"green\" margin=\"0 auto\">\r\n                      <Check title=\"Confirm deleting permanently\" />\r\n                    </IconWrap>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    <IconWrap size=\"22px\" color=\"red\" margin=\"0 auto\">\r\n                      <Cancel title=\"Cancel action\" />\r\n                    </IconWrap>\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </Popup>\r\n\r\n              <Popup\r\n                trigger={\r\n                  <IconWrap\r\n                    circle\r\n                    shadow\r\n                    color=\"yellow\"\r\n                    small\r\n                    mcenter\r\n                    title=\"Warning\"\r\n                  >\r\n                    <Warning />\r\n                  </IconWrap>\r\n                }\r\n                content={\r\n                  <p style={{ fontWeight: 700 }}>\r\n                    Deleting Permantly cannot be restored\r\n                  </p>\r\n                }\r\n                position=\"top right\"\r\n                size=\"tiny\"\r\n              />\r\n            </Content>\r\n\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-end\"\r\n              align=\"center\"\r\n            >\r\n              <DButton basic confirm onClick={() => archiveEmployee()}>\r\n                {loadArchived ? (\r\n                  <Spinner small inverted row content=\"Loading...\" />\r\n                ) : (\r\n                  <>\r\n                    <Check size=\"22px\" />\r\n                    Confirm\r\n                  </>\r\n                )}\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ARCHIVE_EMPLOYEE = gql`\r\n  mutation archiveEmployee($employeeId: ID!) {\r\n    archiveEmployee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      level\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDelete;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\n\r\nimport Spinner from \"../../components/Spinner\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport PhotoBooth from \"../../components/admin/employees/PhotoBooth\";\r\nimport Info from \"../../components/admin/employees/Info\";\r\nimport EmployeeDelete from \"../../components/admin/employees/EmployeeDelete\";\r\n\r\nconst Employee = (props) => {\r\n  const employeeId = props.match.params._id;\r\n  const { width: wid } = useWindowSize();\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  //Storing switch key to localstorage\r\n  const stored = localStorage.getItem(\"empInfo\");\r\n  const [isEmpInfo, setIsEmpInfo] = useState(\r\n    stored === \"emp_details\"\r\n      ? \"emp_details\"\r\n      : stored === \"emp_sched\"\r\n      ? \"emp_sched\"\r\n      : \"emp_details\"\r\n  );\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  const handleDetails = () => {\r\n    setIsEmpInfo(\"emp_details\");\r\n    localStorage.setItem(\"empInfo\", \"emp_details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsEmpInfo(\"emp_sched\");\r\n    localStorage.setItem(\"empInfo\", \"emp_sched\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        minh=\"90vh\"\r\n      >\r\n        {employeeLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n            >\r\n              <Breadcrumb size={\"huge\"}>\r\n                <Breadcrumb.Section as={Link} to=\"/zeadmin/employees\">\r\n                  Employee\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider>/</Breadcrumb.Divider>\r\n                <Breadcrumb.Section\r\n                  active\r\n                >{`${employee.firstName} ${employee.lastName}'s Info`}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <PhotoBooth\r\n                  employee={employee}\r\n                  employeeId={employeeId}\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                />\r\n                <Content\r\n                  flex\r\n                  direct=\"column\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                >\r\n                  <Info\r\n                    isEmpInfo={isEmpInfo}\r\n                    employee={employeeData && employeeData.employee}\r\n                  />\r\n                  <EmployeeDelete employee={employee} />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form, Label } from \"semantic-ui-react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const [values, setValues] = useState({ title: \"\" });\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content,\r\n      },\r\n\r\n      // update(cache, result) {\r\n      //   setOpen(false);\r\n      //   const data = cache.readQuery({\r\n      //     query: FETCH_ALL_CATEGORIES_QUERY,\r\n      //     variables: { active: true },\r\n      //   });\r\n\r\n      //   const newCategory = result.data.createCategory;\r\n      //   cache.writeQuery({\r\n      //     query: FETCH_ALL_CATEGORIES_QUERY,\r\n      //     variables: { active: true },\r\n      //     data: { categories: [newCategory, ...data.categories] },\r\n      //   });\r\n      // },\r\n      refetchQueries: [\r\n        { query: FETCH_ALL_CATEGORIES_QUERY, variables: { active: true } },\r\n      ],\r\n      onCompleted() {\r\n        setOpen(false);\r\n        setContent(\"\");\r\n        setValues({ title: \"\" });\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            New Category Add Successfully\r\n          </Toasted>\r\n        ));\r\n      },\r\n      // onError(err) {\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      //   toaster.notify(\"Something went Wrong\");\r\n      // },\r\n    }\r\n  );\r\n\r\n  const handleTitleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSaveCategory = () => {\r\n    createCategory();\r\n  };\r\n\r\n  const config = {\r\n    readonly: false,\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleTitleChange}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Description</Label>\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 5px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea active>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"flex-end\"\r\n          align=\"center\"\r\n        >\r\n          <DButton alert flex onClick={() => setOpen(false)}>\r\n            <Cancel size=\"22px\" />\r\n            No\r\n          </DButton>\r\n          <DButton confirm flex onClick={handleSaveCategory}>\r\n            {loading ? (\r\n              <Spinner inverted small content=\"Loading...\" />\r\n            ) : (\r\n              <>\r\n                <Check size=\"22px\" />\r\n                Yes\r\n              </>\r\n            )}\r\n          </DButton>\r\n        </Content>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  Overlay,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\n\r\nconst Categories = () => {\r\n  const { width: wid } = useWindowSize();\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY, {\r\n    variables: { active: true },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n      >\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <Content width=\"100%\" height=\"100%\">\r\n          {loading ? (\r\n            <Spinner content=\"Please wait while we fetch your data\" />\r\n          ) : (\r\n            <DGrid three gap=\"15px\" margin=\"40px 0\">\r\n              {categories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/zeadmin/category/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\nimport { IconWrap } from \"./styled/utils\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst MenuStyledDots = styled.div`\r\n  position: absolute;\r\n  width: auto;\r\n  height: auto;\r\n  z-index: 5;\r\n  ${(props) =>\r\n    props.middle &&\r\n    css`\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    `};\r\n  ${(props) =>\r\n    props.topright &&\r\n    css`\r\n      top: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.topleft &&\r\n    css`\r\n      top: 0;\r\n      left: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.bottomright &&\r\n    css`\r\n      bottom: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.middleright &&\r\n    css`\r\n      top: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.bottomleft &&\r\n    css`\r\n      bottom: 0;\r\n      left: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.middleleft &&\r\n    css`\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n    `};\r\n`;\r\n\r\nconst MenuDots = (props) => {\r\n  return (\r\n    <MenuStyledDots {...props}>\r\n      <Popup\r\n        style={{ zIndex: 2 }}\r\n        on=\"click\"\r\n        position=\"top right\"\r\n        trigger={\r\n          <IconWrap menu {...props} color=\"dark\">\r\n            <DotsVerticalRounded title=\"Menu\" />\r\n          </IconWrap>\r\n        }\r\n      >\r\n        {props.children}\r\n      </Popup>\r\n    </MenuStyledDots>\r\n  );\r\n};\r\n\r\nexport default MenuDots;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header, Popup, Grid } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport { Warning } from \"@styled-icons/material-rounded\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [archivedCategory] = useMutation(ARCHIVE_CATEGORY, {\r\n    variables: { categoryId: category._id },\r\n    refetchQueries: [\r\n      { query: FETCH_ALL_CATEGORIES_QUERY, variables: { active: true } },\r\n    ],\r\n    onCompleted() {\r\n      historyCallback();\r\n    },\r\n  });\r\n\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n        variables: { active: true },\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        (categ) => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n        variables: { active: true },\r\n        data: { categories: [...data.categories] },\r\n      });\r\n    },\r\n    onCompleted() {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id,\r\n    },\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      basic\r\n      size=\"small\"\r\n      open={open}\r\n      closeIcon\r\n      onClose={() => setOpen(false)}\r\n    >\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Archive this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p style={{ fontWeight: 700 }}>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n          >\r\n            <Popup\r\n              on=\"click\"\r\n              trigger={\r\n                <DButton alert flex>\r\n                  <DeleteForever size=\"22px\" />\r\n                  Delete Permanently\r\n                </DButton>\r\n              }\r\n              position=\"top center\"\r\n              flowing\r\n            >\r\n              <Grid divided columns={2}>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"green\" margin=\"0 auto\">\r\n                    <Check\r\n                      title=\"Confirm deleting permanently\"\r\n                      onClick={handleDeleteCategory}\r\n                    />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"red\" margin=\"0 auto\">\r\n                    <Cancel title=\"Cancel action\" />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Popup>\r\n\r\n            <Popup\r\n              trigger={\r\n                <IconWrap\r\n                  circle\r\n                  shadow\r\n                  color=\"yellow\"\r\n                  small\r\n                  mcenter\r\n                  title=\"Warning\"\r\n                >\r\n                  <Warning />\r\n                </IconWrap>\r\n              }\r\n              content={\r\n                <p style={{ fontWeight: 700 }}>\r\n                  Deleting Permantly cannot be restored\r\n                </p>\r\n              }\r\n              position=\"top right\"\r\n              size=\"tiny\"\r\n            />\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n          >\r\n            <DButton confirm basic onClick={() => archivedCategory()}>\r\n              Yes\r\n            </DButton>\r\n          </Content>\r\n        </Content>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ARCHIVE_CATEGORY = gql`\r\n  mutation archivedCategory($categoryId: ID!) {\r\n    archivedCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport { Form, Label, Grid } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport { DButton, DLabel, IconWrap } from \"../../../components/styled/utils\";\r\nimport { Edit, Trash } from \"@styled-icons/boxicons-solid\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport MenuDots from \"../../../components/MenuDots\";\r\nimport DTextArea from \"../../../components/DTextArea\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\nimport parser from \"html-react-parser\";\r\nimport Toasted from \"../../../components/Toasted\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  // const [errors, setErrors] = useState({});\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  // const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name,\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content,\r\n    },\r\n\r\n    onCompleted() {\r\n      setIsEdit(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Category Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  // const config = {\r\n  //   removePlugins: [\"Table\", \"Image\", \"MediaEmbed\"],\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <MenuDots topright medium>\r\n            <Grid divided columns={2}>\r\n              <Grid.Column>\r\n                <DButton confirm onClick={handleEdit} flex>\r\n                  <IconWrap mcenter>\r\n                    <Edit size=\"22px\" title=\"Update Content\" />\r\n                  </IconWrap>\r\n                </DButton>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <DButton alert flex onClick={() => setOpen(true)}>\r\n                  <IconWrap mcenter>\r\n                    <Trash size=\"22px\" title=\"Archive or Permanently Delete\" />\r\n                  </IconWrap>\r\n                </DButton>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </MenuDots>\r\n\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Title</Label>\r\n            {isEdit ? (\r\n              <Content\r\n                width=\"90%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Content>\r\n            ) : (\r\n              <Content\r\n                width=\"90%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"50%\"}\r\n                  size=\"18px\"\r\n                >\r\n                  {values.title}\r\n                </DLabel>\r\n              </Content>\r\n            )}\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Description</Label>\r\n            <Content\r\n              width=\"90%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea active={isEdit ? true : null}>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n\r\n              <DTextArea active={!isEdit ? true : null}>\r\n                {parser(content)}\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n          {isEdit && (\r\n            <Content flex justify=\"flex-end\" align=\"center\" width=\"100%\">\r\n              <DButton type=\"submit\" onClick={handleSubmit}>\r\n                {loading ? (\r\n                  <Spinner small row inverted content=\"Loading...\" />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </DButton>\r\n              <DButton alert onClick={handleCancel}>\r\n                Cancel\r\n              </DButton>\r\n            </Content>\r\n          )}\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form, Label } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport DTextArea from \"../../DTextArea\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values, setValues } = useForm(\r\n    registerCallBack,\r\n    {\r\n      name: \"\",\r\n      price: \"\",\r\n      duration: \"\",\r\n    }\r\n  );\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId, active: true },\r\n      },\r\n    ],\r\n\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted success onClick={onClose}>\r\n            Service already Exist\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n      setValues({ name: \"\", price: \"\", duration: \"\" });\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          New Service Added Successfully\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Content\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"flex-start\"\r\n              direct=\"column\"\r\n              margin=\"12px auto\"\r\n            >\r\n              <Label style={styles.label}>Description</Label>\r\n              <Content\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 5px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DTextArea active>\r\n                  <CKEditor\r\n                    onInit={(editor) => {\r\n                      // Insert the toolbar before the editable area.\r\n                      editor.ui\r\n                        .getEditableElement()\r\n                        .parentElement.insertBefore(\r\n                          editor.ui.view.toolbar.element,\r\n                          editor.ui.getEditableElement()\r\n                        );\r\n                    }}\r\n                    onChange={(event, editor) => {\r\n                      const data = editor.getData();\r\n                      setContent(data);\r\n                    }}\r\n                    editor={DecoupledEditor}\r\n                    data={content}\r\n                  />\r\n                </DTextArea>\r\n              </Content>\r\n            </Content>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? (\r\n            <Spinner small inverted row content=\"Loading...\" />\r\n          ) : (\r\n            \"Yes\"\r\n          )}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"auto\",\r\n    textAlign: \"center\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel, IconWrap } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { Plus } from \"@styled-icons/boxicons-regular/Plus\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId,\r\n        active: true,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => (\r\n        <IconWrap color={\"green\"}>\r\n          <Grid size=\"22px\" />\r\n        </IconWrap>\r\n      ),\r\n      width: \"66px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0.7,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"74px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n      ),\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton flex width=\"56px\" size=\"36px\">\r\n          <Link to={`/zeadmin/service/${row._id}`} className=\"flex-center\">\r\n            <Eye size=\"22px\" title=\"View Service Information\" />\r\n          </Link>\r\n        </DButton>\r\n      ),\r\n      right: true,\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontWeight: \"500\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const title = (\r\n    <DLabel color=\"bluer\" size=\"18px\" rounded>\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <>\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <IconWrap\r\n          medium\r\n          title={\"Add Service\"}\r\n          topright\r\n          circle\r\n          shadow\r\n          bgcolor={({ theme }) => theme.bluer}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <Plus />\r\n        </IconWrap>\r\n      </Content>\r\n      <DataTable\r\n        title={title}\r\n        columns={columns}\r\n        data={services.map((service) => service)}\r\n        responsive={true}\r\n        pagination\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        customStyles={customStyles}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading_services}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport { IconWrap } from \"../../components/styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../components/Toasted\";\r\nimport Page404 from \"../Page404\";\r\n\r\nconst Category = (props) => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Upload Success\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId: categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: category.photo\r\n        ? `/images/service/${category.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        {dataLoading ? (\r\n          <Spinner content=\"Please wait while we fetch the data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n            >\r\n              <Breadcrumb size={\"huge\"}>\r\n                <Breadcrumb.Section>\r\n                  <Link to=\"/zeadmin/categories\"> Category</Link>\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider>/</Breadcrumb.Divider>\r\n                <Breadcrumb.Section active>{category.name}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  mcenter\r\n                  direct=\"column\"\r\n                >\r\n                  <DCard\r\n                    dw={wid < 524 ? \"50%\" : \"100%\"}\r\n                    dh=\"250px\"\r\n                    mcenter\r\n                    p=\"0px\"\r\n                    grayzoom\r\n                  >\r\n                    {loading ? (\r\n                      <Spinner content=\"Loading...\" medium />\r\n                    ) : (\r\n                      <DImage height=\"100%\" width=\"100%\">\r\n                        <img\r\n                          src={\r\n                            category.photo\r\n                              ? `/images/service/${category.photo}`\r\n                              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt={category.name}\r\n                          onClick={openLightbox}\r\n                        />\r\n                      </DImage>\r\n                    )}\r\n                    <IconWrap\r\n                      {...getRootProps()}\r\n                      circle\r\n                      bottomcenter\r\n                      small\r\n                      pad=\"2px\"\r\n                      bgcolor={({ theme }) => theme.bluer}\r\n                    >\r\n                      <Camera title=\"Upload\" />\r\n                      <input {...getInputProps()} />\r\n                    </IconWrap>\r\n                  </DCard>\r\n\r\n                  <ModalGateway>\r\n                    {viewerIsOpen ? (\r\n                      <Modal onClose={closeLightbox}>\r\n                        <Carousel views={images} />\r\n                      </Modal>\r\n                    ) : null}\r\n                  </ModalGateway>\r\n                </Content>\r\n                <Content width=\"100%\" height=\"100%\">\r\n                  <DGrid gap=\"10px\">\r\n                    <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\" overf>\r\n                      <CategoryDetails\r\n                        category={data.category}\r\n                        historyCallback={historyCallback}\r\n                      />\r\n                    </DCard>\r\n                    <DCard dw=\"100%\" dh=\"100%\">\r\n                      <ServiceList categoryId={data.category._id} />\r\n                    </DCard>\r\n                  </DGrid>\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header, Grid, Popup } from \"semantic-ui-react\";\r\nimport { DButton, IconWrap } from \"../../styled/utils\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DeleteForever } from \"@styled-icons/material\";\r\nimport { Check } from \"@styled-icons/entypo\";\r\nimport { Cancel } from \"@styled-icons/typicons\";\r\nimport { Warning } from \"@styled-icons/material-rounded\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback,\r\n}) => {\r\n  const [archiveService, { loading: loadArchiveService }] = useMutation(\r\n    ARCHIVE_SERVICE,\r\n    {\r\n      variables: { serviceId: service._id },\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_SERVICES_QUERY,\r\n          variables: { categoryId: service.category._id, active: true },\r\n        },\r\n      ],\r\n      onCompleted(data) {\r\n        serviceHistoryCallback();\r\n      },\r\n    }\r\n  );\r\n\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id,\r\n          active: true,\r\n        },\r\n      });\r\n\r\n      data.services = data.services.filter((serv) => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id,\r\n          active: true,\r\n        },\r\n        data: { services: [...data.services] },\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id,\r\n    },\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      basic\r\n      size=\"small\"\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      closeIcon\r\n    >\r\n      <Header icon=\"archive\" content={`Archive service: ${service.name}`} />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Content\r\n            flex\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n          >\r\n            <Popup\r\n              on=\"click\"\r\n              trigger={\r\n                <DButton alert flex>\r\n                  <DeleteForever size=\"22px\" />\r\n                  Delete Permanently\r\n                </DButton>\r\n              }\r\n              position=\"top center\"\r\n              flowing\r\n            >\r\n              <Grid divided columns={2}>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"green\" margin=\"0 auto\">\r\n                    <Check\r\n                      title=\"Confirm deleting permanently\"\r\n                      onClick={handleDeleteService}\r\n                    />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <IconWrap size=\"22px\" color=\"red\" margin=\"0 auto\">\r\n                    <Cancel title=\"Cancel action\" />\r\n                  </IconWrap>\r\n                </Grid.Column>\r\n              </Grid>\r\n            </Popup>\r\n\r\n            <Popup\r\n              trigger={\r\n                <IconWrap\r\n                  circle\r\n                  shadow\r\n                  color=\"yellow\"\r\n                  small\r\n                  mcenter\r\n                  title=\"Warning\"\r\n                >\r\n                  <Warning />\r\n                </IconWrap>\r\n              }\r\n              content={\r\n                <p style={{ fontWeight: 700 }}>\r\n                  Deleting Permantly cannot be restored\r\n                </p>\r\n              }\r\n              position=\"top right\"\r\n              size=\"tiny\"\r\n            />\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-end\"\r\n            align=\"center\"\r\n          >\r\n            <DButton basic confirm onClick={() => archiveService()}>\r\n              {loadArchiveService ? (\r\n                <Spinner inverted small row content=\"Loading...\" />\r\n              ) : (\r\n                <>\r\n                  <Check size=\"22px\" />\r\n                  Yes\r\n                </>\r\n              )}\r\n            </DButton>\r\n          </Content>\r\n        </Content>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ARCHIVE_SERVICE = gql`\r\n  mutation archivedService($serviceId: ID!) {\r\n    archivedService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label, Grid } from \"semantic-ui-react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport { DButton, DLabel, IconWrap } from \"../../../components/styled/utils\";\r\nimport MenuDots from \"../../../components/MenuDots\";\r\nimport { Edit, Trash } from \"@styled-icons/boxicons-solid\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport DTextArea from \"../../../components/DTextArea\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  // const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service && service.name,\r\n      price: service && service.price,\r\n      duration: service && service.duration,\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(values.duration),\r\n      description: content,\r\n    },\r\n\r\n    onCompleted() {\r\n      setIsEdit(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Service Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <MenuDots topright medium>\r\n          <Grid divided columns={2}>\r\n            <Grid.Column>\r\n              <DButton confirm onClick={handleEdit} flex>\r\n                <IconWrap mcenter>\r\n                  <Edit size=\"22px\" title=\"Update Content\" />\r\n                </IconWrap>\r\n              </DButton>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <DButton alert flex onClick={() => setOpen(true)}>\r\n                <IconWrap mcenter>\r\n                  <Trash size=\"22px\" title=\"Archive or Permanently Delete\" />\r\n                </IconWrap>\r\n              </DButton>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </MenuDots>\r\n\r\n        <DGrid gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                {isEdit ? (\r\n                  <input\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"60%\" }}\r\n                  />\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    {values.title}\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                {isEdit ? (\r\n                  <select\r\n                    name=\"duration\"\r\n                    value={values.duration}\r\n                    onChange={handleChange}\r\n                  >\r\n                    {/* <option></option> */}\r\n                    <option value=\"30\">30 mins</option>\r\n                    <option value=\"45\">45 mins</option>\r\n                    <option value=\"60\">60 mins</option>\r\n                    <option value=\"90\">90 mins</option>\r\n                    <option value=\"120\">120 mins</option>\r\n                    <option value=\"180\">180 mins</option>\r\n                    <option value=\"210\">210 mins</option>\r\n                  </select>\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    {values.duration} min\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                {isEdit ? (\r\n                  <input\r\n                    name=\"price\"\r\n                    value={values.price}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"60%\" }}\r\n                  />\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    Php {values.price}\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Description</Label>\r\n\r\n            <Content\r\n              width=\"90%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea active={isEdit ? true : null}>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n              <DTextArea active={!isEdit ? true : null}>\r\n                {parser(content)}\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n          {isEdit && (\r\n            <Content width=\"100%\" flex justify=\"flex-end\">\r\n              <DButton confirm onClick={handleSubmit}>\r\n                {loading ? (\r\n                  <Spinner row small inverted content=\"Loading...\" />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </DButton>\r\n              <DButton alert onClick={() => setIsEdit(false)}>\r\n                Cancel\r\n              </DButton>\r\n            </Content>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\",\r\n  },\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport { IconWrap } from \"../../components/styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../components/Toasted\";\r\n\r\nconst Service = (props) => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState({});\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId,\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, [serviceData]);\r\n\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Image Uploaded\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: service.photo\r\n        ? `/images/service/${service.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        mcenter\r\n      >\r\n        {serviceLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n            >\r\n              <Breadcrumb size={\"huge\"}>\r\n                <Breadcrumb.Section link>Category</Breadcrumb.Section>\r\n                <Breadcrumb.Divider>/</Breadcrumb.Divider>\r\n                <Breadcrumb.Section active>{service.name}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  mcenter\r\n                  direct=\"column\"\r\n                >\r\n                  <DCard\r\n                    dw={wid < 524 ? \"50%\" : \"100%\"}\r\n                    dh=\"250px\"\r\n                    mcenter\r\n                    p=\"0px\"\r\n                    grayzoom\r\n                  >\r\n                    {loading ? (\r\n                      <Spinner content=\"Loading...\" medium />\r\n                    ) : (\r\n                      <DImage height=\"100%\" width=\"100%\">\r\n                        <img\r\n                          src={\r\n                            service.photo\r\n                              ? `/images/service/${service.photo}`\r\n                              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt={service.name}\r\n                          onClick={openLightbox}\r\n                        />\r\n                      </DImage>\r\n                    )}\r\n                    <IconWrap\r\n                      {...getRootProps()}\r\n                      circle\r\n                      bottomcenter\r\n                      small\r\n                      bgcolor={({ theme }) => theme.bluer}\r\n                      pad=\"2px\"\r\n                    >\r\n                      <Camera title=\"Upload\" />\r\n                      <input {...getInputProps()} />\r\n                    </IconWrap>\r\n                  </DCard>\r\n\r\n                  <ModalGateway>\r\n                    {viewerIsOpen ? (\r\n                      <Modal onClose={closeLightbox}>\r\n                        <Carousel views={images} />\r\n                      </Modal>\r\n                    ) : null}\r\n                  </ModalGateway>\r\n                </Content>\r\n                <Content width=\"100%\" height=\"100%\">\r\n                  <DGrid gap=\"10px\">\r\n                    <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\" overf>\r\n                      <ServiceDetails\r\n                        service={serviceData.service}\r\n                        serviceHistoryCallback={serviceHistoryCallback}\r\n                      />\r\n                    </DCard>\r\n                  </DGrid>\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n      {/* {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <>\r\n                    <Content height=\"300px\"></Content>\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      className=\"dark\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )} */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  // const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n  //   variables: {\r\n  //     inqId: inqId\r\n  //   }\r\n  // });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage,\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(\"Message sent\");\r\n    },\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n  };\r\n\r\n  const handleReplyMsg = (e) => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingInq ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{inq.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {inq.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {inq.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={inq.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={inq.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { DSection } from \"../../components/styled/containers\";\r\nimport { Popup, Icon, Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\nimport moment from \"moment\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n  const [inqVal, setInqVal] = useState(\"\");\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const [readInq, { loading: loadReadInq }] = useMutation(READ_INQ, {\r\n    variables: { inqId: inqVal },\r\n    refetchQueries: [{ query: FETCH_INQUIRIES }],\r\n  });\r\n\r\n  const handleRow = (e) => {\r\n    readInq();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleMouseOver = (e) => {\r\n    setInqVal(e.currentTarget.dataset.inqid);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true,\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: (row) => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      },\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"createdAt\",\r\n      sortable: true,\r\n      cell: (row) => moment(parseInt(row.createdAt)).format(\"LLL\"),\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"read\",\r\n      sortable: true,\r\n      format: (row) => {\r\n        return (\r\n          <span style={{ fontWeight: 700 }}>\r\n            {row.read ? \"Read\" : \"Unread\"}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              flex\r\n              data-inqid={row._id}\r\n              onClick={handleRow}\r\n              onMouseOver={handleMouseOver}\r\n            >\r\n              <Eye size=\"18px\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      ),\r\n      right: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        pad=\"24px 0\"\r\n      >\r\n        {/* <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n              Inquiry List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content> */}\r\n\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map((inq) => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          progressPending={loading_inquiries}\r\n          progressComponent={\r\n            <Spinner content=\"Please wait while we fetch our data...\" />\r\n          }\r\n        />\r\n\r\n        <ReplyModal inqId={inqVal} open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <Breadcrumb size={\"huge\"}>\r\n    <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n      Inquiry List\r\n    </Breadcrumb.Section>\r\n  </Breadcrumb>\r\n);\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nconst READ_INQ = gql`\r\n  mutation readInquiry($inqId: ID!) {\r\n    readInquiry(_id: $inqId)\r\n  }\r\n`;\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ id, photo, fetchEmployee }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            {loading ? (\r\n              <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n                <Spinner small />\r\n              </Content>\r\n            ) : (\r\n              <img\r\n                src={\r\n                  photo !== null\r\n                    ? `/images/employees/${photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            )}\r\n          </DImage>\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        {/* <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleSchedule} fluid>\r\n            Schedule\r\n          </DButton>\r\n        </DCard> */}\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = (e) => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole,\r\n    },\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  // const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    employee.dateOfBirth ? new Date(parseInt(employee.dateOfBirth)) : new Date()\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Updated Successfully\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values,\r\n    },\r\n  });\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\nimport moment from \"moment\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {moment(parseInt(employee.dateOfBirth)).format(\"LL\")}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from \"react\";\r\n\r\nconst AccountSched = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = () => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeAuth.id\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {empData && empData.employee ? (\r\n            !empLoading ? (\r\n              <>\r\n                <PhotoBooth\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                  photo={empData.employee.photo}\r\n                  id={empData.employee._id}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                />\r\n                <AccountInfo\r\n                  employee={empData.employee}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                  isAccount={isAccount}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { DotsVertical } from \"../../components/styled/utils\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Profile\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Last Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.lastName}</div>,\r\n    },\r\n    {\r\n      name: \"First Name\",\r\n      selector: \"firstName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.firstName}</div>,\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: \"email\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.email}</div>,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        mcenter\r\n        style={{ minHeight: \"50vh\" }}\r\n      >\r\n        {loading_users ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map((getUser) => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId,\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue,\r\n      },\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n      },\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments],\r\n          },\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\",\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        confirm\r\n        onClick={() => setNewConfirm(true)}\r\n        disabled={\r\n          serviceValue === \"\" || employeeVal === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content style={{ overflow: \"hidden\" }}>\r\n          <DGrid custom=\"1fr 2fr\">\r\n            <AppointmentInputs\r\n              categoryValue={categoryValue}\r\n              setCategoryValue={setCategoryValue}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = (props) => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s Info\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SigninForm = () => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"styled-icons/fa-regular\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton flex as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" />\r\n        </DButton>\r\n      ),\r\n      right: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content height=\"100%\" width=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <DataTable\r\n        title={title}\r\n        columns={columns}\r\n        data={historyAppointments}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <DLabel size=\"18px\" tt=\"uppercase\" weight=\"700\" pad=\"10px 20px\" color=\"bluer\" rounded>\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst FileReport = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n              File Report\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <Content\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n        >\r\n          <HistoryAppointments />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useUploadFile = () => {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  const onSelectedFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  return { preview, selectedFile, setSelectedFile, onSelectedFile };\r\n};\r\n\r\nexport default useUploadFile;\r\n","import React, { useRef } from \"react\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../../../styled/containers\";\r\n\r\nconst ImageSection = ({\r\n  isDark,\r\n  isPosition,\r\n  isColor,\r\n  preview,\r\n  selectedFile,\r\n  onSelectedFile,\r\n  values,\r\n  bgImg\r\n}) => {\r\n  const fileInput = useRef();\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n        <DImage dashed height=\"100%\" width=\"100%\">\r\n          {selectedFile ? (\r\n            <img src={preview} alt=\"showcase\" />\r\n          ) : (\r\n            bgImg && <img src={`/images/cms/home/${bgImg}`} alt=\"showcase\" />\r\n          )}\r\n        </DImage>\r\n\r\n        <Overlay\r\n          flex\r\n          bgr={isDark && isPosition === \"right\" ? true : false}\r\n          bgl={isDark && isPosition === \"left\" ? true : false}\r\n          bgc={isDark && isPosition === \"center\" ? true : false}\r\n          justify={\r\n            isPosition === \"left\"\r\n              ? \"flex-start\"\r\n              : isPosition === \"right\"\r\n              ? \"flex-end\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          talign={\r\n            isPosition === \"left\"\r\n              ? \"left\"\r\n              : isPosition === \"right\"\r\n              ? \"right\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          align=\"center\"\r\n          className={isDark ? \"dark\" : \"\"}\r\n        >\r\n          <div className=\"overlay-content\">\r\n            <h3>{values.title ? values.title : \"TITLE\"}</h3>\r\n            <h4>{values.subtitle ? values.subtitle : \"SUBTITLE\"}</h4>\r\n            <p className=\"ps\">\r\n              {values.paragraph\r\n                ? values.paragraph\r\n                : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec posuere ante orci, at interdum nunc maximus eu. Pellentesque tempus est ligula, sit ame\"}\r\n            </p>\r\n          </div>\r\n        </Overlay>\r\n      </DSection>\r\n\r\n      <Content width=\"80%\" margin=\"0 auto\" flex justify=\"center\" align=\"center\">\r\n        <input\r\n          type=\"file\"\r\n          value={undefined}\r\n          onChange={onSelectedFile}\r\n          style={{ display: \"none\" }}\r\n          ref={fileInput}\r\n        />\r\n        <Popup\r\n          content=\"Select image for background slide\"\r\n          trigger={\r\n            <Icon\r\n              name=\"camera\"\r\n              size=\"large\"\r\n              onClick={handleInputClick}\r\n              style={{ cursor: \"pointer\", color: \"#2193b0\", opacity: 0.75 }}\r\n              className=\"icon_camera-custom\"\r\n            />\r\n          }\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSection;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../../styled/containers\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport useUploadFile from \"../../../../../util/hooks/useUploadFile\";\r\nimport ImageSection from \"./ImageSection\";\r\nimport toaster from \"toasted-notes\";\r\nimport \"./modal.custom.css\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalSlide = ({ open, setOpen, showcase }) => {\r\n  const [isDark, setIsDark] = useState(showcase ? showcase.dark : false);\r\n  const [isPosition, setIsPosition] = useState(\r\n    showcase ? showcase.position : \"left\"\r\n  );\r\n\r\n  const [isColor, setIsColor] = useState(\r\n    showcase ? showcase.bgColor : \"#FFFFFF\"\r\n  );\r\n  const [values, setValues] = useState({\r\n    title: showcase ? showcase.title : \"\",\r\n    subtitle: showcase ? showcase.subtitle : \"\",\r\n    paragraph: showcase ? showcase.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  // ADD OR UPDATE\r\n  const mutation = showcase ? UPDATE_SLIDE : ADD_NEW_SLIDE;\r\n\r\n  const [addOrUpdateSlide, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      showcaseId: showcase && showcase._id,\r\n      ...values,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      position: isPosition,\r\n      dark: isDark,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } },\r\n    ],\r\n    update() {\r\n      if (!showcase) {\r\n        values.title = \"\";\r\n        values.subtitle = \"\";\r\n        values.paragraph = \"\";\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n      setIsDark(false);\r\n      setIsPosition(\"left\");\r\n      setSelectedFile();\r\n      setIsColor(\"#E9E4F0\");\r\n      if (showcase) {\r\n        toaster.notify(\"Update Slide Successfully\");\r\n      } else {\r\n        toaster.notify(\"Add New Slide Successfully\");\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handlePosition = (event) => {\r\n    setIsPosition(event.target.value);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    addOrUpdateSlide();\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Add New Slide </Modal.Header>\r\n      <DGrid custom=\"2fr 1fr\" gap=\"10px\">\r\n        <Modal.Content style={{ padding: \"10px\" }}>\r\n          <ImageSection\r\n            isPosition={isPosition}\r\n            isDark={isDark}\r\n            isColor={isColor}\r\n            preview={preview}\r\n            selectedFile={selectedFile}\r\n            onSelectedFile={onSelectedFile}\r\n            values={values}\r\n            bgImg={showcase && showcase.bgImg}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Content scrolling>\r\n          <Content pad=\"10px\" width=\"100%\" height=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={values.subtitle || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  maxLength=\"150\"\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={values.paragraph || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Text Positioning</label>\r\n                <Content\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"left\"\r\n                      checked={isPosition === \"left\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Left</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"center\"\r\n                      checked={isPosition === \"center\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Center</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"right\"\r\n                      checked={isPosition === \"right\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Right</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay{\" \"}\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Dark</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n        </Modal.Content>\r\n      </DGrid>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" confirm onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n        <DButton alert>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_NEW_SLIDE = gql`\r\n  mutation addNewShowCase(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    addNewShowCase(\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_SLIDE = gql`\r\n  mutation updateShowcase(\r\n    $showcaseId: ID!\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    updateShowcase(\r\n      showcaseId: $showcaseId\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst NewSlide = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"add\" />\r\n        New Slide\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst EditSlide = ({ showcase }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"edit\" style={{ color: \"white\" }} fitted />\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} showcase={showcase} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSlide;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst RemoveSlide = ({ showcase }) => {\r\n  const [isOpenRemove, setIsOpenRemove] = useState(false);\r\n\r\n  const [removeSlide, { loading }] = useMutation(REMOVE_SLIDE, {\r\n    variables: {\r\n      showcaseId: showcase._id\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } }\r\n    ],\r\n    onCompleted() {\r\n      setIsOpenRemove(false);\r\n      toaster.notify(\"Slide Remove\", { position: \"bottom-right\" });\r\n    }\r\n  });\r\n\r\n  const handleRemoveSlide = e => {\r\n    e.preventDefault();\r\n    removeSlide();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton alert onClick={() => setIsOpenRemove(true)}>\r\n        <Icon name=\"trash\" fitted />\r\n      </DButton>\r\n      <Modal\r\n        basic\r\n        open={isOpenRemove}\r\n        closeIcon\r\n        onClose={() => setIsOpenRemove(false)}\r\n      >\r\n        <Modal.Header>Slide ID: {showcase._id}</Modal.Header>\r\n        <Modal.Content>\r\n          <h1>Are you sure you want to remove this slide?</h1>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton basic confirm onClick={handleRemoveSlide}>\r\n            {loading ? <Spinner inverted small /> : \"Yes\"}\r\n          </DButton>\r\n          <DButton basic alert onClick={() => setIsOpenRemove(false)}>\r\n            No\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst REMOVE_SLIDE = gql`\r\n  mutation removeShowcase($showcaseId: ID!) {\r\n    removeShowcase(showcaseId: $showcaseId)\r\n  }\r\n`;\r\n\r\nexport default RemoveSlide;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport {\r\n  DShowCase,\r\n  Overlay,\r\n  DSection,\r\n  DImage\r\n} from \"../../../../styled/containers\";\r\nimport NewSlide from \"./NewSlide\";\r\nimport EditSlide from \"./EditSlide\";\r\nimport RemoveSlide from \"./RemoveSlide\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Showcase = () => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  const { data: showcaseData, loading: dataLoading } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" mcenter>\r\n      <NewSlide />\r\n      <div style={{ position: \"relative\" }}>\r\n        {dataLoading ? (\r\n          <DShowCase height=\"80vh\">\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src=\"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                alt=\"showcase\"\r\n              />\r\n            </DImage>\r\n          </DShowCase>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {showcase.map(sc => (\r\n              <DShowCase\r\n                height=\"80vh\"\r\n                key={sc._id}\r\n                background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n                bgcolor={sc.bgColor}\r\n              >\r\n                <Overlay\r\n                  flex\r\n                  bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                  bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                  bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                  justify={\r\n                    sc.position === \"left\"\r\n                      ? \"flex-start\"\r\n                      : sc.position === \"right\"\r\n                      ? \"flex-end\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  talign={\r\n                    sc.position === \"left\"\r\n                      ? \"left\"\r\n                      : sc.position === \"right\"\r\n                      ? \"right\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  align=\"center\"\r\n                  className={sc.dark ? \"dark\" : \"\"}\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h1>{sc.title}</h1>\r\n                    <h2>{sc.subtitle}</h2>\r\n                    <p>{sc.paragraph}</p>\r\n                  </div>\r\n                </Overlay>\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 20,\r\n                    zIndex: 2,\r\n                    width: \"auto\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <EditSlide showcase={sc} />\r\n                  <RemoveSlide showcase={sc} />\r\n                </div>\r\n              </DShowCase>\r\n            ))}\r\n          </Slider>\r\n        )}\r\n      </div>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport Spinner from \"../../../../Spinner\";\r\n\r\nconst EditModal = ({ aboutBool }) => {\r\n  const [updateAboutSection, { loading }] = useMutation(UPDATE_ABOUT_SECTION, {\r\n    variables: { sectionName: \"ABOUT\" },\r\n  });\r\n\r\n  const handleReverse = () => {\r\n    updateAboutSection();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner small />\r\n      ) : (\r\n        <Popup\r\n          content=\"Toggle Position\"\r\n          trigger={\r\n            <div className=\"pretty p-switch p-fill p-toggle\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"alt\"\r\n                value={aboutBool}\r\n                onChange={handleReverse}\r\n                checked={aboutBool === true ? true : false}\r\n              />\r\n              <div className=\"state p-primary p-on\">\r\n                <label style={{ fontWeight: 500 }}>Reverse</label>\r\n              </div>\r\n              <div className=\"state p-warning p-off\">\r\n                <label style={{ fontWeight: 500 }}>Default</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n          inverted\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_SECTION = gql`\r\n  mutation updateAboutSection($sectionName: String!) {\r\n    updateAboutSection(sectionName: $sectionName) {\r\n      _id\r\n      sectionName\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_HOME_SECTION,\r\n  FETCH_ABOUT_CMS,\r\n} from \"../../../../../util/graphql/cms\";\r\nimport { Section2Styled, Content } from \"../../../../styled/containers\";\r\nimport EditModal from \"./EditModal\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst SectionAbout = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAboutSection, loading: loadingAboutSection } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: { sectionName: \"ABOUT\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataAboutSection) {\r\n      setIsAbout(dataAboutSection.homeCMS);\r\n    }\r\n  }, [dataAboutSection]);\r\n\r\n  const { data: dataAbout, loading: loadingAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  return (\r\n    <Section2Styled visible width=\"90%\" alt={isAbout.alt ? true : false}>\r\n      <div className=\"switch\">\r\n        {loadingAboutSection ? (\r\n          <Spinner tiny />\r\n        ) : (\r\n          <EditModal aboutBool={dataAboutSection.homeCMS.alt} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"sec2-container\">\r\n        <div className=\"sec2-inner\">\r\n          {loadingAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\">\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default SectionAbout;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"./styled/utils\";\r\n\r\nconst ReadMore = (props) => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../../../util/graphql/service\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  Overlay,\r\n  DImage,\r\n  DCard,\r\n} from \"../../../../styled/containers\";\r\nimport useWindowSize from \"../../../../../util/hooks/useWindowSize\";\r\nimport ReadMore from \"../../../../ReadMore\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst CategoryCards = ({ gridCount }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <Content height=\"100%\" width=\"100%\">\r\n      {loading ? (\r\n        <DGrid four gap=\"20px\">\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n        </DGrid>\r\n      ) : (\r\n        <DGrid\r\n          two={gridCount === 2 ? true : false}\r\n          three={gridCount === 3 ? true : false}\r\n          four={gridCount === 4 ? true : false}\r\n          gap=\"20px\"\r\n        >\r\n          {isCategories.map((category) => (\r\n            <DCard\r\n              key={category._id}\r\n              dw={wid < 524 ? \"70%\" : \"90%\"}\r\n              dh=\"250px\"\r\n              mcenter\r\n              p=\"0px\"\r\n              grayzoom\r\n              overlaying\r\n            >\r\n              <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                <img\r\n                  src={\r\n                    category.photo\r\n                      ? `/images/service/${category.photo}`\r\n                      : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  alt={category.name}\r\n                />\r\n              </DImage>\r\n\r\n              <Overlay\r\n                bgc\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                initbox\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h3 className=\"title\">{category.name}</h3>\r\n\r\n                    {category.description.length > 100\r\n                      ? parser(category.description.substr(0, 100) + \"...\")\r\n                      : parser(category.description.substr(0, 100))}\r\n\r\n                    <ReadMore center size=\"14px\">\r\n                      Learn More\r\n                    </ReadMore>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DCard>\r\n          ))}\r\n        </DGrid>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { Content } from \"../../../../styled/containers\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\"\r\n];\r\n\r\nconst UpdateSectCategory = ({\r\n  setOpenCatSec,\r\n  openCatSec,\r\n  categorySectionInfo\r\n}) => {\r\n  const [isColor, setIsColor] = useState(\r\n    categorySectionInfo && categorySectionInfo.bgColor\r\n  );\r\n\r\n  const [isDark, setIsDark] = useState(\r\n    categorySectionInfo && categorySectionInfo.dark\r\n  );\r\n\r\n  const [gridCount, setGridCount] = useState(\r\n    categorySectionInfo && categorySectionInfo.grid\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: categorySectionInfo && categorySectionInfo.title,\r\n    subtitle: categorySectionInfo && categorySectionInfo.subtitle,\r\n    paragraph: categorySectionInfo && categorySectionInfo.paragraph\r\n  });\r\n\r\n  const [updateSectionCategory, { loading }] = useMutation(\r\n    UPDATE_CATEGORY_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n        ...values,\r\n        grid: gridCount,\r\n        dark: isDark,\r\n        bgColor: isColor\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_HOME_SECTION, variables: { sectionName: \"CATEGORY\" } }\r\n      ],\r\n      onCompleted() {\r\n        setOpenCatSec(false);\r\n        toaster.notify(\"Update Category Section\");\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = color => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleGrid = event => {\r\n    setGridCount(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    updateSectionCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={openCatSec}\r\n      onClose={() => setOpenCatSec(false)}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>Update Section Category</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Form>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              name=\"title\"\r\n              value={values.title || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Subtitle</label>\r\n            <input\r\n              name=\"subtitle\"\r\n              value={values.subtitle || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Paragraph</label>\r\n            <TextArea\r\n              maxLength=\"150\"\r\n              style={{ minHeight: 100 }}\r\n              name=\"paragraph\"\r\n              value={values.paragraph || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Background-color{\" \"}\r\n              <Popup\r\n                content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n\r\n            <BlockPicker\r\n              width=\"200px\"\r\n              triangle=\"hide\"\r\n              color={isColor}\r\n              colors={colors}\r\n              onChange={handleChangeComplete}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Text Contrast{\" \"}\r\n              <Popup\r\n                content=\"Change the text to white if background is dark and dark text if background is light\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n            <Content\r\n              flex\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-switch p-fill\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"dark\"\r\n                  value={isDark}\r\n                  checked={isDark === true ? true : false}\r\n                  onChange={handleDark}\r\n                />\r\n                <div className=\"state p-info\">\r\n                  <label>{isDark === true ? \"Light\" : \"Dark\"}</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Grid Count Display</label>\r\n            <Content\r\n              flex\r\n              justify=\"space-around\"\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"2\"\r\n                  checked={gridCount === 2 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Two</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"3\"\r\n                  checked={gridCount === 3 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Three</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"4\"\r\n                  checked={gridCount === 4 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Four</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_CATEGORY_SECTION = gql`\r\n  mutation updateHomeSection(\r\n    $sectionName: String\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $grid: Int\r\n  ) {\r\n    updateHomeSection(\r\n      sectionName: $sectionName\r\n      inputHomeContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        grid: $grid\r\n      }\r\n    ) {\r\n      _id\r\n      sectionName\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgColor\r\n      dark\r\n      grid\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UpdateSectCategory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { DSection, Content } from \"../../../../styled/containers\";\r\nimport { DButtonFree } from \"../../../../styled/utils\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport FancyText from \"../../../../FancyText\";\r\nimport CategoryCards from \"./CategoryCards\";\r\nimport UpdateSectCategory from \"./UpdateSectCategory\";\r\n\r\nconst SectionCategory = () => {\r\n  const [sectCategory, setSectCategory] = useState({});\r\n  const [openCatSec, setOpenCatSec] = useState(false);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setSectCategory(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        margin=\"48px auto\"\r\n        pad=\"10px\"\r\n        bgcolor={sectCategory.bgColor}\r\n      >\r\n        <Popup\r\n          content=\"Update Category Section\"\r\n          trigger={\r\n            <DButtonFree top={0} right={0} onClick={() => setOpenCatSec(true)}>\r\n              <Icon name=\"edit\" fitted />\r\n            </DButtonFree>\r\n          }\r\n          position=\"top right\"\r\n        />\r\n\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Content\r\n            width=\"auto\"\r\n            height=\"auto\"\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            className={sectCategory.dark ? \"dark\" : \"\"}\r\n          >\r\n            <FancyText alt={sectCategory.dark ? true : false}>\r\n              {sectCategory.title}\r\n            </FancyText>\r\n            <h3>\r\n              {sectCategory.subtitle !== \"\"\r\n                ? sectCategory.subtitle\r\n                : \"SUBTITLE\"}\r\n            </h3>\r\n            <p>\r\n              {sectCategory.paragraph !== \"\"\r\n                ? sectCategory.paragraph\r\n                : \"PARAGRAPH\"}\r\n            </p>\r\n          </Content>\r\n          {!loadSectionCategory && (\r\n            <UpdateSectCategory\r\n              openCatSec={openCatSec}\r\n              setOpenCatSec={setOpenCatSec}\r\n              categorySectionInfo={sectionCategory.homeCMS}\r\n            />\r\n          )}\r\n\r\n          <CategoryCards gridCount={sectCategory.grid} />\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionCategory;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/showcase/Showcase\";\r\nimport SectionAbout from \"../../../components/admin/cms/home/sectionabout/SectionAbout\";\r\nimport SectionCategory from \"../../../components/admin/cms/home/sectioncategory/SectionCategory\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Showcase />\r\n      <SectionAbout />\r\n      <SectionCategory />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalHeading = ({ isAbout }) => {\r\n  const fileInput = useRef();\r\n  const [openHead, setOpenHead] = useState(false);\r\n  const [isDark, setIsDark] = useState(isAbout ? isAbout.dark : false);\r\n  const [isOverlay, setIsOverlay] = useState(isAbout ? isAbout.overlay : false);\r\n  const [headers, setHeaders] = useState({\r\n    title: isAbout ? isAbout.title : \"\",\r\n    subtitle: isAbout ? isAbout.subtitle : \"\",\r\n    paragraph: isAbout ? isAbout.paragraph : \"\",\r\n  });\r\n  const [isColor, setIsColor] = useState(isAbout ? isAbout.bgColor : \"#FFFFFF\");\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  const [updateAboutUs, { loading }] = useMutation(UPDATE_ABOUT_HEADER, {\r\n    variables: {\r\n      ...headers,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      dark: isDark,\r\n      overlay: isOverlay,\r\n    },\r\n\r\n    onCompleted() {\r\n      setOpenHead(false);\r\n      toaster.notify(\"Update Successful\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeHeaders = (e) => {\r\n    setHeaders({ ...headers, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleOverlay = () => {\r\n    setIsOverlay(!isOverlay);\r\n  };\r\n\r\n  const handleSaveHeader = () => {\r\n    updateAboutUs();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenHead(true)}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openHead} onClose={() => setOpenHead(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isAbout.bgImg && (\r\n                    <img\r\n                      src={`/images/cms/about/${isAbout.bgImg}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n\r\n              <Overlay bgc={isOverlay ? true : false}>\r\n                <Content\r\n                  flex\r\n                  justify=\"center\"\r\n                  direct=\"column\"\r\n                  align=\"center\"\r\n                  width=\"50%\"\r\n                  margin=\"0 auto\"\r\n                  height=\"100%\"\r\n                  style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n                  className={isDark ? \"dark\" : \"\"}\r\n                >\r\n                  <h1 style={{ fontSize: \"22px\" }}>\r\n                    {headers.title ? headers.title : \"TITLE\"}\r\n                  </h1>\r\n                  <h4> {headers.subtitle ? headers.subtitle : \"SUBTITLE\"}</h4>\r\n                </Content>\r\n              </Overlay>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={headers.title || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={headers.subtitle || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Text Contrast\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Light</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"overlay\"\r\n                      value={isOverlay}\r\n                      checked={isOverlay === true ? true : false}\r\n                      onChange={handleOverlay}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Off</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveHeader}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_HEADER = gql`\r\n  mutation updateAboutUs(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $overlay: Boolean\r\n  ) {\r\n    updateAboutUs(\r\n      inputAbout: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        overlay: $overlay\r\n      }\r\n    ) {\r\n      _id\r\n      title\r\n      subtitle\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalHeading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, Overlay } from \"../../../styled/containers\";\r\nimport MouseScroll from \"../../../MouseScroll\";\r\nimport ModalHeading from \"./ModalHeading\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Heading = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n\r\n  const {\r\n    data: dataAboutContent,\r\n    loading: loadAboutContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataAboutContent) {\r\n      setIsAbout(dataAboutContent.aboutUsCMS);\r\n    }\r\n  }, [dataAboutContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadAboutContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          background={isAbout.bgImg && `/images/cms/about/${isAbout.bgImg}`}\r\n          bgcolor={isAbout.bgColors}\r\n          width=\"90%\"\r\n          mcenter\r\n          height=\"55vh\"\r\n          fixed\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className={isAbout.dark ? \"dark\" : \"\"}\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>{isAbout.title}</h1>\r\n            {isAbout.subtitle !== \"\" && <h4>{isAbout.subtitle}</h4>}\r\n            <MouseScroll />\r\n          </Content>\r\n          <Overlay bgc={isAbout.overlay ? true : false} />\r\n          <ModalHeading isAbout={dataAboutContent.aboutUsCMS} />\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, TextArea } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalStory = ({ isStory }) => {\r\n  const fileInput = useRef();\r\n  const [openStory, setOpenStory] = useState(false);\r\n  const [reverse, setReverse] = useState(isStory ? isStory.alt : false);\r\n\r\n  const [stories, setStories] = useState({\r\n    title: isStory ? isStory.title : \"\",\r\n    subtitle: isStory ? isStory.subtitle : \"\",\r\n    paragraph: isStory ? isStory.paragraph : \"\",\r\n  });\r\n\r\n  const { preview, selectedFile, onSelectedFile } = useUploadFile();\r\n\r\n  const [updateStory, { loading }] = useMutation(UPDATE_ABOUT_STORY, {\r\n    variables: {\r\n      ...stories,\r\n      photo: selectedFile,\r\n      alt: reverse,\r\n    },\r\n    onCompleted() {\r\n      setOpenStory(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeStory = (e) => {\r\n    setStories({ ...stories, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverse = () => {\r\n    setReverse(!reverse);\r\n  };\r\n\r\n  const handleSaveStory = () => {\r\n    updateStory();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenStory(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openStory} onClose={() => setOpenStory(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isStory.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isStory.photo}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={stories.title || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={stories.subtitle || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={stories.paragraph || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={reverse}\r\n                      checked={reverse === true ? true : false}\r\n                      onChange={handleReverse}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveStory}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_STORY = gql`\r\n  mutation updateStory(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateStory(\r\n      inputStory: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      _id\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalStory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\nimport ModalStory from \"./ModalStory\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isStory, setIsStory] = useState({});\r\n\r\n  const {\r\n    data: dataStoryContent,\r\n    loading: loadStoryContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataStoryContent) {\r\n      setIsStory(dataStoryContent.aboutUsCMS.story);\r\n    }\r\n  }, [dataStoryContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadStoryContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          mcenter\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768 ? \"column\" : isStory.alt ? \"row-reverse\" : \"row\"\r\n          }\r\n        >\r\n          <ModalStory isStory={dataStoryContent.aboutUsCMS.story} />\r\n\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isStory\r\n                    ? `/images/cms/about/${isStory.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"20px\"\r\n            style={{ maxHeight: \"90vh\" }}\r\n          >\r\n            <h3>{isStory.title}</h3>\r\n            {isStory.subtitle !== \"\" && <h4>{isStory.subtitle}</h4>}\r\n            <p\r\n              style={{\r\n                fontSize: \"15px\",\r\n                letterSpacing: \"2px\",\r\n                lineHeight: 1.8,\r\n                textAlign: \"justify\",\r\n                overflowWrap: \"break-word\",\r\n                overflow: \"auto\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              {isStory.paragraph}\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, Divider, TextArea } from \"semantic-ui-react\";\r\nimport { DImage, Content, DSection, DGrid } from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalMissionVision = ({ isMissionVision }) => {\r\n  const fileInputMV = useRef();\r\n  const [openMission, setOpenMission] = useState(false);\r\n  const [reverseMV, setReverseMV] = useState(\r\n    isMissionVision ? isMissionVision.alt : false\r\n  );\r\n\r\n  const [valuesMV, setValuesMV] = useState({\r\n    mtitle: isMissionVision ? isMissionVision.mission.title : \"\",\r\n    msubtitle: isMissionVision ? isMissionVision.mission.subtitle : \"\",\r\n    mparagraph: isMissionVision ? isMissionVision.mission.paragraph : \"\",\r\n    vtitle: isMissionVision ? isMissionVision.vision.title : \"\",\r\n    vsubtitle: isMissionVision ? isMissionVision.vision.subtitle : \"\",\r\n    vparagraph: isMissionVision ? isMissionVision.vision.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview: previewMV,\r\n    selectedFile: selectedFileMV,\r\n    onSelectedFile: onSelectedFileMV,\r\n  } = useUploadFile();\r\n\r\n  const [updateMission, { loading }] = useMutation(UPDATE_ABOUT_MISSIONVISION, {\r\n    variables: {\r\n      ...valuesMV,\r\n      photo: selectedFileMV,\r\n      alt: reverseMV,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_ABOUT_CMS, variables: { contentName: \"ABOUTUS\" } },\r\n    ],\r\n    onCompleted() {\r\n      setOpenMission(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClickMV = () => {\r\n    fileInputMV.current.click();\r\n  };\r\n\r\n  const handleChangeValues = (e) => {\r\n    setValuesMV({ ...valuesMV, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverseMV = () => {\r\n    setReverseMV(!reverseMV);\r\n  };\r\n\r\n  const handleSaveMV = () => {\r\n    updateMission();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        onClick={() => setOpenMission(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openMission} onClose={() => setOpenMission(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid two gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFileMV ? (\r\n                  <img src={previewMV} alt=\"showcase\" />\r\n                ) : (\r\n                  isMissionVision.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isMissionVision.photo}`}\r\n                      alt=\"about\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFileMV}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInputMV}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClickMV}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Divider horizontal>Mission</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"mtitle\"\r\n                  value={valuesMV.mtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"msubtitle\"\r\n                  value={valuesMV.msubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"mparagraph\"\r\n                  value={valuesMV.mparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Divider horizontal>Vision</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"vtitle\"\r\n                  value={valuesMV.vtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"vsubtitle\"\r\n                  value={valuesMV.vsubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"vparagraph\"\r\n                  value={valuesMV.vparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"reverse\"\r\n                      value={reverseMV}\r\n                      checked={reverseMV === true ? true : false}\r\n                      onChange={handleReverseMV}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveMV}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_MISSIONVISION = gql`\r\n  mutation updateMission(\r\n    $mtitle: String\r\n    $msubtitle: String\r\n    $mparagraph: String\r\n    $vtitle: String\r\n    $vsubtitle: String\r\n    $vparagraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateMission(\r\n      inputMissionVision: {\r\n        mtitle: $mtitle\r\n        msubtitle: $msubtitle\r\n        mparagraph: $mparagraph\r\n        vtitle: $vtitle\r\n        vsubtitle: $vsubtitle\r\n        vparagraph: $vparagraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalMissionVision;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport ModalMissionVision from \"./ModalMissionVision\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isMission, setIsMission] = useState({});\r\n\r\n  const { data: dataMissionVision, loading: loadMissionVision } = useQuery(\r\n    FETCH_ABOUT_CMS,\r\n    {\r\n      variables: {\r\n        contentName: \"ABOUTUS\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataMissionVision) {\r\n      setIsMission(dataMissionVision.aboutUsCMS.missionvision);\r\n    }\r\n  }, [dataMissionVision]);\r\n\r\n  return (\r\n    <>\r\n      {loadMissionVision ? (\r\n        <DSection\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          mcenter\r\n        >\r\n          <Skeleton width=\"50%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768\r\n              ? \"column\"\r\n              : isMission.alt === true\r\n              ? \"row-reverse\"\r\n              : \"row\"\r\n          }\r\n          margin=\"24px auto\"\r\n        >\r\n          <ModalMissionVision\r\n            isMissionVision={dataMissionVision.aboutUsCMS.missionvision}\r\n          />\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"24px\"\r\n          >\r\n            <h3>{isMission.mission && isMission.mission.title}</h3>\r\n            {isMission.mission && isMission.mission.subtitle !== \"\" && (\r\n              <h4>{isMission.mission.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.mission && isMission.mission.paragraph}</p>\r\n            <h3>{isMission.vision && isMission.vision.title}</h3>\r\n            {isMission.vision && isMission.vision.subtitle !== \"\" && (\r\n              <h4>{isMission.vision.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.vision && isMission.vision.paragraph}</p>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isMission.photo\r\n                    ? `/images/cms/about/${isMission.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n      s\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Heading from \"../../../components/admin/cms/about/Heading\";\r\nimport Story from \"../../../components/admin/cms/about/Story\";\r\nimport Mission from \"../../../components/admin/cms/about/Mission\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Layout>\r\n      <Content\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        margin=\"20px auto\"\r\n        align=\"center\"\r\n      >\r\n        <div>\r\n          <h3>Content Management</h3>\r\n        </div>\r\n        <div style={{ margin: \"0 1em\" }}>\r\n          <Icon name=\"angle right\" size=\"large\" fitted />\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to=\"/zeadmin/cms_about\"\r\n            style={{\r\n              fontSize: \"18px\",\r\n              fontWeight: 700,\r\n              borderBottom: \"2px solid\",\r\n              paddingBottom: \"5px\",\r\n            }}\r\n          >\r\n            About Us\r\n          </Link>\r\n        </div>\r\n      </Content>\r\n      <Heading />\r\n      <Mission />\r\n      <Story />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst ToggleView = ({ swid, tggl }) => {\r\n  const [toggleValue, setToggleValue] = useState(\"\");\r\n\r\n  const [toggleTestimonial, { loading: loadToggle }] = useMutation(\r\n    TOGGLE_REVIEW,\r\n    {\r\n      variables: {\r\n        id: toggleValue,\r\n      },\r\n      refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n    }\r\n  );\r\n\r\n  const hoverSwitch = (e) => {\r\n    setToggleValue(e.currentTarget.dataset.sid);\r\n  };\r\n\r\n  const handleSwitch = (e) => {\r\n    toggleTestimonial();\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      content=\"Switch on to display testimonial in Home Page\"\r\n      style={style.popContent}\r\n      inverted\r\n      trigger={\r\n        <div\r\n          className=\"pretty p-switch p-fill\"\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          {loadToggle ? (\r\n            <Spinner tiny />\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"checkbox\"\r\n                data-sid={swid}\r\n                checked={tggl === true ? true : false}\r\n                onMouseOver={hoverSwitch}\r\n                onChange={handleSwitch}\r\n              />\r\n              <div className=\"state p-success\">\r\n                <label></label>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID!) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n      view\r\n    }\r\n  }\r\n`;\r\n\r\nconst style = {\r\n  popContent: {\r\n    borderRadius: 0,\r\n    opacity: 0.7,\r\n    padding: \"2em\",\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default ToggleView;\r\n","import React, { useState } from \"react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\n\r\nconst ModalView = ({ ridd, open, setOpen }) => {\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Content>{ridd}</Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalView;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\n\r\nimport { Modal, Icon, Popup } from \"semantic-ui-react\";\r\nimport { Archive } from \"@styled-icons/boxicons-solid/Archive\";\r\nimport { DeleteForever } from \"@styled-icons/material/DeleteForever\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\n\r\nconst DeleteView = ({ ridd, rvw, isDltModal, setIsDltModal }) => {\r\n  const { width: wdth } = useWindowSize();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [archiveTestimonial, { loading: loadArchive }] = useMutation(\r\n    ARCHIVED_REVIEW,\r\n    {\r\n      variables: { id: ridd },\r\n      refetchQueries: [\r\n        { query: FETCH_TESTIMONIALS, variables: { active: true } },\r\n      ],\r\n      onCompleted() {\r\n        toaster.notify(\"Testimonial was sent to archive files\");\r\n      },\r\n      onError(err) {\r\n        if (err.graphQLErrors[0].extensions.exception.errors.unauth) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted alert onClick={onClose}>\r\n                {err.graphQLErrors[0].extensions.exception.errors.unauth}\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleArchive = () => {\r\n    archiveTestimonial();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"small\"\r\n        basic\r\n        closeIcon\r\n        onClose={() => setIsDltModal(false)}\r\n        open={isDltModal}\r\n        style={{ zIndex: 9 }}\r\n      >\r\n        <Modal.Header>\r\n          <Archive size=\"22px\" /> Archived this User's Review?\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <h3>\r\n            Name: {rvw.user.firstName} {rvw.user.firstName}\r\n          </h3>\r\n          <h4>Message:</h4>\r\n          <p style={{ textIndent: \"1em\" }}>\r\n            <strong>{rvw.message}</strong>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            width={wdth <= 768 ? \"100%\" : \"90%\"}\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <Content width=\"auto\">\r\n              <Popup\r\n                content=\"Deleting will permanently erase this review\"\r\n                trigger={\r\n                  <DButton alert style={{ fontSize: \"12px\" }}>\r\n                    <DeleteForever size=\"22px\" /> Delete Permanently\r\n                  </DButton>\r\n                }\r\n                inverted\r\n              />\r\n            </Content>\r\n            <Content width=\"auto\" flex justify=\"space-around\" align=\"center\">\r\n              <DButton confirm onClick={handleArchive} basic>\r\n                {loadArchive ? (\r\n                  <Spinner inverted small />\r\n                ) : (\r\n                  <>\r\n                    <Icon name=\"check\" /> Yes\r\n                  </>\r\n                )}\r\n              </DButton>\r\n\r\n              <DButton alert onClick={() => setIsDltModal(false)} basic>\r\n                <Icon name=\"ban\" /> No\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ARCHIVED_REVIEW = gql`\r\n  mutation archiveTestimonial($id: ID!) {\r\n    archiveTestimonial(_id: $id)\r\n  }\r\n`;\r\n\r\nexport default DeleteView;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { DotsVertical } from \"../../../components/styled/utils\";\r\nimport { Popup, Grid, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport ModalView from \"../../../components/admin/testimonial/ModalView\";\r\nimport DeleteView from \"../../../components/admin/testimonial/DeleteView\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nconst MenuView = ({ menuId, review }) => {\r\n  const [menuValue, setMenuValue] = useState(\"\");\r\n  const [isDltModal, setIsDltModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const handleMenu = (e) => {\r\n    setMenuValue(e.currentTarget.dataset.rid);\r\n  };\r\n\r\n  const modalDeleteShow = () => {\r\n    setIsDltModal(true);\r\n  };\r\n\r\n  console.log(employeeAuth);\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        on=\"click\"\r\n        trigger={\r\n          <DotsVertical\r\n            size=\"24px\"\r\n            data-rid={menuId}\r\n            onMouseOver={handleMenu}\r\n          />\r\n        }\r\n        flowing\r\n        position=\"top right\"\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Grid\r\n          centered\r\n          divided\r\n          columns={\r\n            employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3 ? 2 : 1\r\n          }\r\n        >\r\n          {(employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3) && (\r\n            <Grid.Column textAlign=\"center\">\r\n              <DButton alert>\r\n                <Icon name=\"trash\" fitted onClick={modalDeleteShow} />\r\n              </DButton>\r\n            </Grid.Column>\r\n          )}\r\n\r\n          <Grid.Column>\r\n            <DButton confirm onClick={() => setOpen(true)}>\r\n              <Icon name=\"eye\" fitted />\r\n            </DButton>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Popup>\r\n\r\n      <DeleteView\r\n        ridd={menuValue}\r\n        rvw={review}\r\n        setIsDltModal={setIsDltModal}\r\n        isDltModal={isDltModal}\r\n      />\r\n      <ModalView ridd={menuValue} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\n\r\nimport ToggleView from \"../../../components/admin/testimonial/ToggleView\";\r\nimport MenuView from \"../../../components/admin/testimonial/MenuView\";\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nconst Testimonial = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const {\r\n    data: dataReviews,\r\n    loading: loadReviews,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonials);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: (row) => <ToggleView swid={row._id} tggl={row.view} />,\r\n      width: \"80px\",\r\n      button: true,\r\n      style: {\r\n        borderBottom: \"1px solid #FFFFFF\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"user.lastName\",\r\n      sortable: true,\r\n      format: (row) => `${row.user.firstName} ${row.user.lastName}`,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => <MenuView menuId={row._id} review={row} />,\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        mcenter\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n      >\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            columns={columns}\r\n            data={reviews.map((rev) => rev)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loadReviews}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Testimonial;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport About from \"./admin/cms/About\";\r\nimport Testimonial from \"./admin/cms/Testimonial\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/dashboard\" exact />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/paccount\"\r\n          component={PersonalAccount}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/userInfo/:_id\"\r\n          component={UserInfo}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_about\" component={About} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/cms_testimonial\"\r\n          component={Testimonial}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  grey: \"#D3CCE3\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\",\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Main from \"./pages/Main\";\r\nimport Admin from \"./pages/Admin\";\r\nimport Page404 from \"./pages/Page404\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./components/theme\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Switch>\r\n            {/* <Redirect from=\"/\" to=\"/zessence\" exact /> */}\r\n            <Route path=\"/zeadmin\" component={Admin} />\r\n            <Route path=\"/\" component={Main} />\r\n\r\n            <Route component={Page404} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`,\r\n      },\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ApolloProvider from \"./ApolloProvider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"toasted-notes/src/styles.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\r\nimport \"./css/slick-theme.custom.css\";\r\nimport \"./css/slick.custom.css\";\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}