{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","components/main/navigation/Navigation.js","util/hooks/useScroll.js","util/graphql/cms.js","components/styled/containers.js","components/main/home/Showcase.js","components/main/home/CategoryCards.js","util/graphql/employee.js","components/main/home/Team.js","components/main/home/Section2.js","components/main/home/Section3.js","pages/main/Home.js","pages/main/About.js","util/hooks/useForm.js","components/styled/utils.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","util/graphql/service.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/styled/loader.js","components/Spinner.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Contact.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountDetails.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/styled/skeleton.js","components/Skeleton.js","pages/main/MyAccount.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","components/main/user/AppointmentCancel.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/Accordion.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/HistoryAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","util/graphql/inquiry.js","pages/admin/Inquiry.js","pages/admin/User.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","components/admin/cms/home/Showcase.js","pages/admin/cms/Home.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","light","primary","DMainMenu","blue","open","secondary","DRightMenu","DBurger","dark","Burger","setOpen","onClick","Navigation","ref","handler","scrolling","useState","setScrolling","scrollTop","setScrollTop","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","useScroll","node","useRef","listener","event","current","contains","document","history","useHistory","useContext","handleLogout","push","trigger","style","fontSize","Icon","name","firstName","className","src","alt","Dropdown","Menu","Item","to","userId","_id","FETCH_SHOWCASE","gql","columns","rows","DContainer","div","DShowCase","header","height","background","bgcolor","Overlay","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","cwidth","cmarg","color","fs","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","DCard","bs","DSection","width","mcenter","fixed","Content","fluid","rounded","imgHeight","imgWidth","DImage","m","DFooterLinks","DFooter","footer","Section2Styled","Showcase","mql","matchMedia","setShowcase","useQuery","variables","showcaseData","data","loading","error","contentManagements","emulateTouch","infiniteLoop","useKeyboardArrows","autoPlay","showThumbs","showStatus","showArrows","matches","map","cms","photo","undefined","CategoryCards","cards","setRef","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","styles","dloading","display","justifyContent","alignItems","flexDirection","lineHeight","Team","setEmployeesAR","limit","data_employeesAR","aestheticiansReceps","marginBottom","emp","title","lastName","parse","bio","jusitfy","count","Section2","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","css","visibility","from","y","ease","Power3","easeOut","scale","animate","el","Section3","Home","card1","About","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","currentTarget","ripple","keyframes","DButton","button","fSize","size","text","border","basic","DButtonCancel","red","DButtonConfirm","green","DLabel","label","ls","weight","tt","hover","NavItem","bluer","DAccordion","uc","lc","Toasted","status","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","result","console","log","loginUser","userX","general","Signin","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","as","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","date","toLocaleDateString","data_appointments","workStart","employee","schedule","breakStart","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","key","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","loading_categories","data_categories","useLazyQuery","categoryId","category","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","padding","categories","cursor","position","outline","textAlign","services","employees","servEmp","keyring","SpinnerRing","small","medium","inverted","Spinner","large","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","addInfo","setAddInfo","cache","readQuery","newAppointment","createAppointment","writeQuery","myAppointments","toaster","notify","onClose","expiredLog","check","start","message","Modal","Header","readOnly","toDateString","Actions","Appointment","setCategories","setService","setServiceEmp","disabled","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","VERRIFIED_APPOINTMENT","ThankYou","emailToken","params","go","appointmentId","verifiedAppointment","onload","Link","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPDATE_USER","AccountDetails","myDetails","updateUser","contact","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","currentAppointData","currentAppointLoading","selector","sortable","wrap","row","parseInt","cell","myCurrentAppointment","currentAppoint","responsive","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","historyAppoint","placeholderAnimate","DSkeleton","wid","Skeleton","UPLOAD_USER_PHOTO","MyAccount","userInfo","userLoading","addUserPhoto","onDrop","useCallback","file","useDropzone","getRootProps","getInputProps","isDragActive","AdminAuthRoute","Component","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","CANCEL_APPOINTMENT_MUTATION","AppointmentCancel","invalidCancellation","cancelAppointment","field","jusitfyContent","input","AppointmentDetails","setMyAppoint","appointment","margn","goBack","Main","path","exact","UpcommingAppointments","appointments","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","marginLeft","Accordion","setActive","contentRef","maxHeight","scrollHeight","icon","children","SideNav","activeClassName","Layout","Dashboard","setAppointments","setpercentage","chartData","setChartData","labels","datasets","borderColor","borderWidth","options","scales","xAxes","gridLines","yAxes","legend","currentAppointments","CurrentAppointments","currentAppointmentData","currAppoint","HistoryAppointments","setHistoryAppointments","historyAppointmentData","appointmentHistory","histAppoint","NewModal","Appointments","Breadcrumb","Section","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","NewDateTime","NewAppointmentDetails","CREATE_GUEST_APPOINTMENT","createGuestAppointment","NewAppointment","Divider","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","role","workLength","breakLength","newEmployee","Checkbox","class","Employees","loading_employeesAR","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","content","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","setServices","dataCategory","loadingCategory","addService","close","EmployeeServices","overflow","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","description","newCategory","Categories","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","price","newService","serviceExist","ServiceList","progressComponent","UPLOAD_CATEGORY_PHOTO","Category","setCategory","dataLoading","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","Service","serviceData","serviceLoading","addServicePhoto","replace","FETCH_INQUIRIES","Inquiry","setInquiries","data_inquiries","inquiries","inq","User","setUsers","data_users","loading_users","getUsers","getUser","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","letterSpacing","NEW_SHOWCASE","addShowcase","Admin","yellow","App","uploadLink","createUploadLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4469ca83.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${props => (props.bg ? props.bg : \"rgba(255,255,255,0)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 20vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 17px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      // flex-direction: column;\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${props =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.light};\r\n  }\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) =>\r\n      open ? \"skewX(-15deg) translateX(0%)\" : \"translateX(100%)\"};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \"skewX(15deg) translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import React, { useRef, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { DNavigation, DMainMenu, DRightMenu } from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  let history = useHistory();\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/zessence\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user ? (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      ) : (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, User\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>\r\n                    <Link to={`/zessence/myaccount/${user.userId || user._id}`}>\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\"/>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/services&rates\">Services & Rates</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/about\">About Us</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/testimonials\">Testimonials</Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>\r\n                    <Link to={`/zessence/myaccount/${user.userId || user._id}`}>\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired\r\n};\r\n\r\nexport default Navigation;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll() {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > 0);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_SHOWCASE = gql`\r\n  query contentManagements($section: String) {\r\n    contentManagements(section: $section) {\r\n      _id\r\n      photo\r\n      section\r\n      headline\r\n      paragraph\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_SHOWCASE };\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n\r\n  margin: auto;\r\n`;\r\n\r\nexport const DShowCase = styled.header`\r\n  width: 100%;\r\n  height: ${props => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n\r\n  h1,h2,\r\n  p {\r\n    \r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img{\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${props => (props.bg ? props.bg : \"rgba(0, 0, 0, 0.15)\")};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  padding: ${props => props.pad && props.pad};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  opacity: ${props => props.opac && props.opac};\r\n  transition: opacity 0.3s ease;\r\n\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: 0;\r\n    height: 100%;\r\n\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n\r\n      text-align: center;\r\n      transform: rotate(-45deg);\r\n      h1 {\r\n        transform: translateY(80px);\r\n        transition: transform 0.4s ease-in-out;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${props => (props.cwidth ? props.cwidth : \"50%\")};\r\n    text-align: left;\r\n    margin: ${props => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    h1,\r\n    h2,\r\n    h3,\r\n    p {\r\n      color: ${props => (props.color ? props.color : \"#fff\")};\r\n      letter-spacing: 5px;\r\n      line-height: 2;\r\n    }\r\n    h1 {\r\n      font-size: ${props => (props.fs ? props.fs : \"48px\")};\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: ${props =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${props => props.gap && props.gap};\r\n  grid-template-rows: ${props =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${props => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${props => (props.circle ? \"40% 40% 10px 10px\" : \"0\")};\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    // img {\r\n    //   width: 100%;\r\n    //   height: 100%;\r\n    //   object-fit: cover;\r\n    //   border-radius: ${props => (props.circle ? \"50%\" : \"20px\")};\r\n    // }\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  box-shadow: ${props =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.25)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.2)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.15)\",\r\n        \"0 8px 8px rgba(0, 0, 0, 0.1)\",\r\n        \"0 16px 16px rgba(0, 0, 0, 0.05)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${props => (props.height ? props.height : \"400px\")};\r\n  width:  ${props => (props.width ? props.width : \"100%\")};;\r\n  margin: ${props =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${props => props.pad && props.pad};\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${props => props.fixed && \"fixed\"};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  position: relative;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${props => props.height && props.height};\r\n  width: ${props => (props.width ? props.width : props.fluid ? \"100%\" : \"50%\")};\r\n  padding: ${props => props.pad && props.pad};\r\n\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${props => props.margin && props.margin};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  z-index: 2;\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n  p {\r\n    margin: 10px 0 20px;\r\n  }\r\n\r\n  img {\r\n    max-height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${props => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${props => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${props => (props.height ? props.height : \"300px\")};\r\n  width: ${props => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${props =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  margin: ${props => props.m && props.m};\r\n\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  visibility: hidden;\r\n  height: 100vh;\r\n  margin: 32px 0;\r\n  width: 90%;\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      margin: 0 24px;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 400px;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            margin-bottom: 24px .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding-right: 48px;\r\n            margin-bottom: 56px;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 50%;\r\n        height: 100vh;\r\n        position: relative;\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../util/graphql/cms\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nconst Showcase = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState({});\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  return (\r\n    <>\r\n      {!showcaseData ? (\r\n        <DShowCase\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Carousel\r\n          emulateTouch\r\n          infiniteLoop\r\n          useKeyboardArrows\r\n          autoPlay\r\n          showThumbs={false}\r\n          showStatus={false}\r\n          showArrows={mql.matches ? false : true}\r\n        >\r\n          {showcaseData.contentManagements.map(cms => (\r\n            <DShowCase\r\n              background={\r\n                cms.photo !== null || cms.photo !== undefined\r\n                  ? `/images/cms/home/${cms.photo}`\r\n                  : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n            >\r\n              <Overlay\r\n                bg={\r\n                  \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                }\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h1>Z Essence Facial & Spa</h1>\r\n                  <p>\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Quisquam, doloribus.\r\n                  </p>\r\n                  <Link to=\"/zessence\" className=\"btn\">\r\n                    Book Appointment\r\n                  </Link>\r\n                </div>\r\n              </Overlay>\r\n            </DShowCase>\r\n          ))}\r\n        </Carousel>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DImage, DSection } from \"../../styled/containers\";\r\n\r\nconst CategoryCards = ({ cards, setRef }) => {\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" margin=\"24px auto\" ref={setRef}>\r\n      <h1>Our Services</h1>\r\n      <DGrid four margin=\"0 0 40px 0\" gap=\"20px\">\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/makeup.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Facial Treatment</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/face.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Diamond Peeling</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/foot.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Body Treatment</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/wax.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Permanent Makeup</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int) {\r\n    aestheticiansReceps(limit: $limit) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DGrid,\r\n  DImage,\r\n  DCard,\r\n  DSection,\r\n  Overlay\r\n} from \"../../styled/containers\";\r\n// import Skeleton from \"../../Skeleton\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst Team = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <h1 style={{ marginBottom: \"24px\" }}>Our Team</h1>\r\n      <DGrid four margin=\"0 auto\" gap=\"25px\" style={{ marginBottom: \"24px\" }}>\r\n        {!data_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          data_employeesAR &&\r\n          data_employeesAR.aestheticiansReceps.map(emp => (\r\n            <DCard bs={\"0\"}>\r\n              <DImage width=\"200px\" height=\"200px\" m=\"0 auto\" circle>\r\n                <img\r\n                  src={\r\n                    emp.photo !== null\r\n                      ? `/images/employees/${emp.photo}`\r\n                      : cards\r\n                  }\r\n                  alt=\"card 1\"\r\n                />\r\n              </DImage>\r\n              <div className=\"card-details\">\r\n                <h3>\r\n                  {emp.title}. {emp.firstName} {emp.lastName}\r\n                </h3>\r\n                <p>{parse(emp.bio)}</p>\r\n              </div>\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                jusitfy=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Follow</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DCard>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n      <Link to=\"/\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"centet\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2\r\n  }\r\n};\r\n\r\nexport default Team;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content, Section2Styled } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\n\r\nconst Section2 = () => {\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled ref={el => (section2 = el)}>\r\n      <div className=\"sec2-container\">\r\n        <div className=\"sec2-inner\">\r\n          <div className=\"sec2-content\">\r\n            <div className=\"sec2-content_inner\">\r\n              <h1>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Z Essence</div>\r\n                </div>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Facial & Spa</div>\r\n                </div>\r\n              </h1>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Totam\r\n                labore dolore ad nemo, veritatis iure mollitia impedit. Quod, id\r\n                tempore?\r\n                <Link to=\"/zessence/appointment\">Learn More</Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={el => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategoryCards from \"../../components/main/home/CategoryCards\";\r\nimport Team from \"../../components/main/home/Team\";\r\nimport Section2 from \"../../components/main/home/Section2\";\r\nimport Section3 from \"../../components/main/home/Section3\";\r\n\r\nimport { DContainer } from \"../../components/styled/containers\";\r\n\r\nconst Home = () => {\r\n  const card1 = \"/images/card1.jpg\";\r\n  return (\r\n    <DContainer>\r\n      {/* SHOWCASE */}\r\n\r\n      <Showcase />\r\n\r\n      {/* SECTION 2 */}\r\n      <Section2 />\r\n\r\n      {/* Home Cards 1 */}\r\n      <CategoryCards cards={card1} />\r\n\r\n      {/* Home Cards 2 */}\r\n      <Team cards={card1} />\r\n      {/* Carbon */}\r\n      <Section3 />\r\n      <section className=\"follow\">\r\n        <p>Follow Z Essence</p>\r\n        <Link to=\"/\">\r\n          <h4>Facebook</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>Twitter</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>LinkedIn</h4>\r\n        </Link>\r\n      </section>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <DContainer>\r\n      <DSection bgcolor=\"#d3d3d3\" height=\"100vh\" push>\r\n        <Content flex justify=\"center\" align=\"center\" fluid height=\"100%\">\r\n          <h3>Hello</h3>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${props => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${props => (props.size ? props.size : \"36px\")};\r\n  width: ${props =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: 6px 16px;\r\n  line-height: 1.42857143;\r\n  margin: 1.5%;\r\n  text-align: center;\r\n  text-transform: ${props => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #1CA7EC\"\r\n      : \"0\"};\r\n\r\n  border-radius: 5px;\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.blue};\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.blue)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.blue}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonCancel = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.red};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #f12711\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.red)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n`;\r\n\r\nexport const DButtonConfirm = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.green};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #0f9b0f\"\r\n      : props.basic\r\n      ? \"2px solid #0f9b0f\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n`;\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${props => (props.size ? props.size : \"12px\")};\r\n  color: ${props => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${props => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${props => props.weight && props.weight};\r\n  padding: ${props => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${props => (props.m ? props.m : \"1%\")};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  text-transform: ${props => props.tt && props.tt};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hover && \"0.8\"};\r\n    cursor: ${props => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${props => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${props => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${props => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${props => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${props =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.6s ease;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${props =>\r\n    props.status === \"error\"\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.status === \"success\"\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.status === \"warning\"\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(69, 170, 242,1.0)\"};\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .close {\r\n    height: 100%;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signin\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/signin\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DGrid two className=\"signup-custom\">\r\n      <DSection height=\"100%\" flex justify=\"center\" align=\"center\" width=\"100%\">\r\n        <SignupForm from={from} hist={hist} />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        margin=\"0\"\r\n        background={\r\n          \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n          <h2>Sign Up</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n            magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n            est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n            repudiandae tempore alias ratione.\r\n          </p>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n    \r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted(result) {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport { DGrid, Content, DSection } from \"../../components/styled/containers\";\r\n\r\nconst Signin = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/appointment\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DGrid two className=\"signin-custom\">\r\n      <DSection\r\n        height=\"100vh\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        margin=\"0\"\r\n        background={\r\n          \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"signin-left\"\r\n      >\r\n        <Content width=\"90%\">\r\n          <h2>Sign In</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n            magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n            est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n            repudiandae tempore alias ratione.\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100vh\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        className=\"signin-right\"\r\n      >\r\n        <SigninForm from={from} hist={hist} />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two>\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        pad=\"0\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"20px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n  height: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    height: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    margin: ${props => (props.small ? \"3px\" : props.medium ? \"6px\" : \"8px\")};\r\n    border: ${props =>\r\n      props.small\r\n        ? \"3px solid #fff\"\r\n        : props.medium\r\n        ? \"6px solid #fff\"\r\n        : \"8px  solid #fff\"};\r\n\r\n    border-radius: 50%;\r\n    animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: ${props =>\r\n      props.inverted\r\n        ? \"#fff transparent transparent transparent\"\r\n        : \" #000 transparent transparent transparent\"};\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = ({ small, large, medium, inverted }) => {\r\n  return (\r\n    <SpinnerRing\r\n      small={small}\r\n      large={large}\r\n      medium={medium}\r\n      inverted={inverted}\r\n    >\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/zessence/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.name}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nconst Appointment = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const { user } = useContext(AuthContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n          <Carousel\r\n            emulateTouch\r\n            infiniteLoop\r\n            useKeyboardArrows\r\n            autoPlay\r\n            showThumbs={false}\r\n            showStatus={false}\r\n            showArrows={mql.matches ? false : true}\r\n          >\r\n            <DSection\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              background={\r\n                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              height=\"100vh\"\r\n            >\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                jusitfy=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Advertisement</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DSection>\r\n          </Carousel>\r\n          <DGrid>\r\n            <AppointmentInputs\r\n              user={user}\r\n              values={values}\r\n              setValues={setValues}\r\n              categories={categories}\r\n              service={service}\r\n              employeeVal={employeeVal}\r\n              setCategories={setCategories}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n              startDate={startDate}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    basic={\r\n                      (values.category === \"\" ||\r\n                        serviceValue === \"\" ||\r\n                        employeeVal === \"\" ||\r\n                        selectedTime === \"\") &&\r\n                      true\r\n                    }\r\n                    disabled={\r\n                      values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  sec: {\r\n    height: \"30vh\"\r\n  }\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} to=\"/zessence/MyAccount\" basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DShowCase\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport {useMutation } from \"@apollo/react-hooks\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountDetails = ({ myDetails, userId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const { handleChange, handleSubmit, values } = useForm(updateUserCallBack, {\r\n    firstName: myDetails.firstName,\r\n    lastName: myDetails.lastName,\r\n    email: myDetails.email,\r\n    contact: myDetails.contact\r\n  });\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  function updateUserCallBack() {\r\n    updateUser();\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      flex\r\n      align=\"flex-start\"\r\n      justify=\"flex-start\"\r\n      bgcolor=\"white\"\r\n      pad=\"20px\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>ID</DLabel>\r\n          <input value={userId} readOnly />\r\n        </Form.Field>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n            <input\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n            <input\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n          <input name=\"email\" value={values.email} onChange={handleChange} />\r\n        </Form.Field>\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Content flex justify=\"flex-end\" width=\"100%\">\r\n          <DButton type=\"submit\">\r\n            {loading ? <Spinner small inverted /> : \"Save\"}\r\n          </DButton>\r\n        </Content>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountDetails;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [currentAppoint, setCurrentAppoint] = useState([]);\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zessence/myappointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel size=\"16px\" tt=\"uppercase\" weight=\"700\" pad=\"10px 25px\" rounded>\r\n    My Appointment\r\n  </DLabel>\r\n);\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zessence/myappointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"50vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      bgcolor=\"#eee\"\r\n      width=\"100%\"\r\n      pad=\"10px\"\r\n      rounded\r\n    >\r\n      <DLabel size=\"16px\" tt=\"uppercase\" weight=\"700\" pad=\"10px 25px\" rounded>\r\n        My Appointment History\r\n      </DLabel>\r\n      {appointHistoryLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={appointHistoryData.myAppointmentHistory.map(\r\n            historyAppoint => historyAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport AccountDetails from \"../../components/main/user/AccountDetails\";\r\nimport CurrentAppointment from \"../../components/main/user/CurrentAppointment\";\r\nimport MyAppointmentHistory from \"../../components/main/user/MyAppointmentHistory\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst MyAccount = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n  // const [account, setAccount] = useState({});\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (userInfo) {\r\n  //     setAccount(userInfo.user);\r\n  //   }\r\n  // }, [userInfo]);\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      margin=\"20vh auto 10vh auto\"\r\n      width=\"90%\"\r\n      pad=\"40px 50px\"\r\n      fixed\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Account</h2>\r\n      {userLoading ? (\r\n        <DSection height=\"70vh\">\r\n          <Skeleton />\r\n        </DSection>\r\n      ) : (\r\n        <DGrid gap=\"10px\">\r\n          <Content\r\n            height=\"50vh\"\r\n            flex\r\n            align=\"center\"\r\n            pad=\"10px 15px\"\r\n            bgcolor=\"#eee\"\r\n            width=\"100%\"\r\n            rounded\r\n          >\r\n            <DGrid custom=\"30% 1fr\" gap=\"20px\">\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h4>Drop Image</h4>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          userInfo.user.photo !== null\r\n                            ? `/images/users/${userInfo.user.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n\r\n              <AccountDetails myDetails={userInfo.user} userId={userId} />\r\n            </DGrid>\r\n          </Content>\r\n          <CurrentAppointment />\r\n          <MyAppointmentHistory />\r\n        </DGrid>\r\n      )}\r\n      <Overlay bg=\"rgba(rgba(52, 152, 219,0.3))\" />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default MyAccount;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Redirect to=\"/zessence\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zessence/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ open, setOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel your appointment?</h2>\r\n        <p>Cancellation may result your appointment process in the future</p>\r\n        <h1>{appointmentId}</h1>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton, DButtonCancel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport AppointmentCancel from \"../../components/main/user/AppointmentCancel\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {!data ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input\r\n                  value={data.appointment._id}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={data.appointment.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={data.appointment.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${data.appointment.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={data.appointment.status}\r\n                  readOnly\r\n                  style={\r\n                    data.appointment.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : data.appointment.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : data.appointment.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {data.appointment.status === \"CANCELLED\" ||\r\n            data.appointment.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Cancel\r\n                </DButtonCancel>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n      <AppointmentCancel\r\n        open={open}\r\n        setOpen={setOpen}\r\n        appointmentId={appointmentId}\r\n      />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Services from \"./main/Services\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport MyAccount from \"./main/MyAccount\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/`} render={() => <Home />} exact />\r\n        <Route path={`${match.path}/about`} component={About} exact />\r\n        <Route path={`${match.path}/contact`} component={Contact} exact />\r\n        <Route\r\n          path={`${match.path}/verified/:emailToken`}\r\n          component={ThankYou}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`${match.path}/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`${match.path}/login`} component={Signin} exact />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myaccount/:_id`}\r\n          component={MyAccount}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/appointment`}\r\n          component={Appointment}\r\n          exact\r\n        />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst UpcommingAppointments = ({ appointments }) => {\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map(appointment => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Content\r\n        flex\r\n        justify=\"flex-end\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      >\r\n        <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton>\r\n      </Content>\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion fs={props.fs} uc={props.uc}>\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion\r\n        title={\"Accounts\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            About Us\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/testimonials\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [percentage, setpercentage] = useState(1);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setpercentage(80);\r\n\r\n    setChartData({\r\n      labels: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"# of Appointments\",\r\n          data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.7)\",\r\n            \"rgba(54, 162, 235, 0.7)\",\r\n            \"rgba(255, 206, 86, 0.7)\",\r\n            \"rgba(75, 192, 192, 0.7)\",\r\n            \"rgba(153, 102, 255, 0.7)\",\r\n            \"rgba(234, 103, 64, 0.7)\",\r\n            \"rgba(75, 59, 64, 0.7)\",\r\n            \"rgba(75, 159, 64, 0.7)\",\r\n            \"rgba(55, 15, 64, 0.7)\",\r\n            \"rgba(55, 59, 44, 0.7)\",\r\n            \"rgba(25, 59, 34, 0.7)\",\r\n            \"rgba(25, 159, 64, 0.7)\"\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n            \"rgba(255, 159, 64, 1)\"\r\n          ],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    });\r\n  }, [setpercentage, setChartData]);\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          display: false\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          display: false\r\n        }\r\n      ]\r\n    },\r\n    legend: {\r\n      display: false\r\n    }\r\n  };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"20vh\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        margin=\"20px 0\"\r\n      >\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.3)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Members</h3>\r\n            <h2>20</h2>\r\n          </Overlay>\r\n        </Content>\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.2)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Appointments</h3>\r\n            <h2>70</h2>\r\n          </Overlay>\r\n        </Content>\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.2)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Inquiries</h3>\r\n            <h2>20</h2>\r\n          </Overlay>\r\n        </Content>\r\n      </DSection>\r\n      <DSection height=\"100%\" margin=\"20px 0 20px 0\">\r\n        <DGrid gap=\"40px\">\r\n          <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid>\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            {loading ? (\r\n              <Overlay flex justify=\"center\" align=\"center\">\r\n                <h2>Loading...</h2>\r\n              </Overlay>\r\n            ) : (\r\n              data.currentAppointments && (\r\n                <UpcommingAppointments\r\n                  appointments={data.currentAppointments}\r\n                  loading={loading}\r\n                />\r\n              )\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  // const [currentAppointments, setCurrentAppointments] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (currentAppointmentData) {\r\n  //     setCurrentAppointments(currentAppointmentData.currentAppointments);\r\n  //   }\r\n  // }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!currentAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={currentAppointmentData.currentAppointments.map(\r\n            currAppoint => currAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Apointment List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!historyAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={historyAppointmentData.appointmentHistory.map(\r\n            histAppoint => histAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ open, setOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpen(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButtonCancel>\r\n        <DButtonConfirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  DButtonConfirm\r\n} from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n        height=\"100vh\"\r\n      >\r\n        <h2 style={{ color: \"#111\" }}>\r\n          {data && (\r\n            <span style={{ color: \"#2980B9\", fontWeight: 700 }}>\r\n              {`${data.appointment.user.firstName} ${data.appointment.user.lastName}'s`}\r\n            </span>\r\n          )}{\" \"}\r\n          Appointment Details\r\n        </h2>\r\n\r\n        {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\"\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\"\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\"\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\"\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButtonConfirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButtonConfirm>\r\n                  <DButton>Reschedule</DButton>\r\n                  <DButtonCancel onClick={() => setOpen(true)}>\r\n                    Cancel\r\n                  </DButtonCancel>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )}\r\n        <AppointmentCancel\r\n          open={open}\r\n          setOpen={setOpen}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"small\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton,\r\n  DButtonConfirm,\r\n  DButtonCancel\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButtonConfirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButtonConfirm>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButtonCancel>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  // const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (dataCategory) {\r\n  //     setCategories(dataCategory.categories);\r\n  //   }\r\n  // }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {dataCategory.categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Exit</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n            <DButtonConfirm type=\"submit\">Yes</DButtonConfirm>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage\r\n} from \"../../components/styled/containers\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection margin=\"20px 0\">\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <DGrid four gap=\"15px\" margin=\"40px 0\">\r\n          {loading ? (\r\n            <h2>Loading...</h2>\r\n          ) : (\r\n            data.categories &&\r\n            data.categories.map(category => (\r\n              <DCard key={category._id}>\r\n                <DImage height=\"250px\" width=\"250px\">\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/category/${category.photo}`\r\n                        : \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"category\"\r\n                  />\r\n                </DImage>\r\n\r\n                <div className=\"card-details\">\r\n                  <h3>{category.name}</h3>\r\n                  <p className=\"des\">{parse(category.description)}</p>\r\n                  <Link to={`/zeadmin/category/${category._id}`}>\r\n                    <DButton basic>View</DButton>\r\n                  </Link>\r\n                </div>\r\n              </DCard>\r\n            ))\r\n          )}\r\n        </DGrid>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButtonCancel width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButtonCancel>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (data_services) {\r\n  //     setServices(data_services.services);\r\n  //   }\r\n  // }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      cell: row => <p style={{ fontWeight: 500 }}>{parse(row.description)}</p>\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={data_services.services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = props => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Skeleton width=\"100%\" />\r\n        </>\r\n      ) : (\r\n        <DSection margin=\"20px 0\">\r\n          <h2>{data.category.name}</h2>\r\n          <DGrid>\r\n            <DSection width=\"100%\" height=\"100%\">\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\"\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/category/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </DSection>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport {\r\n  Toasted,\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel\r\n} from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButtonConfirm onClick={handleSubmit}>Save</DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(true)}>Delete</DButtonCancel>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql/service\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <>\r\n                    <Content height=\"300px\"></Content>\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      className=\"dark\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Inquiry = () => {\r\n  const [inquiries, setInquiries] = useState([]);\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  console.log(data_inquiries);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Inquiry ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: \"email\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/inq/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      {!data_inquiries ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={data_inquiries.inquiries.map(inq => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"22px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    customStyles={customStyles}\r\n    rounded\r\n  >\r\n    Inquiry List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default Inquiry;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"User ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        {loading_users ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map(getUser => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\n\r\nconst SigninForm = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId && (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId}\r\n            </Label>\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../../util/graphql/cms\";\r\nimport { DShowCase, Overlay, DSection } from \"../../../styled/containers\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nconst Showcase = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState({});\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  // DROPZONE\r\n  const [addShowcase, { loading }] = useMutation(NEW_SHOWCASE, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_SHOWCASE,\r\n        variables: {\r\n          section: \"SHOWCASE\"\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addShowcase({ variables: { file } });\r\n    },\r\n    [addShowcase]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <DSection>\r\n      <h1>Showcase</h1>\r\n      <div\r\n        style={{ border: \"1px dashed #ccc\", width: \"150px\", height: \"150px\" }}\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        {isDragActive ? (\r\n          <h3>Drop Image</h3>\r\n        ) : loading ? (\r\n          <h2>Loading</h2>\r\n        ) : (\r\n          \" Image Drop here\"\r\n        )}\r\n      </div>\r\n      <DSection>\r\n        {!showcaseData ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Carousel\r\n            emulateTouch\r\n            infiniteLoop\r\n            useKeyboardArrows\r\n            autoPlay\r\n            showThumbs={false}\r\n            showStatus={false}\r\n            showArrows={mql.matches ? false : true}\r\n          >\r\n            {showcaseData.contentManagements.map(cms => (\r\n              <DShowCase\r\n                height=\"50vh\"\r\n                background={\r\n                  cms.photo !== null || cms.photo !== undefined\r\n                    ? `/images/cms/home/${cms.photo}`\r\n                    : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n              >\r\n                <Overlay\r\n                  bg={\r\n                    \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                  }\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h3>Z Essence Facial & Spa</h3>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                      Quisquam, doloribus.\r\n                    </p>\r\n                  </div>\r\n                </Overlay>\r\n              </DShowCase>\r\n            ))}\r\n          </Carousel>\r\n        )}\r\n      </DSection>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst NEW_SHOWCASE = gql`\r\n  mutation addShowcase($file: Upload) {\r\n    addShowcase(file: $file)\r\n  }\r\n`;\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/Showcase\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Showcase />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport User from \"./admin/User\";\r\nimport Signin from \"./admin/Signin\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/signin\" exact />\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Admin from \"./pages/Admin\";\nimport Page404 from \"./pages/Page404\";\nimport { AuthProvider } from \"./context/auth\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./components/theme\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Redirect from=\"/\" to=\"/zessence\" exact />\n            <Route path=\"/zessence\" component={Main} />\n            <Route path=\"/zeadmin\" component={Admin} />\n            <Route component={Page404} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"toasted-notes/src/styles.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}