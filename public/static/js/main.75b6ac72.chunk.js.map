{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","util/hooks/useScroll.js","components/main/navigation/Navigation.js","util/graphql/cms.js","components/styled/containers.js","components/styled/utils.js","components/main/home/Showcase.js","components/main/home/CategoryCards.js","util/graphql/employee.js","components/styled/card.js","components/main/utils/ReadMore.js","components/main/home/Team.js","components/main/home/Section2.js","components/main/home/Section3.js","components/main/utils/ScrollButton.js","pages/main/Home.js","components/main/about/Story.js","components/main/about/TeamDetails.js","components/main/about/Team.js","pages/main/About.js","util/hooks/useForm.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","util/graphql/service.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/styled/loader.js","components/Spinner.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Gallery.js","pages/main/Contact.js","pages/main/Services.js","pages/main/Service.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/styled/skeleton.js","components/Skeleton.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/HistoryAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","pages/admin/FileReport.js","components/admin/cms/home/ShowcaseModal.js","components/admin/cms/home/DeleteShowcase.js","components/admin/cms/home/Showcase.js","pages/admin/cms/Home.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","Burger","setOpen","onClick","useScroll","scrollVal","useState","scrolling","setScrolling","scrollTop","setScrollTop","scrollH","undefined","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Navigation","ref","handler","node","useRef","listener","event","current","contains","document","history","useHistory","useContext","handleLogout","push","trigger","style","fontSize","Icon","name","firstName","className","src","alt","to","userId","_id","Dropdown","Menu","Item","disabled","FETCH_SHOWCASE","gql","columns","rows","DContainer","div","DShowCase","height","background","bgcolor","Overlay","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","cwidth","cmarg","color","fs","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","med10","med7","med5","DCard","p","dh","dw","justifyCenter","justifyAround","justifyBetween","jusitfyFend","alignCenter","alignAround","alignBetween","alignFend","fcol","bs","DSection","width","mcenter","fixed","Content","fluid","rounded","br1","weight","size","bluer","imgHeight","imgWidth","DImage","m","DFooterLinks","DFooter","footer","Section2Styled","ripple","keyframes","DButton","button","fSize","text","radius","basic","alert","red","warning","yellow","confirm","green","default","DButtonCancel","border","DButtonConfirm","DLabel","label","ls","tt","w","hover","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","status","ReadMore","ScrollUp","absoluteCenter","position","top","left","transform","display","Showcase","nextSection","matchMedia","setShowcase","useQuery","variables","showcaseData","data","dataLoading","loading","error","contentManagements","scrollIntoView","behavior","block","bottom","zIndex","circular","slidesPerView","centeredSlides","effect","loop","autoplay","delay","disableOnInteraction","pagination","el","clickable","dynamicBullets","navigation","nextEl","prevEl","map","sc","index","key","photo","CategoryCards","cards","setRef","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","JCard","figure","JCard2","oflow","JCard3","JCard4","right","children","styles","dloading","justifyContent","alignItems","flexDirection","lineHeight","Team","employeesAR","setEmployeesAR","limit","data_employeesAR","loading_employeesAR","aestheticiansReceps","marginBottom","count","employee","data-emp","title","lastName","role","bio","length","parser","substr","Section2","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","css","visibility","from","y","ease","Power3","easeOut","scale","animate","Section3","ScrollButton","intervalId","pageYOffset","clearInterval","this","scroll","scrollPx","setInterval","scrollStep","bind","setState","scrollToTop","React","Component","Home","card1","Story","content","maxHeight","letterSpacing","textAlign","overflowWrap","overflow","padding","TeamDetails","href","Modal","onClose","closeIcon","employees","setEmployees","dataEmployees","loadingEmployees","minHeight","emp","About","minWidth","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","currentTarget","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","result","console","log","loginUser","userX","general","Signin","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","as","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","schedule","breakStart","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","loading_categories","data_categories","useLazyQuery","categoryId","category","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","categories","cursor","outline","services","servEmp","keyring","SpinnerRing","small","medium","inverted","Spinner","large","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","addInfo","setAddInfo","cache","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","toaster","notify","expiredLog","check","start","message","Header","readOnly","toDateString","Actions","Appointment","mql","setService","setServiceEmp","emulateTouch","infiniteLoop","useKeyboardArrows","autoPlay","showThumbs","showStatus","showArrows","matches","jusitfy","photos","Gallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","currentIndex","views","x","srcset","srcSet","caption","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","Services","sectionDown","isCategories","setIsCategories","description","Service","params","isReadMore","setIsReadMore","isServices","setIsServices","goBack","onPointerLeave","price","VERRIFIED_APPOINTMENT","ThankYou","emailToken","go","appointmentId","verifiedAppointment","onload","Link","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","parseInt","dateOfBirth","contact","updateUser","showYearDropdown","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","Accordion","setActive","contentRef","scrollHeight","icon","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","CANCEL_APPOINTMENT_MUTATION","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","loading_service","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","new","Popup","mouseEnterDelay","mouseLeaveDelay","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","row","cell","fitted","wide","Grid","divided","Column","currentAppoint","responsive","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","compact","historyAppoint","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","input","AppointmentDetails","schedDate","setMyAppoint","margn","Main","path","exact","UpcommingAppointments","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","pointing","SideNav","activeClassName","Layout","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","placeholderAnimate","DSkeleton","wid","Skeleton","CurrentAppointments","currentAppointmentData","currAppoint","HistoryAppointments","historyAppointments","setHistoryAppointments","historyAppointmentData","downloadCSV","array","link","createElement","csv","keys","Object","join","forEach","ctr","convertArrayOfObjectsToCSV","setAttribute","encodeURI","click","appointmentHistory","Export","onExport","actionsMemo","useMemo","actions","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","NewDateTime","NewAppointmentDetails","setCategories","CREATE_GUEST_APPOINTMENT","myAppointments","createGuestAppointment","NewAppointment","Divider","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","workLength","breakLength","newEmployee","Checkbox","class","Employees","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","setServices","dataCategory","loadingCategory","addService","close","marginLeft","EmployeeServices","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","newCategory","Categories","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","newService","serviceExist","ServiceList","descript","trimString","substring","parse","progressComponent","UPLOAD_CATEGORY_PHOTO","Category","setCategory","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","serviceData","serviceLoading","addServicePhoto","replace","REPLY_MESSAGE","READ_INQ","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","inquiry","readInquiry","replyInquiry","column","Inquiry","setInquiries","data_inquiries","loading_inquiries","msg","PhotoBooth","id","fetchEmployee","handleSchedule","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","empData","empLoading","User","setUsers","data_users","loading_users","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","FileReport","ShowcaseModal","showcase","DELETE_SHOWCASE","DeleteShowcase","openAlert","setOpenAlert","isDeleteShowCase","deleteShowcase","loadingDelete","NEW_SHOWCASE","isShowCase","setIsShowCase","setIsDeleteShowCase","addShowcase","handleEdit","handleDelete","cms","Admin","App","uploadLink","createUploadLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.75b6ac72.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${props => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 14vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 17px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${props =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${props => props.scrolled && \"li a {color: #fff;}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem 4rem 2rem 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll(scrollVal) {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const scrollH = scrollVal !== undefined ? scrollVal : 100;\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > scrollH);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import React, { useRef, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { DNavigation, DMainMenu, DRightMenu } from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  let history = useHistory();\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/zessence\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/zessence/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/services&rates\">Services & Rates</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/about\">About Us</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/gallery\">Gallery</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/testimonials\">Testimonials</Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/zessence/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired\r\n};\r\n\r\nexport default Navigation;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_SHOWCASE = gql`\r\n  query contentManagements($section: String) {\r\n    contentManagements(section: $section) {\r\n      _id\r\n      photo\r\n      section\r\n      headline\r\n      paragraph\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_SHOWCASE };\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.8);\r\n  margin-top: 14vh;\r\n`;\r\n\r\nexport const DShowCase = styled.div`\r\n  width: 100%;\r\n  height: ${props => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n\r\n  h1,h2,\r\n  p {\r\n    \r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img{\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${props => (props.bg ? props.bg : \"rgba(0, 0, 0, 0.15)\")};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  padding: ${props => props.pad && props.pad};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  opacity: ${props => props.opac && props.opac};\r\n  transition: opacity 0.3s ease;\r\n\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: 0;\r\n    height: 100%;\r\n\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n\r\n      text-align: center;\r\n      transform: rotate(-45deg);\r\n      h1 {\r\n        transform: translateY(80px);\r\n        transition: transform 0.4s ease-in-out;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${props => (props.cwidth ? props.cwidth : \"50%\")};\r\n    text-align: left;\r\n    margin: ${props => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    h1,\r\n    h2,\r\n    h3,\r\n    p {\r\n      color: ${props => (props.color ? props.color : \"#fff\")};\r\n      letter-spacing: 5px;\r\n      line-height: 2;\r\n    }\r\n    h1 {\r\n      font-size: ${props => (props.fs ? props.fs : \"48px\")};\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: ${props =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${props => props.gap && props.gap};\r\n  grid-template-rows: ${props =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${props => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${props => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: ${props =>\r\n      props.med10 ? props.med10 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${props =>\r\n      props.med7 ? props.med7 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: ${props => (props.med5 ? props.med5 : \"1fr\")};\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: ${props => (props.p ? props.p : \"10px\")};\r\n  height: ${props => (props.dh ? props.dh : \"300px\")};\r\n  width: ${props => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${props =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${props => props.fcol && \"column\"};\r\n\r\n  overflow: hidden;\r\n  background: ${props => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${props =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n        \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n        \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${props => (props.height ? props.height : \"400px\")};\r\n  width:  ${props => (props.width ? props.width : \"100%\")};;\r\n  margin: ${props =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${props => props.pad && props.pad};\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${props => props.fixed && \"fixed\"};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  position: relative;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${props => props.height && props.height};\r\n  width: ${props => (props.width ? props.width : props.fluid ? \"100%\" : \"50%\")};\r\n  padding: ${props => props.pad && props.pad};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${props => props.margin && props.margin};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props =>\r\n    props.rounded\r\n      ? \"10px\"\r\n      : props.br1\r\n      ? \"0% 24% 26% 39% / 20% 0% 100% 0% \"\r\n      : \"0\"};\r\n  box-shadow: ${props =>\r\n    props.bs &&\r\n    (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n    \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n    \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n    \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n    \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n  z-index: 2;\r\n  font-weight: ${props => props.weight && props.weight};\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  span {\r\n    color: ${props => props.color && props.color};\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${props => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${props => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${props => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${props => (props.height ? props.height : \"300px\")};\r\n  width: ${props => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${props =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  margin: ${props => (props.m ? props.m : \"0 auto\")};\r\n  padding: ${props => props.pad && props.pad};\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  visibility: hidden;\r\n  height: 100vh;\r\n  margin: 32px 0;\r\n  width: 90%;\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      margin: 0 24px;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 400px;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            margin-bottom: 24px .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding-right: 48px;\r\n            margin-bottom: 56px;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 50%;\r\n        height: 100vh;\r\n        position: relative;\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${props => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${props => (props.size ? props.size : \"36px\")};\r\n  width: ${props =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${props => (props.pad ? props.pad : \"6px 16px\")};\r\n  line-height: 1.42857143;\r\n  margin: 1.5%;\r\n  text-align: center;\r\n  text-transform: ${props => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border-radius: ${props =>\r\n    props.radius ? props.radius : props.circle ? \"50%\" : \"5px\"};\r\n  border-width: ${props => (props.basic ? \"1px\" : \"0\")};\r\n  border-style: ${props => props.basic && \"solid\"};\r\n  border-color: ${props =>\r\n    props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.default\r\n      ? ({ theme }) => theme.dark\r\n      : ({ theme }) => theme.blue};\r\n      \r\n  color: ${props => (props.color ? props.color : ({ theme }) => theme.light)};\r\n\r\n  background: ${props =>\r\n    props.basic\r\n      ? \"transparent\"\r\n      : props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : ({ theme }) => theme.blue};\r\n\r\n  ${props =>\r\n    props.disabled &&\r\n    \"background: #E9E4F0; color: #D3CCE3; &:hover:{opacity: 1}\"}\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n   opacity: 0.8;\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonCancel = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.red};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #f12711\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.red)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n`;\r\n\r\nexport const DButtonConfirm = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.green};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #0f9b0f\"\r\n      : props.basic\r\n      ? \"2px solid #0f9b0f\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n`;\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${props => (props.size ? props.size : \"12px\")};\r\n  color: ${props => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${props => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${props => props.weight && props.weight};\r\n  padding: ${props => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${props => (props.m ? props.m : \"1%\")};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  text-transform: ${props => props.tt && props.tt};\r\n  width: ${props => (props.w ? props.w : \"auto\")};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${props =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${props => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hover && \"0.8\"};\r\n    cursor: ${props => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${props => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${props => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${props =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${props =>\r\n        props.activeBg ? props.activeBg : ({ theme }) => theme.blue};\r\n      color: ${props =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${props => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${props => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${props =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${props =>\r\n    props.status === \"error\"\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.status === \"success\"\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.status === \"warning\"\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(69, 170, 242,1.0)\"};\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .close {\r\n    height: 100%;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.p`\r\n  text-align: right;\r\n  cursor: pointer !important;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.secondary};\r\n    display: inline-block;\r\n    position: relative;\r\n    font-weight: 700;\r\n    &:after {\r\n      content: \"\\f061\";\r\n      font-family: FontAwesome;\r\n      ${props =>\r\n        props.hover === 0\r\n          ? \"margin-left: 5px;opacity: 1;\"\r\n          : \"margin-left: -10px; opacity: 0;\"};\r\n      vertical-align: middle;\r\n      transition: margin 0.3s, opacity 0.3s;\r\n    }\r\n    &:hover {\r\n      &:after {\r\n        margin-left: 5px;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollUp = styled(Icon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: block;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport Swiper from \"react-id-swiper\";\r\n\r\nconst Showcase = ({ nextSection }) => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\"\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(nextSection);\r\n  };\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  // Custom params swiper\r\n  const params = {\r\n    slidesPerView: 1,\r\n    centeredSlides: true,\r\n    effect: \"fade\",\r\n    loop: true,\r\n    autoplay: {\r\n      delay: 4000,\r\n      disableOnInteraction: true\r\n    },\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      clickable: true,\r\n      dynamicBullets: true\r\n    },\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\"\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <DButton\r\n        onClick={scrollDown}\r\n        basic\r\n        circle\r\n        default\r\n        size=\"48px\"\r\n        width=\"48px\"\r\n        pad=\"auto\"\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"20px\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%,-50%)\",\r\n          zIndex: 5\r\n        }}\r\n      >\r\n        <Icon\r\n          name=\"chevron down\"\r\n          size=\"large\"\r\n          circular\r\n          style={absoluteCenter}\r\n        />\r\n      </DButton>\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"90vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Swiper {...params}>\r\n          {showcaseData &&\r\n            showcaseData.contentManagements.map((sc, index) => (\r\n              <DShowCase\r\n                height=\"90vh\"\r\n                key={sc._id}\r\n                background={\r\n                  sc.photo !== null || sc.photo !== undefined\r\n                    ? `/images/cms/home/${sc.photo}`\r\n                    : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n              >\r\n                <Overlay\r\n                  bg={\r\n                    \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                  }\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h1>Z Essence Facial & Spa</h1>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                      Quisquam, doloribus.\r\n                    </p>\r\n                    <Link to=\"/zessence\" className=\"btn\">\r\n                      Book Appointment\r\n                    </Link>\r\n                  </div>\r\n                </Overlay>\r\n              </DShowCase>\r\n            ))}\r\n        </Swiper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  height: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  display: \"block\"\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DImage, DSection } from \"../../styled/containers\";\r\n\r\nconst CategoryCards = ({ cards, setRef }) => {\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" margin=\"24px auto\" ref={setRef}>\r\n      <h1>Our Services</h1>\r\n      <DGrid three margin=\"0 0 40px 0\" gap=\"20px\">\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/face.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Skin Care</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/foot.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Healt Spa</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"http://localhost:3000/images/category/wax.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n            />\r\n            <h3>Waxing</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int) {\r\n    aestheticiansReceps(limit: $limit) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      dateOfBirth\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const JCard = styled.figure`\r\n  background-color: #fff;\r\n  color: #ffffff;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  max-width: 100%;\r\n  min-width: 200px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  width: 100%;\r\n  -webkit-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  img {\r\n    backface-visibility: hidden;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    background-color: #fe8c00;\r\n    opacity: 0.5;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  &:before {\r\n    -webkit-transform: skew(30deg) translateX(-80%);\r\n    transform: skew(30deg) translateX(-80%);\r\n  }\r\n\r\n  &:after {\r\n    -webkit-transform: skew(-30deg) translateX(-70%);\r\n    transform: skew(-30deg) translateX(-70%);\r\n  }\r\n\r\n  figcaption {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    padding: 25px 40% 25px 20px;\r\n  }\r\n\r\n  figcaption:before,\r\n  figcaption:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: #2193b0;\r\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\r\n    content: \"\";\r\n    opacity: 0.5;\r\n    z-index: -1;\r\n  }\r\n\r\n  figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-100%);\r\n    transform: skew(30deg) translateX(-100%);\r\n  }\r\n\r\n  figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-90%);\r\n    transform: skew(-30deg) translateX(-90%);\r\n  }\r\n\r\n  h3,\r\n  p {\r\n    margin: 0;\r\n    opacity: 0;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  h3 {\r\n    font-family: \"Teko\", sans-serif;\r\n    font-size: 36px;\r\n    font-weight: 700;\r\n    line-height: 1em;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  p {\r\n    font-size: 0.9em;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  &:hover h3,\r\n  &.hover h3,\r\n  &:hover p,\r\n  &.hover p {\r\n    -webkit-transform: translateY(0);\r\n    transform: translateY(0);\r\n    opacity: 0.9;\r\n    -webkit-transition-delay: 0.2s;\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover:before,\r\n  &.hover:before {\r\n    -webkit-transform: skew(30deg) translateX(-20%);\r\n    transform: skew(30deg) translateX(-20%);\r\n    -webkit-transition-delay: 0.05s;\r\n    transition-delay: 0.05s;\r\n  }\r\n\r\n  &:hover:after,\r\n  &.hover:after {\r\n    -webkit-transform: skew(-30deg) translateX(-10%);\r\n    transform: skew(-30deg) translateX(-10%);\r\n  }\r\n\r\n  &:hover figcaption:before,\r\n  &.hover figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-40%);\r\n    transform: skew(30deg) translateX(-40%);\r\n    -webkit-transition-delay: 0.15s;\r\n    transition-delay: 0.15s;\r\n  }\r\n\r\n  &:hover figcaption:after,\r\n  &.hover figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-30%);\r\n    transform: skew(-30deg) translateX(-30%);\r\n    -webkit-transition-delay: 0.1s;\r\n    transition-delay: 0.1s;\r\n  }\r\n`;\r\n\r\nexport const JCard2 = styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    background: #fff;\r\n    max-width: 100%;\r\n    min-width: 240px;\r\n    height: 400px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: ${props =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n\r\n    .thumbnail {\r\n      width: 100%;\r\n      height:100%;\r\n      overflow: hidden;\r\n      border-radius: 10px 10px 0 0;\r\n      background: #eee;\r\n      img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n       object-fit: cover;\r\n      }\r\n    }\r\n\r\n \r\n    .post-content {\r\n      position: absolute;\r\n      bottom: 0;\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border-radius: 0 0 10px 10px;\r\n      .category {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 0;\r\n        background: ${({ theme }) => theme.secondary};\r\n        padding: 10px 15px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n      }\r\n      .title {\r\n        color: #ccc;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n      }\r\n      .sub_title {\r\n        margin: 0;\r\n        padding: 0 0 20px;\r\n        color: ${({ theme }) => theme.secondary};\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n      }\r\n\r\n      .description {\r\n          height: 10px;\r\n          margin-top: 12px;\r\n         \r\n          &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            background-color: #f5f5f5;\r\n          }\r\n\r\n          &::-webkit-scrollbar {\r\n            width: 10px;\r\n            background-color: #f5f5f5;\r\n          }\r\n          &::-webkit-scrollbar-thumb {\r\n            background-image: -webkit-gradient(\r\n              linear,\r\n              left bottom,\r\n              left top,\r\n              color-stop(0.44, rgb(122, 153, 217)),\r\n              color-stop(0.72, rgb(73, 125, 189)),\r\n              color-stop(0.86, rgb(28, 58, 148))\r\n            );\r\n          }\r\n        \r\n          p{\r\n            color: #232323;\r\n            font-size: 14px;\r\n            line-height: 1.8em;\r\n            opacity: 0;\r\n            \r\n            pointer-events: none;\r\n            transition: all 0.45s ease;\r\n            &:first-of-type {\r\n              margin-top: 1.25rem;\r\n              &:before {\r\n                content: \"\";\r\n                position: absolute;\r\n                height: 5px;\r\n                background: ${({ theme }) => theme.blue};\r\n                width: 35px;\r\n                top: -0.75rem;\r\n                border-radius: 3px;\r\n              }\r\n            }\r\n          }\r\n        \r\n        }\r\n     \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .thumbnail {\r\n        background-color: #000;\r\n    \r\n        img {\r\n          -webkit-transform: scale(1.1);\r\n          -moz-transform: scale(1.1);\r\n          transform: scale(1.1);\r\n          opacity: 0.8;\r\n          transition: all 0.8s ease-in;\r\n        }\r\n        transition: all 0.8s ease-in-out;\r\n\r\n      }\r\n      .post-content{\r\n        .description{\r\n          height: 175px;\r\n          transition: height 0.6s ease-in-out;\r\n          overflow: ${props => props.oflow && \"auto\"};\r\n          p{\r\n            cursor: default;\r\n            pointer-events: auto;\r\n            -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n            opacity: 0.9;\r\n            -webkit-transition-delay: 0.6s;\r\n            transition-delay: 0.6s;\r\n          }\r\n         \r\n        }\r\n        \r\n      }\r\n     \r\n\r\n    }\r\n  \r\n`;\r\n\r\nexport const JCard3 = styled.div`\r\n  .description {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #fff;\r\n    z-index: 1;\r\n\r\n    h1 {\r\n      line-height: 1;\r\n      margin: 0;\r\n      font-size: 1.7rem;\r\n    }\r\n    h4 {\r\n      font-size: 1rem;\r\n      font-weight: 300;\r\n      text-transform: capitalize;\r\n      color: #a2a2a2;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      margin: 1rem 0 0;\r\n      font-size: 16px;\r\n      &:first-of-type {\r\n        margin-top: 1.25rem;\r\n        &:before {\r\n          content: \"\";\r\n          position: absolute;\r\n          height: 5px;\r\n          background: ${({ theme }) => theme.blue};\r\n          width: 35px;\r\n          top: -0.75rem;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JCard4 = styled.figure`\r\n  position: relative;\r\n  margin: 10px;\r\n  min-width: 230px;\r\n  max-width: 315px;\r\n  width: 100%;\r\n  height: ${props => props.height && props.height};\r\n  color: #000000;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n  font-size: 14px;\r\n\r\n  & * {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .profile-image {\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 300px;\r\n    z-index: 1;\r\n    position: relative;\r\n    margin: ${props => props.margin && props.margin};\r\n    top: ${props => props.top && props.top};\r\n    right: ${props => props.right && props.right};\r\n    bottom: ${props => props.bottom && props.bottom};\r\n    left: ${props => props.left && props.left};\r\n    padding: 10px;\r\n    border: 2px solid #6dd5ed;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      vertical-align: top;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    .profile-image {\r\n      border-color: #2193b0;\r\n    }\r\n    figcaption {\r\n      box-shadow: ${props =>\r\n        props.bs\r\n          ? props.bs\r\n          : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n            \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n            \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n            \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n            \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n    }\r\n  }\r\n\r\n  figcaption {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    padding: 125px 25px 25px;\r\n    margin-top: -100px;\r\n    display: inline-block;\r\n    box-shadow: ${props =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.11)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.11)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.11)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.11)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.11)\")};\r\n\r\n    h3,\r\n    h4,\r\n    p {\r\n      margin: 0 0 5px;\r\n    }\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    h4 {\r\n      color: #8c8c8c;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n      letter-spacing: 1px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .icons {\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .linkToPage {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"../../styled/utils\";\r\n\r\nconst ReadMore = props => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DGrid,\r\n  DImage,\r\n  DCard,\r\n  DSection,\r\n  Overlay\r\n} from \"../../styled/containers\";\r\nimport { JCard4 } from \"../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst Team = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <h1 style={{ marginBottom: \"24px\" }}>Our Team</h1>\r\n      <DGrid four margin=\"0 auto\" gap=\"25px\" style={{ marginBottom: \"24px\" }}>\r\n        {loading_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          employeesAR &&\r\n          employeesAR.map(employee => (\r\n            <JCard4 data-emp={employee._id}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n              <figcaption>\r\n                <h3>\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </h3>\r\n                <h4>{employee.role}</h4>\r\n                <p>\r\n                  {employee.bio.length > 50\r\n                    ? parser(employee.bio.substr(0, 50) + \"...\")\r\n                    : parser(employee.bio.substr(0, 50))}\r\n                </p>\r\n                <ReadMore hover={0}>Read More</ReadMore>\r\n              </figcaption>\r\n              <Link to=\"/zessence/about\" className=\"linkToPage\" />\r\n            </JCard4>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n      <Link to=\"/zessence/about\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"centet\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2\r\n  }\r\n};\r\n\r\nexport default Team;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Section2Styled } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\n\r\nconst Section2 = ({ nextSection }) => {\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled ref={el => (section2 = el)}>\r\n      <div className=\"sec2-container\" ref={nextSection}>\r\n        <div className=\"sec2-inner\">\r\n          <div className=\"sec2-content\">\r\n            <div className=\"sec2-content_inner\">\r\n              <h1>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Z Essence</div>\r\n                </div>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Facial & Spa</div>\r\n                </div>\r\n              </h1>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Totam\r\n                labore dolore ad nemo, veritatis iure mollitia impedit. Quod, id\r\n                tempore?\r\n                <Link to=\"/zessence/appointment\">Learn More</Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={el => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport \"./scroll.css\";\r\n\r\nclass ScrollButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(\r\n      0,\r\n      window.pageYOffset - (this.props.scrollPx ? this.props.scrollPx : \"100\")\r\n    );\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delay ? this.props.delay : \"16.66\"\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        title=\"Back to top\"\r\n        className=\"scroll\"\r\n        onClick={() => {\r\n          this.scrollToTop();\r\n        }}\r\n      >\r\n        <Icon\r\n          name=\"chevron circle up\"\r\n          size=\"large\"\r\n          circular\r\n          className=\"arrow-up\"\r\n        />\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ScrollButton;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategoryCards from \"../../components/main/home/CategoryCards\";\r\nimport Team from \"../../components/main/home/Team\";\r\nimport Section2 from \"../../components/main/home/Section2\";\r\nimport Section3 from \"../../components/main/home/Section3\";\r\nimport { DContainer } from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Home = () => {\r\n  const nextSection = useRef();\r\n  const card1 = \"/images/card1.jpg\";\r\n  const scrolling = useScroll(300);\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton />}\r\n      <Showcase nextSection={nextSection} />\r\n\r\n      <Section2 nextSection={nextSection} />\r\n\r\n      <CategoryCards cards={card1} />\r\n\r\n      <Team cards={card1} />\r\n      {/* Carbon */}\r\n      <Section3 />\r\n      <section className=\"follow\">\r\n        <p>Follow Z Essence</p>\r\n        <Link to=\"/\">\r\n          <h4>Facebook</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>Twitter</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>LinkedIn</h4>\r\n        </Link>\r\n      </section>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { DGrid, DSection, Content, DImage } from \"../../styled/containers\";\r\n\r\nconst Story = ({ content }) => {\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        margin=\"24px auto 0 auto\"\r\n        ref={content}\r\n      >\r\n        <DGrid two>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"24px\"\r\n          >\r\n            <h3>Our Mission</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero\r\n              quia at alias reiciendis voluptatum illo quidem natus quod porro\r\n              voluptatem? Obcaecati totam libero rerum nihil nemo, iusto aliquid\r\n              repellendus repudiandae?\r\n            </p>\r\n            <h3>Our Vision</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero\r\n              quia at alias reiciendis voluptatum illo quidem natus quod porro\r\n              voluptatem? Obcaecati totam libero rerum nihil nemo, iusto aliquid\r\n              repellendus repudiandae?\r\n            </p>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DGrid gap=\"20px\">\r\n              <DImage height=\"100%\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </DImage>\r\n            </DGrid>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" mcenter>\r\n        <DGrid two>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DGrid gap=\"20px\">\r\n              <DImage height=\"250px\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </DImage>\r\n              <DImage height=\"250px\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </DImage>\r\n            </DGrid>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"20px\"\r\n            style={{ maxHeight: \"90vh\" }}\r\n          >\r\n            <h3>Our Story</h3>\r\n            <p\r\n              style={{\r\n                fontSize: \"15px\",\r\n                letterSpacing: \"2px\",\r\n                lineHeight: 1.8,\r\n                textAlign: \"justify\",\r\n                overflowWrap: \"break-word\",\r\n                overflow: \"auto\",\r\n                padding: \"10px\"\r\n              }}\r\n            >\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero\r\n              quia at alias reiciendis voluptatum illo quidem natus quod porro\r\n              voluptatem? Obcaecati totam libero rerum nihil nemo, iusto aliquid\r\n              repellendus repudiandae? Lorem ipsum dolor sit amet consectetur\r\n              adipisicing elit. Minima officiis nobis, nam voluptatem saepe\r\n              quidem aspernatur harum qui, esse quasi delectus, ipsa culpa\r\n              velit. Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n            </p>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../styled/card\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst TeamDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModal = event => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JCard4 data-emp={employee._id} onClick={handleModal}>\r\n        <div className=\"profile-image\">\r\n          <img\r\n            src={\r\n              employee.photo\r\n                ? `/images/employees/${employee.photo}`\r\n                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n            }\r\n            alt={employee.photo}\r\n          />\r\n        </div>\r\n        <figcaption>\r\n          <h3>\r\n            {employee.title} {employee.firstName} {employee.lastName}\r\n          </h3>\r\n          <h4>{employee.role}</h4>\r\n          <p>\r\n            {employee.bio.length > 50\r\n              ? parser(employee.bio.substr(0, 50) + \"...\")\r\n              : parser(employee.bio.substr(0, 50))}\r\n          </p>\r\n          <ReadMore hover={0}>Read More</ReadMore>\r\n          <div className=\"icons\">\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-reddit\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-vimeo\"></i>\r\n            </a>\r\n          </div>\r\n        </figcaption>\r\n      </JCard4>\r\n      <Modal size=\"small\" open={open} onClose={() => setOpen(false)} closeIcon>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4 top={\"-60px\"}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{employee.firstName}</h1>\r\n                <h4>{employee.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {parser(employee.bio)}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nconst Team = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const { data: dataEmployees, loading: loadingEmployees } = useQuery(\r\n    FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmployees) {\r\n      setEmployees(dataEmployees.aestheticiansReceps);\r\n    }\r\n  }, [dataEmployees]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n        >\r\n          <h3>Our TEAM</h3>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        pad=\"10px 0\"\r\n        mcenter\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DGrid three gap=\"20px\">\r\n            {loadingEmployees ? (\r\n              <>\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n              </>\r\n            ) : (\r\n              employees &&\r\n              employees.map(emp => <TeamDetails key={emp._id} employee={emp} />)\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DGrid,\r\n  DImage\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, ScrollUp } from \"../../components/styled/utils\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport Story from \"../../components/main/about/Story\";\r\nimport Team from \"../../components/main/about/Team\";\r\n\r\nconst About = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\"\r\n      });\r\n  }\r\n\r\n  const pageDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>About Us</h1>\r\n          <h3>The Concept of Beauty</h3>\r\n          <DButton\r\n            onClick={pageDown}\r\n            basic\r\n            circle\r\n            default\r\n            size=\"58px\"\r\n            width=\"58px\"\r\n            pad=\"auto\"\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"20px\"\r\n            }}\r\n          >\r\n            <ScrollUp name=\"chevron down\" size=\"large\" circular />\r\n          </DButton>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Story content={content} />\r\n      <Team />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signin\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/home\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n    \r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted(result) {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/appointment\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        pad=\"0\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n        {data_employee && data_service ? (\r\n          loading_employee || loading_appointments ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <DGrid two gap=\"20px\">\r\n              {!times ? (\r\n                <h2>Loading...</h2>\r\n              ) : (\r\n                times.map(time => (\r\n                  <div className=\"pretty p-default p-curve\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"time\"\r\n                      key={time}\r\n                      value={time}\r\n                      onChange={handleTimeChanged}\r\n                    />\r\n                    <div className=\"state p-info-o\">\r\n                      <label style={styles.label}>{time}</label>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </DGrid>\r\n          )\r\n        ) : (\r\n          \"Select Available Time\"\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n  height: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    height: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    margin: ${props => (props.small ? \"3px\" : props.medium ? \"6px\" : \"8px\")};\r\n    border: ${props =>\r\n      props.small\r\n        ? \"3px solid #fff\"\r\n        : props.medium\r\n        ? \"6px solid #fff\"\r\n        : \"8px  solid #fff\"};\r\n\r\n    border-radius: 50%;\r\n    animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: ${props =>\r\n      props.inverted\r\n        ? \"#fff transparent transparent transparent\"\r\n        : \"#fe8c00 transparent transparent transparent\"};\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = ({ small, large, medium, inverted }) => {\r\n  return (\r\n    <SpinnerRing\r\n      small={small}\r\n      large={large}\r\n      medium={medium}\r\n      inverted={inverted}\r\n    >\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/zessence/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.name}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nconst Appointment = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n          <Carousel\r\n            emulateTouch\r\n            infiniteLoop\r\n            useKeyboardArrows\r\n            autoPlay\r\n            showThumbs={false}\r\n            showStatus={false}\r\n            showArrows={mql.matches ? false : true}\r\n          >\r\n            <DSection\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              background={\r\n                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              height=\"100vh\"\r\n            >\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                jusitfy=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Advertisement</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DSection>\r\n          </Carousel>\r\n          <DGrid>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    basic={\r\n                      (values.category === \"\" ||\r\n                        serviceValue === \"\" ||\r\n                        employeeVal === \"\" ||\r\n                        selectedTime === \"\") &&\r\n                      true\r\n                    }\r\n                    disabled={\r\n                      values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  sec: {\r\n    height: \"30vh\"\r\n  }\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, ScrollUp } from \"../../components/styled/utils\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst photos = [\r\n  {\r\n    src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\r\n    width: 1,\r\n    height: 1,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  }\r\n];\r\n\r\nconst Gallery = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\"\r\n      });\r\n  }\r\n\r\n  const pageDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>Gallery</h1>\r\n          <h3>Love Your Skin</h3>\r\n          <DButton\r\n            onClick={pageDown}\r\n            basic\r\n            circle\r\n            default\r\n            size=\"58px\"\r\n            width=\"58px\"\r\n            pad=\"auto\"\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"20px\"\r\n            }}\r\n          >\r\n            <ScrollUp name=\"chevron down\" size=\"large\" circular />\r\n          </DButton>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        width=\"80%\"\r\n        mcenter\r\n        pad=\"20px 0\"\r\n        ref={content}\r\n      >\r\n        <MyGallery photos={photos} onClick={openLightbox} />\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel\r\n                currentIndex={currentImage}\r\n                views={photos.map(x => ({\r\n                  ...x,\r\n                  srcset: x.srcSet,\r\n                  caption: x.title\r\n                }))}\r\n              />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport { DButton, ScrollUp } from \"../../components/styled/utils\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Services = () => {\r\n  const sectionDown = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\"\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(sectionDown);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\" }}>Our Services</h1>\r\n          <h3>It's time to take care of your skin</h3>\r\n          <DButton\r\n            onClick={scrollDown}\r\n            basic\r\n            circle\r\n            default\r\n            size=\"58px\"\r\n            width=\"58px\"\r\n            pad=\"auto\"\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"20px\"\r\n            }}\r\n          >\r\n            <ScrollUp name=\"chevron down\" size=\"large\" circular />\r\n          </DButton>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <DSection\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n        mcenter\r\n        pad=\"24px\"\r\n        height=\"100%\"\r\n        ref={sectionDown}\r\n      >\r\n        <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n          <DGrid three gap=\"24px\" med7={\"1fr\"}>\r\n            {loading ? (\r\n              <>\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n              </>\r\n            ) : (\r\n              isCategories.map(category => (\r\n                <JCard>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <div className=\"description\">\r\n                      <p>\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n                      </p>\r\n                      <ReadMore hover={0}>View Services</ReadMore>\r\n                    </div>\r\n                  </figcaption>\r\n                  <Link to={`/zessence/service/${category._id}`}></Link>\r\n                </JCard>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CATEGORY_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { JCard2 } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ServiceDetails from \"../../components/main/services/ServiceDetails\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Service = props => {\r\n  const categoryId = props.match.params._id;\r\n  const history = useHistory();\r\n  const [isReadMore, setIsReadMore] = useState(false);\r\n\r\n  const [isServices, setIsServices] = useState([]);\r\n\r\n  const { data, loading } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsServices(data.category.services);\r\n    }\r\n  }, [data]);\r\n\r\n  const backHist = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"50vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          fluid\r\n          height=\"100%\"\r\n          className=\"dark\"\r\n        >\r\n          {!data ? (\r\n            <Spinner inverted />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ fontSize: \"22px\" }}>{data.category.name}</h1>\r\n              <p style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                {parser(data.category.description)}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Content flex width=\"90%\" height=\"50px\" margin=\"20px auto\">\r\n        <DButton onClick={backHist}>\r\n          <Icon name=\"arrow left\" /> <span>Back to Services</span>\r\n        </DButton>\r\n      </Content>\r\n      {loading ? (\r\n        <DGrid three gap=\"15px\">\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n        </DGrid>\r\n      ) : (\r\n        <DSection\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          mcenter\r\n          pad=\"24px\"\r\n          height=\"100%\"\r\n        >\r\n          <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n            <DGrid three gap=\"15px\">\r\n              {isServices &&\r\n                isServices.map(service => (\r\n                  <JCard2\r\n                    key={service._id}\r\n                    oflow={isReadMore ? true : false}\r\n                    onPointerLeave={() => setIsReadMore(false)}\r\n                  >\r\n                    <div className=\"thumbnail\">\r\n                      <img\r\n                        src={\r\n                          service.photo !== null\r\n                            ? `/images/service/${service.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/169963/photo-1429043794791-eb8f26f44081.jpeg\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"post-content\">\r\n                      <div className=\"category\">{service.name}</div>\r\n                      <h4 className=\"title\">{service.duration} mins</h4>\r\n                      <h4 className=\"title\">Php {service.price}</h4>\r\n                      <div className=\"description\">\r\n                        {isReadMore ? (\r\n                          <p>{parser(service.description)}</p>\r\n                        ) : (\r\n                          <p>\r\n                            {service.description.length > 100\r\n                              ? parser(\r\n                                  service.description.substr(0, 100) + \"...\"\r\n                                )\r\n                              : parser(service.description.substr(0, 100))}\r\n                          </p>\r\n                        )}\r\n                        {service.description.length <= 100 ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <ReadMore onClick={() => setIsReadMore(!isReadMore)}>\r\n                            {isReadMore ? \"Read Less\" : \"Read More\"}\r\n                          </ReadMore>\r\n                        )}\r\n\r\n                        {/* <ServiceDetails service={service} /> */}\r\n                      </div>\r\n                    </div>\r\n                  </JCard2>\r\n                ))}\r\n            </DGrid>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const { userId } = useContext(AuthContext);\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence\">\r\n            Explore\r\n          </DButton>\r\n          <DButton\r\n            as={Link}\r\n            to={userId ? `/zessence/account/${userId}` : `/zessence/login`}\r\n          >\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DShowCase\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid>\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Label, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hoverColorText}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Redirect to=\"/zessence\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zessence/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {!data ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input\r\n                  value={data.appointment._id}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={data.appointment.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={data.appointment.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${data.appointment.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={data.appointment.status}\r\n                  readOnly\r\n                  style={\r\n                    data.appointment.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : data.appointment.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : data.appointment.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {data.appointment.status === \"CANCELLED\" ||\r\n            data.appointment.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert onClick={() => setOpen(true)} disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Services from \"./main/Services\";\r\nimport Service from \"./main/Service\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/`} component={Home} exact />\r\n        <Route path={`${match.path}/about`} component={About} exact />\r\n        <Route path={`${match.path}/contact`} component={Contact} exact />\r\n        <Route path={`${match.path}/gallery`} component={Gallery} exact />\r\n        <Route\r\n          path={`${match.path}/services&rates`}\r\n          component={Services}\r\n          exact\r\n        />\r\n        <Route path={`${match.path}/service/:_id`} component={Service} exact />\r\n        <Route\r\n          path={`${match.path}/verified/:emailToken`}\r\n          component={ThankYou}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`${match.path}/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`${match.path}/login`} component={Signin} exact />\r\n\r\n        <UserPrivateRoute\r\n          path={`${match.path}/account/:_id`}\r\n          component={Account}\r\n          exact\r\n        />\r\n\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/appointment`}\r\n          component={Appointment}\r\n          exact\r\n        />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst UpcommingAppointments = ({ appointments }) => {\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map(appointment => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, DImage, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Image, Icon } from \"semantic-ui-react\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Dropdown\r\n        trigger={\r\n          <DImage circle height=\"50px\" width=\"50px\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"avatar\"\r\n            />\r\n            <Overlay opac={0} hovOpac={1} />\r\n          </DImage>\r\n        }\r\n        pointing=\"top right\"\r\n        icon={null}\r\n      >\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to=\"/zeadmin/paccount\">\r\n            <Icon name=\"user\" />\r\n            Account\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={handleLogout}>\r\n            <Icon name=\"sign out\" />\r\n            Sign out\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      {/* <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton> */}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion\r\n        title={\"Accounts\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            About Us\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/testimonials\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map(user => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"#6dd5ed\"\r\n                color=\"#fff\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <Spinner small />\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"green\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"firebrick\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.bluer}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.secondary}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay,\r\n  DCard\r\n} from \"../../components/styled/containers\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Cards />\r\n      <DSection height=\"100%\" margin=\"20px 0 20px 0\">\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            {loading ? (\r\n              <Overlay flex justify=\"center\" align=\"center\">\r\n                <h2>Loading...</h2>\r\n              </Overlay>\r\n            ) : (\r\n              data.currentAppointments && (\r\n                <UpcommingAppointments\r\n                  appointments={data.currentAppointments}\r\n                  loading={loading}\r\n                />\r\n              )\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  // const [currentAppointments, setCurrentAppointments] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (currentAppointmentData) {\r\n  //     setCurrentAppointments(currentAppointmentData.currentAppointments);\r\n  //   }\r\n  // }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!currentAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={currentAppointmentData.currentAppointments.map(\r\n            currAppoint => currAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Apointment List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function convertArrayOfObjectsToCSV(array, data) {\r\n    let result;\r\n\r\n    const columnDelimiter = \",\";\r\n    const lineDelimiter = \"\\n\";\r\n    const keys = Object.keys(data[0]);\r\n\r\n    result = \"\";\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr = 0;\r\n      keys.forEach(key => {\r\n        if (ctr > 0) result += columnDelimiter;\r\n\r\n        result += item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\");\r\n    let csv = convertArrayOfObjectsToCSV(array);\r\n    if (csv == null) return;\r\n\r\n    const filename = \"export.csv\";\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv));\r\n    link.setAttribute(\"download\", filename);\r\n    link.click();\r\n  }\r\n\r\n  const Export = ({ onExport }) => (\r\n    <DButton onClick={e => onExport(e.target.value)}>Export</DButton>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const actionsMemo = useMemo(\r\n    () => <Export onExport={() => downloadCSV(historyAppointments)} />,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!historyAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={historyAppointmentData.appointmentHistory}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          actions={actionsMemo}\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButtonCancel>\r\n        <DButtonConfirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  DButtonConfirm\r\n} from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n        height=\"100vh\"\r\n      >\r\n        <h2 style={{ color: \"#111\" }}>\r\n          {data && (\r\n            <span style={{ color: \"#2980B9\", fontWeight: 700 }}>\r\n              {`${data.appointment.user.firstName} ${data.appointment.user.lastName}'s`}\r\n            </span>\r\n          )}{\" \"}\r\n          Appointment Details\r\n        </h2>\r\n\r\n        {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\"\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\"\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\"\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\"\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ||\r\n              data.appointment.status === \"RESCHEDULED\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButtonConfirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButtonConfirm>\r\n                  <ReschedModal\r\n                    isAdmin={true}\r\n                    status={\"VERIFIED\"}\r\n                    setOpen={setOpen}\r\n                    appointmentId={appointmentId}\r\n                  />\r\n                  <DButtonCancel onClick={() => setOpenCancel(true)}>\r\n                    Cancel\r\n                  </DButtonCancel>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )}\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton,\r\n  DButtonConfirm,\r\n  DButtonCancel\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButtonConfirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButtonConfirm>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButtonCancel>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  // const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (dataCategory) {\r\n  //     setCategories(dataCategory.categories);\r\n  //   }\r\n  // }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {dataCategory.categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Exit</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n            <DButtonConfirm type=\"submit\">Yes</DButtonConfirm>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection margin=\"20px 0\">\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <DGrid two gap=\"15px\" margin=\"40px 0\">\r\n          {loading ? (\r\n            <>\r\n              <Skeleton width={300} height={300} />\r\n              <Skeleton width={300} height={300} />\r\n            </>\r\n          ) : (\r\n            categories.map(category => (\r\n              <JCard>\r\n                <img\r\n                  src={\r\n                    category.photo !== null\r\n                      ? `/images/service/${category.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                  }\r\n                  alt={category.name}\r\n                />\r\n                <figcaption>\r\n                  <h3>{parser(category.name)}</h3>\r\n                  <p>{parser(category.description)}</p>\r\n                </figcaption>\r\n                <Link to={`/zeadmin/category/${category._id}`} />\r\n              </JCard>\r\n            ))\r\n          )}\r\n        </DGrid>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButtonCancel width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButtonCancel>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      format: row => {\r\n        const length = 20;\r\n        const descript = row.description;\r\n\r\n        const trimString =\r\n          descript.length > length\r\n            ? descript.substring(0, length) + \"...\"\r\n            : descript.substring(0, length);\r\n\r\n        return <p style={{ fontWeight: 500 }}>{parse(trimString)}</p>;\r\n      }\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = props => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Skeleton width=\"100%\" />\r\n        </>\r\n      ) : (\r\n        <DSection margin=\"20px 0\">\r\n          <h2>{data.category.name}</h2>\r\n          <DGrid>\r\n            <DSection width=\"100%\" height=\"100%\">\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\"\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/category/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </DSection>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport {\r\n  Toasted,\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel\r\n} from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButtonConfirm onClick={handleSubmit}>Save</DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(true)}>Delete</DButtonCancel>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql/service\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <>\r\n                    <Content height=\"300px\"></Content>\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      className=\"dark\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n    variables: {\r\n      inqId: inqId\r\n    }\r\n  });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n    readInquiry();\r\n  };\r\n  const handleReplyMsg = e => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {dataInq && (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{dataInq.inquiry.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {dataInq.inquiry.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {dataInq.inquiry.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={dataInq.inquiry.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={dataInq.inquiry.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst READ_INQ = gql`\r\n  mutation readInquiry($inqId: ID) {\r\n    readInquiry(_id: $inqId)\r\n  }\r\n`;\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const handleRow = e => {\r\n    setInq(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Inquiry ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: row => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      }\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      {loading_inquiries ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map(inq => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n      {inq && <ReplyModal inqId={inq} open={open} setOpen={setOpen} />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"22px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    customStyles={customStyles}\r\n    rounded\r\n  >\r\n    Inquiry List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  id,\r\n  photo,\r\n  fetchEmployee,\r\n  handleDetails,\r\n  handleSchedule\r\n}) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            {loading ? (\r\n              <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n                <Spinner small />\r\n              </Content>\r\n            ) : (\r\n              <img\r\n                src={\r\n                  photo !== null\r\n                    ? `/images/employees/${photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            )}\r\n          </DImage>\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        {/* <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleSchedule} fluid>\r\n            Schedule\r\n          </DButton>\r\n        </DCard> */}\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = e => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole\r\n    }\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(employee.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Label, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(employee.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from \"react\";\r\n\r\nconst AccountSched = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = () => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeAuth.id\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {empData && empData.employee ? (\r\n            !empLoading ? (\r\n              <>\r\n                <PhotoBooth\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                  photo={empData.employee.photo}\r\n                  id={empData.employee._id}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                />\r\n                <AccountInfo\r\n                  employee={empData.employee}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                  isAccount={isAccount}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"User ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        {loading_users ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map(getUser => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments]\r\n          }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\"\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton confirm onClick={() => setNewConfirm(true)}>\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = props => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\n\r\nconst SigninForm = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst FileReport = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n              File Report\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <DGrid>\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import React from \"react\";\r\n\r\nimport { Modal } from \"semantic-ui-react\";\r\n\r\nconst ShowcaseModal = ({ open, setOpen, showcase }) => {\r\n  return (\r\n    <Modal size=\"small\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header></Modal.Header>\r\n      <Modal.Content>{showcase}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShowcaseModal;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../../util/graphql/cms\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\n\r\nconst DeleteShowcase = ({ openAlert, setOpenAlert, isDeleteShowCase }) => {\r\n  const [deleteShowcase, { loading: loadingDelete }] = useMutation(\r\n    DELETE_SHOWCASE,\r\n    {\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_SHOWCASE,\r\n          variables: {\r\n            section: \"SHOWCASE\"\r\n          }\r\n        }\r\n      ],\r\n      variables: {\r\n        _id: isDeleteShowCase\r\n      },\r\n      onCompleted(result) {\r\n        setOpenAlert(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  function deleteShowcaseCB() {\r\n    deleteShowcase();\r\n  }\r\n\r\n  return (\r\n    <Modal basic open={openAlert} onClose={() => setOpenAlert(false)}>\r\n      <Modal.Header>Delete Showcase</Modal.Header>\r\n      <Modal.Content>\r\n        Are you sure you want to delete this Showcase Image?\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={deleteShowcaseCB}>\r\n          {loadingDelete ? <Spinner small /> : \"Yes\"}\r\n        </DButton>\r\n        <DButton alert basic>\r\n          No\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SHOWCASE = gql`\r\n  mutation deleteShowcase($_id: ID!) {\r\n    deleteShowcase(_id: $_id)\r\n  }\r\n`;\r\n\r\nexport default DeleteShowcase;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../../util/graphql/cms\";\r\nimport { DShowCase, Overlay, DSection } from \"../../../styled/containers\";\r\nimport { DButton } from \"../../../styled/utils\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport ShowcaseModal from \"./ShowcaseModal\";\r\nimport DeleteShowcase from \"./DeleteShowcase\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst Showcase = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState([]);\r\n  const [isShowCase, setIsShowCase] = useState({});\r\n  const [isDeleteShowCase, setIsDeleteShowCase] = useState({});\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  // DROPZONE\r\n  const [addShowcase, { loading }] = useMutation(NEW_SHOWCASE, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_SHOWCASE,\r\n        variables: {\r\n          section: \"SHOWCASE\"\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addShowcase({ variables: { file } });\r\n    },\r\n    [addShowcase]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n    setIsShowCase(e.target.value);\r\n  };\r\n\r\n  const handleDelete = e => {\r\n    e.preventDefault();\r\n    setOpenAlert(true);\r\n    setIsDeleteShowCase(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <DSection>\r\n      <h1>Showcase</h1>\r\n      <div\r\n        style={{ border: \"1px dashed #ccc\", width: \"100%\", height: \"150px\" }}\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        {isDragActive ? (\r\n          <h3>Drop Image</h3>\r\n        ) : loading ? (\r\n          <h2>Loading</h2>\r\n        ) : (\r\n          \" Image Drop here\"\r\n        )}\r\n      </div>\r\n      <DSection>\r\n        {!showcaseData ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Carousel\r\n            emulateTouch\r\n            infiniteLoop\r\n            useKeyboardArrows\r\n            showThumbs={false}\r\n            showStatus={false}\r\n            showArrows={mql.matches ? false : true}\r\n          >\r\n            {showcaseData.contentManagements &&\r\n              showcaseData.contentManagements.map(cms => (\r\n                <DShowCase\r\n                  key={cms._id}\r\n                  height=\"50vh\"\r\n                  background={\r\n                    cms.photo !== null || cms.photo !== undefined\r\n                      ? `/images/cms/home/${cms.photo}`\r\n                      : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                >\r\n                  <Overlay\r\n                    bg={\r\n                      \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                    }\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    align=\"center\"\r\n                  >\r\n                    <div className=\"overlay-content\">\r\n                      <h3>Z Essence Facial & Spa</h3>\r\n                      <p>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Quisquam, doloribus.\r\n                      </p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        right: 20,\r\n                        display: \"flex\"\r\n                      }}\r\n                    >\r\n                      <DButton\r\n                        value={cms._id}\r\n                        onClick={handleEdit}\r\n                        style={{ width: \"50px\" }}\r\n                      >\r\n                        <Icon name=\"edit\" />\r\n                        <div style={{ visibility: \"hidden\" }}>{cms._id}</div>\r\n                      </DButton>\r\n                      <DButton\r\n                        alert\r\n                        value={cms._id}\r\n                        onClick={handleDelete}\r\n                        style={{ width: \"50px\" }}\r\n                      >\r\n                        <Icon name=\"trash\" />\r\n                        <div style={{ visibility: \"hidden\" }}>{cms._id}</div>\r\n                      </DButton>\r\n                    </div>\r\n                  </Overlay>\r\n                </DShowCase>\r\n              ))}\r\n          </Carousel>\r\n        )}\r\n      </DSection>\r\n      {isShowCase && (\r\n        <ShowcaseModal open={open} setOpen={setOpen} showcase={isShowCase} />\r\n      )}\r\n\r\n      {isDeleteShowCase && (\r\n        <DeleteShowcase\r\n          openAlert={openAlert}\r\n          setOpenAlert={setOpenAlert}\r\n          isDeleteShowCase={isDeleteShowCase}\r\n        />\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst NEW_SHOWCASE = gql`\r\n  mutation addShowcase($file: Upload) {\r\n    addShowcase(file: $file)\r\n  }\r\n`;\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/Showcase\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Showcase />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/signin\" exact />\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/paccount\"\r\n          component={PersonalAccount}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/userInfo/:_id\"\r\n          component={UserInfo}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n        <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Admin from \"./pages/Admin\";\nimport Page404 from \"./pages/Page404\";\nimport { AuthProvider } from \"./context/auth\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./components/theme\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Redirect from=\"/\" to=\"/zessence\" exact />\n            <Route path=\"/zessence\" component={Main} />\n            <Route path=\"/zeadmin\" component={Admin} />\n            <Route component={Page404} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"toasted-notes/src/styles.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"swiper/css/swiper.css\";\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}