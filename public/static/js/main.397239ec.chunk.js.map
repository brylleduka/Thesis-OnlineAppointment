{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","util/hooks/useScroll.js","components/main/navigation/Navigation.js","util/graphql/cms.js","components/styled/containers.js","components/styled/button.js","components/styled/scroll.styled.js","components/MouseScroll.js","components/main/home/Showcase.js","util/graphql/service.js","components/styled/text.js","components/FancyText.js","components/styled/utils.js","components/main/utils/ReadMore.js","util/hooks/useWindowSize.js","components/main/home/CategorySection.js","util/graphql/employee.js","components/styled/card.js","components/main/home/TeamSection.js","components/styled/loader.js","components/Spinner.js","components/main/home/AboutSection.js","components/main/home/PromoSection1.js","util/graphql/testimonial.js","components/main/home/TestimonialSection.js","components/main/utils/ScrollButton.js","pages/main/Home.js","components/main/about/Story.js","components/main/about/TeamDetails.js","components/main/about/Team.js","util/useScrollDown.js","pages/main/About.js","util/hooks/useForm.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Gallery.js","pages/main/Contact.js","components/main/testimonial/ModalReview.js","components/main/testimonial/Review.js","components/main/testimonial/TestimonialCard.js","pages/main/Testimonials.js","pages/main/Services.js","pages/main/Service.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/Toasted.js","components/admin/employees/PhotoBooth.js","components/admin/employees/DetailsEmployee.js","components/admin/employees/ScheduleEmployee.js","components/admin/employees/Info.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/MenuDots.js","components/DTextArea.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","components/admin/appointment/HistoryAppointments.js","pages/admin/FileReport.js","util/hooks/useUploadFile.js","components/admin/cms/home/showcase/ImageSection.js","components/admin/cms/home/showcase/ModalSlide.js","components/admin/cms/home/showcase/NewSlide.js","components/admin/cms/home/showcase/EditSlide.js","components/admin/cms/home/showcase/RemoveSlide.js","components/admin/cms/home/showcase/Showcase.js","components/admin/cms/home/sectionabout/EditModal.js","components/admin/cms/home/sectionabout/SectionAbout.js","components/ReadMore.js","components/admin/cms/home/sectioncategory/CategoryCards.js","components/admin/cms/home/sectioncategory/UpdateSectCategory.js","components/admin/cms/home/sectioncategory/SectionCategory.js","pages/admin/cms/Home.js","components/admin/cms/about/ModalHeading.js","components/admin/cms/about/Heading.js","components/admin/cms/about/ModalStory.js","components/admin/cms/about/Story.js","components/admin/cms/about/ModalMissionVision.js","components/admin/cms/about/Mission.js","pages/admin/cms/About.js","components/admin/testimonial/ToggleView.js","components/admin/testimonial/ModalView.js","components/admin/testimonial/DeleteView.js","components/admin/testimonial/MenuView.js","pages/admin/cms/Testimonial.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","DropdownCustomNav","Dropdown","Burger","setOpen","onClick","useScroll","scrollVal","useState","scrolling","setScrolling","scrollTop","setScrollTop","scrollH","undefined","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Navigation","ref","handler","node","useRef","listener","event","current","contains","document","useContext","handleLogout","trigger","style","fontSize","Icon","name","firstName","scrollBehavior","el","scrollIntoView","behavior","block","className","src","alt","to","userId","_id","scroll","simple","Menu","Item","as","Link","disabled","FETCH_THE_SHOWCASE","gql","FETCH_HOME_SECTION","FETCH_ABOUT_CMS","columns","rows","DContainer","div","DShowCase","height","bgcolor","background","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","med10","med7","med5","DSection","width","mcenter","pad","flex","justify","align","flow","direct","Content","fluid","fixed","bordered","bordbtm","rounded","br1","bs","weight","color","size","bluer","imgHeight","imgWidth","Overlay","bgr","bgl","bgc","pointer","opac","hovOpac","initbox","cwidth","talign","cmarg","fs","DImage","dashed","m","grayscaling","css","DCard","p","dh","dw","justifyCenter","justifyAround","justifyBetween","jusitfyFend","alignCenter","alignAround","alignBetween","alignFend","fcol","grayzoom","overlaying","DFooterLinks","DFooter","footer","Section2Styled","visible","JButton","button","keyframes","DMouseScroll","inverted","basic","MouseScroll","Showcase","nextSection","showcase","setShowcase","scrollDown","useQuery","variables","sectionName","showcaseData","data","dataLoading","loading","error","showcaseCMS","content","position","id","dots","infinite","fade","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","map","sc","key","bgColor","bgImg","title","subtitle","paragraph","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","DFancyText","h1","FancyText","children","ripple","DButton","fSize","center","text","radius","alert","red","warning","yellow","confirm","green","default","DButtonFree","top","left","bottom","right","DLabel","label","ls","tt","w","hover","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","success","ReadMore","ScrollUp","IconWrap","StyledIconBase","small","medium","large","menu","bottomcenter","DotsVertical","DotsVerticalRounded","DLink","borderb","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","CategorySection","setRef","wid","useWindowSize","isCategories","setIsCategories","categorySection","setCategorySection","dataCategories","loadingCategories","categories","sectionCategory","homeCMS","grid","category","photo","description","length","parser","substr","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","JCard","figure","titleSize","JCard2","oflow","JCard3","JCard4","DTestimonialCard","styles","dloading","display","justifyContent","alignItems","flexDirection","lineHeight","TeamSection","cards","employeesAR","setEmployeesAR","limit","data_employeesAR","loading_employeesAR","aestheticiansReceps","count","employee","data-emp","lastName","role","bio","keyring","SpinnerRing","row","tiny","Spinner","AboutSection","isAboutSection","setIsAboutSection","about","setAbout","aboutChange","contentName","dataAbout","loadAbout","aboutUsCMS","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","visibility","from","y","ease","Power3","easeOut","scale","animate","story","missionvision","PromoSection1","FETCH_TESTIMONIALS","FETCH_USER_REVIEW","FETCH_VIEWS","settings","TestimonialSection","reviews","setReviews","dataReviews","loadReviews","testimonialsView","rev","Rating","rating","maxRating","icon","message","ScrollButton","intervalId","pageYOffset","clearInterval","this","scrollPx","setInterval","scrollStep","bind","delay","setState","scrollToTop","React","Component","Home","card1","Story","aboutUS","mission","vision","maxHeight","letterSpacing","textAlign","overflowWrap","overflow","padding","TeamDetails","href","Modal","onClose","closeIcon","Team","employees","setEmployees","dataEmployees","loadingEmployees","minHeight","emp","scrollView","About","minWidth","subtitles","overlay","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","push","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","border","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","history","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","console","log","loginUser","userX","general","Signin","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","isEmp","setIsEmp","isServ","setIsServ","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","loading_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","schedule","breakStart","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","Page404","s","AppointmentInputs","setServiceValue","setEmployeeVal","c","setCategories","services","setServices","loading_categories","data_categories","useLazyQuery","categoryId","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","cursor","outline","servEmp","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","useHistory","addInfo","setAddInfo","setService","cache","result","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","toaster","notify","status","expiredLog","check","start","Header","readOnly","toDateString","Actions","Appointment","matchMedia","photos","Gallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","index","currentIndex","views","x","srcset","srcSet","caption","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","ADD_REVIEW","UPDATE_REVIEW","ModalReview","openReview","setOpenReview","userReview","rate","setRate","setMessage","edit","setEdit","mutation","addOrUpdate","onRate","TextArea","Review","setUserReview","dataUserReview","loadUserReview","userTestimonial","slidesPerRow","responsive","breakpoint","TestimonialCard","isTestimonials","setIsTestimonials","dataTestimonials","loadTestimonials","testimonials","testimonial","parseInt","updatedAt","Testimonials","Services","sectionDown","Service","params","isReadMore","setIsReadMore","isServices","setIsServices","goBack","onPointerLeave","price","VERRIFIED_APPOINTMENT","ThankYou","emailToken","go","appointmentId","verifiedAppointment","onload","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","dateOfBirth","contact","updateUser","showYearDropdown","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","Accordion","setActive","contentRef","scrollHeight","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","CANCEL_APPOINTMENT_MUTATION","absoluteCenter","transform","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","setServiceEmp","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","new","Popup","circular","mouseEnterDelay","mouseLeaveDelay","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","cell","fitted","wide","Grid","divided","Column","currentAppoint","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","currentTarget","compact","historyAppoint","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","input","AppointmentDetails","schedDate","myAppoint","setMyAppoint","margn","jusitfy","Main","path","exact","UpcommingAppointments","marginBottom","progressPending","progressComponent","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","pointing","SideNav","activeClassName","Layout","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","CurrentAppointments","isCurrentAppoint","setIsCurrentAppoint","currentAppointmentData","currAppoint","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","Divider","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","NewDateTime","NewAppointmentDetails","CREATE_GUEST_APPOINTMENT","myAppointments","createGuestAppointment","NewAppointment","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","workLength","breakLength","newEmployee","Checkbox","class","Employees","grow","empId","level","aesrep","UPLOAD_EMPLOYEE_PHOTO","PhotoBooth","handleSchedule","addEmployeePhoto","DetailsEmployee","lastsName","ScheduleEmployee","Info","isEmpInfo","Employee","setEmployee","setIsEmpInfo","employeeLoading","CREATE_NEW_CATEGORY_MUTATION","NewCategory","editor","setContent","createCategory","newCategory","config","readonly","tabIndex","onBlur","newContent","Categories","MenuStyledDots","middle","topright","topleft","bottomright","middleright","bottomleft","middleleft","MenuDots","on","DTextAreaStyled","par","DTextArea","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","isEdit","setIsEdit","updateCategory","onInit","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","getData","DecoupledEditor","CREATE_NEW_SERVICE","NewService","createService","newService","serviceExist","parseFloat","ServiceList","descript","trimString","substring","parse","UPLOAD_CATEGORY_PHOTO","Category","setCategory","addCategoryPhoto","link","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","serviceData","serviceLoading","addServicePhoto","replace","REPLY_MESSAGE","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","loadingInq","inquiry","replyInquiry","column","Inquiry","setInquiries","data_inquiries","loading_inquiries","msg","fetchEmployee","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","updateEmployee","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","empData","empLoading","User","setUsers","data_users","loading_users","allowOverflow","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","HistoryAppointments","historyAppointments","setHistoryAppointments","historyAppointmentData","appointmentHistory","FileReport","useUploadFile","selectedFile","setSelectedFile","preview","setPreview","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectedFile","files","ImageSection","isDark","isPosition","isColor","fileInput","click","opacity","colors","ADD_NEW_SLIDE","UPDATE_SLIDE","ModalSlide","setIsDark","setIsPosition","setIsColor","showcaseId","addOrUpdateSlide","handlePosition","maxLength","checked","triangle","hex","NewSlide","EditSlide","REMOVE_SLIDE","RemoveSlide","isOpenRemove","setIsOpenRemove","removeSlide","UPDATE_ABOUT_SECTION","EditModal","aboutBool","updateAboutSection","SectionAbout","isAbout","setIsAbout","dataAboutSection","loadingAboutSection","loadingAbout","CategoryCards","gridCount","UPDATE_CATEGORY_SECTION","UpdateSectCategory","setOpenCatSec","openCatSec","categorySectionInfo","setGridCount","updateSectionCategory","handleGrid","SectionCategory","sectCategory","setSectCategory","loadSectionCategory","UPDATE_ABOUT_HEADER","ModalHeading","openHead","setOpenHead","isOverlay","setIsOverlay","headers","setHeaders","updateAboutUs","handleChangeHeaders","Heading","dataAboutContent","loadAboutContent","bgColors","UPDATE_ABOUT_STORY","ModalStory","isStory","openStory","setOpenStory","reverse","setReverse","stories","setStories","updateStory","handleChangeStory","setIsStory","dataStoryContent","loadStoryContent","UPDATE_ABOUT_MISSIONVISION","ModalMissionVision","isMissionVision","fileInputMV","openMission","setOpenMission","reverseMV","setReverseMV","mtitle","msubtitle","mparagraph","vtitle","vsubtitle","vparagraph","valuesMV","setValuesMV","previewMV","selectedFileMV","onSelectedFileMV","updateMission","handleChangeValues","horizontal","isMission","setIsMission","dataMissionVision","loadMissionVision","paddingBottom","Mission","TOGGLE_REVIEW","popContent","ToggleView","swid","tggl","toggleValue","setToggleValue","toggleTestimonial","loadToggle","data-sid","onMouseOver","dataset","sid","ModalView","ridd","ARCHIVED_REVIEW","DeleteView","rvw","isDltModal","setIsDltModal","wdth","unauth","archiveTestimonial","loadArchive","textIndent","MenuView","menuId","review","menuValue","setMenuValue","data-rid","rid","flowing","centered","Testimonial","Admin","App","uploadLink","createUploadLink","uri","authLink","setContext","Authorization","client","ApolloClient","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.397239ec.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${(props) => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 12vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"li a {color: #fff}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n      &:nth-child(7) {\r\n        transition-delay: 0s, 400ms;\r\n      }\r\n      &:nth-child(8) {\r\n        transition-delay: 0s, 450ms;\r\n      }\r\n      &:nth-child(9) {\r\n        transition-delay: 0s, 500ms;\r\n      }\r\n      &:nth-child(10) {\r\n        transition-delay: 0s, 550ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \".avatarLog {color: #fff}\"};\r\n\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const DropdownCustomNav = styled(Dropdown)`\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & a {\r\n    color: #232323;\r\n    font-weight: 700;\r\n  }\r\n  & a:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & .customDropMenu a {\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.primary} !important;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"color: #fff; a {color: #fff}\"};\r\n\r\n  @media (max-width: 1024px) {\r\n    a {\r\n      color: #ffff;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n    a:hover {\r\n      color: ${({ theme }) => theme.secondary};\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n  }\r\n\r\n  .customDropMenu .customDropMenuItem {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #232323 !important;\r\n    font-size: 14px !important;\r\n  }\r\n  .customDropMenu .customDropMenuItem:hover {\r\n    color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll(scrollVal) {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const scrollH = scrollVal !== undefined ? scrollVal : 100;\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > scrollH);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport {\r\n  DNavigation,\r\n  DMainMenu,\r\n  DRightMenu,\r\n  DropdownCustomNav,\r\n} from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  // let history = useHistory();\r\n\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    // history.push(\"\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const scrollBehavior = (el) =>\r\n    el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to={`/#home`} scroll={scrollBehavior}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/services&rates/#services\" scroll={scrollBehavior}>\r\n              Services\r\n            </Link>\r\n          </li>\r\n\r\n          {/* <Link to=\"/about\">About&nbsp;Us</Link> */}\r\n          <DropdownCustomNav\r\n            trigger={\r\n              <Link to=\"/about/#about\" scroll={scrollBehavior}>\r\n                About&nbsp;Us\r\n              </Link>\r\n            }\r\n            simple\r\n            scrolled={scrolling ? true : undefined}\r\n          >\r\n            <Dropdown.Menu className=\"customDropMenu\">\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#story\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Story\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#team\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Team\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </DropdownCustomNav>\r\n\r\n          <li>\r\n            <Link to=\"/gallery/#gallery\" scroll={scrollBehavior}>\r\n              Gallery\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/testimonials/#tstmnl\" scroll={scrollBehavior}>\r\n              Testimonials\r\n            </Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger} className=\"avatarLog\">\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_THE_SHOWCASE = gql`\r\n  query showcaseCMS($sectionName: String) {\r\n    showcaseCMS(sectionName: $sectionName) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HOME_SECTION = gql`\r\n  query homeCMS($sectionName: String) {\r\n    homeCMS(sectionName: $sectionName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      grid\r\n      dark\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_ABOUT_CMS = gql`\r\n  query aboutUsCMS($contentName: String) {\r\n    aboutUsCMS(contentName: $contentName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_THE_SHOWCASE, FETCH_HOME_SECTION, FETCH_ABOUT_CMS };\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n  margin-top: 12vh;\r\n`;\r\n\r\nexport const DShowCase = styled.div`\r\n  width: 100%;\r\n  height: ${(props) => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n  h1,\r\n  h2,\r\n  p {\r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: ${(props) =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${(props) => props.gap && props.gap};\r\n  grid-template-rows: ${(props) =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${(props) => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${(props) => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med10 ? props.med10 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med7 ? props.med7 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: ${(props) => (props.med5 ? props.med5 : \"1fr\")};\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${(props) => (props.height ? props.height : \"400px\")};\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  margin: ${(props) =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  position: relative;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${(props) => props.height && props.height};\r\n  width: ${(props) =>\r\n    props.width ? props.width : props.fluid ? \"100%\" : \"50%\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${(props) => props.margin && props.margin};\r\n  background: url('${(props) =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${(props) => props.fixed && \"fixed\"};\r\n  background-color: ${(props) => props.bgcolor && props.bgcolor};\r\n  border-width: ${(props) => props.bordered && \"1px\"};\r\n  border-style: ${(props) => props.bordered && \"solid\"};\r\n  border-color: ${(props) =>\r\n    props.bordbtm && \"transparent transparent #ccc transparent\"};\r\n  border-radius: ${(props) =>\r\n    props.rounded\r\n      ? \"10px\"\r\n      : props.br1\r\n      ? \"0% 24% 26% 39% / 20% 0% 100% 0% \"\r\n      : \"0\"};\r\n  box-shadow: ${(props) =>\r\n    props.bs &&\r\n    (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n    \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n    \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n    \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n    \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n  z-index: 2;\r\n  font-weight: ${(props) => props.weight && props.weight};\r\n  overflow: visible;\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  span {\r\n    color: ${(props) => props.color && props.color};\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${(props) => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${(props) => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${(props) => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${(props) => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${(props) =>\r\n    props.bg\r\n      ? props.bg\r\n      : props.bgr\r\n      ? \"linear-gradient(270deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgl\r\n      ? \"linear-gradient(90deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgc\r\n      ? \"rgba(0,0,0,0.4)\"\r\n      : \"rgba(0, 0, 0, 0)\"};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  opacity: ${(props) => props.opac && props.opac};\r\n  transition: opacity 0.6s ease;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${(props) => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: ${(props) => (props.initbox ? \"110%\" : \"0\")};\r\n    height: 110%;\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transform-origin: center;\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      height: 100%;\r\n      width: 85%;\r\n      text-align: center;\r\n      margin: auto;\r\n      transform: rotate(-45deg);\r\n\r\n      .title {\r\n        text-transform: uppercase;\r\n        margin: 1px auto;\r\n      }\r\n      p {\r\n        height: auto;\r\n        font-size: 11px;\r\n      }\r\n\r\n      .title,\r\n      p {\r\n        letter-spacing: 2px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${(props) => (props.cwidth ? props.cwidth : \"80%\")};\r\n    text-align: ${(props) => (props.talign ? props.talign : \"left\")};\r\n    height: auto;\r\n    margin: ${(props) => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    padding: 10px 40px;\r\n\r\n    h1,\r\n    h2,\r\n    p {\r\n      letter-spacing: 5px;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    h3,\r\n    h4,\r\n    .ps {\r\n      letter-spacing: 1px;\r\n      line-height: 1.4;\r\n    }\r\n    .ps {\r\n      font-size: 10px;\r\n    }\r\n\r\n    h1 {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"60px\")};\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${(props) => (props.height ? props.height : \"300px\")};\r\n  width: ${(props) => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${(props) =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  border: ${(props) =>\r\n    props.bordered\r\n      ? \"1px solid #000\"\r\n      : props.dashed\r\n      ? \"1px dashed #ccc\"\r\n      : \"none\"};\r\n  margin: ${(props) => (props.m ? props.m : \"0 auto\")};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: pointer;\r\n\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    transition: all 0.6s ease-in-out;\r\n    ${(props) =>\r\n      props.grayscaling &&\r\n      css`\r\n        filter: grayscale(100%);\r\n      `}\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: ${(props) => (props.p ? props.p : \"10px\")};\r\n  height: ${(props) => (props.dh ? props.dh : \"300px\")};\r\n  width: ${(props) => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  margin: ${(props) => (props.mcenter ? \"0 auto\" : props.margin)};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => props.fcol && \"column\"};\r\n\r\n  overflow: hidden;\r\n  background: ${(props) => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${(props) =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n        \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n        \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 3;\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n  ${(props) =>\r\n    props.grayzoom &&\r\n    css`\r\n      &:hover {\r\n        ${DImage} {\r\n          img {\r\n            filter: grayscale(0);\r\n            transform: scale(1.2);\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.overlaying &&\r\n    css`\r\n      &:hover {\r\n        ${Overlay} {\r\n          opacity: 0;\r\n          pointer-events: none;\r\n        }\r\n      }\r\n    `}\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  position: relative;\r\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\r\n  max-height: 100vh;\r\n  min-height: 30vh;\r\n  height: 100%;\r\n  width: ${(props) => (props.width ? props.width : \"90%\")};\r\n  margin: 24px auto;\r\n  text-align: center;\r\n\r\n  .switch {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: auto;\r\n    margin-bottom: 24px;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 24px;\r\n  }\r\n\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n    padding-top: 48px;\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: space-between;\r\n      ${(props) => props.alt && \"flex-direction: row-reverse\"};\r\n      margin: 0 auto;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 90%;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            text-align: left;\r\n            margin-bottom: 24px;\r\n            .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding: 12px;\r\n            margin-bottom: 56px;\r\n            text-align: justify;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 55%;\r\n        height: 100%;\r\n        position: relative;\r\n\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n              object-fit: cover;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    .sec2-container {\r\n      width: 100%;\r\n      .sec2-inner {\r\n        width: 100%;\r\n        justify-content: center;\r\n        margin: 0 auto;\r\n        .sec2-content {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .sec2-images {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 18px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const JButton = styled.button`\r\n  position: relative;\r\n  padding: 1em 1.5em;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 18px;\r\n  margin: 1em 0.8em;\r\n  color: ${({ theme }) => theme.secondary};\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n\r\n  &::after,\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 20%;\r\n    height: 20%;\r\n    border: 2px solid;\r\n    transition: all 0.6s ease;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  &::after {\r\n    bottom: -2px;\r\n    right: -2px;\r\n    border-top-color: transparent;\r\n    border-left-color: transparent;\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &::before {\r\n    top: -2px;\r\n    left: -2px;\r\n    border-bottom-color: transparent;\r\n    border-right-color: transparent;\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:hover:after,\r\n  &:hover:before {\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst scroll = keyframes`\r\n\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    10% {\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    }\r\n    100% {\r\n        transform: translateY(5px);\r\n        opacity: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const DMouseScroll = styled.div`\r\n  position: absolute;\r\n  top: 85%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n\r\n  &:hover {\r\n    .mousey {\r\n      opacity: 1;\r\n      left: 50%;\r\n    }\r\n    .scroll-downs {\r\n      &::before,\r\n      &::after {\r\n        top: 50%;\r\n        left: 50%;\r\n        border: 1px solid rgba(0, 0, 0, 0.5);\r\n      }\r\n    }\r\n  }\r\n\r\n  .scroll-downs {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      content: \"\";\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px solid rgba(0, 0, 0, 0.25);\r\n      transform: translate(-50%, -50%);\r\n      border-radius: 100%;\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n    &::before {\r\n      top: 48%;\r\n      left: 60%;\r\n    }\r\n\r\n    &::after {\r\n      top: 52%;\r\n      left: 52%;\r\n    }\r\n  }\r\n\r\n  .mousey {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 2px;\r\n    padding: 3px 5px;\r\n    height: 15px;\r\n    border: 2px solid #232323;\r\n    border-radius: 25px;\r\n    opacity: 0.75;\r\n    box-sizing: content-box;\r\n    background: #232323;\r\n  }\r\n\r\n  .scroller {\r\n    width: 2px;\r\n    height: 5px;\r\n    border-radius: 25%;\r\n    background-color: #fff;\r\n    animation-name: ${scroll};\r\n    animation-duration: 2.2s;\r\n    animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.inverted &&\r\n    \".mousey{background: #ffffff; border-color: #ffffff;} .scroller{background-color: #232323;} .scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.25)}} &:hover{.scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.5)}}}\"}\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \".mousey{background: transparent; border-width: 1px;} .scroller{background-color: #fff;} \"}\r\n`;\r\n","import React from \"react\";\r\nimport { DMouseScroll } from \"./styled/scroll.styled\";\r\n\r\nconst MouseScroll = props => {\r\n  return (\r\n    <DMouseScroll {...props}>\r\n      <div className=\"scroll-downs\">\r\n        <div className=\"mousey\">\r\n          <div className=\"scroller\"></div>\r\n        </div>\r\n      </div>\r\n    </DMouseScroll>\r\n  );\r\n};\r\n\r\nexport default MouseScroll;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { JButton } from \"../../styled/button\";\r\nimport Slider from \"react-slick\";\r\nimport MouseScroll from \"../../MouseScroll\";\r\n\r\nconst Showcase = ({ nextSection }) => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(nextSection);\r\n  };\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }} id=\"home\">\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"90vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcase.map((sc) => (\r\n            <DShowCase\r\n              height=\"90vh\"\r\n              key={sc._id}\r\n              bgcolor={sc.bgColor}\r\n              background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n            >\r\n              {/* {sc.bgImg && (\r\n                <DImage height=\"100%\">\r\n                  <img\r\n                    src={\r\n                      sc.bgImg !== null || sc.bgImg !== undefined\r\n                        ? `/images/cms/home/${sc.bgImg}`\r\n                        : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"showcase\"\r\n                  />\r\n                </DImage>\r\n              )} */}\r\n\r\n              <Overlay\r\n                flex\r\n                bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                justify={\r\n                  sc.position === \"left\"\r\n                    ? \"flex-start\"\r\n                    : sc.position === \"right\"\r\n                    ? \"flex-end\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                talign={\r\n                  sc.position === \"left\"\r\n                    ? \"left\"\r\n                    : sc.position === \"right\"\r\n                    ? \"right\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                align=\"center\"\r\n                className={sc.dark ? \"dark\" : \"\"}\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h1>{sc.title}</h1>\r\n                  <h2>{sc.subtitle}</h2>\r\n                  <p>{sc.paragraph}</p>\r\n                  <JButton\r\n                    className={sc.dark ? \"dark\" : \"\"}\r\n                    dark={sc.dark ? true : false}\r\n                  >\r\n                    Book Appointment\r\n                    <Link to=\"/appointment\" />\r\n                  </JButton>\r\n                </div>\r\n              </Overlay>\r\n              <MouseScroll\r\n                onClick={scrollDown}\r\n                inverted={sc.dark ? true : false}\r\n              />\r\n            </DShowCase>\r\n          ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  height: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  display: \"block\",\r\n};\r\n\r\nexport default Showcase;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DFancyText = styled.h1`\r\n  font-size: ${(props) => (props.size ? props.size : \"22px\")};\r\n  letter-spacing: 2px;\r\n  margin: 24px auto;\r\n  text-align: center;\r\n  font-family: \"Playfair Display\";\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  display: table;\r\n  white-space: nowrap;\r\n\r\n  &:before,\r\n  &:after {\r\n    border-top-width: 2px;\r\n    border-top-style: solid;\r\n    border-top-color: ${(props) =>\r\n      props.color\r\n        ? props.color\r\n        : props.alt\r\n        ? ({ theme }) => theme.light\r\n        : ({ theme }) => theme.dark};\r\n    content: \"\";\r\n    display: table-cell;\r\n    position: relative;\r\n    top: 0.5em;\r\n    width: 100px;\r\n    min-width: 50px;\r\n  }\r\n  &:before {\r\n    right: 3%;\r\n  }\r\n  &:after {\r\n    left: 3%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DFancyText } from \"./styled/text\";\r\n\r\nconst FancyText = props => {\r\n  return <DFancyText {...props}>{props.children}</DFancyText>;\r\n};\r\n\r\nexport default FancyText;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\nimport { StyledIconBase } from \"@styled-icons/styled-icon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${(props) => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${(props) => (props.size ? props.size : \"36px\")};\r\n  width: ${(props) =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${(props) => (props.pad ? props.pad : \"4px 10px\")};\r\n  line-height: 1.42857143;\r\n  margin: ${(props) => (props.center ? \"1.5% auto\" : \"1.5%\")};\r\n  text-align: center;\r\n  text-transform: ${(props) => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border-radius: ${(props) =>\r\n    props.radius ? props.radius : props.circle ? \"50%\" : \"5px\"};\r\n  border-width: ${(props) => (props.basic ? \"1px\" : \"0\")};\r\n  border-style: ${(props) => props.basic && \"solid\"};\r\n  border-color: ${(props) =>\r\n    props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.default\r\n      ? ({ theme }) => theme.bluer\r\n      : ({ theme }) => theme.blue};\r\n      \r\n  color: ${(props) =>\r\n    props.red\r\n      ? ({ theme }) => theme.red\r\n      : props.yellow\r\n      ? ({ theme }) => theme.yellow\r\n      : props.green\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.bluer\r\n      ? ({ theme }) => theme.bluer\r\n      : ({ theme }) => theme.light};\r\n\r\n  background: ${(props) =>\r\n    props.basic\r\n      ? \"transparent\"\r\n      : props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.default\r\n      ? ({ theme }) => theme.bluer\r\n      : ({ theme }) => theme.blue};\r\n\r\n  ${(props) =>\r\n    props.disabled &&\r\n    \"background: #E9E4F0; color: #D3CCE3; &:hover:{opacity: 1}\"}\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n   opacity: 0.8;\r\n   color: #fff;\r\n   background: ${(props) =>\r\n     props.alert\r\n       ? ({ theme }) => theme.red\r\n       : props.warning\r\n       ? ({ theme }) => theme.yellow\r\n       : props.confirm\r\n       ? ({ theme }) => theme.green\r\n       : props.primary\r\n       ? ({ theme }) => theme.primary\r\n       : props.default\r\n       ? ({ theme }) => theme.bluer\r\n       : ({ theme }) => theme.blue};\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n\r\n  ${(props) =>\r\n    props.flex &&\r\n    css`\r\n      display: flex;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n    `};\r\n`;\r\n\r\nexport const DButtonFree = styled(DButton)`\r\n  position: absolute;\r\n  top: ${(props) => props.top && props.top};\r\n  left: ${(props) => props.left && props.left};\r\n  bottom: ${(props) => props.bottom && props.bottom};\r\n  right: ${(props) => props.right && props.right};\r\n`;\r\n\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  color: ${(props) => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${(props) => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${(props) => props.weight && props.weight};\r\n  padding: ${(props) => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${(props) => (props.m ? props.m : \"1%\")};\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  border-radius: ${(props) => props.rounded && \"10px\"};\r\n  text-transform: ${(props) => props.tt && props.tt};\r\n  width: ${(props) => (props.w ? props.w : \"auto\")};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n    opacity: ${(props) => props.hover && \"0.8\"};\r\n    cursor: ${(props) => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${(props) => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${(props) => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${(props) =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${(props) =>\r\n        props.activeBg ? props.activeBg : ({ theme }) => theme.blue};\r\n      color: ${(props) =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${(props) => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${(props) =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${(props) =>\r\n    props.alert\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.success\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.warning\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(255, 255, 255,1.0)\"};\r\n  height: auto;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n  z-index: 5;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .close {\r\n    height: 90%;\r\n    margin: 1% auto;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    fontweight: bold;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.p`\r\n  text-align: ${(props) =>\r\n    props.center ? \"center\" : props.left ? \"left\" : \"right\"};\r\n  cursor: pointer !important;\r\n\r\n  span {\r\n    color: ${(props) =>\r\n      props.color ? props.color : ({ theme }) => theme.secondary};\r\n    display: inline-block;\r\n    position: relative;\r\n    font-weight: 700;\r\n    font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n    &:after {\r\n      content: \"\\f061\";\r\n      font-family: FontAwesome;\r\n      ${(props) =>\r\n        props.hover\r\n          ? css`\r\n              margin-left: -10px;\r\n              opacity: 0;\r\n            `\r\n          : css`\r\n              margin-left: 5px;\r\n              opacity: 1;\r\n            `};\r\n      vertical-align: middle;\r\n      transition: margin 0.3s, opacity 0.3s;\r\n    }\r\n    a {\r\n      color: ${({ theme }) => theme.secondary};\r\n    }\r\n    &:hover {\r\n      &:after {\r\n        margin-left: 5px;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollUp = styled(Icon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: block;\r\n`;\r\n\r\nexport const IconCustom = styled(Icon)`\r\n  cursor: pointer;\r\n  opacity: 0.8;\r\n  transition: all 0.5s ease;\r\n  margin: 2%;\r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const IconWrap = styled.div`\r\n  ${StyledIconBase} {\r\n    color: ${(props) => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n    transition: all 0.5s ease;\r\n    margin: ${(props) =>\r\n      props.mcenter ? \"0 auto\" : props.margin ? props.margin : \"5px\"};\r\n    outline: none;\r\n    padding: 3px;\r\n\r\n    ${(props) =>\r\n      props.small\r\n        ? css`\r\n            width: 25px;\r\n            height: 25px;\r\n          `\r\n        : props.medium\r\n        ? css`\r\n            width: 30px;\r\n            height: 30px;\r\n          `\r\n        : props.large\r\n        ? css`\r\n            width: 36px;\r\n            height: 36px;\r\n          `\r\n        : css`\r\n            width: 25px;\r\n            height: 25px;\r\n          `};\r\n\r\n    background: ${(props) => props.bg && props.bg};\r\n    ${(props) =>\r\n      props.circle &&\r\n      css`\r\n        border-radius: 100%;\r\n      `};\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      transform: scale(1.1);\r\n\r\n      ${(props) =>\r\n        props.menu &&\r\n        css`\r\n          border-radius: 100%;\r\n          background: #ccc;\r\n        `}\r\n    }\r\n\r\n    ${(props) =>\r\n      props.bottomcenter &&\r\n      css`\r\n        z-index: 20;\r\n        position: absolute;\r\n        bottom: 2%;\r\n        left: 0;\r\n        right: 0;\r\n        margin: 0 auto;\r\n        box-shadow: 2px 4px 4px rgba(0, 0, 0, 0.6);\r\n      `};\r\n  }\r\n`;\r\n\r\nexport const DotsVertical = styled(DotsVerticalRounded)`\r\n  color: #232323;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    border-radius: 100%;\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nexport const DLink = styled(Link)`\r\n  color: ${(props) => (props.color ? props.color : \"#232323\")} !important;\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  padding-bottom: 5px;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.secondary} !important;\r\n    border-bottom: ${(props) => props.borderb && \"1px solid #232323\"};\r\n    border-bottom-color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"../../styled/utils\";\r\n\r\nconst ReadMore = (props) => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_HOME_SECTION } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DCard,\r\n  DImage,\r\n} from \"../../styled/containers\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst CategorySection = ({ setRef }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const [categorySection, setCategorySection] = useState({});\r\n\r\n  const { data: dataCategories, loading: loadingCategories } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategories) {\r\n      setIsCategories(dataCategories.categories);\r\n    }\r\n  }, [dataCategories]);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setCategorySection(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <DSection\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      pad=\"20px 0\"\r\n      bgcolor={categorySection.bgColor}\r\n      ref={setRef}\r\n    >\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n        className={categorySection.dark ? \"dark\" : \"\"}\r\n      >\r\n        {categorySection && (\r\n          <>\r\n            {categorySection.title !== \"\" && (\r\n              <FancyText size=\"28px\" alt={categorySection.dark ? true : false}>\r\n                {categorySection.title}\r\n              </FancyText>\r\n            )}\r\n            {categorySection.subtitle !== \"\" && (\r\n              <h3>{categorySection.subtitle}</h3>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <Content height=\"100%\" width=\"100%\">\r\n          {loadingCategories ? (\r\n            <DGrid four gap=\"20px\">\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n            </DGrid>\r\n          ) : (\r\n            <DGrid\r\n              two={categorySection.grid === 2 ? true : false}\r\n              three={categorySection.grid === 3 ? true : false}\r\n              four={categorySection.grid === 4 ? true : false}\r\n              gap=\"20px\"\r\n            >\r\n              {isCategories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/zeadmin/category/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategorySection;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int) {\r\n    aestheticiansReceps(limit: $limit) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      dateOfBirth\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const JCard = styled.figure`\r\n  background-color: #fff;\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  height: ${(props) => (props.height ? props.height : \"auto\")};\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  -webkit-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n  font-size: 12px;\r\n  margin: 24px auto;\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  img {\r\n    backface-visibility: hidden;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    background-color: #fe8c00;\r\n    opacity: 0.5;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  &:before {\r\n    -webkit-transform: skew(30deg) translateX(-80%);\r\n    transform: skew(30deg) translateX(-80%);\r\n  }\r\n\r\n  &:after {\r\n    -webkit-transform: skew(-30deg) translateX(-70%);\r\n    transform: skew(-30deg) translateX(-70%);\r\n  }\r\n\r\n  figcaption {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    padding: 25px 40% 25px 20px;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      background-color: #2193b0;\r\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\r\n      content: \"\";\r\n      opacity: 0.5;\r\n      z-index: -1;\r\n    }\r\n\r\n    &::before {\r\n      -webkit-transform: skew(30deg) translateX(-100%);\r\n      transform: skew(30deg) translateX(-100%);\r\n    }\r\n\r\n    &::after {\r\n      -webkit-transform: skew(-30deg) translateX(-90%);\r\n      transform: skew(-30deg) translateX(-90%);\r\n    }\r\n\r\n    h3,\r\n    p {\r\n      margin: 0;\r\n      opacity: 0;\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: ${(props) => (props.titleSize ? props.titleSize : \"36px\")};\r\n      font-weight: 700;\r\n      line-height: 1em;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n      font-size: 1em;\r\n    }\r\n  }\r\n\r\n  &:hover h3,\r\n  &.hover h3,\r\n  &:hover p,\r\n  &.hover p {\r\n    -webkit-transform: translateY(0);\r\n    transform: translateY(0);\r\n    opacity: 0.9;\r\n    -webkit-transition-delay: 0.2s;\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover:before,\r\n  &.hover:before {\r\n    -webkit-transform: skew(30deg) translateX(-20%);\r\n    transform: skew(30deg) translateX(-20%);\r\n    -webkit-transition-delay: 0.05s;\r\n    transition-delay: 0.05s;\r\n  }\r\n\r\n  &:hover:after,\r\n  &.hover:after {\r\n    -webkit-transform: skew(-30deg) translateX(-10%);\r\n    transform: skew(-30deg) translateX(-10%);\r\n  }\r\n\r\n  &:hover figcaption:before,\r\n  &.hover figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-40%);\r\n    transform: skew(30deg) translateX(-40%);\r\n    -webkit-transition-delay: 0.15s;\r\n    transition-delay: 0.15s;\r\n  }\r\n\r\n  &:hover figcaption:after,\r\n  &.hover figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-30%);\r\n    transform: skew(-30deg) translateX(-30%);\r\n    -webkit-transition-delay: 0.1s;\r\n    transition-delay: 0.1s;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nexport const JCard2 = styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    background: #fff;\r\n    max-width: 100%;\r\n    min-width: 240px;\r\n    height: 400px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n\r\n    .thumbnail {\r\n      width: 100%;\r\n      height:100%;\r\n      overflow: hidden;\r\n      border-radius: 10px 10px 0 0;\r\n      background: #eee;\r\n      img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n       object-fit: cover;\r\n      }\r\n    }\r\n\r\n \r\n    .post-content {\r\n      position: absolute;\r\n      bottom: 0;\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border-radius: 0 0 10px 10px;\r\n      .category {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 0;\r\n        background: ${({ theme }) => theme.secondary};\r\n        padding: 10px 15px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n      }\r\n      .title {\r\n        color: #ccc;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n      }\r\n      .sub_title {\r\n        margin: 0;\r\n        padding: 0 0 20px;\r\n        color: ${({ theme }) => theme.secondary};\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n      }\r\n\r\n      .description {\r\n          height: 10px;\r\n          margin-top: 12px;\r\n         \r\n          &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            background-color: #f5f5f5;\r\n          }\r\n\r\n          &::-webkit-scrollbar {\r\n            width: 10px;\r\n            background-color: #f5f5f5;\r\n          }\r\n          &::-webkit-scrollbar-thumb {\r\n            background-image: -webkit-gradient(\r\n              linear,\r\n              left bottom,\r\n              left top,\r\n              color-stop(0.44, rgb(122, 153, 217)),\r\n              color-stop(0.72, rgb(73, 125, 189)),\r\n              color-stop(0.86, rgb(28, 58, 148))\r\n            );\r\n          }\r\n        \r\n          p{\r\n            color: #232323;\r\n            font-size: 14px;\r\n            line-height: 1.8em;\r\n            opacity: 0;\r\n            \r\n            pointer-events: none;\r\n            transition: all 0.45s ease;\r\n            &:first-of-type {\r\n              margin-top: 1.25rem;\r\n              &:before {\r\n                content: \"\";\r\n                position: absolute;\r\n                height: 5px;\r\n                background: ${({ theme }) => theme.blue};\r\n                width: 35px;\r\n                top: -0.75rem;\r\n                border-radius: 3px;\r\n              }\r\n            }\r\n          }\r\n        \r\n        }\r\n     \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .thumbnail {\r\n        background-color: #000;\r\n    \r\n        img {\r\n          -webkit-transform: scale(1.1);\r\n          -moz-transform: scale(1.1);\r\n          transform: scale(1.1);\r\n          opacity: 0.8;\r\n          transition: all 0.8s ease-in;\r\n        }\r\n        transition: all 0.8s ease-in-out;\r\n\r\n      }\r\n      .post-content{\r\n        .description{\r\n          height: 175px;\r\n          transition: height 0.6s ease-in-out;\r\n          overflow: ${(props) => props.oflow && \"auto\"};\r\n          p{\r\n            cursor: default;\r\n            pointer-events: auto;\r\n            -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n            opacity: 0.9;\r\n            -webkit-transition-delay: 0.6s;\r\n            transition-delay: 0.6s;\r\n          }\r\n         \r\n        }\r\n        \r\n      }\r\n     \r\n\r\n    }\r\n  \r\n`;\r\n\r\nexport const JCard3 = styled.div`\r\n  .description {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #fff;\r\n    z-index: 1;\r\n\r\n    h1 {\r\n      line-height: 1;\r\n      margin: 0;\r\n      font-size: 1.7rem;\r\n    }\r\n    h4 {\r\n      font-size: 1rem;\r\n      font-weight: 300;\r\n      text-transform: capitalize;\r\n      color: #a2a2a2;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      margin: 1rem 0 0;\r\n      font-size: 16px;\r\n      &:first-of-type {\r\n        margin-top: 1.25rem;\r\n        &:before {\r\n          content: \"\";\r\n          position: absolute;\r\n          height: 5px;\r\n          background: ${({ theme }) => theme.blue};\r\n          width: 35px;\r\n          top: -0.75rem;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JCard4 = styled.figure`\r\n  position: relative;\r\n  margin: 10px;\r\n  min-width: 230px;\r\n  max-width: 315px;\r\n  width: 100%;\r\n  height: ${(props) => props.height && props.height};\r\n  color: #000000;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n  font-size: 14px;\r\n\r\n  & * {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .profile-image {\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 300px;\r\n    z-index: 1;\r\n    position: relative;\r\n    margin: ${(props) => props.margin && props.margin};\r\n    top: ${(props) => props.top && props.top};\r\n    right: ${(props) => props.right && props.right};\r\n    bottom: ${(props) => props.bottom && props.bottom};\r\n    left: ${(props) => props.left && props.left};\r\n    padding: 10px;\r\n    border: 2px solid #6dd5ed;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      vertical-align: top;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    .profile-image {\r\n      border-color: #2193b0;\r\n    }\r\n    figcaption {\r\n      box-shadow: ${(props) =>\r\n        props.bs\r\n          ? props.bs\r\n          : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n            \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n            \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n            \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n            \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n    }\r\n  }\r\n\r\n  figcaption {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    padding: 125px 25px 25px;\r\n    margin-top: -100px;\r\n    display: inline-block;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.11)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.11)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.11)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.11)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.11)\")};\r\n\r\n    h3,\r\n    h4,\r\n    p {\r\n      margin: 0 0 5px;\r\n    }\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    h4 {\r\n      color: #8c8c8c;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n      letter-spacing: 1px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .icons {\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .linkToPage {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const DTestimonialCard = styled.div`\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  outline: 0;\r\n  border: 0;\r\n  position: relative;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n\r\n  figure {\r\n    position: relative;\r\n    float: left;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    min-width: 90%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    color: #000000;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    background: #2193b0;\r\n    background: -webkit-linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n\r\n    padding: 15px;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n\r\n    & *,\r\n    & *::before,\r\n    & *::after {\r\n      -webkit-box-sizing: border-box;\r\n      box-sizing: border-box;\r\n      -webkit-transition: all 0.35s ease;\r\n      transition: all 0.35s ease;\r\n    }\r\n\r\n    .profile {\r\n      width: 100px;\r\n      height: 100px;\r\n      border-radius: 100%;\r\n      display: inline-block;\r\n      position: relative;\r\n      overflow: hidden;\r\n      -webkit-box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      margin-bottom: 10px;\r\n      border: solid 5px #fe8c00;\r\n      border-color: ${({ theme }) => theme.blue};\r\n\r\n      img {\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    figcaption {\r\n      position: relative;\r\n      width: 100%;\r\n\r\n      h5,\r\n      h4,\r\n      blockquote {\r\n        margin: 0;\r\n      }\r\n\r\n      h5,\r\n      h4 {\r\n        text-transform: uppercase;\r\n        font-weight: 500;\r\n      }\r\n\r\n      h4 {\r\n        color: #274046;\r\n      }\r\n\r\n      h4,\r\n      h5 {\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n      }\r\n\r\n      blockquote {\r\n        font-size: 1em;\r\n        padding: 45px 20px 40px 50px;\r\n        margin-top: 30px;\r\n        background: #ffffff;\r\n        border-radius: 5px;\r\n        -webkit-box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        text-align: left;\r\n        position: relative;\r\n\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n\r\n        &::before,\r\n        &::after {\r\n          font-family: \"FontAwesome\";\r\n          position: absolute;\r\n          font-size: 22px;\r\n          opacity: 0.25;\r\n          color: ${(props) =>\r\n            props.inverted\r\n              ? ({ theme }) => theme.light\r\n              : ({ theme }) => theme.dark};\r\n        }\r\n\r\n        &::before {\r\n          content: \"\\f10d\";\r\n          top: 20px;\r\n          left: 20px;\r\n        }\r\n        &::after {\r\n          content: \"\\f10e\";\r\n          bottom: 10px;\r\n          right: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \"figure{background: transparent; figcaption{blockquote{box-shadow: none; background: transparent}}}\"}\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { DGrid, DSection } from \"../../styled/containers\";\r\nimport { JCard4 } from \"../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport FancyText from \"../../FancyText\";\r\n\r\nconst TeamSection = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <FancyText size=\"28px\">Our Team</FancyText>\r\n      <DGrid four gap=\"25px\">\r\n        {loading_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          employeesAR &&\r\n          employeesAR.map((employee) => (\r\n            <JCard4 data-emp={employee._id} key={employee._id}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n              <figcaption>\r\n                <h3>\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </h3>\r\n                <h4>{employee.role}</h4>\r\n                <p>\r\n                  {employee.bio.length > 50\r\n                    ? parser(employee.bio.substr(0, 50) + \"...\")\r\n                    : parser(employee.bio.substr(0, 50))}\r\n                </p>\r\n                <ReadMore hover={0}>Read More</ReadMore>\r\n              </figcaption>\r\n              <Link to=\"/about\" className=\"linkToPage\" />\r\n            </JCard4>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n      <Link to=\"/about/#team\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"centet\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2,\r\n  },\r\n};\r\n\r\nexport default TeamSection;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: flex;\r\n  justify-column: center;\r\n  align-items: center;\r\n  flex-direction: ${(props) => (props.row ? \"row\" : \"column\")};\r\n\r\n  .ring {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${(props) =>\r\n      props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"60px\"\r\n        : \"100px\"};\r\n    height: ${(props) =>\r\n      props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"60px\"\r\n        : \"100px\"};\r\n\r\n    div {\r\n      box-sizing: border-box;\r\n      display: block;\r\n      position: absolute;\r\n      width: ${(props) =>\r\n        props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"48px\"\r\n          : \"72px\"};\r\n      height: ${(props) =>\r\n        props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"48px\"\r\n          : \"72px\"};\r\n      margin: ${(props) =>\r\n        props.tiny\r\n          ? \"2px\"\r\n          : props.small\r\n          ? \"3px\"\r\n          : props.medium\r\n          ? \"6px\"\r\n          : \"10px\"};\r\n      border: ${(props) =>\r\n        props.tiny\r\n          ? \"1px solid #fff\"\r\n          : props.small\r\n          ? \"2px solid #fff\"\r\n          : props.medium\r\n          ? \"3px solid #fff\"\r\n          : \"5px  solid #fff\"};\r\n\r\n      border-radius: 50%;\r\n      animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n      border-color: ${(props) =>\r\n        props.inverted\r\n          ? \"#fff transparent transparent transparent\"\r\n          : \"#203A43 transparent transparent transparent\"};\r\n    }\r\n\r\n    div:nth-child(1) {\r\n      animation-delay: -0.45s;\r\n    }\r\n    div:nth-child(2) {\r\n      animation-delay: -0.3s;\r\n    }\r\n    div:nth-child(3) {\r\n      animation-delay: -0.15s;\r\n    }\r\n  }\r\n\r\n  .content-text {\r\n    margin: 0 2px;\r\n    letter-spacing: 2px;\r\n    font-weight: 700;\r\n    font-size: ${(props) =>\r\n      props.tiny\r\n        ? \"12px\"\r\n        : props.small\r\n        ? \"13px\"\r\n        : props.medium\r\n        ? \"14px\"\r\n        : \"16px\"};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = (props) => {\r\n  return (\r\n    <SpinnerRing {...props}>\r\n      <div className=\"ring\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"content-text\">{props.content}</div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Spinner;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { FETCH_HOME_SECTION, FETCH_ABOUT_CMS } from \"../../../util/graphql/cms\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Section2Styled, Content } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AboutSection = ({ nextSection }) => {\r\n  const [isAboutSection, setIsAboutSection] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const {\r\n    data: aboutChange,\r\n    loading: loadAboutChange,\r\n  } = useQuery(FETCH_HOME_SECTION, { variables: { sectionName: \"ABOUT\" } });\r\n\r\n  useEffect(() => {\r\n    if (aboutChange) {\r\n      setIsAboutSection(aboutChange.homeCMS);\r\n    }\r\n  }, [aboutChange]);\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled\r\n      ref={(el) => (section2 = el)}\r\n      alt={isAboutSection.alt === true ? true : false}\r\n    >\r\n      <div className=\"sec2-container\" ref={nextSection}>\r\n        <div className=\"sec2-inner\">\r\n          {loadAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner medium />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n                <ReadMore>\r\n                  <Link to=\"/about/#story\">Learn More</Link>\r\n                </ReadMore>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={(el) => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default AboutSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst PromoSection1 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/appointment\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default PromoSection1;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_TESTIMONIALS = gql`\r\n  query testimonials($active: Boolean) {\r\n    testimonials(active: $active) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USER_REVIEW = gql`\r\n  query userTestimonial($userId: ID) {\r\n    userTestimonial(userId: $userId) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_VIEWS = gql`\r\n  query testimonialsView($limit: Int) {\r\n    testimonialsView(limit: $limit) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_TESTIMONIALS, FETCH_USER_REVIEW, FETCH_VIEWS };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_VIEWS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, Overlay } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst TestimonialSection = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const { data: dataReviews, loading: loadReviews } = useQuery(FETCH_VIEWS, {\r\n    variables: {\r\n      limit: 0,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonialsView);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      width=\"100%\"\r\n      mcenter\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      {loadReviews ? (\r\n        <Spinner inverted medium />\r\n      ) : (\r\n        <Content width=\"80%\" height=\"auto\" margin=\"auto\" pad=\"50px 0\">\r\n          <Slider {...settings}>\r\n            {reviews &&\r\n              reviews.map((rev) => (\r\n                <DTestimonialCard basic inverted>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          rev.user.photo\r\n                            ? `/images/users/${rev.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n\r\n                    <figcaption>\r\n                      <h4>\r\n                        {rev.user.firstName} {rev.user.lastName}{\" \"}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={rev.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>{rev.message}</blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        </Content>\r\n      )}\r\n\r\n      <Overlay\r\n        bg={\"rgba(0,0,0,0.5)\"}\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        pad=\"20px\"\r\n      >\r\n        <FancyText size=\"28px\" alt>\r\n          What Our Client Say\r\n        </FancyText>\r\n      </Overlay>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  fade: true,\r\n  infinite: true,\r\n  autoplay: true,\r\n  speed: 1000,\r\n  autoplaySpeed: 4000,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nexport default TestimonialSection;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { ScrollUp, DButton } from \"../../styled/utils\";\r\nimport \"./scroll.css\";\r\n\r\nclass ScrollButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(\r\n      0,\r\n      window.pageYOffset - (this.props.scrollPx ? this.props.scrollPx : \"100\")\r\n    );\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delay ? this.props.delay : \"16.66\"\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        title=\"Back to top\"\r\n        className=\"scroll\"\r\n        onClick={() => {\r\n          this.scrollToTop();\r\n        }}\r\n      >\r\n        <ScrollUp name=\"chevron up\" size=\"large\" className=\"arrow-up\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ScrollButton;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategorySection from \"../../components/main/home/CategorySection\";\r\nimport TeamSection from \"../../components/main/home/TeamSection\";\r\nimport AboutSection from \"../../components/main/home/AboutSection\";\r\nimport PromoSection1 from \"../../components/main/home/PromoSection1\";\r\nimport TestimonialSection from \"../../components/main/home/TestimonialSection\";\r\nimport { DContainer } from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Home = () => {\r\n  const nextSection = useRef();\r\n  const card1 = \"/images/card1.jpg\";\r\n  const scrolling = useScroll(300);\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton />}\r\n      <Showcase nextSection={nextSection} />\r\n\r\n      <AboutSection nextSection={nextSection} />\r\n\r\n      <CategorySection cards={card1} />\r\n      <PromoSection1 />\r\n      <TeamSection cards={card1} />\r\n      <TestimonialSection />\r\n      <PromoSection1 />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { DSection, Content, DImage } from \"../../styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = ({ content, aboutUS }) => {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768\r\n            ? \"column\"\r\n            : aboutUS.missionvision.alt\r\n            ? \"row-reverse\"\r\n            : \"row\"\r\n        }\r\n        margin=\"24px auto 0 auto\"\r\n        ref={content}\r\n        id=\"story\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"24px\"\r\n        >\r\n          <h3>{aboutUS && aboutUS.missionvision.mission.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.mission.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.mission.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.mission.paragraph}</p>\r\n          <h3>{aboutUS && aboutUS.missionvision.vision.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.vision.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.vision.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.vision.paragraph}</p>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.missionvision.photo\r\n                  ? `/images/cms/about/${aboutUS.missionvision.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768 ? \"column\" : aboutUS.story.alt ? \"row-reverse\" : \"row\"\r\n        }\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"90%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.story.photo\r\n                  ? `/images/cms/about/${aboutUS.story.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"20px\"\r\n          style={{ maxHeight: \"90vh\" }}\r\n        >\r\n          <h3>{aboutUS.story.title}</h3>\r\n          {aboutUS.story.subtitle !== \"\" && <h4>{aboutUS.story.subtitle}</h4>}\r\n          <p\r\n            style={{\r\n              fontSize: \"15px\",\r\n              letterSpacing: \"2px\",\r\n              lineHeight: 1.8,\r\n              textAlign: \"justify\",\r\n              overflowWrap: \"break-word\",\r\n              overflow: \"auto\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            {aboutUS.story.paragraph}\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../styled/card\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst TeamDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModal = event => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JCard4 data-emp={employee._id} onClick={handleModal}>\r\n        <div className=\"profile-image\">\r\n          <img\r\n            src={\r\n              employee.photo\r\n                ? `/images/employees/${employee.photo}`\r\n                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n            }\r\n            alt={employee.photo}\r\n          />\r\n        </div>\r\n        <figcaption>\r\n          <h3>\r\n            {employee.title} {employee.firstName} {employee.lastName}\r\n          </h3>\r\n          <h4>{employee.role}</h4>\r\n          <p>\r\n            {employee.bio.length > 50\r\n              ? parser(employee.bio.substr(0, 50) + \"...\")\r\n              : parser(employee.bio.substr(0, 50))}\r\n          </p>\r\n          <ReadMore hover={0}>Read More</ReadMore>\r\n          <div className=\"icons\">\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-reddit\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-vimeo\"></i>\r\n            </a>\r\n          </div>\r\n        </figcaption>\r\n      </JCard4>\r\n      <Modal size=\"small\" open={open} onClose={() => setOpen(false)} closeIcon>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4 top={\"-60px\"}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{employee.firstName}</h1>\r\n                <h4>{employee.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {parser(employee.bio)}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nconst Team = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const { data: dataEmployees, loading: loadingEmployees } = useQuery(\r\n    FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmployees) {\r\n      setEmployees(dataEmployees.aestheticiansReceps);\r\n    }\r\n  }, [dataEmployees]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        fixed\r\n        id=\"team\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n        >\r\n          <h3>Our TEAM</h3>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        pad=\"10px 0\"\r\n        mcenter\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DGrid three gap=\"20px\">\r\n            {loadingEmployees ? (\r\n              <>\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n              </>\r\n            ) : (\r\n              employees &&\r\n              employees.map(emp => <TeamDetails key={emp._id} employee={emp} />)\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","export const scrollView = ref => {\r\n  if (ref.current)\r\n    ref.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\"\r\n    });\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../util/graphql/cms\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport Story from \"../../components/main/about/Story\";\r\nimport Team from \"../../components/main/about/Team\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst About = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n\r\n      <>\r\n        <DSection\r\n          background={\r\n            about.bgImg\r\n              ? `/images/cms/about/${about.bgImg}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          bgcolor={about.bgColor}\r\n          height=\"85vh\"\r\n          fixed\r\n          id=\"about\"\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className=\"dark\"\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>\r\n              {about.title ? about.title : \"ABOUT US\"}\r\n            </h1>\r\n            {loadAbout && <Spinner medium inverted />}\r\n            {about.subtitle !== \"\" && <h3>{about.subtitles}</h3>}\r\n            <MouseScroll onClick={scrollDown} />\r\n          </Content>\r\n          <Overlay bgc={about.overlay ? true : false} />\r\n        </DSection>\r\n        {loadAbout ? (\r\n          <DSection\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"space-around\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            margin=\"20px auto\"\r\n            pad=\"20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Skeleton height=\"100%\" width=\"100%\" />\r\n              <Skeleton width=\"100%\" height={20} count={10} />\r\n            </DGrid>\r\n          </DSection>\r\n        ) : (\r\n          <Story content={content} aboutUS={dataAbout.aboutUsCMS} />\r\n        )}\r\n      </>\r\n\r\n      <Team />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/login\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/home\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted() {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\",\r\n          }}\r\n        >\r\n          <Link to=\"/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue,\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n  const [isEmp, setIsEmp] = useState({});\r\n  const [isServ, setIsServ] = useState({});\r\n\r\n  const handleTimeChanged = (event) => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_employee) {\r\n      setIsEmp(data_employee);\r\n    }\r\n  }, [data_employee]);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setIsServ(data_service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n      },\r\n    }\r\n  );\r\n\r\n  if (isEmp && isServ && data_appointments) {\r\n    const workStart = isEmp.employee && isEmp.employee.schedule.workStart;\r\n    const breakStart = isEmp.employee && isEmp.employee.schedule.breakStart;\r\n\r\n    isEmp.employee && isEmp.employee.schedule.day.map((d) => days.push(d));\r\n    data_appointments.checkedAppointments.map((occcupied) =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = isServ.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter((item) => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter((oras) => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map((ft) => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content height=\"100%\" width=\"100%\" flex justify=\"center\" align=\"center\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        margin=\"0 auto\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        flow=\"row wrap\"\r\n        pad=\"10px\"\r\n      >\r\n        {isEmp && data_service ? (\r\n          loading_employee || loading_appointments || loading_service ? (\r\n            <Spinner content=\"Loading...\" medium />\r\n          ) : (\r\n            times.map((time) => (\r\n              <div className=\"pretty p-default p-curve\" key={time}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"time\"\r\n                  value={time}\r\n                  onChange={handleTimeChanged}\r\n                />\r\n                <div className=\"state p-info-o\">\r\n                  <label style={styles.label}>{time}</label>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )\r\n        ) : (\r\n          \"Select Available Time\"\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700,\r\n  },\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\nimport { DContainer, DSection, Content } from \"../components/styled/containers\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      bgcolor={({ theme }) => theme.dark}\r\n      className=\"dark\"\r\n    >\r\n      <h1 style={{ fontSize: \"100px\" }} s>\r\n        PAGE 404\r\n      </h1>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n  c,\r\n}) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data_categories) {\r\n      setCategories(data_categories.categories);\r\n    }\r\n  }, [data_categories]);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services },\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp,\r\n    },\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_serviceEmp) {\r\n      setEmployees(data_serviceEmp.service.employees);\r\n    }\r\n  }, [data_serviceEmp]);\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"flex-start\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h3>Appointment Details</h3>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <Spinner row content=\"Loading...\" small />\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Categories...\r\n              </option>\r\n              {categories &&\r\n                categories.map((category) => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        {called && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select a service\r\n            </label>\r\n            {loading_services ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                placeholder=\"Services...\"\r\n                name=\"service\"\r\n                onChange={handleServiceChange}\r\n                value={serviceValue}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"38px\",\r\n                  padding: \"0.5em\",\r\n                  border: \"1px solid rgba(34,36,38,.15)\",\r\n                  cursor: \"pointer\",\r\n                  position: \"relative\",\r\n                  outline: \"0\",\r\n                  visibility: \"visible\",\r\n                  textAlign: \"left\",\r\n                }}\r\n                className=\"input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Services...\r\n                </option>\r\n                {services &&\r\n                  services.map((service) => (\r\n                    <option key={service._id} value={service._id}>\r\n                      {service.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n\r\n        {calledServiceEmp && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select Aesthetician\r\n            </label>\r\n            {loading_serviceEmp ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                name=\"employee\"\r\n                value={employeeVal}\r\n                onChange={handleEmployeeChange}\r\n                className=\"input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Aesthetician...\r\n                </option>\r\n                {employees &&\r\n                  employees.map((servEmp) => (\r\n                    <option key={servEmp._id} value={servEmp._id}>\r\n                      {servEmp.firstName}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const [service, setService] = useState({});\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setService(data_service.service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {loading_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input value={service.name} readOnly style={{ width: \"60%\" }} />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\n// import { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n            <DSection\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              background={\r\n                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              height=\"100vh\"\r\n            >\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Advertisement</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DSection>\r\n        \r\n          <DGrid>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    basic={\r\n                      (values.category === \"\" ||\r\n                        serviceValue === \"\" ||\r\n                        employeeVal === \"\" ||\r\n                        selectedTime === \"\") &&\r\n                      true\r\n                    }\r\n                    disabled={\r\n                      values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst photos = [\r\n  {\r\n    src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\r\n    width: 1,\r\n    height: 1,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  }\r\n];\r\n\r\nconst Gallery = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"gallery\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>Gallery</h1>\r\n          <h3>Love Your Skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        width=\"80%\"\r\n        mcenter\r\n        pad=\"20px 0\"\r\n        ref={content}\r\n      >\r\n        <MyGallery photos={photos} onClick={openLightbox} />\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel\r\n                currentIndex={currentImage}\r\n                views={photos.map(x => ({\r\n                  ...x,\r\n                  srcset: x.srcSet,\r\n                  caption: x.title\r\n                }))}\r\n              />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { Rating, Icon, Modal, Form, TextArea } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalReview = ({ openReview, setOpenReview, user, userReview }) => {\r\n  const [rate, setRate] = useState(userReview ? userReview.rating : 1);\r\n  const [message, setMessage] = useState(userReview ? userReview.message : \"\");\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const mutation = userReview ? UPDATE_REVIEW : ADD_REVIEW;\r\n\r\n  const [addOrUpdate, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      id: userReview && userReview._id,\r\n      rating: rate,\r\n      message: message,\r\n    },\r\n    refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n\r\n    onCompleted() {\r\n      toaster.notify(\r\n        userReview\r\n          ? \"Successfully Update a review\"\r\n          : \"Successfully Added a review\"\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleRate = (e, { rating }) => {\r\n    setRate(rating);\r\n  };\r\n\r\n  const handleMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    addOrUpdate();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"mini\"\r\n      open={openReview}\r\n      onClose={() => {\r\n        setOpenReview(false);\r\n        setEdit(false);\r\n      }}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>\r\n        <Icon name=\"pencil\" />\r\n        Write A Review\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field>\r\n            <Rating\r\n              rating={rate}\r\n              maxRating={5}\r\n              onRate={handleRate}\r\n              icon=\"star\"\r\n              size=\"huge\"\r\n              style={{ margin: \"0 auto\" }}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <TextArea\r\n              style={{ minHeight: 100 }}\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={handleMessage}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {!userReview || edit ? (\r\n          <DButton confirm onClick={handleSave}>\r\n            {loading ? (\r\n              <Spinner inverted small />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleEdit}>\r\n            <Icon name=\"edit\" />\r\n            Edit\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_REVIEW = gql`\r\n  mutation addTestimonial($rating: Int, $message: String) {\r\n    addTestimonial(inputTestimonial: { rating: $rating, message: $message }) {\r\n      _id\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_REVIEW = gql`\r\n  mutation updateTestimonial($id: ID!, $rating: Int, $message: String) {\r\n    updateTestimonial(_id: $id, rating: $rating, message: $message) {\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalReview;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_REVIEW } from \"../../../util/graphql/testimonial\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport ModalReview from \"./ModalReview\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Review = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [userReview, setUserReview] = useState({});\r\n  const [openReview, setOpenReview] = useState(false);\r\n\r\n  const { data: dataUserReview, loading: loadUserReview } = useQuery(\r\n    FETCH_USER_REVIEW,\r\n    {\r\n      variables: { userId: user ? user.userId : \"\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataUserReview) {\r\n      setUserReview(dataUserReview.userTestimonial);\r\n    }\r\n  }, [dataUserReview]);\r\n\r\n  const handleOpenReview = () => {\r\n    if (user) {\r\n      setOpenReview(true);\r\n    } else {\r\n      toaster.notify(\"You must sign in n order to write a review. Thank you!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      margin=\"1rem auto\"\r\n    >\r\n      {loadUserReview ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <>\r\n          <DButton basic radius=\"25px\" center bluer onClick={handleOpenReview}>\r\n            <Icon name=\"pencil\" />\r\n            Write a review\r\n          </DButton>\r\n          <ModalReview\r\n            openReview={openReview}\r\n            setOpenReview={setOpenReview}\r\n            userReview={dataUserReview && dataUserReview.userTestimonial}\r\n            user={user}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, DGrid } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport Review from \"./Review\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\n\r\nconst TestimonialCard = ({ content }) => {\r\n  const [isTestimonials, setIsTestimonials] = useState([]);\r\n\r\n  const {\r\n    data: dataTestimonials,\r\n    loading: loadTestimonials,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataTestimonials) {\r\n      setIsTestimonials(dataTestimonials.testimonials);\r\n    }\r\n  }, [dataTestimonials]);\r\n\r\n  return (\r\n    <DSection height=\"100%\" width=\"100%\" mcenter ref={content}>\r\n      <Review />\r\n      <Content width=\"80%\" height=\"100%\" margin=\"0 auto\" pad=\"50px 0\">\r\n        {loadTestimonials ? (\r\n          <DGrid three gap=\"20px\">\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n          </DGrid>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {isTestimonials &&\r\n              isTestimonials.map((testimonial) => (\r\n                <DTestimonialCard key={testimonial._id}>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          testimonial.user && testimonial.user.photo !== null\r\n                            ? `/images/users/${testimonial.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n                    <figcaption>\r\n                      <h4>\r\n                        {testimonial.user &&\r\n                          testimonial.user.firstName +\r\n                            \" \" +\r\n                            testimonial.user.lastName}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={testimonial.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>\r\n                        <span\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            right: \"10px\",\r\n                            fontSize: \"10px\",\r\n                            color: \"#bbb\",\r\n                          }}\r\n                        >\r\n                          {moment(parseInt(testimonial.updatedAt)).format(\"LL\")}\r\n                        </span>\r\n                        {testimonial.message}\r\n                      </blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        )}\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  infinite: true,\r\n  speed: 500,\r\n  rows: 2,\r\n  slidesPerRow: 3,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesPerRow: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 768,\r\n      settings: {\r\n        slidesPerRow: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default TestimonialCard;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport TestimonialCard from \"../../components/main/testimonial/TestimonialCard\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\n\r\nconst Testimonials = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"tstmnl\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\", fontWeight: 700 }}>\r\n            What Our Client Says\r\n          </h1>\r\n          {/* <h3>We continously improve our service</h3> */}\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <TestimonialCard content={content} />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst Services = () => {\r\n  const sectionDown = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(sectionDown);\r\n  };\r\n\r\n  return (\r\n    <DContainer id=\"services\">\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\" }}>Our Services</h1>\r\n          <h3>It's time to take care of your skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay\r\n          bg={\"linear-gradient(to top, rgba(0,0,0,0.3), rgba(255,255,255,0.1))\"}\r\n        />\r\n      </DSection>\r\n      <DSection\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n        mcenter\r\n        pad=\"24px\"\r\n        height=\"100%\"\r\n        ref={sectionDown}\r\n      >\r\n        <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n          <DGrid three gap=\"24px\" med7={\"1fr\"}>\r\n            {loading ? (\r\n              <>\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n              </>\r\n            ) : (\r\n              isCategories.map(category => (\r\n                <JCard>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <div className=\"description\">\r\n                      <p>\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n                      </p>\r\n                      <ReadMore hover={0}>View Services</ReadMore>\r\n                    </div>\r\n                  </figcaption>\r\n                  <Link to={`/service/${category._id}`}></Link>\r\n                </JCard>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CATEGORY_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { JCard2 } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ServiceDetails from \"../../components/main/services/ServiceDetails\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Service = props => {\r\n  const categoryId = props.match.params._id;\r\n  const history = useHistory();\r\n  const [isReadMore, setIsReadMore] = useState(false);\r\n\r\n  const [isServices, setIsServices] = useState([]);\r\n\r\n  const { data, loading } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsServices(data.category.services);\r\n    }\r\n  }, [data]);\r\n\r\n  const backHist = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"50vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          fluid\r\n          height=\"100%\"\r\n          className=\"dark\"\r\n        >\r\n          {!data ? (\r\n            <Spinner inverted />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ fontSize: \"22px\" }}>{data.category.name}</h1>\r\n              <p style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                {parser(data.category.description)}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Content flex width=\"90%\" height=\"50px\" margin=\"20px auto\">\r\n        <DButton onClick={backHist}>\r\n          <Icon name=\"arrow left\" /> <span>Back to Services</span>\r\n        </DButton>\r\n      </Content>\r\n      {loading ? (\r\n        <DGrid three gap=\"15px\">\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n        </DGrid>\r\n      ) : (\r\n        <DSection\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          mcenter\r\n          pad=\"24px\"\r\n          height=\"100%\"\r\n        >\r\n          <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n            <DGrid three gap=\"15px\">\r\n              {isServices &&\r\n                isServices.map(service => (\r\n                  <JCard2\r\n                    key={service._id}\r\n                    oflow={isReadMore ? true : false}\r\n                    onPointerLeave={() => setIsReadMore(false)}\r\n                  >\r\n                    <div className=\"thumbnail\">\r\n                      <img\r\n                        src={\r\n                          service.photo !== null\r\n                            ? `/images/service/${service.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/169963/photo-1429043794791-eb8f26f44081.jpeg\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"post-content\">\r\n                      <div className=\"category\">{service.name}</div>\r\n                      <h4 className=\"title\">{service.duration} mins</h4>\r\n                      <h4 className=\"title\">Php {service.price}</h4>\r\n                      <div className=\"description\">\r\n                        {isReadMore ? (\r\n                          <p>{parser(service.description)}</p>\r\n                        ) : (\r\n                          <p>\r\n                            {service.description.length > 100\r\n                              ? parser(\r\n                                  service.description.substr(0, 100) + \"...\"\r\n                                )\r\n                              : parser(service.description.substr(0, 100))}\r\n                          </p>\r\n                        )}\r\n                        {service.description.length <= 100 ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <ReadMore onClick={() => setIsReadMore(!isReadMore)}>\r\n                            {isReadMore ? \"Read Less\" : \"Read More\"}\r\n                          </ReadMore>\r\n                        )}\r\n\r\n                        {/* <ServiceDetails service={service} /> */}\r\n                      </div>\r\n                    </div>\r\n                  </JCard2>\r\n                ))}\r\n            </DGrid>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const { userId } = useContext(AuthContext);\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/\">\r\n            Explore\r\n          </DButton>\r\n          <DButton\r\n            as={Link}\r\n            to={userId ? `/account/${userId}` : `/login`}\r\n          >\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/home\" basic>\r\n            Explore\r\n          </DButton>\r\n         \r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid=\"true\">\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid=\"true\">\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hoverColorText}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  // const [addInfo, setAddInfo] = useState(\"\");\r\n  // const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  // const handleMessage = e => {\r\n  //   setAddInfo(e.target.value);\r\n  // };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n    default:\r\n      return <h1>Something went wrong</h1>;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content,\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n \r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {dataLoading ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input value={myAppoint._id} readOnly style={styles.input} />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={myAppoint.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={myAppoint.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${myAppoint.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={myAppoint.status}\r\n                  readOnly\r\n                  style={\r\n                    myAppoint.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : myAppoint.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : myAppoint.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {myAppoint.status === \"CANCELLED\" || myAppoint.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Testimonials from \"./main/Testimonials\";\r\nimport Services from \"./main/Services\";\r\nimport Service from \"./main/Service\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`/`} component={Home} exact />\r\n        <Route path={`/about`} component={About} exact />\r\n        <Route path={`/contact`} component={Contact} exact />\r\n        <Route path={`/gallery`} component={Gallery} exact />\r\n        <Route path={`/testimonials`} component={Testimonials} exact />\r\n        <Route path={`/services&rates`} component={Services} exact />\r\n        <Route path={`/service/:_id`} component={Service} exact />\r\n        <Route path={`/verified/:emailToken`} component={ThankYou} exact />\r\n        <UserPrivateRoute\r\n          path={`/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`/login`} component={Signin} exact />\r\n\r\n        <UserPrivateRoute path={`/account/:_id`} component={Account} exact />\r\n\r\n        <UserPrivateRoute\r\n          path={`/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute path={`/appointment`} component={Appointment} exact />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst UpcommingAppointments = ({ appointments, loading }) => {\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map((appointment) => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n      progressPending={loading}\r\n      progressComponent={\r\n        <Spinner content=\"Please wait while we fetch our data...\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n  position: relative;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-areas:\r\n      \"header\"\r\n      \"main\"\r\n      \"footer\";\r\n  }\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, DImage, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Image, Icon } from \"semantic-ui-react\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Dropdown\r\n        trigger={\r\n          <DImage circle height=\"50px\" width=\"50px\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"avatar\"\r\n            />\r\n            <Overlay opac={0} hovOpac={1} />\r\n          </DImage>\r\n        }\r\n        pointing=\"top right\"\r\n        icon={null}\r\n      >\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to=\"/zeadmin/paccount\">\r\n            <Icon name=\"user\" />\r\n            Account\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={handleLogout}>\r\n            <Icon name=\"sign out\" />\r\n            Sign out\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      {/* <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton> */}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { MessageSquare } from \"@styled-icons/boxicons-solid/MessageSquare\";\r\nimport { ShortText } from \"@styled-icons/material/ShortText\";\r\nimport { AccountBox } from \"@styled-icons/material/AccountBox\";\r\nimport { AccountCircle } from \"@styled-icons/material/AccountCircle\";\r\nimport { MessageRoundedDetail } from \"@styled-icons/boxicons-solid/MessageRoundedDetail\";\r\nimport { FileDirectory } from \"@styled-icons/octicons/FileDirectory\";\r\nimport { Profile } from \"@styled-icons/icomoon/Profile\";\r\nimport { Report } from \"@styled-icons/boxicons-solid/Report\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\n\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <MessageRoundedDetail size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion title={\"Accounts\"} icon={<AccountBox size=\"16px\" />} fs=\"14px\">\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <AccountCircle size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <BookContent size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <ShortText size=\"16px\" />\r\n            About\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_testimonial\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <MessageSquare size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<FileDirectory size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Profile size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Report size=\"16px\" />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map(user => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"#6dd5ed\"\r\n                color=\"#fff\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <Spinner small />\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"green\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"firebrick\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.bluer}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.secondary}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\n// import { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        mcenter\r\n      >\r\n        <Cards />\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            <UpcommingAppointments\r\n              appointments={appointments}\r\n              loading={loading}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Eye } from \"@styled-icons/fa-regular/Eye\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  const [isCurrentAppoint, setIsCurrentAppoint] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointmentData) {\r\n      setIsCurrentAppoint(currentAppointmentData.currentAppointments);\r\n    }\r\n  }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee.lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`} flex>\r\n          <Eye size=\"22px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      <DataTable\r\n        columns={columns}\r\n        data={isCurrentAppoint.map((currAppoint) => currAppoint)}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\n// import HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton alert basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButton>\r\n        <DButton confirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  DCard,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLink, DLabel } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Icon } from \"semantic-ui-react\";\r\nimport { Service } from \"@styled-icons/remix-fill/Service\";\r\nimport { Bookmark } from \"@styled-icons/boxicons-solid/Bookmark\";\r\nimport { Clock } from \"@styled-icons/fa-solid/Clock\";\r\nimport { UserMd } from \"@styled-icons/fa-solid/UserMd\";\r\nimport { CalendarExclamation } from \"@styled-icons/boxicons-solid/CalendarExclamation\";\r\nimport { CalendarEvent } from \"@styled-icons/boxicons-solid/CalendarEvent\";\r\nimport { Timelapse } from \"@styled-icons/material/Timelapse\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = (props) => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  console.log(myAppoint.service);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"80%\"\r\n        height=\"100%\"\r\n        mcenter\r\n      >\r\n        {dataLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              width=\"100%\"\r\n              margin=\"24px 0\"\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n            >\r\n              <Breadcrumb size={\"large\"}>\r\n                <Breadcrumb.Section\r\n                  style={{ color: \"#2980B9\" }}\r\n                  onClick={() => history.goBack()}\r\n                >\r\n                  <h3>Appointments</h3>\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section>\r\n                  {myAppoint.user && (\r\n                    <strong>\r\n                      <DLink\r\n                        borderb=\"true\"\r\n                        size=\"16px\"\r\n                        color=\"#232323\"\r\n                        to={`/zeadmin/userInfo/${myAppoint.user._id}`}\r\n                      >\r\n                        {myAppoint.user.firstName} {myAppoint.user.lastName}\r\n                      </DLink>\r\n                      's appointment\r\n                    </strong>\r\n                  )}\r\n                </Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n\r\n            <DGrid\r\n              custom={\r\n                myAppoint.status === \"VERIFIED\" ||\r\n                myAppoint.status === \"PENDING\"\r\n                  ? \"3fr 200px\"\r\n                  : \"1fr\"\r\n              }\r\n              gap=\"5px\"\r\n            >\r\n              <DCard\r\n                dw={\r\n                  myAppoint.status === \"VERIFIED\" ||\r\n                  myAppoint.status === \"PENDING\"\r\n                    ? \"100%\"\r\n                    : \"80%\"\r\n                }\r\n                dh=\"100%\"\r\n                mcenter\r\n                flex\r\n                fcol\r\n                justifyBetween\r\n              >\r\n                <DGrid gap=\"5px\">\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Bookmark size=\"14px\" style={{ margin: \"0 2px\" }} />\r\n                      Appointment ID:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint._id}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarEvent size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Clock size=\"14px\" style={{ margin: \"0 2px\" }} /> Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.slot_start}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <UserMd size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.employee &&\r\n                          `${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Service size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.name}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Timelapse size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.duration} mins\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarExclamation\r\n                        size=\"14px\"\r\n                        style={{ margin: \"0 2px\" }}\r\n                      />\r\n                      Status:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                        color={\r\n                          myAppoint.status === \"VERIFIED\"\r\n                            ? \"#8DC26F\"\r\n                            : myAppoint.status === \"DONE\"\r\n                            ? \"#56ab2f\"\r\n                            : myAppoint.status === \"CANCELLED\"\r\n                            ? \"#b92b27\"\r\n                            : myAppoint.status === \"RESCHEDULED\"\r\n                            ? \"#6dd5ed\"\r\n                            : \"#2193b0\"\r\n                        }\r\n                      >\r\n                        {myAppoint.status}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </DCard>\r\n              {(myAppoint.status === \"PENDING\" ||\r\n                myAppoint.status === \"VERIFIED\") && (\r\n                <Content\r\n                  width=\"90%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  direct=\"column\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <DButton\r\n                    confirm\r\n                    fluid=\"true\"\r\n                    onClick={() => setOpenDone(true)}\r\n                  >\r\n                    <Icon name=\"calendar check\" /> Confirm\r\n                  </DButton>\r\n                  <DButton fluid=\"true\">\r\n                    <Icon name=\"calendar alternate\" /> Rebook\r\n                  </DButton>\r\n                  <DButton\r\n                    alert\r\n                    fluid=\"true\"\r\n                    onClick={() => setOpenCancel(true)}\r\n                  >\r\n                    <Icon name=\"delete calendar\" /> Cancel\r\n                  </DButton>\r\n                </Content>\r\n              )}\r\n            </DGrid>\r\n          </>\r\n        )}\r\n\r\n        {/* {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\",\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\",\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\",\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\",\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ||\r\n              data.appointment.status === \"RESCHEDULED\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButton confirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButton>\r\n                  <ReschedModal\r\n                    isAdmin={true}\r\n                    status={\"VERIFIED\"}\r\n                    setOpen={setOpen}\r\n                    appointmentId={appointmentId}\r\n                  />\r\n                  <DButton alert onClick={() => setOpenCancel(true)}>\r\n                    Cancel\r\n                  </DButton>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )} */}\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  label: {\r\n    width: \"40%\",\r\n  },\r\n  input: {\r\n    width: \"60%\",\r\n  },\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services },\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal,\r\n    },\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp,\r\n    },\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue,\r\n    },\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map((category) => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map((service) => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map((servEmp) => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButton,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>No</DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/employees/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton flex as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\" mcenter>\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Spinner content=\"Please wait while we fetch your data...\" />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={employeesAR.map((aesrep) => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\nimport { Toasted as Toast } from \"./styled/utils\";\r\nimport { Close } from \"@styled-icons/material/Close\";\r\n\r\nconst Toasted = (props) => {\r\n  return (\r\n    <Toast {...props}>\r\n      <span className=\"description\">{props.children}</span>\r\n      <span className=\"close\">\r\n        <Close size=\"14px\" />\r\n      </span>\r\n    </Toast>\r\n  );\r\n};\r\n\r\nexport default Toasted;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_EMPLOYEES_QUERY } from \"../../../util/graphql/employee\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport { Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { IconWrap, DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Schedule } from \"@styled-icons/material/Schedule\";\r\nimport { UserDetail } from \"@styled-icons/boxicons-solid/UserDetail\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  employee,\r\n  employeeId,\r\n  handleSchedule,\r\n  handleDetails,\r\n  s,\r\n}) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Image Uploaded\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: employee.photo\r\n        ? `/images/employees/${employee.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"flex-start\"\r\n      align=\"center\"\r\n      mcenter\r\n      direct=\"column\"\r\n    >\r\n      <DCard\r\n        dw={wid < 524 ? \"50%\" : \"100%\"}\r\n        dh=\"250px\"\r\n        mcenter\r\n        p=\"0px\"\r\n        grayzoom\r\n      >\r\n        {loading ? (\r\n          <Spinner content=\"Loading...\" medium />\r\n        ) : (\r\n          <DImage height=\"100%\" width=\"100%\">\r\n            <img\r\n              src={\r\n                employee.photo\r\n                  ? `/images/employees/${employee.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt={employee.name}\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n        )}\r\n        <IconWrap\r\n          {...getRootProps()}\r\n          bg={({ theme }) => theme.bluer}\r\n          circle\r\n          bottomcenter\r\n        >\r\n          <Camera size=\"22px\" title=\"Upload\" />\r\n          <input {...getInputProps()} />\r\n        </IconWrap>\r\n      </DCard>\r\n\r\n      <DButton width=\"80%\" flex=\"true\" onClick={handleDetails}>\r\n        <UserDetail size=\"22px\" />\r\n        Details\r\n      </DButton>\r\n      <DButton width=\"80%\" flex=\"true\" onClick={handleSchedule}>\r\n        <Schedule size=\"22px\" title=\"Employee's Schdule Tab\" />\r\n        Schedule\r\n      </DButton>\r\n      <ModalGateway>\r\n        {viewerIsOpen ? (\r\n          <Modal onClose={closeLightbox}>\r\n            <Carousel views={images} />\r\n          </Modal>\r\n        ) : null}\r\n      </ModalGateway>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React from \"react\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\n\r\nconst DetailsEmployee = ({ employee }) => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"10px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\">\r\n          {employee.firstName} {employee.lastsName}\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default DetailsEmployee;\r\n","import React from \"react\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\n\r\nconst ScheduleEmployee = ({ employee }) => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid gap=\"10px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\">\r\n          {employee.schedule && employee.schedule.workStart}\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ScheduleEmployee;\r\n","import React from \"react\";\r\nimport DetailsEmployee from \"./DetailsEmployee\";\r\nimport ScheduleEmployee from \"./ScheduleEmployee\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst Info = ({ isEmpInfo, employee }) => {\r\n  switch (isEmpInfo) {\r\n    case \"emp_details\":\r\n      return <DetailsEmployee employee={employee} />;\r\n    case \"emp_sched\":\r\n      return <ScheduleEmployee employee={employee} />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default Info;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport PhotoBooth from \"../../components/admin/employees/PhotoBooth\";\r\nimport Info from \"../../components/admin/employees/Info\";\r\n\r\nconst Employee = (props) => {\r\n  const employeeId = props.match.params._id;\r\n  const { width: wid } = useWindowSize();\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  //Storing switch key to localstorage\r\n  const stored = localStorage.getItem(\"empInfo\");\r\n  const [isEmpInfo, setIsEmpInfo] = useState(\r\n    stored === \"emp_details\"\r\n      ? \"emp_details\"\r\n      : stored === \"emp_sched\"\r\n      ? \"emp_sched\"\r\n      : \"emp_details\"\r\n  );\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  const handleDetails = () => {\r\n    setIsEmpInfo(\"emp_details\");\r\n    localStorage.setItem(\"empInfo\", \"emp_details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsEmpInfo(\"emp_sched\");\r\n    localStorage.setItem(\"empInfo\", \"emp_sched\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        {employeeLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n            >\r\n              <Breadcrumb size={\"huge\"}>\r\n                <Breadcrumb.Section as={Link} to=\"/zeadmin/employees\">\r\n                  Employee\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider>/</Breadcrumb.Divider>\r\n                <Breadcrumb.Section\r\n                  active\r\n                >{`${employee.firstName} ${employee.lastName}'s Info`}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <PhotoBooth\r\n                  employee={employee}\r\n                  employeeId={employeeId}\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                />\r\n                <Info isEmpInfo={isEmpInfo} employee={employee} />\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n      {/* {employeeLoading ? (\r\n        <Spinner content=\"Please wait while we fetch our data...\" />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )} */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButton alert onClick={() => setOpen(false)}>No</DButton>\r\n            <DButton confirm type=\"submit\">Yes</DButton>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  Overlay,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\n\r\nconst Categories = () => {\r\n  const { width: wid } = useWindowSize();\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n      >\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <Content width=\"100%\" height=\"100%\">\r\n          {loading ? (\r\n            <Spinner content=\"Please wait while we fetch your data\" />\r\n          ) : (\r\n            <DGrid three gap=\"15px\" margin=\"40px 0\">\r\n              {categories.map((category) => (\r\n                <DCard\r\n                  key={category._id}\r\n                  dw={wid < 524 ? \"70%\" : \"90%\"}\r\n                  dh=\"250px\"\r\n                  mcenter\r\n                  p=\"0px\"\r\n                  grayzoom\r\n                  overlaying\r\n                >\r\n                  <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                    <img\r\n                      src={\r\n                        category.photo\r\n                          ? `/images/service/${category.photo}`\r\n                          : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                      }\r\n                      alt={category.name}\r\n                    />\r\n                  </DImage>\r\n\r\n                  <Overlay\r\n                    bgc\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    initbox\r\n                  >\r\n                    <div className=\"overlay-box\">\r\n                      <div className=\"overlay-box__content dark\">\r\n                        <h3 className=\"title\">{category.name}</h3>\r\n\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n\r\n                        <ReadMore center size=\"14px\">\r\n                          Learn More\r\n                        </ReadMore>\r\n                      </div>\r\n                    </div>\r\n                  </Overlay>\r\n                  <Link to={`/zeadmin/category/${category._id}`} />\r\n                </DCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\nimport { IconWrap } from \"./styled/utils\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst MenuStyledDots = styled.div`\r\n  position: absolute;\r\n  width: auto;\r\n  height: auto;\r\n  z-index: 5;\r\n  ${(props) =>\r\n    props.middle &&\r\n    css`\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    `};\r\n  ${(props) =>\r\n    props.topright &&\r\n    css`\r\n      top: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.topleft &&\r\n    css`\r\n      top: 0;\r\n      left: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.bottomright &&\r\n    css`\r\n      bottom: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.middleright &&\r\n    css`\r\n      top: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.bottomleft &&\r\n    css`\r\n      bottom: 0;\r\n      left: 0;\r\n    `};\r\n  ${(props) =>\r\n    props.middleleft &&\r\n    css`\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n    `};\r\n`;\r\n\r\nconst MenuDots = (props) => {\r\n  return (\r\n    <MenuStyledDots {...props}>\r\n      <Popup\r\n        style={{ zIndex: 2 }}\r\n        on=\"click\"\r\n        position=\"top right\"\r\n        trigger={\r\n          <IconWrap\r\n            menu\r\n            {...props}\r\n            color={props.color ? props.color : \"#232323\"}\r\n          >\r\n            <DotsVerticalRounded title=\"Menu\" />\r\n          </IconWrap>\r\n        }\r\n      >\r\n        {props.children}\r\n      </Popup>\r\n    </MenuStyledDots>\r\n  );\r\n};\r\n\r\nexport default MenuDots;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst DTextAreaStyled = styled.div`\r\n  display: ${(props) => (props.active ? \"block\" : \"none\")};\r\n  height: auto;\r\n  min-height: 30px;\r\n  max-height: 250px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  border: 1px solid rgba(189, 195, 199, 0.8);\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n\r\n  ${(props) =>\r\n    props.par &&\r\n    css`\r\n      height: 250px;\r\n    `};\r\n`;\r\n\r\nconst DTextArea = (props) => {\r\n  return <DTextAreaStyled {...props}>{props.children}</DTextAreaStyled>;\r\n};\r\n\r\nexport default DTextArea;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport { Form, Label, Grid } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport { DButton, DLabel, IconWrap } from \"../../../components/styled/utils\";\r\nimport { Edit, Trash } from \"@styled-icons/boxicons-solid\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport MenuDots from \"../../../components/MenuDots\";\r\nimport DTextArea from \"../../../components/DTextArea\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\nimport parser from \"html-react-parser\";\r\nimport Toasted from \"../../../components/Toasted\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  // const [errors, setErrors] = useState({});\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  // const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name,\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content,\r\n    },\r\n\r\n    onCompleted() {\r\n      setIsEdit(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Category Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  // const config = {\r\n  //   removePlugins: [\"Table\", \"Image\", \"MediaEmbed\"],\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <MenuDots topright medium>\r\n            <Grid divided columns={2}>\r\n              <Grid.Column>\r\n                <DButton confirm onClick={handleEdit} flex>\r\n                  <IconWrap mcenter>\r\n                    <Edit size=\"22px\" title=\"Update Content\" />\r\n                  </IconWrap>\r\n                </DButton>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <DButton alert flex onClick={() => setOpen(true)}>\r\n                  <IconWrap mcenter>\r\n                    <Trash size=\"22px\" title=\"Archive or Permanently Delete\" />\r\n                  </IconWrap>\r\n                </DButton>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </MenuDots>\r\n\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n            style={{ overflow: \"visible !important\" }}\r\n          >\r\n            <Label style={styles.label}>Title</Label>\r\n            {isEdit ? (\r\n              <Content\r\n                width=\"90%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Content>\r\n            ) : (\r\n              <Content\r\n                width=\"90%\"\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n                pad=\"3px 15px\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"50%\"}\r\n                  size=\"18px\"\r\n                >\r\n                  {values.title}\r\n                </DLabel>\r\n              </Content>\r\n            )}\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Description</Label>\r\n            <Content\r\n              width=\"90%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea par active={isEdit ? true : null}>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n\r\n              <DTextArea active={!isEdit ? true : null}>\r\n                {parser(content)}\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n          {isEdit && (\r\n            <Content flex justify=\"flex-end\" align=\"center\" width=\"100%\">\r\n              <DButton type=\"submit\" onClick={handleSubmit}>\r\n                {loading ? (\r\n                  <Spinner small inverted content=\"Loading...\" />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </DButton>\r\n              <DButton alert onClick={handleCancel}>\r\n                Cancel\r\n              </DButton>\r\n            </Content>\r\n          )}\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\",\r\n    fontWeight: 700,\r\n    fontSize: \"14px\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>No</DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel, IconWrap } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => (\r\n        <IconWrap color={({ theme }) => theme.bluer}>\r\n          <Grid size=\"22px\" />\r\n        </IconWrap>\r\n      ),\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      format: (row) => {\r\n        const length = 50;\r\n        const descript = row.description;\r\n\r\n        const trimString =\r\n          descript.length > length\r\n            ? descript.substring(0, length) + \"...\"\r\n            : descript.substring(0, length);\r\n\r\n        return <p style={{ fontWeight: 500 }}>{parse(trimString)}</p>;\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton flex width=\"56px\" size=\"36px\">\r\n          <Link to={`/zeadmin/service/${row._id}`} className=\"flex-center\">\r\n            <Eye size=\"22px\" title=\"View Service Information\" />\r\n          </Link>\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <>\r\n      <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n        <h3>Services</h3>\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      <DataTable\r\n        columns={columns}\r\n        data={services.map((service) => service)}\r\n        responsive={true}\r\n        pagination\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        customStyles={customStyles}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading_services}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport { IconWrap } from \"../../components/styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../components/Toasted\";\r\nimport Page404 from \"../Page404\";\r\n\r\nconst Category = (props) => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Upload Success\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: category.photo\r\n        ? `/images/service/${category.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n      >\r\n        {dataLoading ? (\r\n          <Spinner content=\"Please wait while we fetch the data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n            >\r\n              <Breadcrumb size={\"huge\"}>\r\n                <Breadcrumb.Section link>Category</Breadcrumb.Section>\r\n                <Breadcrumb.Divider>/</Breadcrumb.Divider>\r\n                <Breadcrumb.Section active>{category.name}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  mcenter\r\n                  direct=\"column\"\r\n                >\r\n                  <DCard\r\n                    dw={wid < 524 ? \"50%\" : \"100%\"}\r\n                    dh=\"250px\"\r\n                    mcenter\r\n                    p=\"0px\"\r\n                    grayzoom\r\n                  >\r\n                    {loading ? (\r\n                      <Spinner content=\"Loading...\" medium />\r\n                    ) : (\r\n                      <DImage height=\"100%\" width=\"100%\">\r\n                        <img\r\n                          src={\r\n                            category.photo\r\n                              ? `/images/service/${category.photo}`\r\n                              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt={category.name}\r\n                          onClick={openLightbox}\r\n                        />\r\n                      </DImage>\r\n                    )}\r\n                    <IconWrap\r\n                      {...getRootProps()}\r\n                      bg={({ theme }) => theme.bluer}\r\n                      circle\r\n                      bottomcenter\r\n                    >\r\n                      <Camera size=\"22px\" title=\"Upload\" />\r\n                      <input {...getInputProps()} />\r\n                    </IconWrap>\r\n                  </DCard>\r\n\r\n                  <ModalGateway>\r\n                    {viewerIsOpen ? (\r\n                      <Modal onClose={closeLightbox}>\r\n                        <Carousel views={images} />\r\n                      </Modal>\r\n                    ) : null}\r\n                  </ModalGateway>\r\n                </Content>\r\n                <Content width=\"100%\" height=\"100%\">\r\n                  <DGrid gap=\"10px\">\r\n                    <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\">\r\n                      <CategoryDetails\r\n                        category={data.category}\r\n                        historyCallback={historyCallback}\r\n                      />\r\n                    </DCard>\r\n                    <DCard dw=\"100%\" dh=\"100%\">\r\n                      <ServiceList categoryId={data.category._id} />\r\n                    </DCard>\r\n                  </DGrid>\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback,\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id,\r\n        },\r\n      });\r\n\r\n      data.services = data.services.filter((serv) => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id,\r\n        },\r\n        data: { services: [...data.services] },\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id,\r\n    },\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label, Popup, Grid } from \"semantic-ui-react\";\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport { DButton, DLabel, IconWrap } from \"../../../components/styled/utils\";\r\nimport MenuDots from \"../../../components/MenuDots\";\r\nimport { Edit, Trash } from \"@styled-icons/boxicons-solid\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport DTextArea from \"../../../components/DTextArea\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  // const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service && service.name,\r\n      price: service && service.price,\r\n      duration: service && service.duration,\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(values.duration),\r\n      description: content,\r\n    },\r\n\r\n    onCompleted() {\r\n      setIsEdit(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Service Updated\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <MenuDots topright medium>\r\n          <Grid divided columns={2}>\r\n            <Grid.Column>\r\n              <DButton confirm onClick={handleEdit} flex>\r\n                <IconWrap mcenter>\r\n                  <Edit size=\"22px\" title=\"Update Content\" />\r\n                </IconWrap>\r\n              </DButton>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <DButton alert flex onClick={() => setOpen(true)}>\r\n                <IconWrap mcenter>\r\n                  <Trash size=\"22px\" title=\"Archive or Permanently Delete\" />\r\n                </IconWrap>\r\n              </DButton>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </MenuDots>\r\n\r\n        <DGrid gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                {isEdit ? (\r\n                  <input\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"60%\" }}\r\n                  />\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    {values.title}\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                {isEdit ? (\r\n                  <select\r\n                    name=\"duration\"\r\n                    value={values.duration}\r\n                    onChange={handleChange}\r\n                  >\r\n                    {/* <option></option> */}\r\n                    <option value=\"30\">30 mins</option>\r\n                    <option value=\"45\">45 mins</option>\r\n                    <option value=\"60\">60 mins</option>\r\n                    <option value=\"90\">90 mins</option>\r\n                    <option value=\"120\">120 mins</option>\r\n                    <option value=\"180\">180 mins</option>\r\n                    <option value=\"210\">210 mins</option>\r\n                  </select>\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    {values.duration} min\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                {isEdit ? (\r\n                  <input\r\n                    name=\"price\"\r\n                    value={values.price}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"60%\" }}\r\n                  />\r\n                ) : (\r\n                  <DLabel\r\n                    flex\r\n                    justifyEnd\r\n                    alignCenter\r\n                    weight={700}\r\n                    w={\"50%\"}\r\n                    size=\"22px\"\r\n                  >\r\n                    Php {values.price}\r\n                  </DLabel>\r\n                )}\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"flex-start\"\r\n            direct=\"column\"\r\n            margin=\"12px auto\"\r\n          >\r\n            <Label style={styles.label}>Description</Label>\r\n\r\n            <Content\r\n              width=\"90%\"\r\n              height=\"auto\"\r\n              flex\r\n              justify=\"flex-start\"\r\n              align=\"center\"\r\n              pad=\"3px 15px\"\r\n              margin=\"0 auto\"\r\n            >\r\n              <DTextArea par active={isEdit ? true : null}>\r\n                <CKEditor\r\n                  onInit={(editor) => {\r\n                    // Insert the toolbar before the editable area.\r\n                    editor.ui\r\n                      .getEditableElement()\r\n                      .parentElement.insertBefore(\r\n                        editor.ui.view.toolbar.element,\r\n                        editor.ui.getEditableElement()\r\n                      );\r\n                  }}\r\n                  onChange={(event, editor) => {\r\n                    const data = editor.getData();\r\n                    setContent(data);\r\n                  }}\r\n                  editor={DecoupledEditor}\r\n                  data={content}\r\n                />\r\n              </DTextArea>\r\n              <DTextArea active={!isEdit ? true : null}>\r\n                {parser(content)}\r\n              </DTextArea>\r\n            </Content>\r\n          </Content>\r\n          {isEdit && (\r\n            <Content width=\"100%\" flex justify=\"flex-end\">\r\n              <DButton confirm onClick={handleSubmit}>\r\n                {loading ? (\r\n                  <Spinner row small inverted content=\"Loading...\" />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </DButton>\r\n              <DButton alert onClick={() => setIsEdit(false)}>\r\n                Cancel\r\n              </DButton>\r\n            </Content>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\",\r\n  },\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  DCard,\r\n  DImage,\r\n} from \"../../components/styled/containers\";\r\nimport { IconWrap } from \"../../components/styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\nimport useWindowSize from \"../../util/hooks/useWindowSize\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../components/Toasted\";\r\n\r\nconst Service = (props) => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState({});\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const { width: wid } = useWindowSize();\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId,\r\n      },\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, [serviceData]);\r\n\r\n  // LIGHT BOX\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }],\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Image Uploaded\r\n        </Toasted>\r\n      ));\r\n    },\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: service.photo\r\n        ? `/images/service/${service.photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        mcenter\r\n      >\r\n        {serviceLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              width=\"100%\"\r\n              margin=\"24px auto\"\r\n            >\r\n              <Breadcrumb size={\"huge\"}>\r\n                <Breadcrumb.Section link>Category</Breadcrumb.Section>\r\n                <Breadcrumb.Divider>/</Breadcrumb.Divider>\r\n                <Breadcrumb.Section active>{service.name}</Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n            <Content width=\"100%\" height=\"100%\" margin=\"24px auto\">\r\n              <DGrid\r\n                custom=\"1fr 3fr\"\r\n                med10=\"2fr 4fr\"\r\n                med7=\"2fr 4fr\"\r\n                gap={wid < 768 ? \"10px\" : \"20px\"}\r\n              >\r\n                <Content\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  mcenter\r\n                  direct=\"column\"\r\n                >\r\n                  <DCard\r\n                    dw={wid < 524 ? \"50%\" : \"100%\"}\r\n                    dh=\"250px\"\r\n                    mcenter\r\n                    p=\"0px\"\r\n                    grayzoom\r\n                  >\r\n                    {loading ? (\r\n                      <Spinner content=\"Loading...\" medium />\r\n                    ) : (\r\n                      <DImage height=\"100%\" width=\"100%\">\r\n                        <img\r\n                          src={\r\n                            service.photo\r\n                              ? `/images/service/${service.photo}`\r\n                              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt={service.name}\r\n                          onClick={openLightbox}\r\n                        />\r\n                      </DImage>\r\n                    )}\r\n                    <IconWrap\r\n                      {...getRootProps()}\r\n                      bg={({ theme }) => theme.bluer}\r\n                      circle\r\n                      bottomcenter\r\n                    >\r\n                      <Camera size=\"22px\" title=\"Upload\" />\r\n                      <input {...getInputProps()} />\r\n                    </IconWrap>\r\n                  </DCard>\r\n\r\n                  <ModalGateway>\r\n                    {viewerIsOpen ? (\r\n                      <Modal onClose={closeLightbox}>\r\n                        <Carousel views={images} />\r\n                      </Modal>\r\n                    ) : null}\r\n                  </ModalGateway>\r\n                </Content>\r\n                <Content width=\"100%\" height=\"100%\">\r\n                  <DGrid gap=\"10px\">\r\n                    <DCard dw=\"100%\" dh=\"100%\" p=\"10px 20px\">\r\n                      <ServiceDetails\r\n                        service={serviceData.service}\r\n                        serviceHistoryCallback={serviceHistoryCallback}\r\n                      />\r\n                    </DCard>\r\n                  </DGrid>\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </>\r\n        )}\r\n      </DSection>\r\n      {/* {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <>\r\n                    <Content height=\"300px\"></Content>\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      className=\"dark\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )} */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  // const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n  //   variables: {\r\n  //     inqId: inqId\r\n  //   }\r\n  // });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n  };\r\n\r\n  const handleReplyMsg = e => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingInq ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{inq.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {inq.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {inq.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={inq.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={inq.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n// const READ_INQ = gql`\r\n//   mutation readInquiry($inqId: ID) {\r\n//     readInquiry(_id: $inqId)\r\n//   }\r\n// `;\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { DSection } from \"../../components/styled/containers\";\r\nimport { Popup, Icon, Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\nimport moment from \"moment\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const handleRow = (e) => {\r\n    setInq(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true,\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: (row) => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      },\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"createdAt\",\r\n      sortable: true,\r\n      cell: (row) => moment(parseInt(row.createdAt)).format(\"LLL\"),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <Popup\r\n          trigger={\r\n            <DButton flex value={row._id} onClick={handleRow}>\r\n              <Eye size=\"18px\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        pad=\"24px 0\"\r\n      >\r\n        {/* <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n              Inquiry List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content> */}\r\n\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map((inq) => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          progressPending={loading_inquiries}\r\n          progressComponent={\r\n            <Spinner content=\"Please wait while we fetch our data...\" />\r\n          }\r\n        />\r\n\r\n        {inq && <ReplyModal inqId={inq} open={open} setOpen={setOpen} />}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <Breadcrumb size={\"huge\"}>\r\n    <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n      Inquiry List\r\n    </Breadcrumb.Section>\r\n  </Breadcrumb>\r\n);\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ id, photo, fetchEmployee }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id,\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            {loading ? (\r\n              <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n                <Spinner small />\r\n              </Content>\r\n            ) : (\r\n              <img\r\n                src={\r\n                  photo !== null\r\n                    ? `/images/employees/${photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            )}\r\n          </DImage>\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        {/* <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleSchedule} fluid>\r\n            Schedule\r\n          </DButton>\r\n        </DCard> */}\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = (e) => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole,\r\n    },\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  // const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    employee.dateOfBirth ? new Date(parseInt(employee.dateOfBirth)) : new Date()\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Updated Successfully\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values,\r\n    },\r\n  });\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\nimport moment from \"moment\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {moment(parseInt(employee.dateOfBirth)).format(\"LL\")}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from \"react\";\r\n\r\nconst AccountSched = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = () => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeAuth.id\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {empData && empData.employee ? (\r\n            !empLoading ? (\r\n              <>\r\n                <PhotoBooth\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                  photo={empData.employee.photo}\r\n                  id={empData.employee._id}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                />\r\n                <AccountInfo\r\n                  employee={empData.employee}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                  isAccount={isAccount}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { DotsVertical } from \"../../components/styled/utils\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Profile\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Last Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.lastName}</div>,\r\n    },\r\n    {\r\n      name: \"First Name\",\r\n      selector: \"firstName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.firstName}</div>,\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: \"email\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.email}</div>,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        mcenter\r\n        style={{ minHeight: \"50vh\" }}\r\n      >\r\n        {loading_users ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map((getUser) => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments]\r\n          }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\"\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton confirm onClick={() => setNewConfirm(true)}>\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    category: \"\",\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid custom=\"1fr 2fr\">\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n          \r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n          \r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = (props) => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s Info\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SigninForm = () => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid=\"true\" size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton flex as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      <DataTable\r\n        title={title}\r\n        columns={columns}\r\n        data={historyAppointments}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst FileReport = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n              File Report\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <DGrid>\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useUploadFile = () => {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  const onSelectedFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  return { preview, selectedFile, setSelectedFile, onSelectedFile };\r\n};\r\n\r\nexport default useUploadFile;\r\n","import React, { useRef } from \"react\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../../../styled/containers\";\r\n\r\nconst ImageSection = ({\r\n  isDark,\r\n  isPosition,\r\n  isColor,\r\n  preview,\r\n  selectedFile,\r\n  onSelectedFile,\r\n  values,\r\n  bgImg\r\n}) => {\r\n  const fileInput = useRef();\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n        <DImage dashed height=\"100%\" width=\"100%\">\r\n          {selectedFile ? (\r\n            <img src={preview} alt=\"showcase\" />\r\n          ) : (\r\n            bgImg && <img src={`/images/cms/home/${bgImg}`} alt=\"showcase\" />\r\n          )}\r\n        </DImage>\r\n\r\n        <Overlay\r\n          flex\r\n          bgr={isDark && isPosition === \"right\" ? true : false}\r\n          bgl={isDark && isPosition === \"left\" ? true : false}\r\n          bgc={isDark && isPosition === \"center\" ? true : false}\r\n          justify={\r\n            isPosition === \"left\"\r\n              ? \"flex-start\"\r\n              : isPosition === \"right\"\r\n              ? \"flex-end\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          talign={\r\n            isPosition === \"left\"\r\n              ? \"left\"\r\n              : isPosition === \"right\"\r\n              ? \"right\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          align=\"center\"\r\n          className={isDark ? \"dark\" : \"\"}\r\n        >\r\n          <div className=\"overlay-content\">\r\n            <h3>{values.title ? values.title : \"TITLE\"}</h3>\r\n            <h4>{values.subtitle ? values.subtitle : \"SUBTITLE\"}</h4>\r\n            <p className=\"ps\">\r\n              {values.paragraph\r\n                ? values.paragraph\r\n                : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec posuere ante orci, at interdum nunc maximus eu. Pellentesque tempus est ligula, sit ame\"}\r\n            </p>\r\n          </div>\r\n        </Overlay>\r\n      </DSection>\r\n\r\n      <Content width=\"80%\" margin=\"0 auto\" flex justify=\"center\" align=\"center\">\r\n        <input\r\n          type=\"file\"\r\n          value={undefined}\r\n          onChange={onSelectedFile}\r\n          style={{ display: \"none\" }}\r\n          ref={fileInput}\r\n        />\r\n        <Popup\r\n          content=\"Select image for background slide\"\r\n          trigger={\r\n            <Icon\r\n              name=\"camera\"\r\n              size=\"large\"\r\n              onClick={handleInputClick}\r\n              style={{ cursor: \"pointer\", color: \"#2193b0\", opacity: 0.75 }}\r\n              className=\"icon_camera-custom\"\r\n            />\r\n          }\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSection;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../../styled/containers\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport useUploadFile from \"../../../../../util/hooks/useUploadFile\";\r\nimport ImageSection from \"./ImageSection\";\r\nimport toaster from \"toasted-notes\";\r\nimport \"./modal.custom.css\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalSlide = ({ open, setOpen, showcase }) => {\r\n  const [isDark, setIsDark] = useState(showcase ? showcase.dark : false);\r\n  const [isPosition, setIsPosition] = useState(\r\n    showcase ? showcase.position : \"left\"\r\n  );\r\n\r\n  const [isColor, setIsColor] = useState(\r\n    showcase ? showcase.bgColor : \"#FFFFFF\"\r\n  );\r\n  const [values, setValues] = useState({\r\n    title: showcase ? showcase.title : \"\",\r\n    subtitle: showcase ? showcase.subtitle : \"\",\r\n    paragraph: showcase ? showcase.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  // ADD OR UPDATE\r\n  const mutation = showcase ? UPDATE_SLIDE : ADD_NEW_SLIDE;\r\n\r\n  const [addOrUpdateSlide, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      showcaseId: showcase && showcase._id,\r\n      ...values,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      position: isPosition,\r\n      dark: isDark,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } },\r\n    ],\r\n    update() {\r\n      if (!showcase) {\r\n        values.title = \"\";\r\n        values.subtitle = \"\";\r\n        values.paragraph = \"\";\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n      setIsDark(false);\r\n      setIsPosition(\"left\");\r\n      setSelectedFile();\r\n      setIsColor(\"#E9E4F0\");\r\n      if (showcase) {\r\n        toaster.notify(\"Update Slide Successfully\");\r\n      } else {\r\n        toaster.notify(\"Add New Slide Successfully\");\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handlePosition = (event) => {\r\n    setIsPosition(event.target.value);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    addOrUpdateSlide();\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Add New Slide </Modal.Header>\r\n      <DGrid custom=\"2fr 1fr\" gap=\"10px\">\r\n        <Modal.Content style={{ padding: \"10px\" }}>\r\n          <ImageSection\r\n            isPosition={isPosition}\r\n            isDark={isDark}\r\n            isColor={isColor}\r\n            preview={preview}\r\n            selectedFile={selectedFile}\r\n            onSelectedFile={onSelectedFile}\r\n            values={values}\r\n            bgImg={showcase && showcase.bgImg}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Content scrolling>\r\n          <Content pad=\"10px\" width=\"100%\" height=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={values.subtitle || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  maxLength=\"150\"\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={values.paragraph || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Text Positioning</label>\r\n                <Content\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"left\"\r\n                      checked={isPosition === \"left\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Left</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"center\"\r\n                      checked={isPosition === \"center\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Center</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"right\"\r\n                      checked={isPosition === \"right\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Right</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay{\" \"}\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Dark</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n        </Modal.Content>\r\n      </DGrid>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" confirm onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n        <DButton alert>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_NEW_SLIDE = gql`\r\n  mutation addNewShowCase(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    addNewShowCase(\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_SLIDE = gql`\r\n  mutation updateShowcase(\r\n    $showcaseId: ID!\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    updateShowcase(\r\n      showcaseId: $showcaseId\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst NewSlide = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"add\" />\r\n        New Slide\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst EditSlide = ({ showcase }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"edit\" style={{ color: \"white\" }} fitted />\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} showcase={showcase} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSlide;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst RemoveSlide = ({ showcase }) => {\r\n  const [isOpenRemove, setIsOpenRemove] = useState(false);\r\n\r\n  const [removeSlide, { loading }] = useMutation(REMOVE_SLIDE, {\r\n    variables: {\r\n      showcaseId: showcase._id\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } }\r\n    ],\r\n    onCompleted() {\r\n      setIsOpenRemove(false);\r\n      toaster.notify(\"Slide Remove\", { position: \"bottom-right\" });\r\n    }\r\n  });\r\n\r\n  const handleRemoveSlide = e => {\r\n    e.preventDefault();\r\n    removeSlide();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton alert onClick={() => setIsOpenRemove(true)}>\r\n        <Icon name=\"trash\" fitted />\r\n      </DButton>\r\n      <Modal\r\n        basic\r\n        open={isOpenRemove}\r\n        closeIcon\r\n        onClose={() => setIsOpenRemove(false)}\r\n      >\r\n        <Modal.Header>Slide ID: {showcase._id}</Modal.Header>\r\n        <Modal.Content>\r\n          <h1>Are you sure you want to remove this slide?</h1>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton basic confirm onClick={handleRemoveSlide}>\r\n            {loading ? <Spinner inverted small /> : \"Yes\"}\r\n          </DButton>\r\n          <DButton basic alert onClick={() => setIsOpenRemove(false)}>\r\n            No\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst REMOVE_SLIDE = gql`\r\n  mutation removeShowcase($showcaseId: ID!) {\r\n    removeShowcase(showcaseId: $showcaseId)\r\n  }\r\n`;\r\n\r\nexport default RemoveSlide;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport {\r\n  DShowCase,\r\n  Overlay,\r\n  DSection,\r\n  DImage\r\n} from \"../../../../styled/containers\";\r\nimport NewSlide from \"./NewSlide\";\r\nimport EditSlide from \"./EditSlide\";\r\nimport RemoveSlide from \"./RemoveSlide\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Showcase = () => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  const { data: showcaseData, loading: dataLoading } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" mcenter>\r\n      <NewSlide />\r\n      <div style={{ position: \"relative\" }}>\r\n        {dataLoading ? (\r\n          <DShowCase height=\"80vh\">\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src=\"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                alt=\"showcase\"\r\n              />\r\n            </DImage>\r\n          </DShowCase>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {showcase.map(sc => (\r\n              <DShowCase\r\n                height=\"80vh\"\r\n                key={sc._id}\r\n                background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n                bgcolor={sc.bgColor}\r\n              >\r\n                <Overlay\r\n                  flex\r\n                  bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                  bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                  bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                  justify={\r\n                    sc.position === \"left\"\r\n                      ? \"flex-start\"\r\n                      : sc.position === \"right\"\r\n                      ? \"flex-end\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  talign={\r\n                    sc.position === \"left\"\r\n                      ? \"left\"\r\n                      : sc.position === \"right\"\r\n                      ? \"right\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  align=\"center\"\r\n                  className={sc.dark ? \"dark\" : \"\"}\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h1>{sc.title}</h1>\r\n                    <h2>{sc.subtitle}</h2>\r\n                    <p>{sc.paragraph}</p>\r\n                  </div>\r\n                </Overlay>\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 20,\r\n                    zIndex: 2,\r\n                    width: \"auto\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <EditSlide showcase={sc} />\r\n                  <RemoveSlide showcase={sc} />\r\n                </div>\r\n              </DShowCase>\r\n            ))}\r\n          </Slider>\r\n        )}\r\n      </div>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport Spinner from \"../../../../Spinner\";\r\n\r\nconst EditModal = ({ aboutBool }) => {\r\n  const [updateAboutSection, { loading }] = useMutation(UPDATE_ABOUT_SECTION, {\r\n    variables: { sectionName: \"ABOUT\" },\r\n  });\r\n\r\n  const handleReverse = () => {\r\n    updateAboutSection();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner small />\r\n      ) : (\r\n        <Popup\r\n          content=\"Toggle Position\"\r\n          trigger={\r\n            <div className=\"pretty p-switch p-fill p-toggle\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"alt\"\r\n                value={aboutBool}\r\n                onChange={handleReverse}\r\n                checked={aboutBool === true ? true : false}\r\n              />\r\n              <div className=\"state p-primary p-on\">\r\n                <label style={{ fontWeight: 500 }}>Reverse</label>\r\n              </div>\r\n              <div className=\"state p-warning p-off\">\r\n                <label style={{ fontWeight: 500 }}>Default</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n          inverted\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_SECTION = gql`\r\n  mutation updateAboutSection($sectionName: String!) {\r\n    updateAboutSection(sectionName: $sectionName) {\r\n      _id\r\n      sectionName\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_HOME_SECTION,\r\n  FETCH_ABOUT_CMS,\r\n} from \"../../../../../util/graphql/cms\";\r\nimport { Section2Styled, Content } from \"../../../../styled/containers\";\r\nimport EditModal from \"./EditModal\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst SectionAbout = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAboutSection, loading: loadingAboutSection } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: { sectionName: \"ABOUT\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataAboutSection) {\r\n      setIsAbout(dataAboutSection.homeCMS);\r\n    }\r\n  }, [dataAboutSection]);\r\n\r\n  const { data: dataAbout, loading: loadingAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  return (\r\n    <Section2Styled visible width=\"90%\" alt={isAbout.alt ? true : false}>\r\n      <div className=\"switch\">\r\n        {loadingAboutSection ? (\r\n          <Spinner tiny />\r\n        ) : (\r\n          <EditModal aboutBool={dataAboutSection.homeCMS.alt} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"sec2-container\">\r\n        <div className=\"sec2-inner\">\r\n          {loadingAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\">\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default SectionAbout;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"./styled/utils\";\r\n\r\nconst ReadMore = (props) => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../../../util/graphql/service\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  Overlay,\r\n  DImage,\r\n  DCard,\r\n} from \"../../../../styled/containers\";\r\nimport useWindowSize from \"../../../../../util/hooks/useWindowSize\";\r\nimport ReadMore from \"../../../../ReadMore\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst CategoryCards = ({ gridCount }) => {\r\n  const { width: wid } = useWindowSize();\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <Content height=\"100%\" width=\"100%\">\r\n      {loading ? (\r\n        <DGrid four gap=\"20px\">\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n        </DGrid>\r\n      ) : (\r\n        <DGrid\r\n          two={gridCount === 2 ? true : false}\r\n          three={gridCount === 3 ? true : false}\r\n          four={gridCount === 4 ? true : false}\r\n          gap=\"20px\"\r\n        >\r\n          {isCategories.map((category) => (\r\n            <DCard\r\n              key={category._id}\r\n              dw={wid < 524 ? \"70%\" : \"90%\"}\r\n              dh=\"250px\"\r\n              mcenter\r\n              p=\"0px\"\r\n              grayzoom\r\n              overlaying\r\n            >\r\n              <DImage height=\"100%\" width=\"100%\" grayscaling>\r\n                <img\r\n                  src={\r\n                    category.photo\r\n                      ? `/images/service/${category.photo}`\r\n                      : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  alt={category.name}\r\n                />\r\n              </DImage>\r\n\r\n              <Overlay\r\n                bgc\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                initbox\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h3 className=\"title\">{category.name}</h3>\r\n\r\n                    {category.description.length > 100\r\n                      ? parser(category.description.substr(0, 100) + \"...\")\r\n                      : parser(category.description.substr(0, 100))}\r\n\r\n                    <ReadMore center size=\"14px\">\r\n                      Learn More\r\n                    </ReadMore>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DCard>\r\n          ))}\r\n        </DGrid>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { Content } from \"../../../../styled/containers\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\"\r\n];\r\n\r\nconst UpdateSectCategory = ({\r\n  setOpenCatSec,\r\n  openCatSec,\r\n  categorySectionInfo\r\n}) => {\r\n  const [isColor, setIsColor] = useState(\r\n    categorySectionInfo && categorySectionInfo.bgColor\r\n  );\r\n\r\n  const [isDark, setIsDark] = useState(\r\n    categorySectionInfo && categorySectionInfo.dark\r\n  );\r\n\r\n  const [gridCount, setGridCount] = useState(\r\n    categorySectionInfo && categorySectionInfo.grid\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: categorySectionInfo && categorySectionInfo.title,\r\n    subtitle: categorySectionInfo && categorySectionInfo.subtitle,\r\n    paragraph: categorySectionInfo && categorySectionInfo.paragraph\r\n  });\r\n\r\n  const [updateSectionCategory, { loading }] = useMutation(\r\n    UPDATE_CATEGORY_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n        ...values,\r\n        grid: gridCount,\r\n        dark: isDark,\r\n        bgColor: isColor\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_HOME_SECTION, variables: { sectionName: \"CATEGORY\" } }\r\n      ],\r\n      onCompleted() {\r\n        setOpenCatSec(false);\r\n        toaster.notify(\"Update Category Section\");\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = color => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleGrid = event => {\r\n    setGridCount(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    updateSectionCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={openCatSec}\r\n      onClose={() => setOpenCatSec(false)}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>Update Section Category</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Form>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              name=\"title\"\r\n              value={values.title || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Subtitle</label>\r\n            <input\r\n              name=\"subtitle\"\r\n              value={values.subtitle || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Paragraph</label>\r\n            <TextArea\r\n              maxLength=\"150\"\r\n              style={{ minHeight: 100 }}\r\n              name=\"paragraph\"\r\n              value={values.paragraph || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Background-color{\" \"}\r\n              <Popup\r\n                content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n\r\n            <BlockPicker\r\n              width=\"200px\"\r\n              triangle=\"hide\"\r\n              color={isColor}\r\n              colors={colors}\r\n              onChange={handleChangeComplete}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Text Contrast{\" \"}\r\n              <Popup\r\n                content=\"Change the text to white if background is dark and dark text if background is light\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n            <Content\r\n              flex\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-switch p-fill\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"dark\"\r\n                  value={isDark}\r\n                  checked={isDark === true ? true : false}\r\n                  onChange={handleDark}\r\n                />\r\n                <div className=\"state p-info\">\r\n                  <label>{isDark === true ? \"Light\" : \"Dark\"}</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Grid Count Display</label>\r\n            <Content\r\n              flex\r\n              justify=\"space-around\"\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"2\"\r\n                  checked={gridCount === 2 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Two</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"3\"\r\n                  checked={gridCount === 3 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Three</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"4\"\r\n                  checked={gridCount === 4 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Four</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_CATEGORY_SECTION = gql`\r\n  mutation updateHomeSection(\r\n    $sectionName: String\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $grid: Int\r\n  ) {\r\n    updateHomeSection(\r\n      sectionName: $sectionName\r\n      inputHomeContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        grid: $grid\r\n      }\r\n    ) {\r\n      _id\r\n      sectionName\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgColor\r\n      dark\r\n      grid\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UpdateSectCategory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { DSection, Content } from \"../../../../styled/containers\";\r\nimport { DButtonFree } from \"../../../../styled/utils\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport FancyText from \"../../../../FancyText\";\r\nimport CategoryCards from \"./CategoryCards\";\r\nimport UpdateSectCategory from \"./UpdateSectCategory\";\r\n\r\nconst SectionCategory = () => {\r\n  const [sectCategory, setSectCategory] = useState({});\r\n  const [openCatSec, setOpenCatSec] = useState(false);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setSectCategory(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        margin=\"48px auto\"\r\n        pad=\"10px\"\r\n        bgcolor={sectCategory.bgColor}\r\n      >\r\n        <Popup\r\n          content=\"Update Category Section\"\r\n          trigger={\r\n            <DButtonFree top={0} right={0} onClick={() => setOpenCatSec(true)}>\r\n              <Icon name=\"edit\" fitted />\r\n            </DButtonFree>\r\n          }\r\n          position=\"top right\"\r\n        />\r\n\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Content\r\n            width=\"auto\"\r\n            height=\"auto\"\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            className={sectCategory.dark ? \"dark\" : \"\"}\r\n          >\r\n            <FancyText alt={sectCategory.dark ? true : false}>\r\n              {sectCategory.title}\r\n            </FancyText>\r\n            <h3>\r\n              {sectCategory.subtitle !== \"\"\r\n                ? sectCategory.subtitle\r\n                : \"SUBTITLE\"}\r\n            </h3>\r\n            <p>\r\n              {sectCategory.paragraph !== \"\"\r\n                ? sectCategory.paragraph\r\n                : \"PARAGRAPH\"}\r\n            </p>\r\n          </Content>\r\n          {!loadSectionCategory && (\r\n            <UpdateSectCategory\r\n              openCatSec={openCatSec}\r\n              setOpenCatSec={setOpenCatSec}\r\n              categorySectionInfo={sectionCategory.homeCMS}\r\n            />\r\n          )}\r\n\r\n          <CategoryCards gridCount={sectCategory.grid} />\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionCategory;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/showcase/Showcase\";\r\nimport SectionAbout from \"../../../components/admin/cms/home/sectionabout/SectionAbout\";\r\nimport SectionCategory from \"../../../components/admin/cms/home/sectioncategory/SectionCategory\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Showcase />\r\n      <SectionAbout />\r\n      <SectionCategory />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalHeading = ({ isAbout }) => {\r\n  const fileInput = useRef();\r\n  const [openHead, setOpenHead] = useState(false);\r\n  const [isDark, setIsDark] = useState(isAbout ? isAbout.dark : false);\r\n  const [isOverlay, setIsOverlay] = useState(isAbout ? isAbout.overlay : false);\r\n  const [headers, setHeaders] = useState({\r\n    title: isAbout ? isAbout.title : \"\",\r\n    subtitle: isAbout ? isAbout.subtitle : \"\",\r\n    paragraph: isAbout ? isAbout.paragraph : \"\",\r\n  });\r\n  const [isColor, setIsColor] = useState(isAbout ? isAbout.bgColor : \"#FFFFFF\");\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  const [updateAboutUs, { loading }] = useMutation(UPDATE_ABOUT_HEADER, {\r\n    variables: {\r\n      ...headers,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      dark: isDark,\r\n      overlay: isOverlay,\r\n    },\r\n\r\n    onCompleted() {\r\n      setOpenHead(false);\r\n      toaster.notify(\"Update Successful\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeHeaders = (e) => {\r\n    setHeaders({ ...headers, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleOverlay = () => {\r\n    setIsOverlay(!isOverlay);\r\n  };\r\n\r\n  const handleSaveHeader = () => {\r\n    updateAboutUs();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenHead(true)}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openHead} onClose={() => setOpenHead(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isAbout.bgImg && (\r\n                    <img\r\n                      src={`/images/cms/about/${isAbout.bgImg}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n\r\n              <Overlay bgc={isOverlay ? true : false}>\r\n                <Content\r\n                  flex\r\n                  justify=\"center\"\r\n                  direct=\"column\"\r\n                  align=\"center\"\r\n                  width=\"50%\"\r\n                  margin=\"0 auto\"\r\n                  height=\"100%\"\r\n                  style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n                  className={isDark ? \"dark\" : \"\"}\r\n                >\r\n                  <h1 style={{ fontSize: \"22px\" }}>\r\n                    {headers.title ? headers.title : \"TITLE\"}\r\n                  </h1>\r\n                  <h4> {headers.subtitle ? headers.subtitle : \"SUBTITLE\"}</h4>\r\n                </Content>\r\n              </Overlay>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={headers.title || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={headers.subtitle || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Text Contrast\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Light</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"overlay\"\r\n                      value={isOverlay}\r\n                      checked={isOverlay === true ? true : false}\r\n                      onChange={handleOverlay}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Off</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveHeader}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_HEADER = gql`\r\n  mutation updateAboutUs(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $overlay: Boolean\r\n  ) {\r\n    updateAboutUs(\r\n      inputAbout: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        overlay: $overlay\r\n      }\r\n    ) {\r\n      _id\r\n      title\r\n      subtitle\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalHeading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, Overlay } from \"../../../styled/containers\";\r\nimport MouseScroll from \"../../../MouseScroll\";\r\nimport ModalHeading from \"./ModalHeading\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Heading = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n\r\n  const {\r\n    data: dataAboutContent,\r\n    loading: loadAboutContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataAboutContent) {\r\n      setIsAbout(dataAboutContent.aboutUsCMS);\r\n    }\r\n  }, [dataAboutContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadAboutContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          background={isAbout.bgImg && `/images/cms/about/${isAbout.bgImg}`}\r\n          bgcolor={isAbout.bgColors}\r\n          width=\"90%\"\r\n          mcenter\r\n          height=\"55vh\"\r\n          fixed\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className={isAbout.dark ? \"dark\" : \"\"}\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>{isAbout.title}</h1>\r\n            {isAbout.subtitle !== \"\" && <h4>{isAbout.subtitle}</h4>}\r\n            <MouseScroll />\r\n          </Content>\r\n          <Overlay bgc={isAbout.overlay ? true : false} />\r\n          <ModalHeading isAbout={dataAboutContent.aboutUsCMS} />\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, TextArea } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalStory = ({ isStory }) => {\r\n  const fileInput = useRef();\r\n  const [openStory, setOpenStory] = useState(false);\r\n  const [reverse, setReverse] = useState(isStory ? isStory.alt : false);\r\n\r\n  const [stories, setStories] = useState({\r\n    title: isStory ? isStory.title : \"\",\r\n    subtitle: isStory ? isStory.subtitle : \"\",\r\n    paragraph: isStory ? isStory.paragraph : \"\",\r\n  });\r\n\r\n  const { preview, selectedFile, onSelectedFile } = useUploadFile();\r\n\r\n  const [updateStory, { loading }] = useMutation(UPDATE_ABOUT_STORY, {\r\n    variables: {\r\n      ...stories,\r\n      photo: selectedFile,\r\n      alt: reverse,\r\n    },\r\n    onCompleted() {\r\n      setOpenStory(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeStory = (e) => {\r\n    setStories({ ...stories, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverse = () => {\r\n    setReverse(!reverse);\r\n  };\r\n\r\n  const handleSaveStory = () => {\r\n    updateStory();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenStory(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openStory} onClose={() => setOpenStory(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isStory.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isStory.photo}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={stories.title || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={stories.subtitle || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={stories.paragraph || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={reverse}\r\n                      checked={reverse === true ? true : false}\r\n                      onChange={handleReverse}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveStory}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_STORY = gql`\r\n  mutation updateStory(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateStory(\r\n      inputStory: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      _id\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalStory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\nimport ModalStory from \"./ModalStory\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isStory, setIsStory] = useState({});\r\n\r\n  const {\r\n    data: dataStoryContent,\r\n    loading: loadStoryContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataStoryContent) {\r\n      setIsStory(dataStoryContent.aboutUsCMS.story);\r\n    }\r\n  }, [dataStoryContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadStoryContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          mcenter\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768 ? \"column\" : isStory.alt ? \"row-reverse\" : \"row\"\r\n          }\r\n        >\r\n          <ModalStory isStory={dataStoryContent.aboutUsCMS.story} />\r\n\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isStory\r\n                    ? `/images/cms/about/${isStory.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"20px\"\r\n            style={{ maxHeight: \"90vh\" }}\r\n          >\r\n            <h3>{isStory.title}</h3>\r\n            {isStory.subtitle !== \"\" && <h4>{isStory.subtitle}</h4>}\r\n            <p\r\n              style={{\r\n                fontSize: \"15px\",\r\n                letterSpacing: \"2px\",\r\n                lineHeight: 1.8,\r\n                textAlign: \"justify\",\r\n                overflowWrap: \"break-word\",\r\n                overflow: \"auto\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              {isStory.paragraph}\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, Divider, TextArea } from \"semantic-ui-react\";\r\nimport { DImage, Content, DSection, DGrid } from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalMissionVision = ({ isMissionVision }) => {\r\n  const fileInputMV = useRef();\r\n  const [openMission, setOpenMission] = useState(false);\r\n  const [reverseMV, setReverseMV] = useState(\r\n    isMissionVision ? isMissionVision.alt : false\r\n  );\r\n\r\n  const [valuesMV, setValuesMV] = useState({\r\n    mtitle: isMissionVision ? isMissionVision.mission.title : \"\",\r\n    msubtitle: isMissionVision ? isMissionVision.mission.subtitle : \"\",\r\n    mparagraph: isMissionVision ? isMissionVision.mission.paragraph : \"\",\r\n    vtitle: isMissionVision ? isMissionVision.vision.title : \"\",\r\n    vsubtitle: isMissionVision ? isMissionVision.vision.subtitle : \"\",\r\n    vparagraph: isMissionVision ? isMissionVision.vision.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview: previewMV,\r\n    selectedFile: selectedFileMV,\r\n    onSelectedFile: onSelectedFileMV,\r\n  } = useUploadFile();\r\n\r\n  const [updateMission, { loading }] = useMutation(UPDATE_ABOUT_MISSIONVISION, {\r\n    variables: {\r\n      ...valuesMV,\r\n      photo: selectedFileMV,\r\n      alt: reverseMV,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_ABOUT_CMS, variables: { contentName: \"ABOUTUS\" } },\r\n    ],\r\n    onCompleted() {\r\n      setOpenMission(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClickMV = () => {\r\n    fileInputMV.current.click();\r\n  };\r\n\r\n  const handleChangeValues = (e) => {\r\n    setValuesMV({ ...valuesMV, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverseMV = () => {\r\n    setReverseMV(!reverseMV);\r\n  };\r\n\r\n  const handleSaveMV = () => {\r\n    updateMission();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        onClick={() => setOpenMission(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openMission} onClose={() => setOpenMission(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid two gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFileMV ? (\r\n                  <img src={previewMV} alt=\"showcase\" />\r\n                ) : (\r\n                  isMissionVision.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isMissionVision.photo}`}\r\n                      alt=\"about\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFileMV}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInputMV}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClickMV}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Divider horizontal>Mission</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"mtitle\"\r\n                  value={valuesMV.mtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"msubtitle\"\r\n                  value={valuesMV.msubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"mparagraph\"\r\n                  value={valuesMV.mparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Divider horizontal>Vision</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"vtitle\"\r\n                  value={valuesMV.vtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"vsubtitle\"\r\n                  value={valuesMV.vsubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"vparagraph\"\r\n                  value={valuesMV.vparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"reverse\"\r\n                      value={reverseMV}\r\n                      checked={reverseMV === true ? true : false}\r\n                      onChange={handleReverseMV}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveMV}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_MISSIONVISION = gql`\r\n  mutation updateMission(\r\n    $mtitle: String\r\n    $msubtitle: String\r\n    $mparagraph: String\r\n    $vtitle: String\r\n    $vsubtitle: String\r\n    $vparagraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateMission(\r\n      inputMissionVision: {\r\n        mtitle: $mtitle\r\n        msubtitle: $msubtitle\r\n        mparagraph: $mparagraph\r\n        vtitle: $vtitle\r\n        vsubtitle: $vsubtitle\r\n        vparagraph: $vparagraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalMissionVision;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport ModalMissionVision from \"./ModalMissionVision\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isMission, setIsMission] = useState({});\r\n\r\n  const { data: dataMissionVision, loading: loadMissionVision } = useQuery(\r\n    FETCH_ABOUT_CMS,\r\n    {\r\n      variables: {\r\n        contentName: \"ABOUTUS\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataMissionVision) {\r\n      setIsMission(dataMissionVision.aboutUsCMS.missionvision);\r\n    }\r\n  }, [dataMissionVision]);\r\n\r\n  return (\r\n    <>\r\n      {loadMissionVision ? (\r\n        <DSection\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          mcenter\r\n        >\r\n          <Skeleton width=\"50%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768\r\n              ? \"column\"\r\n              : isMission.alt === true\r\n              ? \"row-reverse\"\r\n              : \"row\"\r\n          }\r\n          margin=\"24px auto\"\r\n        >\r\n          <ModalMissionVision\r\n            isMissionVision={dataMissionVision.aboutUsCMS.missionvision}\r\n          />\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"24px\"\r\n          >\r\n            <h3>{isMission.mission && isMission.mission.title}</h3>\r\n            {isMission.mission && isMission.mission.subtitle !== \"\" && (\r\n              <h4>{isMission.mission.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.mission && isMission.mission.paragraph}</p>\r\n            <h3>{isMission.vision && isMission.vision.title}</h3>\r\n            {isMission.vision && isMission.vision.subtitle !== \"\" && (\r\n              <h4>{isMission.vision.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.vision && isMission.vision.paragraph}</p>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isMission.photo\r\n                    ? `/images/cms/about/${isMission.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n      s\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Heading from \"../../../components/admin/cms/about/Heading\";\r\nimport Story from \"../../../components/admin/cms/about/Story\";\r\nimport Mission from \"../../../components/admin/cms/about/Mission\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Layout>\r\n      <Content\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        margin=\"20px auto\"\r\n        align=\"center\"\r\n      >\r\n        <div>\r\n          <h3>Content Management</h3>\r\n        </div>\r\n        <div style={{ margin: \"0 1em\" }}>\r\n          <Icon name=\"angle right\" size=\"large\" fitted />\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to=\"/zeadmin/cms_about\"\r\n            style={{\r\n              fontSize: \"18px\",\r\n              fontWeight: 700,\r\n              borderBottom: \"2px solid\",\r\n              paddingBottom: \"5px\",\r\n            }}\r\n          >\r\n            About Us\r\n          </Link>\r\n        </div>\r\n      </Content>\r\n      <Heading />\r\n      <Mission />\r\n      <Story />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst ToggleView = ({ swid, tggl }) => {\r\n  const [toggleValue, setToggleValue] = useState(\"\");\r\n\r\n  const [toggleTestimonial, { loading: loadToggle }] = useMutation(\r\n    TOGGLE_REVIEW,\r\n    {\r\n      variables: {\r\n        id: toggleValue,\r\n      },\r\n      refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n    }\r\n  );\r\n\r\n  const hoverSwitch = (e) => {\r\n    setToggleValue(e.currentTarget.dataset.sid);\r\n  };\r\n\r\n  const handleSwitch = (e) => {\r\n    toggleTestimonial();\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      content=\"Switch on to display testimonial in Home Page\"\r\n      style={style.popContent}\r\n      inverted\r\n      trigger={\r\n        <div\r\n          className=\"pretty p-switch p-fill\"\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          {loadToggle ? (\r\n            <Spinner tiny />\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"checkbox\"\r\n                data-sid={swid}\r\n                checked={tggl === true ? true : false}\r\n                onMouseOver={hoverSwitch}\r\n                onChange={handleSwitch}\r\n              />\r\n              <div className=\"state p-success\">\r\n                <label></label>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID!) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n      view\r\n    }\r\n  }\r\n`;\r\n\r\nconst style = {\r\n  popContent: {\r\n    borderRadius: 0,\r\n    opacity: 0.7,\r\n    padding: \"2em\",\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default ToggleView;\r\n","import React, { useState } from \"react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\n\r\nconst ModalView = ({ ridd, open, setOpen }) => {\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Content>{ridd}</Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalView;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\n\r\nimport { Modal, Icon, Popup } from \"semantic-ui-react\";\r\nimport { Archive } from \"@styled-icons/boxicons-solid/Archive\";\r\nimport { DeleteForever } from \"@styled-icons/material/DeleteForever\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\n\r\nconst DeleteView = ({ ridd, rvw, isDltModal, setIsDltModal }) => {\r\n  const { width: wdth } = useWindowSize();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [archiveTestimonial, { loading: loadArchive }] = useMutation(\r\n    ARCHIVED_REVIEW,\r\n    {\r\n      variables: { id: ridd },\r\n      refetchQueries: [\r\n        { query: FETCH_TESTIMONIALS, variables: { active: true } },\r\n      ],\r\n      onCompleted() {\r\n        toaster.notify(\"Testimonial was sent to archive files\");\r\n      },\r\n      onError(err) {\r\n        if (err.graphQLErrors[0].extensions.exception.errors.unauth) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted alert onClick={onClose}>\r\n                {err.graphQLErrors[0].extensions.exception.errors.unauth}\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleArchive = () => {\r\n    archiveTestimonial();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"small\"\r\n        basic\r\n        closeIcon\r\n        onClose={() => setIsDltModal(false)}\r\n        open={isDltModal}\r\n        style={{ zIndex: 9 }}\r\n      >\r\n        <Modal.Header>\r\n          <Archive size=\"22px\" /> Archived this User's Review?\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <h3>\r\n            Name: {rvw.user.firstName} {rvw.user.firstName}\r\n          </h3>\r\n          <h4>Message:</h4>\r\n          <p style={{ textIndent: \"1em\" }}>\r\n            <strong>{rvw.message}</strong>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            width={wdth <= 768 ? \"100%\" : \"90%\"}\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <Content width=\"auto\">\r\n              <Popup\r\n                content=\"Deleting will permanently erase this review\"\r\n                trigger={\r\n                  <DButton alert style={{ fontSize: \"12px\" }}>\r\n                    <DeleteForever size=\"22px\" /> Delete Permanently\r\n                  </DButton>\r\n                }\r\n                inverted\r\n              />\r\n            </Content>\r\n            <Content width=\"auto\" flex justify=\"space-around\" align=\"center\">\r\n              <DButton confirm onClick={handleArchive} basic>\r\n                {loadArchive ? (\r\n                  <Spinner inverted small />\r\n                ) : (\r\n                  <>\r\n                    <Icon name=\"check\" /> Yes\r\n                  </>\r\n                )}\r\n              </DButton>\r\n\r\n              <DButton alert onClick={() => setIsDltModal(false)} basic>\r\n                <Icon name=\"ban\" /> No\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ARCHIVED_REVIEW = gql`\r\n  mutation archiveTestimonial($id: ID!) {\r\n    archiveTestimonial(_id: $id)\r\n  }\r\n`;\r\n\r\nexport default DeleteView;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { DotsVertical } from \"../../../components/styled/utils\";\r\nimport { Popup, Grid, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport ModalView from \"../../../components/admin/testimonial/ModalView\";\r\nimport DeleteView from \"../../../components/admin/testimonial/DeleteView\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nconst MenuView = ({ menuId, review }) => {\r\n  const [menuValue, setMenuValue] = useState(\"\");\r\n  const [isDltModal, setIsDltModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const handleMenu = (e) => {\r\n    setMenuValue(e.currentTarget.dataset.rid);\r\n  };\r\n\r\n  const modalDeleteShow = () => {\r\n    setIsDltModal(true);\r\n  };\r\n\r\n  console.log(employeeAuth);\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        on=\"click\"\r\n        trigger={\r\n          <DotsVertical\r\n            size=\"24px\"\r\n            data-rid={menuId}\r\n            onMouseOver={handleMenu}\r\n          />\r\n        }\r\n        flowing\r\n        position=\"top right\"\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Grid\r\n          centered\r\n          divided\r\n          columns={\r\n            employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3 ? 2 : 1\r\n          }\r\n        >\r\n          {(employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3) && (\r\n            <Grid.Column textAlign=\"center\">\r\n              <DButton alert>\r\n                <Icon name=\"trash\" fitted onClick={modalDeleteShow} />\r\n              </DButton>\r\n            </Grid.Column>\r\n          )}\r\n\r\n          <Grid.Column>\r\n            <DButton confirm onClick={() => setOpen(true)}>\r\n              <Icon name=\"eye\" fitted />\r\n            </DButton>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Popup>\r\n\r\n      <DeleteView\r\n        ridd={menuValue}\r\n        rvw={review}\r\n        setIsDltModal={setIsDltModal}\r\n        isDltModal={isDltModal}\r\n      />\r\n      <ModalView ridd={menuValue} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\n\r\nimport ToggleView from \"../../../components/admin/testimonial/ToggleView\";\r\nimport MenuView from \"../../../components/admin/testimonial/MenuView\";\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nconst Testimonial = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const {\r\n    data: dataReviews,\r\n    loading: loadReviews,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonials);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: (row) => <ToggleView swid={row._id} tggl={row.view} />,\r\n      width: \"80px\",\r\n      button: true,\r\n      style: {\r\n        borderBottom: \"1px solid #FFFFFF\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"user.lastName\",\r\n      sortable: true,\r\n      format: (row) => `${row.user.firstName} ${row.user.lastName}`,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => <MenuView menuId={row._id} review={row} />,\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        mcenter\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n      >\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            columns={columns}\r\n            data={reviews.map((rev) => rev)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loadReviews}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Testimonial;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport About from \"./admin/cms/About\";\r\nimport Testimonial from \"./admin/cms/Testimonial\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/dashboard\" exact />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/paccount\"\r\n          component={PersonalAccount}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/userInfo/:_id\"\r\n          component={UserInfo}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_about\" component={About} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/cms_testimonial\"\r\n          component={Testimonial}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\",\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Main from \"./pages/Main\";\r\nimport Admin from \"./pages/Admin\";\r\nimport Page404 from \"./pages/Page404\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./components/theme\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Switch>\r\n            {/* <Redirect from=\"/\" to=\"/zessence\" exact /> */}\r\n            <Route path=\"/zeadmin\" component={Admin} />\r\n            <Route path=\"/\" component={Main} />\r\n\r\n            <Route component={Page404} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ApolloProvider from \"./ApolloProvider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"toasted-notes/src/styles.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./css/slick-theme.custom.css\";\r\nimport \"./css/slick.custom.css\";\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}