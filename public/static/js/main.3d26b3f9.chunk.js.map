{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","components/main/navigation/Navigation.js","util/hooks/useScroll.js","components/styled/containers.js","components/main/home/Showcase.js","components/main/home/CategoryCards.js","components/main/home/Team.js","components/main/home/Section2.js","components/main/home/Section3.js","pages/main/Home.js","pages/main/About.js","util/hooks/useForm.js","components/styled/utils.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","util/graphql/employee.js","util/graphql/service.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/styled/loader.js","components/Spinner.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Contact.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountDetails.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/styled/skeleton.js","components/Skeleton.js","pages/main/MyAccount.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","components/main/user/AppointmentCancel.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/Accordion.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/HistoryAppointments.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","util/graphql/inquiry.js","pages/admin/Inquiry.js","pages/admin/User.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","secondary","DMainMenu","primary","blue","open","dark","DRightMenu","DBurger","Burger","setOpen","onClick","Navigation","ref","handler","scrolling","useState","setScrolling","scrollTop","setScrollTop","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","useScroll","node","useRef","listener","event","current","contains","document","history","useHistory","useContext","trigger","style","fontSize","Icon","name","firstName","className","src","alt","to","Dropdown","Menu","Item","userId","_id","push","columns","rows","DContainer","div","DShowCase","header","height","background","bgcolor","Overlay","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","DCard","imgHeight","DSection","width","mcenter","fixed","Content","fluid","rounded","imgWidth","DImage","m","DFooterLinks","DFooter","footer","Showcase","CategoryCards","cards","setRef","Team","Section2","Section3","Home","card1","About","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","currentTarget","ripple","keyframes","DButton","button","fSize","size","text","border","basic","color","light","DButtonCancel","red","DButtonConfirm","green","DLabel","label","ls","weight","tt","hover","NavItem","bluer","DAccordion","fs","uc","lc","Toasted","status","REGISTER_USER","gql","SignupForm","hist","from","errors","setErrors","register","lastName","email","password","confirmPassword","useMutation","update","onError","err","graphQLErrors","extensions","exception","variables","loading","Form","noValidate","onSubmit","Group","widths","Field","error","Label","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","LOGIN_USER","SigninForm","context","_","data","userLogin","refetchQueries","query","onCompleted","result","console","log","loginUser","userX","general","Signin","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","as","timeSlot","startTimeMoment","i","add","format","styles","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","handleTimeChanged","useQuery","employeeId","data_employee","loading_employee","serviceId","data_service","date","toLocaleDateString","data_appointments","workStart","employee","schedule","breakStart","day","map","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","key","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","loading_categories","data_categories","useLazyQuery","categoryId","category","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","padding","categories","cursor","position","outline","visibility","textAlign","services","employees","servEmp","keyring","SpinnerRing","small","medium","inverted","Spinner","large","CREATE_NEW_APPOINTMENT","diplay","justifyContent","alignItems","Confirmation","selectedTime","addInfo","setAddInfo","cache","readQuery","newAppointment","createAppointment","writeQuery","myAppointments","toaster","notify","onClose","expiredLog","check","start","message","Modal","Header","readOnly","title","toDateString","Actions","Appointment","setCategories","setService","setServiceEmp","disabled","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","VERRIFIED_APPOINTMENT","ThankYou","emailToken","params","go","appointmentId","verifiedAppointment","onload","Link","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPDATE_USER","AccountDetails","myDetails","updateUser","contact","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","currentAppointData","currentAppointLoading","selector","sortable","wrap","row","parseInt","cell","myCurrentAppointment","currentAppoint","responsive","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","historyAppoint","placeholderAnimate","DSkeleton","wid","Skeleton","UPLOAD_USER_PHOTO","MyAccount","userInfo","userLoading","addUserPhoto","onDrop","useCallback","file","useDropzone","getRootProps","getInputProps","isDragActive","photo","AdminAuthRoute","Component","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","CANCEL_APPOINTMENT_MUTATION","AppointmentCancel","invalidCancellation","cancelAppointment","field","display","jusitfyContent","input","AppointmentDetails","setMyAppoint","appointment","margn","jusitfy","goBack","Main","path","exact","UpcommingAppointments","appointments","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","marginLeft","Accordion","setActive","contentRef","maxHeight","scrollHeight","icon","children","SideNav","activeClassName","Layout","Dashboard","setAppointments","setpercentage","chartData","setChartData","labels","datasets","borderColor","borderWidth","options","scales","xAxes","gridLines","yAxes","legend","CurrentAppointments","setCurrentAppointments","currentAppointmentData","currentAppointments","currAppoint","HistoryAppointments","setHistoryAppointments","historyAppointmentData","appointmentHistory","histAppoint","Appointments","Breadcrumb","Section","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","NewDateTime","NewAppointmentDetails","CREATE_GUEST_APPOINTMENT","createGuestAppointment","NewAppointment","Divider","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","role","workLength","breakLength","newEmployee","aestheticiansReceps","Checkbox","class","Employees","setEmployeesAR","data_employeesAR","loading_employeesAR","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","bio","content","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","setServices","dataCategory","loadingCategory","addService","flexDirection","close","EmployeeServices","overflow","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","description","newCategory","Categories","html","DOMParser","parseFromString","textContent","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","price","newService","serviceExist","ServiceList","progressComponent","UPLOAD_CATEGORY_PHOTO","Category","setCategory","dataLoading","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","Service","serviceData","serviceLoading","addServicePhoto","replace","FETCH_INQUIRIES","Inquiry","setInquiries","data_inquiries","inquiries","inq","User","setUsers","data_users","loading_users","getUsers","getUser","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","letterSpacing","Admin","yellow","App","uploadLink","createUploadLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3d26b3f9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${props => (props.bg ? props.bg : \"transparent\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 20vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 17px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      // flex-direction: column;\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${props =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.6); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n  }\r\n\r\n  li a:hover,\r\n  &.active {\r\n    border-bottom: 2px solid ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.primary};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.blue};\r\n    transform: ${({ open }) =>\r\n      open ? \"skewX(-15deg) translateX(0%)\" : \"translateX(100%)\"};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \"skewX(15deg) translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.dark};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import React, { useRef, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { DNavigation, DMainMenu, DRightMenu } from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  let history = useHistory();\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/zessence\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user ? (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      ) : (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, User\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open}>\r\n          <li>\r\n            <Link to=\"/zessence\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/services&rates\">Services & Rates</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/about\">About Us</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/testimonials\">Testimonials</Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item>\r\n                    <Link to={`/zessence/myaccount/${user.userId || user._id}`}>\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired\r\n};\r\n\r\nexport default Navigation;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll() {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > 0);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n\r\n  margin: auto;\r\n`;\r\n\r\nexport const DShowCase = styled.header`\r\n  width: 100%;\r\n  height: ${props => (props.height ? props.height : \"90vh\")};\r\n  position: relative;\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding-bottom: 50px;\r\n  margin-bottom: 20px;\r\n\r\n  h2,\r\n  p {\r\n    margin-bottom: 10px;\r\n  }\r\n  .btn {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${props => (props.bg ? props.bg : \"rgba(0, 0, 0, 0.15)\")};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  padding: ${props => props.pad && props.pad};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  opacity: ${props => props.opac && props.opac};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hovOpac && props.hovOpac};\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: ${props =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${props => props.gap && props.gap};\r\n  grid-template-rows: ${props =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${props => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${props => (props.circle ? \"40% 40% 10px 10px\" : \"20px\")};\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 300px;\r\n      object-fit: cover;\r\n      border-radius: ${props => (props.circle ? \"50%\" : \"20px\")};\r\n    }\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n    0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n    0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n  img {\r\n    width: 100%;\r\n    height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    object-fit: cover;\r\n    border-radius: inherit;\r\n  }\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${props => (props.height ? props.height : \"400px\")};\r\n  width:  ${props => (props.width ? props.width : \"100%\")};;\r\n  margin: ${props =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${props => props.pad && props.pad};\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${props => props.fixed && \"fixed\"};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  position: relative;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${props => props.height && props.height};\r\n  width: ${props => (props.width ? props.width : props.fluid ? \"100%\" : \"50%\")};\r\n  padding: ${props => props.pad && props.pad};\r\n\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${props => props.margin && props.margin};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  z-index: 2;\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n  p {\r\n    margin: 10px 0 20px;\r\n  }\r\n\r\n  img {\r\n    max-height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${props => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${props => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${props => (props.height ? props.height : \"300px\")};\r\n  width: ${props => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${props =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  margin: ${props => props.m && props.m};\r\n\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\n\r\nconst Showcase = () => {\r\n  return (\r\n    <DShowCase\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2>Surface</h2>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam,\r\n        doloribus.\r\n      </p>\r\n      <Link to=\"/zessence\" className=\"btn\">\r\n        Book Appointment\r\n      </Link>\r\n    </DShowCase>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DImage, DSection } from \"../../styled/containers\";\r\n\r\nconst CategoryCards = ({ cards, setRef }) => {\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" mcenter ref={setRef}>\r\n      <h1>Our Services</h1>\r\n      <DGrid four margin=\"0 0 40px 0\" gap=\"20px\" circle>\r\n        <div className=\"card-content\">\r\n          <DImage circle height=\"300px\" m=\"3% 0\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"card 1\"\r\n            />\r\n          </DImage>\r\n          <div className=\"card-details\">\r\n            <h3>Facial Treatment</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <DImage circle height=\"300px\" m=\"0 0 2% 0\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"card 1\"\r\n            />\r\n          </DImage>\r\n\r\n          <div className=\"card-details\">\r\n            <h3>Diamond Peeling</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <DImage circle height=\"300px\" m=\"3% 0\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"card 1\"\r\n            />\r\n          </DImage>\r\n          <div className=\"card-details\">\r\n            <h3>Body Treatment</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <DImage circle height=\"300px\" m=\"3% 0\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"card 1\"\r\n            />\r\n          </DImage>\r\n          <div className=\"card-details\">\r\n            <h3>Permanent Makeup</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid } from \"../../styled/containers\";\r\n\r\nconst Team = ({ cards }) => {\r\n  return (\r\n    <>\r\n      <h1>Our Team</h1>\r\n      <DGrid four margin=\"40px 0 40px 0\" gap=\"20px\">\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"card 1\"\r\n          />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <img src={cards} alt=\"card 1\" />\r\n          <div className=\"card-details\">\r\n            <h3>Beauty</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section2 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      pad=\"100px 0 0 30px\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategoryCards from \"../../components/main/home/CategoryCards\";\r\nimport Team from \"../../components/main/home/Team\";\r\nimport Section2 from \"../../components/main/home/Section2\";\r\nimport Section3 from \"../../components/main/home/Section3\";\r\n\r\nimport { DContainer } from \"../../components/styled/containers\";\r\n\r\nconst Home = () => {\r\n  const card1 = \"/images/card1.jpg\";\r\n  return (\r\n    <DContainer>\r\n      {/* SHOWCASE */}\r\n\r\n      <Showcase />\r\n      {/* Home Cards 1 */}\r\n      <CategoryCards cards={card1} />\r\n\r\n      {/* SECTION 2 */}\r\n      <Section2 />\r\n\r\n      {/* Home Cards 2 */}\r\n      <Team cards={card1} />\r\n      {/* Carbon */}\r\n      <Section3 />\r\n      <section className=\"follow\">\r\n        <p>Follow Z Essence</p>\r\n        <Link to=\"/\">\r\n          <h4>Facebook</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>Twitter</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>LinkedIn</h4>\r\n        </Link>\r\n      </section>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <DContainer>\r\n      <DSection bgcolor=\"#d3d3d3\" height=\"100vh\" push>\r\n        <Content flex justify=\"center\" align=\"center\" fluid height=\"100%\">\r\n          <h3>Hello</h3>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${props => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${props => (props.size ? props.size : \"36px\")};\r\n  width: ${props =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: 6px 16px;\r\n  line-height: 1.42857143;\r\n  margin: 1.5%;\r\n  text-align: center;\r\n  text-transform: ${props => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #1CA7EC\"\r\n      : \"0\"};\r\n\r\n  border-radius: 5px;\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.blue};\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.blue)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.blue}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonCancel = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.red};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #f12711\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.red)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n`;\r\n\r\nexport const DButtonConfirm = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.green};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #0f9b0f\"\r\n      : props.basic\r\n      ? \"2px solid #0f9b0f\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n`;\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${props => (props.size ? props.size : \"12px\")};\r\n  color: ${props => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${props => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${props => props.weight && props.weight};\r\n  padding: ${props => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${props => (props.m ? props.m : \"1%\")};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  text-transform: ${props => props.tt && props.tt};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hover && \"0.8\"};\r\n    cursor: ${props => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${props => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${props => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${props => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${props => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${props =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.6s ease;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${props =>\r\n    props.status === \"error\"\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.status === \"success\"\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.status === \"warning\"\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(69, 170, 242,1.0)\"};\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .close {\r\n    height: 100%;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signin\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/signin\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DGrid two className=\"signup-custom\">\r\n      <DSection height=\"100%\" flex justify=\"center\" align=\"center\" width=\"100%\">\r\n        <SignupForm from={from} hist={hist} />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        margin=\"0\"\r\n        background={\r\n          \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n          <h2>Sign Up</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n            magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n            est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n            repudiandae tempore alias ratione.\r\n          </p>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      slot_end\r\n      date\r\n      status\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n    \r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted(result) {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n      console.log(err);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport { DGrid, Content, DSection } from \"../../components/styled/containers\";\r\n\r\nconst Signin = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/appointment\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DGrid two className=\"signin-custom\">\r\n      <DSection\r\n        height=\"100vh\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        margin=\"0\"\r\n        background={\r\n          \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"signin-left\"\r\n      >\r\n        <Content width=\"90%\">\r\n          <h2>Sign In</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n            magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n            est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n            repudiandae tempore alias ratione.\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100vh\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        className=\"signin-right\"\r\n      >\r\n        <SigninForm from={from} hist={hist} />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps {\r\n    aestheticiansReceps {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two>\r\n      <Content\r\n        height=\"70vh\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        pad=\"0\"\r\n      >\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid three gap=\"20px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"80vh\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n  height: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    height: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    margin: ${props => (props.small ? \"3px\" : props.medium ? \"6px\" : \"8px\")};\r\n    border: ${props =>\r\n      props.small\r\n        ? \"3px solid #fff\"\r\n        : props.medium\r\n        ? \"6px solid #fff\"\r\n        : \"8px  solid #fff\"};\r\n\r\n    border-radius: 50%;\r\n    animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: ${props =>\r\n      props.inverted\r\n        ? \"#fff transparent transparent transparent\"\r\n        : \" #000 transparent transparent transparent\"};\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = ({ small, large, medium, inverted }) => {\r\n  return (\r\n    <SpinnerRing\r\n      small={small}\r\n      large={large}\r\n      medium={medium}\r\n      inverted={inverted}\r\n    >\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/zessence/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.name}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      ></DSection>\r\n      <DSection height=\"100%\" pad=\"0 20px\">\r\n        <DGrid custom=\"500px 1fr\">\r\n          <AppointmentInputs\r\n            user={user}\r\n            values={values}\r\n            setValues={setValues}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n          />\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DGrid>\r\n              <AppointDate\r\n                setStartDate={setStartDate}\r\n                setSelectedTime={setSelectedTime}\r\n                selectedTime={selectedTime}\r\n                startDate={startDate}\r\n                employeeVal={employeeVal}\r\n                serviceValue={serviceValue}\r\n              />\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DButton\r\n                  size=\"50px\"\r\n                  onClick={() => setOpen(true)}\r\n                  basic={\r\n                    (values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\") &&\r\n                    true\r\n                  }\r\n                  disabled={\r\n                    values.category === \"\" ||\r\n                    serviceValue === \"\" ||\r\n                    employeeVal === \"\" ||\r\n                    selectedTime === \"\"\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  Book an Appointment\r\n                </DButton>\r\n                <Confirmation\r\n                  open={open}\r\n                  setOpen={setOpen}\r\n                  serviceValue={serviceValue}\r\n                  employeeVal={employeeVal}\r\n                  startDate={startDate}\r\n                  selectedTime={selectedTime}\r\n                />\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} to=\"/zessence/MyAccount\" basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DShowCase\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport {useMutation } from \"@apollo/react-hooks\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountDetails = ({ myDetails, userId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const { handleChange, handleSubmit, values } = useForm(updateUserCallBack, {\r\n    firstName: myDetails.firstName,\r\n    lastName: myDetails.lastName,\r\n    email: myDetails.email,\r\n    contact: myDetails.contact\r\n  });\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  function updateUserCallBack() {\r\n    updateUser();\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      flex\r\n      align=\"flex-start\"\r\n      justify=\"flex-start\"\r\n      bgcolor=\"white\"\r\n      pad=\"20px\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>ID</DLabel>\r\n          <input value={userId} readOnly />\r\n        </Form.Field>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n            <input\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n            <input\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n          <input name=\"email\" value={values.email} onChange={handleChange} />\r\n        </Form.Field>\r\n        <Form.Field inline>\r\n          <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Content flex justify=\"flex-end\" width=\"100%\">\r\n          <DButton type=\"submit\">\r\n            {loading ? <Spinner small inverted /> : \"Save\"}\r\n          </DButton>\r\n        </Content>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountDetails;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [currentAppoint, setCurrentAppoint] = useState([]);\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zessence/myappointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel size=\"16px\" tt=\"uppercase\" weight=\"700\" pad=\"10px 25px\" rounded>\r\n    My Appointment\r\n  </DLabel>\r\n);\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zessence/myappointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"50vh\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      bgcolor=\"#eee\"\r\n      width=\"100%\"\r\n      pad=\"10px\"\r\n      rounded\r\n    >\r\n      <DLabel size=\"16px\" tt=\"uppercase\" weight=\"700\" pad=\"10px 25px\" rounded>\r\n        My Appointment History\r\n      </DLabel>\r\n      {appointHistoryLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={appointHistoryData.myAppointmentHistory.map(\r\n            historyAppoint => historyAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport AccountDetails from \"../../components/main/user/AccountDetails\";\r\nimport CurrentAppointment from \"../../components/main/user/CurrentAppointment\";\r\nimport MyAppointmentHistory from \"../../components/main/user/MyAppointmentHistory\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst MyAccount = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n  // const [account, setAccount] = useState({});\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (userInfo) {\r\n  //     setAccount(userInfo.user);\r\n  //   }\r\n  // }, [userInfo]);\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      margin=\"20vh auto 10vh auto\"\r\n      width=\"90%\"\r\n      pad=\"40px 50px\"\r\n      fixed\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Account</h2>\r\n      {userLoading ? (\r\n        <DSection height=\"70vh\">\r\n          <Skeleton />\r\n        </DSection>\r\n      ) : (\r\n        <DGrid gap=\"10px\">\r\n          <Content\r\n            height=\"50vh\"\r\n            flex\r\n            align=\"center\"\r\n            pad=\"10px 15px\"\r\n            bgcolor=\"#eee\"\r\n            width=\"100%\"\r\n            rounded\r\n          >\r\n            <DGrid custom=\"30% 1fr\" gap=\"20px\">\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h4>Drop Image</h4>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          userInfo.user.photo !== null\r\n                            ? `/images/users/${userInfo.user.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n\r\n              <AccountDetails myDetails={userInfo.user} userId={userId} />\r\n            </DGrid>\r\n          </Content>\r\n          <CurrentAppointment />\r\n          <MyAppointmentHistory />\r\n        </DGrid>\r\n      )}\r\n      <Overlay bg=\"rgba(rgba(52, 152, 219,0.3))\" />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default MyAccount;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Redirect to=\"/zessence\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zessence/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ open, setOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel your appointment?</h2>\r\n        <p>Cancellation may result your appointment process in the future</p>\r\n        <h1>{appointmentId}</h1>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton, DButtonCancel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport AppointmentCancel from \"../../components/main/user/AppointmentCancel\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {!data ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input\r\n                  value={data.appointment._id}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={data.appointment.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={data.appointment.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${data.appointment.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={data.appointment.status}\r\n                  readOnly\r\n                  style={\r\n                    data.appointment.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : data.appointment.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : data.appointment.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {data.appointment.status === \"CANCELLED\" ||\r\n            data.appointment.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Cancel\r\n                </DButtonCancel>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n      <AppointmentCancel\r\n        open={open}\r\n        setOpen={setOpen}\r\n        appointmentId={appointmentId}\r\n      />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Services from \"./main/Services\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport MyAccount from \"./main/MyAccount\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/`} render={() => <Home />} exact />\r\n        <Route path={`${match.path}/about`} component={About} exact />\r\n        <Route path={`${match.path}/contact`} component={Contact} exact />\r\n        <Route\r\n          path={`${match.path}/verified/:emailToken`}\r\n          component={ThankYou}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`${match.path}/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`${match.path}/login`} component={Signin} exact />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myaccount/:_id`}\r\n          component={MyAccount}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/appointment`}\r\n          component={Appointment}\r\n          exact\r\n        />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst UpcommingAppointments = ({ appointments }) => {\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map(appointment => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Content\r\n        flex\r\n        justify=\"flex-end\"\r\n        align=\"center\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      >\r\n        <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton>\r\n      </Content>\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion fs={props.fs} uc={props.uc}>\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion\r\n        title={\"Accounts\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            About Us\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/testimonials\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [percentage, setpercentage] = useState(1);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setpercentage(80);\r\n\r\n    setChartData({\r\n      labels: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"# of Appointments\",\r\n          data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.7)\",\r\n            \"rgba(54, 162, 235, 0.7)\",\r\n            \"rgba(255, 206, 86, 0.7)\",\r\n            \"rgba(75, 192, 192, 0.7)\",\r\n            \"rgba(153, 102, 255, 0.7)\",\r\n            \"rgba(234, 103, 64, 0.7)\",\r\n            \"rgba(75, 59, 64, 0.7)\",\r\n            \"rgba(75, 159, 64, 0.7)\",\r\n            \"rgba(55, 15, 64, 0.7)\",\r\n            \"rgba(55, 59, 44, 0.7)\",\r\n            \"rgba(25, 59, 34, 0.7)\",\r\n            \"rgba(25, 159, 64, 0.7)\"\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n            \"rgba(255, 159, 64, 1)\"\r\n          ],\r\n          borderWidth: 1\r\n        }\r\n      ]\r\n    });\r\n  }, [setpercentage, setChartData]);\r\n\r\n  const options = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          display: false\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          display: false\r\n        }\r\n      ]\r\n    },\r\n    legend: {\r\n      display: false\r\n    }\r\n  };\r\n\r\n  const { loading, data } = useQuery(FETCH_APPOINTMENTS_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.appointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"20vh\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        margin=\"20px 0\"\r\n      >\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.3)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Members</h3>\r\n            <h2>20</h2>\r\n          </Overlay>\r\n        </Content>\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.2)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Appointments</h3>\r\n            <h2>70</h2>\r\n          </Overlay>\r\n        </Content>\r\n        <Content width=\"200px\" height=\"100px\" rounded>\r\n          <Line data={chartData} options={options}></Line>\r\n          <Overlay\r\n            className=\"dark\"\r\n            bg={\"rgba(0,0,0,0.2)\"}\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <h3 style={{ border: \"1px solid #fff\" }}>Inquiries</h3>\r\n            <h2>20</h2>\r\n          </Overlay>\r\n        </Content>\r\n      </DSection>\r\n      <DSection height=\"100%\" margin=\"20px 0 20px 0\">\r\n        <DGrid gap=\"40px\">\r\n          <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid>\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            {loading ? (\r\n              <Overlay flex justify=\"center\" align=\"center\">\r\n                <h2>Loading...</h2>\r\n              </Overlay>\r\n            ) : (\r\n              data.appointments && (\r\n                <UpcommingAppointments\r\n                  appointments={appointments}\r\n                  loading={loading}\r\n                />\r\n              )\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  const [currentAppointments, setCurrentAppointments] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointmentData) {\r\n      setCurrentAppointments(currentAppointmentData.currentAppointments);\r\n    }\r\n  }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!currentAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={currentAppointmentData.currentAppointments.map(\r\n            currAppoint => currAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Apointment List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!historyAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={historyAppointmentData.appointmentHistory.map(\r\n            histAppoint => histAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\n\r\nconst Appointments = () => {\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn\">\r\n            New Appointment\r\n          </Link>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ open, setOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpen(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButtonCancel>\r\n        <DButtonConfirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  DButtonConfirm\r\n} from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n        height=\"100vh\"\r\n      >\r\n        <h2 style={{ color: \"#111\" }}>\r\n          {data && (\r\n            <span style={{ color: \"#2980B9\", fontWeight: 700 }}>\r\n              {`${data.appointment.user.firstName} ${data.appointment.user.lastName}'s`}\r\n            </span>\r\n          )}{\" \"}\r\n          Appointment Details\r\n        </h2>\r\n\r\n        {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\"\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\"\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\"\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\"\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButtonConfirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButtonConfirm>\r\n                  <DButton>Reschedule</DButton>\r\n                  <DButtonCancel onClick={() => setOpen(true)}>\r\n                    Cancel\r\n                  </DButtonCancel>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )}\r\n        <AppointmentCancel\r\n          open={open}\r\n          setOpen={setOpen}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"small\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton,\r\n  DButtonConfirm,\r\n  DButtonCancel\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  // if (employee) {\r\n  //   employee.schedule.day.filter(d => daay.push(d));\r\n  // }\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButtonConfirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButtonConfirm>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButtonCancel>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [erros, setErrors] = useState({});\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategory) {\r\n      setCategories(dataCategory.categories);\r\n    }\r\n  }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {dataCategory.categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Exit</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n            <DButtonConfirm type=\"submit\">Yes</DButtonConfirm>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard\r\n} from \"../../components/styled/containers\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection margin=\"20px 0\">\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <DGrid four gap=\"15px\" margin=\"40px 0\">\r\n          {loading ? (\r\n            <h2>Loading...</h2>\r\n          ) : (\r\n            data.categories &&\r\n            data.categories.map(category => (\r\n              <DCard imgHeight=\"200px\" key={category._id}>\r\n                <img\r\n                  src={\r\n                    category.photo !== null\r\n                      ? `/images/category/${category.photo}`\r\n                      : \"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  }\r\n                  alt=\"category\"\r\n                />\r\n                <div className=\"card-details\">\r\n                  <h3>{category.name}</h3>\r\n                  <p className=\"des\">{extractContent(category.description)}</p>\r\n                  <Link to={`/zeadmin/category/${category._id}`}>\r\n                    <DButton basic>View</DButton>\r\n                  </Link>\r\n                </div>\r\n              </DCard>\r\n            ))\r\n          )}\r\n        </DGrid>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButtonCancel width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButtonCancel>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\n\r\nfunction extractContent(html) {\r\n  return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n    .textContent;\r\n}\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (data_services) {\r\n  //     setServices(data_services.services);\r\n  //   }\r\n  // }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      cell: row => (\r\n        <p style={{ fontWeight: 500 }}>{extractContent(row.description)}</p>\r\n      )\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={data_services.services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = props => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Skeleton width=\"100%\" />\r\n        </>\r\n      ) : (\r\n        <DSection margin=\"20px 0\">\r\n          <h2>{data.category.name}</h2>\r\n          <DGrid>\r\n            <DSection width=\"100%\" height=\"100%\">\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\"\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/category/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </DSection>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport {\r\n  Toasted,\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel\r\n} from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButtonConfirm onClick={handleSubmit}>Save</DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(true)}>Delete</DButtonCancel>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql/service\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Inquiry = () => {\r\n  const [inquiries, setInquiries] = useState([]);\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  console.log(data_inquiries);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Inquiry ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: \"email\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/inq/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      {!data_inquiries ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={data_inquiries.inquiries.map(inq => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"22px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    customStyles={customStyles}\r\n    rounded\r\n  >\r\n    Inquiry List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default Inquiry;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"User ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        {loading_users ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map(getUser => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\n\r\nconst SigninForm = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId && (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId}\r\n            </Label>\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport User from \"./admin/User\";\r\nimport Signin from \"./admin/Signin\";\r\n// import Home from \"./admin/cms/Home\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/signin\" exact />\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        {/* <PrivateRoute exact path=\"/zeadmin/cms-home\" component={Home} /> */}\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#ECE9E6\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Admin from \"./pages/Admin\";\nimport Page404 from \"./pages/Page404\";\nimport { AuthProvider } from \"./context/auth\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./components/theme\";\nimport \"./App.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Redirect from=\"/\" to=\"/zessence\" exact />\n            <Route path=\"/zessence\" component={Main}  />\n            <Route path=\"/zeadmin\" component={Admin}  />\n            <Route component={Page404} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"toasted-notes/src/styles.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\n\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}