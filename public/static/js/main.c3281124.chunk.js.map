{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","util/hooks/useScroll.js","components/main/navigation/Navigation.js","util/graphql/cms.js","components/styled/containers.js","components/styled/button.js","components/styled/scroll.styled.js","components/MouseScroll.js","components/main/home/Showcase.js","util/graphql/service.js","components/styled/card.js","components/styled/text.js","components/FancyText.js","components/styled/utils.js","components/main/utils/ReadMore.js","components/main/home/CategorySection.js","util/graphql/employee.js","components/main/home/TeamSection.js","components/styled/loader.js","components/Spinner.js","components/main/home/AboutSection.js","components/main/home/PromoSection1.js","util/graphql/testimonial.js","components/main/home/TestimonialSection.js","components/main/utils/ScrollButton.js","pages/main/Home.js","util/hooks/useWindowSize.js","components/main/about/Story.js","components/main/about/TeamDetails.js","components/main/about/Team.js","util/useScrollDown.js","pages/main/About.js","util/hooks/useForm.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Gallery.js","pages/main/Contact.js","components/main/testimonial/ModalReview.js","components/main/testimonial/Review.js","components/main/testimonial/TestimonialCard.js","pages/main/Testimonials.js","pages/main/Services.js","pages/main/Service.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/styled/skeleton.js","components/Skeleton.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/Toasted.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","components/admin/appointment/HistoryAppointments.js","pages/admin/FileReport.js","util/hooks/useUploadFile.js","components/admin/cms/home/showcase/ImageSection.js","components/admin/cms/home/showcase/ModalSlide.js","components/admin/cms/home/showcase/NewSlide.js","components/admin/cms/home/showcase/EditSlide.js","components/admin/cms/home/showcase/RemoveSlide.js","components/admin/cms/home/showcase/Showcase.js","components/admin/cms/home/sectionabout/EditModal.js","components/admin/cms/home/sectionabout/SectionAbout.js","components/admin/cms/home/sectioncategory/CategoryCards.js","components/admin/cms/home/sectioncategory/UpdateSectCategory.js","components/admin/cms/home/sectioncategory/SectionCategory.js","pages/admin/cms/Home.js","components/admin/cms/about/ModalHeading.js","components/admin/cms/about/Heading.js","components/admin/cms/about/ModalStory.js","components/admin/cms/about/Story.js","components/admin/cms/about/ModalMissionVision.js","components/admin/cms/about/Mission.js","pages/admin/cms/About.js","components/admin/testimonial/ToggleView.js","components/admin/testimonial/ModalView.js","components/admin/testimonial/DeleteView.js","components/admin/testimonial/MenuView.js","pages/admin/cms/Testimonial.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","DropdownCustomNav","Dropdown","Burger","setOpen","onClick","useScroll","scrollVal","useState","scrolling","setScrolling","scrollTop","setScrollTop","scrollH","undefined","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Navigation","ref","handler","node","useRef","listener","event","current","contains","document","useContext","handleLogout","trigger","style","fontSize","Icon","name","firstName","scrollBehavior","el","scrollIntoView","behavior","block","className","src","alt","to","userId","_id","scroll","simple","Menu","Item","as","Link","disabled","FETCH_THE_SHOWCASE","gql","FETCH_HOME_SECTION","FETCH_ABOUT_CMS","columns","rows","DContainer","div","DShowCase","height","bgcolor","background","Overlay","bgr","bgl","bgc","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","cwidth","talign","cmarg","fs","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","med10","med7","med5","DCard","p","dh","dw","mcenter","justifyCenter","justifyAround","justifyBetween","jusitfyFend","alignCenter","alignAround","alignBetween","alignFend","fcol","bs","DSection","width","Content","fluid","fixed","bordered","bordbtm","rounded","br1","weight","color","size","bluer","imgHeight","imgWidth","DImage","dashed","m","DFooterLinks","DFooter","footer","Section2Styled","visible","JButton","button","keyframes","DMouseScroll","inverted","basic","MouseScroll","Showcase","nextSection","showcase","setShowcase","scrollDown","useQuery","variables","sectionName","showcaseData","data","dataLoading","loading","error","showcaseCMS","content","position","id","dots","infinite","fade","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","map","sc","key","bgColor","bgImg","title","subtitle","paragraph","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","JCard","figure","titleSize","JCard2","oflow","JCard3","JCard4","top","right","bottom","left","DTestimonialCard","DFancyText","h1","FancyText","children","ripple","DButton","fSize","center","text","radius","alert","red","warning","yellow","confirm","green","default","DButtonFree","DLabel","label","ls","tt","w","hover","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","success","ReadMore","ScrollUp","DotsVertical","DotsVerticalRounded","DLink","borderb","CategorySection","setRef","isCategories","setIsCategories","categorySection","setCategorySection","dataCategories","loadingCategories","categories","sectionCategory","homeCMS","grid","category","photo","parser","description","length","substr","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","styles","dloading","display","justifyContent","alignItems","flexDirection","lineHeight","TeamSection","cards","employeesAR","setEmployeesAR","limit","data_employeesAR","loading_employeesAR","aestheticiansReceps","count","employee","data-emp","lastName","role","bio","keyring","SpinnerRing","row","tiny","small","medium","Spinner","AboutSection","isAboutSection","setIsAboutSection","about","setAbout","aboutChange","contentName","dataAbout","loadAbout","aboutUsCMS","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","css","visibility","from","y","ease","Power3","easeOut","scale","animate","story","missionvision","PromoSection1","FETCH_TESTIMONIALS","FETCH_USER_REVIEW","FETCH_VIEWS","settings","TestimonialSection","reviews","setReviews","dataReviews","loadReviews","testimonialsView","rev","Rating","rating","maxRating","icon","message","ScrollButton","intervalId","pageYOffset","clearInterval","this","scrollPx","setInterval","scrollStep","bind","delay","setState","scrollToTop","React","Component","Home","card1","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","Story","aboutUS","useWindowSize","mission","vision","maxHeight","letterSpacing","textAlign","overflowWrap","overflow","padding","TeamDetails","href","Modal","onClose","closeIcon","Team","employees","setEmployees","dataEmployees","loadingEmployees","minHeight","emp","scrollView","About","minWidth","subtitles","overlay","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","push","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","border","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","history","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","console","log","loginUser","userX","general","Signin","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","isEmp","setIsEmp","isServ","setIsServ","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","loading_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","schedule","breakStart","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","c","setCategories","services","setServices","loading_categories","data_categories","useLazyQuery","categoryId","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","cursor","outline","servEmp","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","useHistory","addInfo","setAddInfo","setService","cache","result","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","toaster","notify","status","expiredLog","check","start","Header","readOnly","toDateString","Actions","Appointment","matchMedia","jusitfy","photos","Gallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","index","currentIndex","views","x","srcset","srcSet","caption","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","ADD_REVIEW","UPDATE_REVIEW","ModalReview","openReview","setOpenReview","userReview","rate","setRate","setMessage","edit","setEdit","mutation","addOrUpdate","onRate","TextArea","Review","setUserReview","dataUserReview","loadUserReview","userTestimonial","slidesPerRow","responsive","breakpoint","TestimonialCard","isTestimonials","setIsTestimonials","dataTestimonials","loadTestimonials","testimonials","testimonial","parseInt","updatedAt","Testimonials","Services","sectionDown","Service","params","isReadMore","setIsReadMore","isServices","setIsServices","goBack","onPointerLeave","price","VERRIFIED_APPOINTMENT","ThankYou","emailToken","go","appointmentId","verifiedAppointment","onload","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","dateOfBirth","contact","updateUser","showYearDropdown","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","Accordion","setActive","contentRef","scrollHeight","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","CANCEL_APPOINTMENT_MUTATION","absoluteCenter","transform","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","setServiceEmp","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","new","Popup","circular","mouseEnterDelay","mouseLeaveDelay","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","cell","fitted","wide","Grid","divided","Column","currentAppoint","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","currentTarget","compact","historyAppoint","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","input","AppointmentDetails","schedDate","myAppoint","setMyAppoint","margn","Main","path","exact","UpcommingAppointments","marginBottom","progressPending","progressComponent","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","pointing","SideNav","activeClassName","Layout","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","CurrentAppointments","isCurrentAppoint","setIsCurrentAppoint","currentAppointmentData","currAppoint","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","Divider","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","NewDateTime","NewAppointmentDetails","CREATE_GUEST_APPOINTMENT","myAppointments","createGuestAppointment","NewAppointment","NewConfirmation","placeholderAnimate","DSkeleton","wid","Skeleton","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","workLength","breakLength","newEmployee","Checkbox","class","Employees","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","dataCategory","loadingCategory","addService","close","marginLeft","EmployeeServices","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","newCategory","Categories","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","newService","serviceExist","ServiceList","descript","trimString","substring","parse","UPLOAD_CATEGORY_PHOTO","Category","setCategory","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","serviceData","serviceLoading","addServicePhoto","replace","REPLY_MESSAGE","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","loadingInq","inquiry","replyInquiry","column","Inquiry","setInquiries","data_inquiries","loading_inquiries","msg","PhotoBooth","fetchEmployee","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","empData","empLoading","handleSchedule","User","setUsers","data_users","loading_users","allowOverflow","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","HistoryAppointments","historyAppointments","setHistoryAppointments","historyAppointmentData","appointmentHistory","FileReport","useUploadFile","selectedFile","setSelectedFile","preview","setPreview","objectUrl","URL","createObjectURL","revokeObjectURL","onSelectedFile","files","ImageSection","isDark","isPosition","isColor","fileInput","click","opacity","colors","ADD_NEW_SLIDE","UPDATE_SLIDE","ModalSlide","setIsDark","setIsPosition","setIsColor","showcaseId","addOrUpdateSlide","handlePosition","maxLength","checked","triangle","hex","NewSlide","EditSlide","REMOVE_SLIDE","RemoveSlide","isOpenRemove","setIsOpenRemove","removeSlide","UPDATE_ABOUT_SECTION","EditModal","aboutBool","updateAboutSection","SectionAbout","isAbout","setIsAbout","dataAboutSection","loadingAboutSection","loadingAbout","CategoryCards","gridCount","UPDATE_CATEGORY_SECTION","UpdateSectCategory","setOpenCatSec","openCatSec","categorySectionInfo","setGridCount","updateSectionCategory","handleGrid","SectionCategory","sectCategory","setSectCategory","loadSectionCategory","UPDATE_ABOUT_HEADER","ModalHeading","openHead","setOpenHead","isOverlay","setIsOverlay","headers","setHeaders","updateAboutUs","handleChangeHeaders","Heading","dataAboutContent","loadAboutContent","bgColors","UPDATE_ABOUT_STORY","ModalStory","isStory","openStory","setOpenStory","reverse","setReverse","stories","setStories","updateStory","handleChangeStory","setIsStory","dataStoryContent","loadStoryContent","UPDATE_ABOUT_MISSIONVISION","ModalMissionVision","isMissionVision","fileInputMV","openMission","setOpenMission","reverseMV","setReverseMV","mtitle","msubtitle","mparagraph","vtitle","vsubtitle","vparagraph","valuesMV","setValuesMV","previewMV","selectedFileMV","onSelectedFileMV","updateMission","handleChangeValues","horizontal","isMission","setIsMission","dataMissionVision","loadMissionVision","Mission","TOGGLE_REVIEW","popContent","ToggleView","swid","tggl","toggleValue","setToggleValue","toggleTestimonial","loadToggle","data-sid","onMouseOver","dataset","sid","ModalView","ridd","ARCHIVED_REVIEW","DeleteView","rvw","isDltModal","setIsDltModal","wdth","unauth","archiveTestimonial","loadArchive","textIndent","MenuView","menuId","review","menuValue","setMenuValue","on","data-rid","rid","flowing","centered","Testimonial","view","Admin","App","uploadLink","createUploadLink","uri","authLink","setContext","Authorization","client","ApolloClient","link","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c3281124.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${(props) => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 12vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"li a {color: #fff}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n      &:nth-child(7) {\r\n        transition-delay: 0s, 400ms;\r\n      }\r\n      &:nth-child(8) {\r\n        transition-delay: 0s, 450ms;\r\n      }\r\n      &:nth-child(9) {\r\n        transition-delay: 0s, 500ms;\r\n      }\r\n      &:nth-child(10) {\r\n        transition-delay: 0s, 550ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \".avatarLog {color: #fff}\"};\r\n\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const DropdownCustomNav = styled(Dropdown)`\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & a {\r\n    color: #232323;\r\n    font-weight: 700;\r\n  }\r\n  & a:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & .customDropMenu a {\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.primary} !important;\r\n  }\r\n\r\n  ${(props) => props.scrolled && \"color: #fff; a {color: #fff}\"};\r\n\r\n  @media (max-width: 1024px) {\r\n    a {\r\n      color: #ffff;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n    a:hover {\r\n      color: ${({ theme }) => theme.secondary};\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n  }\r\n\r\n  .customDropMenu .customDropMenuItem {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #232323 !important;\r\n    font-size: 14px !important;\r\n  }\r\n  .customDropMenu .customDropMenuItem:hover {\r\n    color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll(scrollVal) {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const scrollH = scrollVal !== undefined ? scrollVal : 100;\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > scrollH);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport {\r\n  DNavigation,\r\n  DMainMenu,\r\n  DRightMenu,\r\n  DropdownCustomNav,\r\n} from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  // let history = useHistory();\r\n\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    // history.push(\"\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const scrollBehavior = (el) =>\r\n    el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to={`/#home`} scroll={scrollBehavior}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/services&rates/#services\" scroll={scrollBehavior}>\r\n              Services\r\n            </Link>\r\n          </li>\r\n\r\n          {/* <Link to=\"/about\">About&nbsp;Us</Link> */}\r\n          <DropdownCustomNav\r\n            trigger={\r\n              <Link to=\"/about/#about\" scroll={scrollBehavior}>\r\n                About&nbsp;Us\r\n              </Link>\r\n            }\r\n            simple\r\n            scrolled={scrolling ? true : undefined}\r\n          >\r\n            <Dropdown.Menu className=\"customDropMenu\">\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#story\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Story\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/about/#team\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Team\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </DropdownCustomNav>\r\n\r\n          <li>\r\n            <Link to=\"/gallery/#gallery\" scroll={scrollBehavior}>\r\n              Gallery\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/testimonials/#tstmnl\" scroll={scrollBehavior}>\r\n              Testimonials\r\n            </Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger} className=\"avatarLog\">\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      My Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_THE_SHOWCASE = gql`\r\n  query showcaseCMS($sectionName: String) {\r\n    showcaseCMS(sectionName: $sectionName) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HOME_SECTION = gql`\r\n  query homeCMS($sectionName: String) {\r\n    homeCMS(sectionName: $sectionName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      grid\r\n      dark\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_ABOUT_CMS = gql`\r\n  query aboutUsCMS($contentName: String) {\r\n    aboutUsCMS(contentName: $contentName) {\r\n      _id\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_THE_SHOWCASE, FETCH_HOME_SECTION, FETCH_ABOUT_CMS };\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\",\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n  margin-top: 12vh;\r\n`;\r\n\r\nexport const DShowCase = styled.div`\r\n  width: 100%;\r\n  height: ${(props) => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n  h1,\r\n  h2,\r\n  p {\r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${(props) =>\r\n    props.bg\r\n      ? props.bg\r\n      : props.bgr\r\n      ? \"linear-gradient(270deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgl\r\n      ? \"linear-gradient(90deg, rgba(0,0,0,0.4) 8%, rgba(255,255,255,0) 100%)\"\r\n      : props.bgc\r\n      ? \"rgba(0,0,0,0.4)\"\r\n      : \"rgba(0, 0, 0, 0)\"};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  opacity: ${(props) => props.opac && props.opac};\r\n  transition: opacity 0.3s ease;\r\n\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${(props) => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: 0;\r\n    height: 100%;\r\n\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n\r\n      text-align: center;\r\n      transform: rotate(-45deg);\r\n      h1 {\r\n        transform: translateY(80px);\r\n        transition: transform 0.4s ease-in-out;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${(props) => (props.cwidth ? props.cwidth : \"80%\")};\r\n    text-align: ${(props) => (props.talign ? props.talign : \"left\")};\r\n    height: auto;\r\n    margin: ${(props) => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    padding: 10px 40px;\r\n\r\n    h1,\r\n    h2,\r\n    p {\r\n      letter-spacing: 5px;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    h3,\r\n    h4,\r\n    .ps {\r\n      letter-spacing: 1px;\r\n      line-height: 1.4;\r\n    }\r\n    .ps {\r\n      font-size: 10px;\r\n    }\r\n\r\n    h1 {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"60px\")};\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: ${(props) =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${(props) => props.gap && props.gap};\r\n  grid-template-rows: ${(props) =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${(props) => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${(props) => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med10 ? props.med10 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${(props) =>\r\n      props.med7 ? props.med7 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: ${(props) => (props.med5 ? props.med5 : \"1fr\")};\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: ${(props) => (props.p ? props.p : \"10px\")};\r\n  height: ${(props) => (props.dh ? props.dh : \"300px\")};\r\n  width: ${(props) => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${(props) => props.pointer && \"pointer\"};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  margin: ${(props) => (props.mcenter ? \"0 auto\" : props.margin)};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => props.fcol && \"column\"};\r\n\r\n  overflow: hidden;\r\n  background: ${(props) => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${(props) =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n        \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n        \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${(props) => (props.height ? props.height : \"400px\")};\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  margin: ${(props) =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  background-image: url(${(props) => props.background && props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  position: relative;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${(props) => props.height && props.height};\r\n  width: ${(props) =>\r\n    props.width ? props.width : props.fluid ? \"100%\" : \"50%\"};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) => props.justify && props.justify};\r\n  align-items: ${(props) => props.align && props.align};\r\n  flex-flow: ${(props) => props.flow && props.flow};\r\n  flex-direction: ${(props) => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${(props) => props.margin && props.margin};\r\n  background: url('${(props) =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${(props) => props.fixed && \"fixed\"};\r\n  background-color: ${(props) => props.bgcolor && props.bgcolor};\r\n  border-width: ${(props) => props.bordered && \"1px\"};\r\n  border-style: ${(props) => props.bordered && \"solid\"};\r\n  border-color: ${(props) =>\r\n    props.bordbtm && \"transparent transparent #ccc transparent\"};\r\n  border-radius: ${(props) =>\r\n    props.rounded\r\n      ? \"10px\"\r\n      : props.br1\r\n      ? \"0% 24% 26% 39% / 20% 0% 100% 0% \"\r\n      : \"0\"};\r\n  box-shadow: ${(props) =>\r\n    props.bs &&\r\n    (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n    \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n    \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n    \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n    \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n  z-index: 2;\r\n  font-weight: ${(props) => props.weight && props.weight};\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  span {\r\n    color: ${(props) => props.color && props.color};\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${(props) => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${(props) => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${(props) => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${(props) => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${(props) => (props.height ? props.height : \"300px\")};\r\n  width: ${(props) => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${(props) =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  border: ${(props) =>\r\n    props.bordered\r\n      ? \"1px solid #000\"\r\n      : props.dashed\r\n      ? \"1px dashed #ccc\"\r\n      : \"none\"};\r\n  margin: ${(props) => (props.m ? props.m : \"0 auto\")};\r\n  padding: ${(props) => props.pad && props.pad};\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  position: relative;\r\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\r\n  max-height: 100vh;\r\n  min-height: 30vh;\r\n  height: 100%;\r\n  width: ${(props) => (props.width ? props.width : \"90%\")};\r\n  margin: 24px auto;\r\n  text-align: center;\r\n\r\n  .switch {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: auto;\r\n    margin-bottom: 24px;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 24px;\r\n  }\r\n\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n    padding-top: 48px;\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: space-between;\r\n      ${(props) => props.alt && \"flex-direction: row-reverse\"};\r\n      margin: 0 auto;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 90%;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            text-align: left;\r\n            margin-bottom: 24px;\r\n            .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding: 12px;\r\n            margin-bottom: 56px;\r\n            text-align: justify;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 55%;\r\n        height: 100%;\r\n        position: relative;\r\n\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n              object-fit: cover;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    .sec2-container {\r\n      width: 100%;\r\n      .sec2-inner {\r\n        width: 100%;\r\n        justify-content: center;\r\n        margin: 0 auto;\r\n        .sec2-content {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .sec2-images {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 18px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const JButton = styled.button`\r\n  position: relative;\r\n  padding: 1em 1.5em;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  outline: none;\r\n  font-size: 18px;\r\n  margin: 1em 0.8em;\r\n  color: ${({ theme }) => theme.secondary};\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n\r\n  &::after,\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 20%;\r\n    height: 20%;\r\n    border: 2px solid;\r\n    transition: all 0.6s ease;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  &::after {\r\n    bottom: -2px;\r\n    right: -2px;\r\n    border-top-color: transparent;\r\n    border-left-color: transparent;\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &::before {\r\n    top: -2px;\r\n    left: -2px;\r\n    border-bottom-color: transparent;\r\n    border-right-color: transparent;\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:hover:after,\r\n  &:hover:before {\r\n    border-bottom-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-right-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-top-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    border-left-color: ${(props) =>\r\n      props.dark\r\n        ? ({ theme }) => theme.primary\r\n        : ({ theme }) => theme.secondary};\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst scroll = keyframes`\r\n\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    10% {\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    }\r\n    100% {\r\n        transform: translateY(5px);\r\n        opacity: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const DMouseScroll = styled.div`\r\n  position: absolute;\r\n  top: 85%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n\r\n  &:hover {\r\n    .mousey {\r\n      opacity: 1;\r\n      left: 50%;\r\n    }\r\n    .scroll-downs {\r\n      &::before,\r\n      &::after {\r\n        top: 50%;\r\n        left: 50%;\r\n        border: 1px solid rgba(0, 0, 0, 0.5);\r\n      }\r\n    }\r\n  }\r\n\r\n  .scroll-downs {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      content: \"\";\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px solid rgba(0, 0, 0, 0.25);\r\n      transform: translate(-50%, -50%);\r\n      border-radius: 100%;\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n    &::before {\r\n      top: 48%;\r\n      left: 60%;\r\n    }\r\n\r\n    &::after {\r\n      top: 52%;\r\n      left: 52%;\r\n    }\r\n  }\r\n\r\n  .mousey {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 2px;\r\n    padding: 3px 5px;\r\n    height: 15px;\r\n    border: 2px solid #232323;\r\n    border-radius: 25px;\r\n    opacity: 0.75;\r\n    box-sizing: content-box;\r\n    background: #232323;\r\n  }\r\n\r\n  .scroller {\r\n    width: 2px;\r\n    height: 5px;\r\n    border-radius: 25%;\r\n    background-color: #fff;\r\n    animation-name: ${scroll};\r\n    animation-duration: 2.2s;\r\n    animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.inverted &&\r\n    \".mousey{background: #ffffff; border-color: #ffffff;} .scroller{background-color: #232323;} .scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.25)}} &:hover{.scroll-downs{&::before,&::after{border-color: rgba(255,255,255,0.5)}}}\"}\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \".mousey{background: transparent; border-width: 1px;} .scroller{background-color: #fff;} \"}\r\n`;\r\n","import React from \"react\";\r\nimport { DMouseScroll } from \"./styled/scroll.styled\";\r\n\r\nconst MouseScroll = props => {\r\n  return (\r\n    <DMouseScroll {...props}>\r\n      <div className=\"scroll-downs\">\r\n        <div className=\"mousey\">\r\n          <div className=\"scroller\"></div>\r\n        </div>\r\n      </div>\r\n    </DMouseScroll>\r\n  );\r\n};\r\n\r\nexport default MouseScroll;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { JButton } from \"../../styled/button\";\r\nimport Slider from \"react-slick\";\r\nimport MouseScroll from \"../../MouseScroll\";\r\n\r\nconst Showcase = ({ nextSection }) => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(nextSection);\r\n  };\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }} id=\"home\">\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"90vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcase.map((sc) => (\r\n            <DShowCase\r\n              height=\"90vh\"\r\n              key={sc._id}\r\n              bgcolor={sc.bgColor}\r\n              background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n            >\r\n              {/* {sc.bgImg && (\r\n                <DImage height=\"100%\">\r\n                  <img\r\n                    src={\r\n                      sc.bgImg !== null || sc.bgImg !== undefined\r\n                        ? `/images/cms/home/${sc.bgImg}`\r\n                        : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"showcase\"\r\n                  />\r\n                </DImage>\r\n              )} */}\r\n\r\n              <Overlay\r\n                flex\r\n                bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                justify={\r\n                  sc.position === \"left\"\r\n                    ? \"flex-start\"\r\n                    : sc.position === \"right\"\r\n                    ? \"flex-end\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                talign={\r\n                  sc.position === \"left\"\r\n                    ? \"left\"\r\n                    : sc.position === \"right\"\r\n                    ? \"right\"\r\n                    : sc.position === \"center\"\r\n                    ? \"center\"\r\n                    : \"\"\r\n                }\r\n                align=\"center\"\r\n                className={sc.dark ? \"dark\" : \"\"}\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h1>{sc.title}</h1>\r\n                  <h2>{sc.subtitle}</h2>\r\n                  <p>{sc.paragraph}</p>\r\n                  <JButton\r\n                    className={sc.dark ? \"dark\" : \"\"}\r\n                    dark={sc.dark ? true : false}\r\n                  >\r\n                    Book Appointment\r\n                    <Link to=\"/appointment\" />\r\n                  </JButton>\r\n                </div>\r\n              </Overlay>\r\n              <MouseScroll\r\n                onClick={scrollDown}\r\n                inverted={sc.dark ? true : false}\r\n              />\r\n            </DShowCase>\r\n          ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  height: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  display: \"block\",\r\n};\r\n\r\nexport default Showcase;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const JCard = styled.figure`\r\n  background-color: #fff;\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  height: ${(props) => (props.height ? props.height : \"auto\")};\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  -webkit-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n  font-size: 12px;\r\n  margin: 24px auto;\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  img {\r\n    backface-visibility: hidden;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    background-color: #fe8c00;\r\n    opacity: 0.5;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  &:before {\r\n    -webkit-transform: skew(30deg) translateX(-80%);\r\n    transform: skew(30deg) translateX(-80%);\r\n  }\r\n\r\n  &:after {\r\n    -webkit-transform: skew(-30deg) translateX(-70%);\r\n    transform: skew(-30deg) translateX(-70%);\r\n  }\r\n\r\n  figcaption {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    padding: 25px 40% 25px 20px;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      background-color: #2193b0;\r\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\r\n      content: \"\";\r\n      opacity: 0.5;\r\n      z-index: -1;\r\n    }\r\n\r\n    &::before {\r\n      -webkit-transform: skew(30deg) translateX(-100%);\r\n      transform: skew(30deg) translateX(-100%);\r\n    }\r\n\r\n    &::after {\r\n      -webkit-transform: skew(-30deg) translateX(-90%);\r\n      transform: skew(-30deg) translateX(-90%);\r\n    }\r\n\r\n    h3,\r\n    p {\r\n      margin: 0;\r\n      opacity: 0;\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    h3 {\r\n      font-size: ${(props) => (props.titleSize ? props.titleSize : \"36px\")};\r\n      font-weight: 700;\r\n      line-height: 1em;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n      font-size: 1em;\r\n    }\r\n  }\r\n\r\n  &:hover h3,\r\n  &.hover h3,\r\n  &:hover p,\r\n  &.hover p {\r\n    -webkit-transform: translateY(0);\r\n    transform: translateY(0);\r\n    opacity: 0.9;\r\n    -webkit-transition-delay: 0.2s;\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover:before,\r\n  &.hover:before {\r\n    -webkit-transform: skew(30deg) translateX(-20%);\r\n    transform: skew(30deg) translateX(-20%);\r\n    -webkit-transition-delay: 0.05s;\r\n    transition-delay: 0.05s;\r\n  }\r\n\r\n  &:hover:after,\r\n  &.hover:after {\r\n    -webkit-transform: skew(-30deg) translateX(-10%);\r\n    transform: skew(-30deg) translateX(-10%);\r\n  }\r\n\r\n  &:hover figcaption:before,\r\n  &.hover figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-40%);\r\n    transform: skew(30deg) translateX(-40%);\r\n    -webkit-transition-delay: 0.15s;\r\n    transition-delay: 0.15s;\r\n  }\r\n\r\n  &:hover figcaption:after,\r\n  &.hover figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-30%);\r\n    transform: skew(-30deg) translateX(-30%);\r\n    -webkit-transition-delay: 0.1s;\r\n    transition-delay: 0.1s;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 10;\r\n  }\r\n`;\r\n\r\nexport const JCard2 = styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    background: #fff;\r\n    max-width: 100%;\r\n    min-width: 240px;\r\n    height: 400px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n\r\n    .thumbnail {\r\n      width: 100%;\r\n      height:100%;\r\n      overflow: hidden;\r\n      border-radius: 10px 10px 0 0;\r\n      background: #eee;\r\n      img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n       object-fit: cover;\r\n      }\r\n    }\r\n\r\n \r\n    .post-content {\r\n      position: absolute;\r\n      bottom: 0;\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border-radius: 0 0 10px 10px;\r\n      .category {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 0;\r\n        background: ${({ theme }) => theme.secondary};\r\n        padding: 10px 15px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n      }\r\n      .title {\r\n        color: #ccc;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n      }\r\n      .sub_title {\r\n        margin: 0;\r\n        padding: 0 0 20px;\r\n        color: ${({ theme }) => theme.secondary};\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n      }\r\n\r\n      .description {\r\n          height: 10px;\r\n          margin-top: 12px;\r\n         \r\n          &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            background-color: #f5f5f5;\r\n          }\r\n\r\n          &::-webkit-scrollbar {\r\n            width: 10px;\r\n            background-color: #f5f5f5;\r\n          }\r\n          &::-webkit-scrollbar-thumb {\r\n            background-image: -webkit-gradient(\r\n              linear,\r\n              left bottom,\r\n              left top,\r\n              color-stop(0.44, rgb(122, 153, 217)),\r\n              color-stop(0.72, rgb(73, 125, 189)),\r\n              color-stop(0.86, rgb(28, 58, 148))\r\n            );\r\n          }\r\n        \r\n          p{\r\n            color: #232323;\r\n            font-size: 14px;\r\n            line-height: 1.8em;\r\n            opacity: 0;\r\n            \r\n            pointer-events: none;\r\n            transition: all 0.45s ease;\r\n            &:first-of-type {\r\n              margin-top: 1.25rem;\r\n              &:before {\r\n                content: \"\";\r\n                position: absolute;\r\n                height: 5px;\r\n                background: ${({ theme }) => theme.blue};\r\n                width: 35px;\r\n                top: -0.75rem;\r\n                border-radius: 3px;\r\n              }\r\n            }\r\n          }\r\n        \r\n        }\r\n     \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .thumbnail {\r\n        background-color: #000;\r\n    \r\n        img {\r\n          -webkit-transform: scale(1.1);\r\n          -moz-transform: scale(1.1);\r\n          transform: scale(1.1);\r\n          opacity: 0.8;\r\n          transition: all 0.8s ease-in;\r\n        }\r\n        transition: all 0.8s ease-in-out;\r\n\r\n      }\r\n      .post-content{\r\n        .description{\r\n          height: 175px;\r\n          transition: height 0.6s ease-in-out;\r\n          overflow: ${(props) => props.oflow && \"auto\"};\r\n          p{\r\n            cursor: default;\r\n            pointer-events: auto;\r\n            -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n            opacity: 0.9;\r\n            -webkit-transition-delay: 0.6s;\r\n            transition-delay: 0.6s;\r\n          }\r\n         \r\n        }\r\n        \r\n      }\r\n     \r\n\r\n    }\r\n  \r\n`;\r\n\r\nexport const JCard3 = styled.div`\r\n  .description {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #fff;\r\n    z-index: 1;\r\n\r\n    h1 {\r\n      line-height: 1;\r\n      margin: 0;\r\n      font-size: 1.7rem;\r\n    }\r\n    h4 {\r\n      font-size: 1rem;\r\n      font-weight: 300;\r\n      text-transform: capitalize;\r\n      color: #a2a2a2;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      margin: 1rem 0 0;\r\n      font-size: 16px;\r\n      &:first-of-type {\r\n        margin-top: 1.25rem;\r\n        &:before {\r\n          content: \"\";\r\n          position: absolute;\r\n          height: 5px;\r\n          background: ${({ theme }) => theme.blue};\r\n          width: 35px;\r\n          top: -0.75rem;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JCard4 = styled.figure`\r\n  position: relative;\r\n  margin: 10px;\r\n  min-width: 230px;\r\n  max-width: 315px;\r\n  width: 100%;\r\n  height: ${(props) => props.height && props.height};\r\n  color: #000000;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n  font-size: 14px;\r\n\r\n  & * {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .profile-image {\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 300px;\r\n    z-index: 1;\r\n    position: relative;\r\n    margin: ${(props) => props.margin && props.margin};\r\n    top: ${(props) => props.top && props.top};\r\n    right: ${(props) => props.right && props.right};\r\n    bottom: ${(props) => props.bottom && props.bottom};\r\n    left: ${(props) => props.left && props.left};\r\n    padding: 10px;\r\n    border: 2px solid #6dd5ed;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      vertical-align: top;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    .profile-image {\r\n      border-color: #2193b0;\r\n    }\r\n    figcaption {\r\n      box-shadow: ${(props) =>\r\n        props.bs\r\n          ? props.bs\r\n          : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n            \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n            \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n            \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n            \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n    }\r\n  }\r\n\r\n  figcaption {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    padding: 125px 25px 25px;\r\n    margin-top: -100px;\r\n    display: inline-block;\r\n    box-shadow: ${(props) =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.11)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.11)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.11)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.11)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.11)\")};\r\n\r\n    h3,\r\n    h4,\r\n    p {\r\n      margin: 0 0 5px;\r\n    }\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    h4 {\r\n      color: #8c8c8c;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n      letter-spacing: 1px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .icons {\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .linkToPage {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const DTestimonialCard = styled.div`\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  outline: 0;\r\n  border: 0;\r\n  position: relative;\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n\r\n  figure {\r\n    position: relative;\r\n    float: left;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    min-width: 90%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    color: #000000;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    background: #2193b0;\r\n    background: -webkit-linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.4),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n\r\n    padding: 15px;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n\r\n    & *,\r\n    & *::before,\r\n    & *::after {\r\n      -webkit-box-sizing: border-box;\r\n      box-sizing: border-box;\r\n      -webkit-transition: all 0.35s ease;\r\n      transition: all 0.35s ease;\r\n    }\r\n\r\n    .profile {\r\n      width: 100px;\r\n      height: 100px;\r\n      border-radius: 100%;\r\n      display: inline-block;\r\n      position: relative;\r\n      overflow: hidden;\r\n      -webkit-box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      margin-bottom: 10px;\r\n      border: solid 5px #fe8c00;\r\n      border-color: ${({ theme }) => theme.blue};\r\n\r\n      img {\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    figcaption {\r\n      position: relative;\r\n      width: 100%;\r\n\r\n      h5,\r\n      h4,\r\n      blockquote {\r\n        margin: 0;\r\n      }\r\n\r\n      h5,\r\n      h4 {\r\n        text-transform: uppercase;\r\n        font-weight: 500;\r\n      }\r\n\r\n      h4 {\r\n        color: #274046;\r\n      }\r\n\r\n      h4,\r\n      h5 {\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n      }\r\n\r\n      blockquote {\r\n        font-size: 1em;\r\n        padding: 45px 20px 40px 50px;\r\n        margin-top: 30px;\r\n        background: #ffffff;\r\n        border-radius: 5px;\r\n        -webkit-box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        text-align: left;\r\n        position: relative;\r\n\r\n        color: ${(props) =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n\r\n        &::before,\r\n        &::after {\r\n          font-family: \"FontAwesome\";\r\n          position: absolute;\r\n          font-size: 22px;\r\n          opacity: 0.25;\r\n          color: ${(props) =>\r\n            props.inverted\r\n              ? ({ theme }) => theme.light\r\n              : ({ theme }) => theme.dark};\r\n        }\r\n\r\n        &::before {\r\n          content: \"\\f10d\";\r\n          top: 20px;\r\n          left: 20px;\r\n        }\r\n        &::after {\r\n          content: \"\\f10e\";\r\n          bottom: 10px;\r\n          right: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.basic &&\r\n    \"figure{background: transparent; figcaption{blockquote{box-shadow: none; background: transparent}}}\"}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DFancyText = styled.h1`\r\n  font-size: ${(props) => (props.size ? props.size : \"22px\")};\r\n  letter-spacing: 2px;\r\n  margin: 24px auto;\r\n  text-align: center;\r\n  font-family: \"Playfair Display\";\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  display: table;\r\n  white-space: nowrap;\r\n\r\n  &:before,\r\n  &:after {\r\n    border-top-width: 2px;\r\n    border-top-style: solid;\r\n    border-top-color: ${(props) =>\r\n      props.color\r\n        ? props.color\r\n        : props.alt\r\n        ? ({ theme }) => theme.light\r\n        : ({ theme }) => theme.dark};\r\n    content: \"\";\r\n    display: table-cell;\r\n    position: relative;\r\n    top: 0.5em;\r\n    width: 100px;\r\n    min-width: 50px;\r\n  }\r\n  &:before {\r\n    right: 3%;\r\n  }\r\n  &:after {\r\n    left: 3%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DFancyText } from \"./styled/text\";\r\n\r\nconst FancyText = props => {\r\n  return <DFancyText {...props}>{props.children}</DFancyText>;\r\n};\r\n\r\nexport default FancyText;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DotsVerticalRounded } from \"@styled-icons/boxicons-regular/DotsVerticalRounded\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${(props) => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${(props) => (props.size ? props.size : \"36px\")};\r\n  width: ${(props) =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${(props) => (props.pad ? props.pad : \"6px 16px\")};\r\n  line-height: 1.42857143;\r\n  margin: ${(props) => (props.center ? \"1.5% auto\" : \"1.5%\")};\r\n  text-align: center;\r\n  text-transform: ${(props) => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border-radius: ${(props) =>\r\n    props.radius ? props.radius : props.circle ? \"50%\" : \"5px\"};\r\n  border-width: ${(props) => (props.basic ? \"1px\" : \"0\")};\r\n  border-style: ${(props) => props.basic && \"solid\"};\r\n  border-color: ${(props) =>\r\n    props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.default\r\n      ? ({ theme }) => theme.bluer\r\n      : ({ theme }) => theme.blue};\r\n      \r\n  color: ${(props) =>\r\n    props.red\r\n      ? ({ theme }) => theme.red\r\n      : props.yellow\r\n      ? ({ theme }) => theme.yellow\r\n      : props.green\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.bluer\r\n      ? ({ theme }) => theme.bluer\r\n      : ({ theme }) => theme.light};\r\n\r\n  background: ${(props) =>\r\n    props.basic\r\n      ? \"transparent\"\r\n      : props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.default\r\n      ? ({ theme }) => theme.bluer\r\n      : ({ theme }) => theme.blue};\r\n\r\n  ${(props) =>\r\n    props.disabled &&\r\n    \"background: #E9E4F0; color: #D3CCE3; &:hover:{opacity: 1}\"}\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n   opacity: 0.8;\r\n   color: #fff;\r\n   background: ${(props) =>\r\n     props.alert\r\n       ? ({ theme }) => theme.red\r\n       : props.warning\r\n       ? ({ theme }) => theme.yellow\r\n       : props.confirm\r\n       ? ({ theme }) => theme.green\r\n       : props.primary\r\n       ? ({ theme }) => theme.primary\r\n       : props.default\r\n       ? ({ theme }) => theme.bluer\r\n       : ({ theme }) => theme.blue};\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonFree = styled(DButton)`\r\n  position: absolute;\r\n  top: ${(props) => props.top && props.top};\r\n  left: ${(props) => props.left && props.left};\r\n  bottom: ${(props) => props.bottom && props.bottom};\r\n  right: ${(props) => props.right && props.right};\r\n`;\r\n\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  color: ${(props) => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${(props) => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${(props) => props.weight && props.weight};\r\n  padding: ${(props) => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${(props) => (props.m ? props.m : \"1%\")};\r\n  background: ${(props) => props.bgcolor && props.bgcolor};\r\n  border-radius: ${(props) => props.rounded && \"10px\"};\r\n  text-transform: ${(props) => props.tt && props.tt};\r\n  width: ${(props) => (props.w ? props.w : \"auto\")};\r\n  display: ${(props) => props.flex && \"flex\"};\r\n  justify-content: ${(props) =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${(props) =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${(props) => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n    opacity: ${(props) => props.hover && \"0.8\"};\r\n    cursor: ${(props) => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${(props) => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${(props) => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${(props) =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${(props) =>\r\n        props.activeBg ? props.activeBg : ({ theme }) => theme.blue};\r\n      color: ${(props) =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${(props) => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${(props) => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${(props) =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${(props) =>\r\n    props.alert\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.success\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.warning\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(255, 255, 255,1.0)\"};\r\n  height: auto;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .close {\r\n    height: 90%;\r\n    margin: 1% auto;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    fontweight: bold;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.p`\r\n  text-align: right;\r\n  cursor: pointer !important;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.secondary};\r\n    display: inline-block;\r\n    position: relative;\r\n    font-weight: 700;\r\n    &:after {\r\n      content: \"\\f061\";\r\n      font-family: FontAwesome;\r\n      ${(props) =>\r\n        props.hover === 0\r\n          ? \"margin-left: 5px;opacity: 1;\"\r\n          : \"margin-left: -10px; opacity: 0;\"};\r\n      vertical-align: middle;\r\n      transition: margin 0.3s, opacity 0.3s;\r\n    }\r\n    a {\r\n      color: ${({ theme }) => theme.secondary};\r\n    }\r\n    &:hover {\r\n      &:after {\r\n        margin-left: 5px;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollUp = styled(Icon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: block;\r\n`;\r\n\r\nexport const DotsVertical = styled(DotsVerticalRounded)`\r\n  color: #232323;\r\n  &:hover {\r\n    border-radius: 100%;\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nexport const DLink = styled(Link)`\r\n  color: ${(props) => (props.color ? props.color : \"#232323\")} !important;\r\n  font-size: ${(props) => (props.size ? props.size : \"12px\")};\r\n  padding-bottom: 5px;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.secondary} !important;\r\n    border-bottom: ${(props) => props.borderb && \"1px solid #232323\"};\r\n    border-bottom-color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"../../styled/utils\";\r\n\r\nconst ReadMore = props => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_HOME_SECTION } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport { JCard } from \"../../styled/card\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\n\r\nconst CategorySection = ({ setRef }) => {\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const [categorySection, setCategorySection] = useState({});\r\n\r\n  const { data: dataCategories, loading: loadingCategories } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategories) {\r\n      setIsCategories(dataCategories.categories);\r\n    }\r\n  }, [dataCategories]);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setCategorySection(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <DSection\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      pad=\"20px 0\"\r\n      bgcolor={categorySection.bgColor}\r\n      ref={setRef}\r\n    >\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n        className={categorySection.dark ? \"dark\" : \"\"}\r\n      >\r\n        {categorySection && (\r\n          <>\r\n            {categorySection.title !== \"\" && (\r\n              <FancyText size=\"28px\" alt={categorySection.dark ? true : false}>\r\n                {categorySection.title}\r\n              </FancyText>\r\n            )}\r\n            {categorySection.subtitle !== \"\" && (\r\n              <h3>{categorySection.subtitle}</h3>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <Content height=\"100%\" width=\"100%\">\r\n          {loadingCategories ? (\r\n            <DGrid four gap=\"20px\">\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n              <Skeleton width=\"100%\" height={300} />\r\n            </DGrid>\r\n          ) : (\r\n            <DGrid\r\n              two={categorySection.grid === 2 ? true : false}\r\n              three={categorySection.grid === 3 ? true : false}\r\n              four={categorySection.grid === 4 ? true : false}\r\n              gap=\"20px\"\r\n            >\r\n              {isCategories.map((category) => (\r\n                <JCard key={category._id}>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <div className=\"description\">\r\n                      <p>\r\n                        {category.description.length > 50\r\n                          ? parser(category.description.substr(0, 50) + \"...\")\r\n                          : parser(category.description.substr(0, 50))}\r\n                      </p>\r\n                      <ReadMore hover={0}>View Services</ReadMore>\r\n                    </div>\r\n                  </figcaption>\r\n                  <Link to={`/service/${category._id}`}></Link>\r\n                </JCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategorySection;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int) {\r\n    aestheticiansReceps(limit: $limit) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      dateOfBirth\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { DGrid, DSection } from \"../../styled/containers\";\r\nimport { JCard4 } from \"../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport FancyText from \"../../FancyText\";\r\n\r\nconst TeamSection = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error,\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <FancyText size=\"28px\">Our Team</FancyText>\r\n      <DGrid four gap=\"25px\">\r\n        {loading_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          employeesAR &&\r\n          employeesAR.map((employee) => (\r\n            <JCard4 data-emp={employee._id} key={employee._id}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n              <figcaption>\r\n                <h3>\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </h3>\r\n                <h4>{employee.role}</h4>\r\n                <p>\r\n                  {employee.bio.length > 50\r\n                    ? parser(employee.bio.substr(0, 50) + \"...\")\r\n                    : parser(employee.bio.substr(0, 50))}\r\n                </p>\r\n                <ReadMore hover={0}>Read More</ReadMore>\r\n              </figcaption>\r\n              <Link to=\"/about\" className=\"linkToPage\" />\r\n            </JCard4>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n      <Link to=\"/about/#team\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"centet\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2,\r\n  },\r\n};\r\n\r\nexport default TeamSection;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: flex;\r\n  justify-column: center;\r\n  align-items: center;\r\n  flex-direction: ${(props) => (props.row ? \"row\" : \"column\")};\r\n\r\n  .ring {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${(props) =>\r\n      props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"60px\"\r\n        : \"100px\"};\r\n    height: ${(props) =>\r\n      props.tiny\r\n        ? \"15px\"\r\n        : props.small\r\n        ? \"30px\"\r\n        : props.medium\r\n        ? \"60px\"\r\n        : \"100px\"};\r\n\r\n    div {\r\n      box-sizing: border-box;\r\n      display: block;\r\n      position: absolute;\r\n      width: ${(props) =>\r\n        props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"48px\"\r\n          : \"72px\"};\r\n      height: ${(props) =>\r\n        props.tiny\r\n          ? \"12px\"\r\n          : props.small\r\n          ? \"24px\"\r\n          : props.medium\r\n          ? \"48px\"\r\n          : \"72px\"};\r\n      margin: ${(props) =>\r\n        props.tiny\r\n          ? \"2px\"\r\n          : props.small\r\n          ? \"3px\"\r\n          : props.medium\r\n          ? \"6px\"\r\n          : \"10px\"};\r\n      border: ${(props) =>\r\n        props.tiny\r\n          ? \"1px solid #fff\"\r\n          : props.small\r\n          ? \"2px solid #fff\"\r\n          : props.medium\r\n          ? \"3px solid #fff\"\r\n          : \"5px  solid #fff\"};\r\n\r\n      border-radius: 50%;\r\n      animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n      border-color: ${(props) =>\r\n        props.inverted\r\n          ? \"#fff transparent transparent transparent\"\r\n          : \"#203A43 transparent transparent transparent\"};\r\n    }\r\n\r\n    div:nth-child(1) {\r\n      animation-delay: -0.45s;\r\n    }\r\n    div:nth-child(2) {\r\n      animation-delay: -0.3s;\r\n    }\r\n    div:nth-child(3) {\r\n      animation-delay: -0.15s;\r\n    }\r\n  }\r\n\r\n  .content-text {\r\n    margin: 0 2px;\r\n    letter-spacing: 2px;\r\n    font-weight: 700;\r\n    font-size: ${(props) =>\r\n      props.tiny\r\n        ? \"12px\"\r\n        : props.small\r\n        ? \"13px\"\r\n        : props.medium\r\n        ? \"14px\"\r\n        : \"16px\"};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = (props) => {\r\n  return (\r\n    <SpinnerRing {...props}>\r\n      <div className=\"ring\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n      <div className=\"content-text\">{props.content}</div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Spinner;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { FETCH_HOME_SECTION, FETCH_ABOUT_CMS } from \"../../../util/graphql/cms\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Section2Styled, Content } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport parser from \"html-react-parser\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AboutSection = ({ nextSection }) => {\r\n  const [isAboutSection, setIsAboutSection] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const {\r\n    data: aboutChange,\r\n    loading: loadAboutChange,\r\n  } = useQuery(FETCH_HOME_SECTION, { variables: { sectionName: \"ABOUT\" } });\r\n\r\n  useEffect(() => {\r\n    if (aboutChange) {\r\n      setIsAboutSection(aboutChange.homeCMS);\r\n    }\r\n  }, [aboutChange]);\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled\r\n      ref={(el) => (section2 = el)}\r\n      alt={isAboutSection.alt === true ? true : false}\r\n    >\r\n      <div className=\"sec2-container\" ref={nextSection}>\r\n        <div className=\"sec2-inner\">\r\n          {loadAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner medium />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n                <ReadMore>\r\n                  <Link to=\"/about/#story\">Learn More</Link>\r\n                </ReadMore>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={(el) => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default AboutSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst PromoSection1 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/appointment\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default PromoSection1;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_TESTIMONIALS = gql`\r\n  query testimonials($active: Boolean) {\r\n    testimonials(active: $active) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USER_REVIEW = gql`\r\n  query userTestimonial($userId: ID) {\r\n    userTestimonial(userId: $userId) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_VIEWS = gql`\r\n  query testimonialsView($limit: Int) {\r\n    testimonialsView(limit: $limit) {\r\n      _id\r\n      rating\r\n      message\r\n      view\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_TESTIMONIALS, FETCH_USER_REVIEW, FETCH_VIEWS };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_VIEWS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, Overlay } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst TestimonialSection = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const { data: dataReviews, loading: loadReviews } = useQuery(FETCH_VIEWS, {\r\n    variables: {\r\n      limit: 0,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonialsView);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      width=\"100%\"\r\n      mcenter\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      {loadReviews ? (\r\n        <Spinner inverted medium />\r\n      ) : (\r\n        <Content width=\"80%\" height=\"auto\" margin=\"auto\" pad=\"50px 0\">\r\n          <Slider {...settings}>\r\n            {reviews &&\r\n              reviews.map((rev) => (\r\n                <DTestimonialCard basic inverted>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          rev.user.photo\r\n                            ? `/images/users/${rev.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n\r\n                    <figcaption>\r\n                      <h4>\r\n                        {rev.user.firstName} {rev.user.lastName}{\" \"}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={rev.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>{rev.message}</blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        </Content>\r\n      )}\r\n\r\n      <Overlay\r\n        bg={\"rgba(0,0,0,0.5)\"}\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        pad=\"20px\"\r\n      >\r\n        <FancyText size=\"28px\" alt>\r\n          What Our Client Say\r\n        </FancyText>\r\n      </Overlay>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  fade: true,\r\n  infinite: true,\r\n  autoplay: true,\r\n  speed: 1000,\r\n  autoplaySpeed: 4000,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n};\r\n\r\nexport default TestimonialSection;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { ScrollUp, DButton } from \"../../styled/utils\";\r\nimport \"./scroll.css\";\r\n\r\nclass ScrollButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(\r\n      0,\r\n      window.pageYOffset - (this.props.scrollPx ? this.props.scrollPx : \"100\")\r\n    );\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delay ? this.props.delay : \"16.66\"\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        title=\"Back to top\"\r\n        className=\"scroll\"\r\n        onClick={() => {\r\n          this.scrollToTop();\r\n        }}\r\n      >\r\n        <ScrollUp name=\"chevron up\" size=\"large\" className=\"arrow-up\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ScrollButton;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategorySection from \"../../components/main/home/CategorySection\";\r\nimport TeamSection from \"../../components/main/home/TeamSection\";\r\nimport AboutSection from \"../../components/main/home/AboutSection\";\r\nimport PromoSection1 from \"../../components/main/home/PromoSection1\";\r\nimport TestimonialSection from \"../../components/main/home/TestimonialSection\";\r\nimport { DContainer } from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Home = () => {\r\n  const nextSection = useRef();\r\n  const card1 = \"/images/card1.jpg\";\r\n  const scrolling = useScroll(300);\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton />}\r\n      <Showcase nextSection={nextSection} />\r\n\r\n      <AboutSection nextSection={nextSection} />\r\n\r\n      <CategorySection cards={card1} />\r\n      <PromoSection1 />\r\n      <TeamSection cards={card1} />\r\n      <TestimonialSection />\r\n      <PromoSection1 />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React from \"react\";\r\nimport { DSection, Content, DImage } from \"../../styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = ({ content, aboutUS }) => {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768\r\n            ? \"column\"\r\n            : aboutUS.missionvision.alt\r\n            ? \"row-reverse\"\r\n            : \"row\"\r\n        }\r\n        margin=\"24px auto 0 auto\"\r\n        ref={content}\r\n        id=\"story\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"24px\"\r\n        >\r\n          <h3>{aboutUS && aboutUS.missionvision.mission.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.mission.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.mission.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.mission.paragraph}</p>\r\n          <h3>{aboutUS && aboutUS.missionvision.vision.title}</h3>\r\n          {aboutUS && aboutUS.missionvision.vision.subtitle !== \"\" && (\r\n            <h4>{aboutUS.missionvision.vision.subtitle}</h4>\r\n          )}\r\n          <p>{aboutUS && aboutUS.missionvision.vision.paragraph}</p>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.missionvision.photo\r\n                  ? `/images/cms/about/${aboutUS.missionvision.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct={\r\n          width === 768 ? \"column\" : aboutUS.story.alt ? \"row-reverse\" : \"row\"\r\n        }\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          width=\"90%\"\r\n          height=\"100%\"\r\n          margin=\"0 auto\"\r\n          pad=\"24px\"\r\n        >\r\n          <DImage height=\"100%\">\r\n            <img\r\n              src={\r\n                aboutUS.story.photo\r\n                  ? `/images/cms/about/${aboutUS.story.photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"about\"\r\n            />\r\n          </DImage>\r\n        </Content>\r\n        <Content\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          direct=\"column\"\r\n          pad=\"20px\"\r\n          style={{ maxHeight: \"90vh\" }}\r\n        >\r\n          <h3>{aboutUS.story.title}</h3>\r\n          {aboutUS.story.subtitle !== \"\" && <h4>{aboutUS.story.subtitle}</h4>}\r\n          <p\r\n            style={{\r\n              fontSize: \"15px\",\r\n              letterSpacing: \"2px\",\r\n              lineHeight: 1.8,\r\n              textAlign: \"justify\",\r\n              overflowWrap: \"break-word\",\r\n              overflow: \"auto\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            {aboutUS.story.paragraph}\r\n          </p>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../styled/card\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst TeamDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModal = event => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JCard4 data-emp={employee._id} onClick={handleModal}>\r\n        <div className=\"profile-image\">\r\n          <img\r\n            src={\r\n              employee.photo\r\n                ? `/images/employees/${employee.photo}`\r\n                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n            }\r\n            alt={employee.photo}\r\n          />\r\n        </div>\r\n        <figcaption>\r\n          <h3>\r\n            {employee.title} {employee.firstName} {employee.lastName}\r\n          </h3>\r\n          <h4>{employee.role}</h4>\r\n          <p>\r\n            {employee.bio.length > 50\r\n              ? parser(employee.bio.substr(0, 50) + \"...\")\r\n              : parser(employee.bio.substr(0, 50))}\r\n          </p>\r\n          <ReadMore hover={0}>Read More</ReadMore>\r\n          <div className=\"icons\">\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-reddit\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-vimeo\"></i>\r\n            </a>\r\n          </div>\r\n        </figcaption>\r\n      </JCard4>\r\n      <Modal size=\"small\" open={open} onClose={() => setOpen(false)} closeIcon>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4 top={\"-60px\"}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{employee.firstName}</h1>\r\n                <h4>{employee.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {parser(employee.bio)}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nconst Team = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const { data: dataEmployees, loading: loadingEmployees } = useQuery(\r\n    FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmployees) {\r\n      setEmployees(dataEmployees.aestheticiansReceps);\r\n    }\r\n  }, [dataEmployees]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        fixed\r\n        id=\"team\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n        >\r\n          <h3>Our TEAM</h3>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        pad=\"10px 0\"\r\n        mcenter\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DGrid three gap=\"20px\">\r\n            {loadingEmployees ? (\r\n              <>\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n              </>\r\n            ) : (\r\n              employees &&\r\n              employees.map(emp => <TeamDetails key={emp._id} employee={emp} />)\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","export const scrollView = ref => {\r\n  if (ref.current)\r\n    ref.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\"\r\n    });\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../util/graphql/cms\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport Story from \"../../components/main/about/Story\";\r\nimport Team from \"../../components/main/about/Team\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst About = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAbout, loading: loadAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n\r\n      <>\r\n        <DSection\r\n          background={\r\n            about.bgImg\r\n              ? `/images/cms/about/${about.bgImg}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          bgcolor={about.bgColor}\r\n          height=\"85vh\"\r\n          fixed\r\n          id=\"about\"\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className=\"dark\"\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>\r\n              {about.title ? about.title : \"ABOUT US\"}\r\n            </h1>\r\n            {loadAbout && <Spinner medium inverted />}\r\n            {about.subtitle !== \"\" && <h3>{about.subtitles}</h3>}\r\n            <MouseScroll onClick={scrollDown} />\r\n          </Content>\r\n          <Overlay bgc={about.overlay ? true : false} />\r\n        </DSection>\r\n        {loadAbout ? (\r\n          <DSection\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            flex\r\n            justify=\"space-around\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            margin=\"20px auto\"\r\n            pad=\"20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Skeleton height=\"100%\" width=\"100%\" />\r\n              <Skeleton width=\"100%\" height={20} count={10} />\r\n            </DGrid>\r\n          </DSection>\r\n        ) : (\r\n          <Story content={content} aboutUS={dataAbout.aboutUsCMS} />\r\n        )}\r\n      </>\r\n\r\n      <Team />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/login\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/home\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted() {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\",\r\n          }}\r\n        >\r\n          <Link to=\"/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer,\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = (props) => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/\" },\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue,\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n  const [isEmp, setIsEmp] = useState({});\r\n  const [isServ, setIsServ] = useState({});\r\n\r\n  const handleTimeChanged = (event) => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_employee) {\r\n      setIsEmp(data_employee);\r\n    }\r\n  }, [data_employee]);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setIsServ(data_service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n      },\r\n    }\r\n  );\r\n\r\n  if (isEmp && isServ && data_appointments) {\r\n    const workStart = isEmp.employee && isEmp.employee.schedule.workStart;\r\n    const breakStart = isEmp.employee && isEmp.employee.schedule.breakStart;\r\n\r\n    isEmp.employee && isEmp.employee.schedule.day.map((d) => days.push(d));\r\n    data_appointments.checkedAppointments.map((occcupied) =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = isServ.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter((item) => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter((oras) => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map((ft) => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content height=\"100%\" width=\"100%\" flex justify=\"center\" align=\"center\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        margin=\"0 auto\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        flow=\"row wrap\"\r\n        pad=\"10px\"\r\n      >\r\n        {isEmp && data_service ? (\r\n          loading_employee || loading_appointments || loading_service ? (\r\n            <Spinner content=\"Loading...\" medium />\r\n          ) : (\r\n            times.map((time) => (\r\n              <div className=\"pretty p-default p-curve\" key={time}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"time\"\r\n                  value={time}\r\n                  onChange={handleTimeChanged}\r\n                />\r\n                <div className=\"state p-info-o\">\r\n                  <label style={styles.label}>{time}</label>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )\r\n        ) : (\r\n          \"Select Available Time\"\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700,\r\n  },\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY,\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal,\r\n  c,\r\n}) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error,\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data_categories) {\r\n      setCategories(data_categories.categories);\r\n    }\r\n  }, [data_categories]);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services },\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp,\r\n    },\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_serviceEmp) {\r\n      setEmployees(data_serviceEmp.service.employees);\r\n    }\r\n  }, [data_serviceEmp]);\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"flex-start\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h3>Appointment Details</h3>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <Spinner row content=\"Loading...\" small />\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"ui fluid dropdown input-custom\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Categories...\r\n              </option>\r\n              {categories &&\r\n                categories.map((category) => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        {called && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select a service\r\n            </label>\r\n            {loading_services ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                placeholder=\"Services...\"\r\n                name=\"service\"\r\n                onChange={handleServiceChange}\r\n                value={serviceValue}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"38px\",\r\n                  padding: \"0.5em\",\r\n                  border: \"1px solid rgba(34,36,38,.15)\",\r\n                  cursor: \"pointer\",\r\n                  position: \"relative\",\r\n                  outline: \"0\",\r\n                  visibility: \"visible\",\r\n                  textAlign: \"left\",\r\n                }}\r\n                className=\"ui fluid dropdown input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Services...\r\n                </option>\r\n                {services &&\r\n                  services.map((service) => (\r\n                    <option key={service._id} value={service._id}>\r\n                      {service.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n\r\n        {calledServiceEmp && (\r\n          <Form.Field>\r\n            <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n              Select Aesthetician\r\n            </label>\r\n            {loading_serviceEmp ? (\r\n              <Spinner row content=\"Loading...\" small />\r\n            ) : (\r\n              <select\r\n                name=\"employee\"\r\n                value={employeeVal}\r\n                onChange={handleEmployeeChange}\r\n                className=\"ui fluid dropdown input-custom\"\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select Aesthetician...\r\n                </option>\r\n                {employees &&\r\n                  employees.map((servEmp) => (\r\n                    <option key={servEmp._id} value={servEmp._id}>\r\n                      {servEmp.firstName}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          </Form.Field>\r\n        )}\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const [service, setService] = useState({});\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setService(data_service.service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {loading_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input value={service.name} readOnly style={{ width: \"60%\" }} />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\n// import { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n            <DSection\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              background={\r\n                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              height=\"100vh\"\r\n            >\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                jusitfy=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Advertisement</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DSection>\r\n        \r\n          <DGrid>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    basic={\r\n                      (values.category === \"\" ||\r\n                        serviceValue === \"\" ||\r\n                        employeeVal === \"\" ||\r\n                        selectedTime === \"\") &&\r\n                      true\r\n                    }\r\n                    disabled={\r\n                      values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst photos = [\r\n  {\r\n    src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\r\n    width: 1,\r\n    height: 1,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  }\r\n];\r\n\r\nconst Gallery = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"gallery\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>Gallery</h1>\r\n          <h3>Love Your Skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        width=\"80%\"\r\n        mcenter\r\n        pad=\"20px 0\"\r\n        ref={content}\r\n      >\r\n        <MyGallery photos={photos} onClick={openLightbox} />\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel\r\n                currentIndex={currentImage}\r\n                views={photos.map(x => ({\r\n                  ...x,\r\n                  srcset: x.srcSet,\r\n                  caption: x.title\r\n                }))}\r\n              />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { Rating, Icon, Modal, Form, TextArea } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalReview = ({ openReview, setOpenReview, user, userReview }) => {\r\n  const [rate, setRate] = useState(userReview ? userReview.rating : 1);\r\n  const [message, setMessage] = useState(userReview ? userReview.message : \"\");\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const mutation = userReview ? UPDATE_REVIEW : ADD_REVIEW;\r\n\r\n  const [addOrUpdate, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      id: userReview && userReview._id,\r\n      rating: rate,\r\n      message: message,\r\n    },\r\n    refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n\r\n    onCompleted() {\r\n      toaster.notify(\r\n        userReview\r\n          ? \"Successfully Update a review\"\r\n          : \"Successfully Added a review\"\r\n      );\r\n    },\r\n  });\r\n\r\n  const handleRate = (e, { rating }) => {\r\n    setRate(rating);\r\n  };\r\n\r\n  const handleMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    addOrUpdate();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"mini\"\r\n      open={openReview}\r\n      onClose={() => {\r\n        setOpenReview(false);\r\n        setEdit(false);\r\n      }}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>\r\n        <Icon name=\"pencil\" />\r\n        Write A Review\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field>\r\n            <Rating\r\n              rating={rate}\r\n              maxRating={5}\r\n              onRate={handleRate}\r\n              icon=\"star\"\r\n              size=\"huge\"\r\n              style={{ margin: \"0 auto\" }}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <TextArea\r\n              style={{ minHeight: 100 }}\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={handleMessage}\r\n              disabled={edit || !userReview ? false : true}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {!userReview || edit ? (\r\n          <DButton confirm onClick={handleSave}>\r\n            {loading ? (\r\n              <Spinner inverted small />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleEdit}>\r\n            <Icon name=\"edit\" />\r\n            Edit\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_REVIEW = gql`\r\n  mutation addTestimonial($rating: Int, $message: String) {\r\n    addTestimonial(inputTestimonial: { rating: $rating, message: $message }) {\r\n      _id\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_REVIEW = gql`\r\n  mutation updateTestimonial($id: ID!, $rating: Int, $message: String) {\r\n    updateTestimonial(_id: $id, rating: $rating, message: $message) {\r\n      rating\r\n      message\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalReview;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_REVIEW } from \"../../../util/graphql/testimonial\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport ModalReview from \"./ModalReview\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Review = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [userReview, setUserReview] = useState({});\r\n  const [openReview, setOpenReview] = useState(false);\r\n\r\n  const { data: dataUserReview, loading: loadUserReview } = useQuery(\r\n    FETCH_USER_REVIEW,\r\n    {\r\n      variables: { userId: user ? user.userId : \"\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataUserReview) {\r\n      setUserReview(dataUserReview.userTestimonial);\r\n    }\r\n  }, [dataUserReview]);\r\n\r\n  const handleOpenReview = () => {\r\n    if (user) {\r\n      setOpenReview(true);\r\n    } else {\r\n      toaster.notify(\"You must sign in n order to write a review. Thank you!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      margin=\"1rem auto\"\r\n    >\r\n      {loadUserReview ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <>\r\n          <DButton basic radius=\"25px\" center bluer onClick={handleOpenReview}>\r\n            <Icon name=\"pencil\" />\r\n            Write a review\r\n          </DButton>\r\n          <ModalReview\r\n            openReview={openReview}\r\n            setOpenReview={setOpenReview}\r\n            userReview={dataUserReview && dataUserReview.userTestimonial}\r\n            user={user}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport { DSection, Content, DGrid } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport Review from \"./Review\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport moment from \"moment\";\r\n\r\nconst TestimonialCard = ({ content }) => {\r\n  const [isTestimonials, setIsTestimonials] = useState([]);\r\n\r\n  const {\r\n    data: dataTestimonials,\r\n    loading: loadTestimonials,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataTestimonials) {\r\n      setIsTestimonials(dataTestimonials.testimonials);\r\n    }\r\n  }, [dataTestimonials]);\r\n\r\n  return (\r\n    <DSection height=\"100%\" width=\"100%\" mcenter ref={content}>\r\n      <Review />\r\n      <Content width=\"80%\" height=\"100%\" margin=\"0 auto\" pad=\"50px 0\">\r\n        {loadTestimonials ? (\r\n          <DGrid three gap=\"20px\">\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n            <Skeleton width={\"100%\"} height={\"350px\"} />\r\n          </DGrid>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {isTestimonials &&\r\n              isTestimonials.map((testimonial) => (\r\n                <DTestimonialCard key={testimonial._id}>\r\n                  <figure className=\"testimonial\">\r\n                    <div className=\"profile\">\r\n                      <img\r\n                        src={\r\n                          testimonial.user && testimonial.user.photo !== null\r\n                            ? `/images/users/${testimonial.user.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                        }\r\n                        alt=\"profile-sample3\"\r\n                      />\r\n                    </div>\r\n                    <figcaption>\r\n                      <h4>\r\n                        {testimonial.user &&\r\n                          testimonial.user.firstName +\r\n                            \" \" +\r\n                            testimonial.user.lastName}\r\n                      </h4>\r\n                      <Rating\r\n                        rating={testimonial.rating}\r\n                        maxRating={5}\r\n                        icon=\"star\"\r\n                        disabled\r\n                      />\r\n                      <blockquote>\r\n                        <span\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            right: \"10px\",\r\n                            fontSize: \"10px\",\r\n                            color: \"#bbb\",\r\n                          }}\r\n                        >\r\n                          {moment(parseInt(testimonial.updatedAt)).format(\"LL\")}\r\n                        </span>\r\n                        {testimonial.message}\r\n                      </blockquote>\r\n                    </figcaption>\r\n                  </figure>\r\n                </DTestimonialCard>\r\n              ))}\r\n          </Slider>\r\n        )}\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst settings = {\r\n  dots: true,\r\n  infinite: true,\r\n  speed: 500,\r\n  rows: 2,\r\n  slidesPerRow: 3,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesPerRow: 2,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 768,\r\n      settings: {\r\n        slidesPerRow: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default TestimonialCard;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport TestimonialCard from \"../../components/main/testimonial/TestimonialCard\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\n\r\nconst Testimonials = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"tstmnl\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\", fontWeight: 700 }}>\r\n            What Our Client Says\r\n          </h1>\r\n          {/* <h3>We continously improve our service</h3> */}\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <TestimonialCard content={content} />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst Services = () => {\r\n  const sectionDown = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(sectionDown);\r\n  };\r\n\r\n  return (\r\n    <DContainer id=\"services\">\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\" }}>Our Services</h1>\r\n          <h3>It's time to take care of your skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay\r\n          bg={\"linear-gradient(to top, rgba(0,0,0,0.3), rgba(255,255,255,0.1))\"}\r\n        />\r\n      </DSection>\r\n      <DSection\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n        mcenter\r\n        pad=\"24px\"\r\n        height=\"100%\"\r\n        ref={sectionDown}\r\n      >\r\n        <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n          <DGrid three gap=\"24px\" med7={\"1fr\"}>\r\n            {loading ? (\r\n              <>\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n              </>\r\n            ) : (\r\n              isCategories.map(category => (\r\n                <JCard>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <div className=\"description\">\r\n                      <p>\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n                      </p>\r\n                      <ReadMore hover={0}>View Services</ReadMore>\r\n                    </div>\r\n                  </figcaption>\r\n                  <Link to={`/service/${category._id}`}></Link>\r\n                </JCard>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CATEGORY_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { JCard2 } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ServiceDetails from \"../../components/main/services/ServiceDetails\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Service = props => {\r\n  const categoryId = props.match.params._id;\r\n  const history = useHistory();\r\n  const [isReadMore, setIsReadMore] = useState(false);\r\n\r\n  const [isServices, setIsServices] = useState([]);\r\n\r\n  const { data, loading } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsServices(data.category.services);\r\n    }\r\n  }, [data]);\r\n\r\n  const backHist = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"50vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          fluid\r\n          height=\"100%\"\r\n          className=\"dark\"\r\n        >\r\n          {!data ? (\r\n            <Spinner inverted />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ fontSize: \"22px\" }}>{data.category.name}</h1>\r\n              <p style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                {parser(data.category.description)}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Content flex width=\"90%\" height=\"50px\" margin=\"20px auto\">\r\n        <DButton onClick={backHist}>\r\n          <Icon name=\"arrow left\" /> <span>Back to Services</span>\r\n        </DButton>\r\n      </Content>\r\n      {loading ? (\r\n        <DGrid three gap=\"15px\">\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n        </DGrid>\r\n      ) : (\r\n        <DSection\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          mcenter\r\n          pad=\"24px\"\r\n          height=\"100%\"\r\n        >\r\n          <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n            <DGrid three gap=\"15px\">\r\n              {isServices &&\r\n                isServices.map(service => (\r\n                  <JCard2\r\n                    key={service._id}\r\n                    oflow={isReadMore ? true : false}\r\n                    onPointerLeave={() => setIsReadMore(false)}\r\n                  >\r\n                    <div className=\"thumbnail\">\r\n                      <img\r\n                        src={\r\n                          service.photo !== null\r\n                            ? `/images/service/${service.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/169963/photo-1429043794791-eb8f26f44081.jpeg\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"post-content\">\r\n                      <div className=\"category\">{service.name}</div>\r\n                      <h4 className=\"title\">{service.duration} mins</h4>\r\n                      <h4 className=\"title\">Php {service.price}</h4>\r\n                      <div className=\"description\">\r\n                        {isReadMore ? (\r\n                          <p>{parser(service.description)}</p>\r\n                        ) : (\r\n                          <p>\r\n                            {service.description.length > 100\r\n                              ? parser(\r\n                                  service.description.substr(0, 100) + \"...\"\r\n                                )\r\n                              : parser(service.description.substr(0, 100))}\r\n                          </p>\r\n                        )}\r\n                        {service.description.length <= 100 ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <ReadMore onClick={() => setIsReadMore(!isReadMore)}>\r\n                            {isReadMore ? \"Read Less\" : \"Read More\"}\r\n                          </ReadMore>\r\n                        )}\r\n\r\n                        {/* <ServiceDetails service={service} /> */}\r\n                      </div>\r\n                    </div>\r\n                  </JCard2>\r\n                ))}\r\n            </DGrid>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const { userId } = useContext(AuthContext);\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/\">\r\n            Explore\r\n          </DButton>\r\n          <DButton\r\n            as={Link}\r\n            to={userId ? `/account/${userId}` : `/login`}\r\n          >\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/home\" basic>\r\n            Explore\r\n          </DButton>\r\n         \r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid>\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hoverColorText}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  // const [addInfo, setAddInfo] = useState(\"\");\r\n  // const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  // const handleMessage = e => {\r\n  //   setAddInfo(e.target.value);\r\n  // };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n    default:\r\n      return <h1>Something went wrong</h1>;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content,\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n \r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {dataLoading ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input value={myAppoint._id} readOnly style={styles.input} />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={myAppoint.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={myAppoint.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${myAppoint.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={myAppoint.status}\r\n                  readOnly\r\n                  style={\r\n                    myAppoint.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : myAppoint.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : myAppoint.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {myAppoint.status === \"CANCELLED\" || myAppoint.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Testimonials from \"./main/Testimonials\";\r\nimport Services from \"./main/Services\";\r\nimport Service from \"./main/Service\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`/`} component={Home} exact />\r\n        <Route path={`/about`} component={About} exact />\r\n        <Route path={`/contact`} component={Contact} exact />\r\n        <Route path={`/gallery`} component={Gallery} exact />\r\n        <Route path={`/testimonials`} component={Testimonials} exact />\r\n        <Route path={`/services&rates`} component={Services} exact />\r\n        <Route path={`/service/:_id`} component={Service} exact />\r\n        <Route path={`/verified/:emailToken`} component={ThankYou} exact />\r\n        <UserPrivateRoute\r\n          path={`/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`/login`} component={Signin} exact />\r\n\r\n        <UserPrivateRoute path={`/account/:_id`} component={Account} exact />\r\n\r\n        <UserPrivateRoute\r\n          path={`/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute path={`/appointment`} component={Appointment} exact />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst UpcommingAppointments = ({ appointments, loading }) => {\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map((appointment) => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n      progressPending={loading}\r\n      progressComponent={\r\n        <Spinner content=\"Please wait while we fetch our data...\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n  position: relative;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-areas:\r\n      \"header\"\r\n      \"main\"\r\n      \"footer\";\r\n  }\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  min-width: 90%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, DImage, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Image, Icon } from \"semantic-ui-react\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Dropdown\r\n        trigger={\r\n          <DImage circle height=\"50px\" width=\"50px\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"avatar\"\r\n            />\r\n            <Overlay opac={0} hovOpac={1} />\r\n          </DImage>\r\n        }\r\n        pointing=\"top right\"\r\n        icon={null}\r\n      >\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to=\"/zeadmin/paccount\">\r\n            <Icon name=\"user\" />\r\n            Account\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={handleLogout}>\r\n            <Icon name=\"sign out\" />\r\n            Sign out\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      {/* <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton> */}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { MessageSquare } from \"@styled-icons/boxicons-solid/MessageSquare\";\r\nimport { ShortText } from \"@styled-icons/material/ShortText\";\r\nimport { AccountBox } from \"@styled-icons/material/AccountBox\";\r\nimport { AccountCircle } from \"@styled-icons/material/AccountCircle\";\r\nimport { MessageRoundedDetail } from \"@styled-icons/boxicons-solid/MessageRoundedDetail\";\r\nimport { FileDirectory } from \"@styled-icons/octicons/FileDirectory\";\r\nimport { Profile } from \"@styled-icons/icomoon/Profile\";\r\nimport { Report } from \"@styled-icons/boxicons-solid/Report\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\n\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <MessageRoundedDetail size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion title={\"Accounts\"} icon={<AccountBox size=\"16px\" />} fs=\"14px\">\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <AccountCircle size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <BookContent size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <ShortText size=\"16px\" />\r\n            About\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/cms_testimonial\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <MessageSquare size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<FileDirectory size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Profile size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Report size=\"16px\" />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map(user => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"#6dd5ed\"\r\n                color=\"#fff\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <Spinner small />\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"green\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"firebrick\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.bluer}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.secondary}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\n// import { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        mcenter\r\n      >\r\n        <Cards />\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            <UpcommingAppointments\r\n              appointments={appointments}\r\n              loading={loading}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"@styled-icons/fa-regular/Eye\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  const [isCurrentAppoint, setIsCurrentAppoint] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentAppointmentData) {\r\n      setIsCurrentAppoint(currentAppointmentData.currentAppointments);\r\n    }\r\n  }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee.lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton\r\n          basic\r\n          green\r\n          confirm\r\n          as={Link}\r\n          to={`/zeadmin/appointment/${row._id}`}\r\n        >\r\n          <Eye size=\"22px\" />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      <DataTable\r\n        columns={columns}\r\n        data={isCurrentAppoint.map((currAppoint) => currAppoint)}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\n// import HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton alert basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButton>\r\n        <DButton confirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  DCard,\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLink, DLabel } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Icon } from \"semantic-ui-react\";\r\nimport { Service } from \"@styled-icons/remix-fill/Service\";\r\nimport { Bookmark } from \"@styled-icons/boxicons-solid/Bookmark\";\r\nimport { Clock } from \"@styled-icons/fa-solid/Clock\";\r\nimport { UserMd } from \"@styled-icons/fa-solid/UserMd\";\r\nimport { CalendarExclamation } from \"@styled-icons/boxicons-solid/CalendarExclamation\";\r\nimport { CalendarEvent } from \"@styled-icons/boxicons-solid/CalendarEvent\";\r\nimport { Timelapse } from \"@styled-icons/material/Timelapse\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = (props) => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  console.log(myAppoint.service);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"80%\"\r\n        height=\"100%\"\r\n        mcenter\r\n      >\r\n        {dataLoading ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <>\r\n            <Content\r\n              width=\"100%\"\r\n              margin=\"24px 0\"\r\n              flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n            >\r\n              <Breadcrumb size={\"large\"}>\r\n                <Breadcrumb.Section\r\n                  style={{ color: \"#2980B9\" }}\r\n                  onClick={() => history.goBack()}\r\n                >\r\n                  <h3>Appointments</h3>\r\n                </Breadcrumb.Section>\r\n                <Breadcrumb.Divider icon=\"right chevron\" />\r\n                <Breadcrumb.Section>\r\n                  {myAppoint.user && (\r\n                    <strong>\r\n                      <DLink\r\n                        borderb=\"true\"\r\n                        size=\"16px\"\r\n                        color=\"#232323\"\r\n                        to={`/zeadmin/userInfo/${myAppoint.user._id}`}\r\n                      >\r\n                        {myAppoint.user.firstName} {myAppoint.user.lastName}\r\n                      </DLink>\r\n                      's appointment\r\n                    </strong>\r\n                  )}\r\n                </Breadcrumb.Section>\r\n              </Breadcrumb>\r\n            </Content>\r\n\r\n            <DGrid\r\n              custom={\r\n                myAppoint.status === \"VERIFIED\" ||\r\n                myAppoint.status === \"PENDING\"\r\n                  ? \"3fr 200px\"\r\n                  : \"1fr\"\r\n              }\r\n              gap=\"5px\"\r\n            >\r\n              <DCard\r\n                dw={\r\n                  myAppoint.status === \"VERIFIED\" ||\r\n                  myAppoint.status === \"PENDING\"\r\n                    ? \"100%\"\r\n                    : \"80%\"\r\n                }\r\n                dh=\"100%\"\r\n                mcenter\r\n                flex\r\n                fcol\r\n                justifyBetween\r\n              >\r\n                <DGrid gap=\"5px\">\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Bookmark size=\"14px\" style={{ margin: \"0 2px\" }} />\r\n                      Appointment ID:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint._id}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarEvent size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Clock size=\"14px\" style={{ margin: \"0 2px\" }} /> Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.slot_start}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <UserMd size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.employee &&\r\n                          `${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Service size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.name}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    bordered\r\n                    bordbtm\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <Timelapse size=\"14px\" style={{ margin: \"0 2px\" }} />{\" \"}\r\n                      Service Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                      >\r\n                        {myAppoint.service && myAppoint.service.duration} mins\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content\r\n                    width=\"90%\"\r\n                    flex\r\n                    justify=\"flex-start\"\r\n                    margin=\"0 auto\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyEnd\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"50%\"}\r\n                      size=\"14px\"\r\n                      tt={\"uppercase\"}\r\n                    >\r\n                      <CalendarExclamation\r\n                        size=\"14px\"\r\n                        style={{ margin: \"0 2px\" }}\r\n                      />\r\n                      Status:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"90%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"3px 15px\"\r\n                      margin=\"0 auto\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyEnd\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"50%\"}\r\n                        size=\"15px\"\r\n                        color={\r\n                          myAppoint.status === \"VERIFIED\"\r\n                            ? \"#8DC26F\"\r\n                            : myAppoint.status === \"DONE\"\r\n                            ? \"#56ab2f\"\r\n                            : myAppoint.status === \"CANCELLED\"\r\n                            ? \"#b92b27\"\r\n                            : myAppoint.status === \"RESCHEDULED\"\r\n                            ? \"#6dd5ed\"\r\n                            : \"#2193b0\"\r\n                        }\r\n                      >\r\n                        {myAppoint.status}\r\n                      </DLabel>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </DCard>\r\n              {(myAppoint.status === \"PENDING\" ||\r\n                myAppoint.status === \"VERIFIED\") && (\r\n                <Content\r\n                  width=\"90%\"\r\n                  height=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  direct=\"column\"\r\n                  margin=\"0 auto\"\r\n                >\r\n                  <DButton confirm fluid onClick={() => setOpenDone(true)}>\r\n                    <Icon name=\"calendar check\" /> Confirm\r\n                  </DButton>\r\n                  <DButton fluid>\r\n                    <Icon name=\"calendar alternate\" /> Rebook\r\n                  </DButton>\r\n                  <DButton alert fluid onClick={() => setOpenCancel(true)}>\r\n                    <Icon name=\"delete calendar\" /> Cancel\r\n                  </DButton>\r\n                </Content>\r\n              )}\r\n            </DGrid>\r\n          </>\r\n        )}\r\n\r\n        {/* {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\",\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\",\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\",\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\",\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ||\r\n              data.appointment.status === \"RESCHEDULED\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButton confirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButton>\r\n                  <ReschedModal\r\n                    isAdmin={true}\r\n                    status={\"VERIFIED\"}\r\n                    setOpen={setOpen}\r\n                    appointmentId={appointmentId}\r\n                  />\r\n                  <DButton alert onClick={() => setOpenCancel(true)}>\r\n                    Cancel\r\n                  </DButton>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )} */}\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  label: {\r\n    width: \"40%\",\r\n  },\r\n  input: {\r\n    width: \"60%\",\r\n  },\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButton,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>No</DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButton confirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButton>\r\n                <DButton alert onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButton>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategory) {\r\n      setCategories(dataCategory.categories);\r\n    }\r\n  }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(false)}>Exit</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButton alert onClick={() => setOpen(false)}>No</DButton>\r\n            <DButton confirm type=\"submit\">Yes</DButton>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Content, DGrid, DSection } from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n      >\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <Content width=\"100%\" height=\"100%\">\r\n          {loading ? (\r\n            <Spinner content=\"Please wait while we fetch your data\" />\r\n          ) : (\r\n            <DGrid three gap=\"15px\" margin=\"40px 0\">\r\n              {categories.map((category) => (\r\n                <JCard>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <p>{parser(category.description)}</p>\r\n                  </figcaption>\r\n                  <Link to={`/zeadmin/category/${category._id}`} />\r\n                </JCard>\r\n              ))}\r\n            </DGrid>\r\n          )}\r\n        </Content>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButton alert width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButton>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert onClick={() => setOpen(false)}>No</DButton>\r\n        <DButton confirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      format: row => {\r\n        const length = 20;\r\n        const descript = row.description;\r\n\r\n        const trimString =\r\n          descript.length > length\r\n            ? descript.substring(0, length) + \"...\"\r\n            : descript.substring(0, length);\r\n\r\n        return <p style={{ fontWeight: 500 }}>{parse(trimString)}</p>;\r\n      }\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay,\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\n\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = (props) => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }],\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Spinner content=\"Please wait while we fetch our data\" />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <DGrid>\r\n            <DSection\r\n              flex\r\n              mcenter\r\n              justify=\"space-around\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              pad=\"24px 0\"\r\n              width=\"90%\"\r\n              height=\"100%\"\r\n            >\r\n              <h2>{data.category.name}</h2>\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\",\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/service/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton alert basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Toasted, DButton, DLabel } from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              // onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButton confirm onClick={handleSubmit}>\r\n          {loading ? \"Loading...\" : \"Save\"}\r\n        </DButton>\r\n        <DButton alert onClick={() => setOpen(true)}>\r\n          Delete\r\n        </DButton>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql/service\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <>\r\n                    <Content height=\"300px\"></Content>\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      className=\"dark\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  // const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n  //   variables: {\r\n  //     inqId: inqId\r\n  //   }\r\n  // });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n  };\r\n\r\n  const handleReplyMsg = e => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingInq ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{inq.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {inq.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {inq.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={inq.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={inq.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n// const READ_INQ = gql`\r\n//   mutation readInquiry($inqId: ID) {\r\n//     readInquiry(_id: $inqId)\r\n//   }\r\n// `;\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { Popup, Icon, Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\nimport moment from \"moment\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const handleRow = (e) => {\r\n    setInq(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true,\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: (row) => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      },\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"createdAt\",\r\n      sortable: true,\r\n      cell: (row) => moment(parseInt(row.createdAt)).format(\"LLL\"),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <Popup\r\n          trigger={\r\n            <DButton value={row._id} onClick={handleRow}>\r\n              <Icon name=\"eye\" fitted />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        height=\"100%\"\r\n        mcenter\r\n        flex\r\n        justify=\"space-around\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        pad=\"24px 0\"\r\n      >\r\n        {/* <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n              Inquiry List\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content> */}\r\n\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map((inq) => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          progressPending={loading_inquiries}\r\n          progressComponent={\r\n            <Spinner content=\"Please wait while we fetch our data...\" />\r\n          }\r\n        />\r\n\r\n        {inq && <ReplyModal inqId={inq} open={open} setOpen={setOpen} />}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <Breadcrumb size={\"huge\"}>\r\n    <Breadcrumb.Section as={Link} to=\"/zeadmin/inquiry\" active>\r\n      Inquiry List\r\n    </Breadcrumb.Section>\r\n  </Breadcrumb>\r\n);\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  id,\r\n  photo,\r\n  fetchEmployee,\r\n}) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            {loading ? (\r\n              <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n                <Spinner small />\r\n              </Content>\r\n            ) : (\r\n              <img\r\n                src={\r\n                  photo !== null\r\n                    ? `/images/employees/${photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            )}\r\n          </DImage>\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        {/* <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleSchedule} fluid>\r\n            Schedule\r\n          </DButton>\r\n        </DCard> */}\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = (e) => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole,\r\n    },\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React from \"react\";\r\nimport { Toasted as Toast } from \"./styled/utils\";\r\nimport { Close } from \"@styled-icons/material/Close\";\r\n\r\nconst Toasted = (props) => {\r\n  return (\r\n    <Toast {...props}>\r\n      <span className=\"description\">{props.children}</span>\r\n      <span className=\"close\">\r\n        <Close size=\"14px\" />\r\n      </span>\r\n    </Toast>\r\n  );\r\n};\r\n\r\nexport default Toasted;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../Toasted\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  // const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    employee.dateOfBirth ? new Date(parseInt(employee.dateOfBirth)) : new Date()\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted success onClick={onClose}>\r\n          Updated Successfully\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values,\r\n    },\r\n  });\r\n\r\n  const handleDateChanged = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\nimport moment from \"moment\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {moment(parseInt(employee.dateOfBirth)).format(\"LL\")}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from \"react\";\r\n\r\nconst AccountSched = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = () => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeAuth.id\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {empData && empData.employee ? (\r\n            !empLoading ? (\r\n              <>\r\n                <PhotoBooth\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                  photo={empData.employee.photo}\r\n                  id={empData.employee._id}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                />\r\n                <AccountInfo\r\n                  employee={empData.employee}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                  isAccount={isAccount}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { DotsVertical } from \"../../components/styled/utils\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Profile\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: (row) => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Last Name\",\r\n      selector: \"lastName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.lastName}</div>,\r\n    },\r\n    {\r\n      name: \"First Name\",\r\n      selector: \"firstName\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.firstName}</div>,\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: \"email\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => <div>{row.email}</div>,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\",\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"90%\"\r\n        mcenter\r\n        style={{ minHeight: \"50vh\" }}\r\n      >\r\n        {loading_users ? (\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map((getUser) => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments]\r\n          }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\"\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton confirm onClick={() => setNewConfirm(true)}>\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    category: \"\",\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid custom=\"1fr 2fr\">\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n          \r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n          \r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = (props) => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s Info\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SigninForm = () => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { Grid } from \"@styled-icons/boxicons-solid/Grid\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: () => <Grid size=\"22px\" color=\"green\" />,\r\n      width: \"56px\",\r\n      style: {\r\n        borderBottom: \"1px solid #fff\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.employee.firstName} ${row.employee.lastName}`,\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${row.service.name}`,\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: (row) => `${moment(parseInt(row.date)).format(\"LL\")}`,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: (row) => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      <DataTable\r\n        title={title}\r\n        columns={columns}\r\n        data={historyAppointments}\r\n        responsive\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n        highlightOnHover\r\n        pointerOnHover\r\n        progressPending={loading}\r\n        progressComponent={\r\n          <Spinner content=\"Please wait while we fetch our data...\" />\r\n        }\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst FileReport = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n              File Report\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <DGrid>\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useUploadFile = () => {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  const onSelectedFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  return { preview, selectedFile, setSelectedFile, onSelectedFile };\r\n};\r\n\r\nexport default useUploadFile;\r\n","import React, { useRef } from \"react\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay\r\n} from \"../../../../styled/containers\";\r\n\r\nconst ImageSection = ({\r\n  isDark,\r\n  isPosition,\r\n  isColor,\r\n  preview,\r\n  selectedFile,\r\n  onSelectedFile,\r\n  values,\r\n  bgImg\r\n}) => {\r\n  const fileInput = useRef();\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n        <DImage dashed height=\"100%\" width=\"100%\">\r\n          {selectedFile ? (\r\n            <img src={preview} alt=\"showcase\" />\r\n          ) : (\r\n            bgImg && <img src={`/images/cms/home/${bgImg}`} alt=\"showcase\" />\r\n          )}\r\n        </DImage>\r\n\r\n        <Overlay\r\n          flex\r\n          bgr={isDark && isPosition === \"right\" ? true : false}\r\n          bgl={isDark && isPosition === \"left\" ? true : false}\r\n          bgc={isDark && isPosition === \"center\" ? true : false}\r\n          justify={\r\n            isPosition === \"left\"\r\n              ? \"flex-start\"\r\n              : isPosition === \"right\"\r\n              ? \"flex-end\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          talign={\r\n            isPosition === \"left\"\r\n              ? \"left\"\r\n              : isPosition === \"right\"\r\n              ? \"right\"\r\n              : isPosition === \"center\"\r\n              ? \"center\"\r\n              : \"\"\r\n          }\r\n          align=\"center\"\r\n          className={isDark ? \"dark\" : \"\"}\r\n        >\r\n          <div className=\"overlay-content\">\r\n            <h3>{values.title ? values.title : \"TITLE\"}</h3>\r\n            <h4>{values.subtitle ? values.subtitle : \"SUBTITLE\"}</h4>\r\n            <p className=\"ps\">\r\n              {values.paragraph\r\n                ? values.paragraph\r\n                : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec posuere ante orci, at interdum nunc maximus eu. Pellentesque tempus est ligula, sit ame\"}\r\n            </p>\r\n          </div>\r\n        </Overlay>\r\n      </DSection>\r\n\r\n      <Content width=\"80%\" margin=\"0 auto\" flex justify=\"center\" align=\"center\">\r\n        <input\r\n          type=\"file\"\r\n          value={undefined}\r\n          onChange={onSelectedFile}\r\n          style={{ display: \"none\" }}\r\n          ref={fileInput}\r\n        />\r\n        <Popup\r\n          content=\"Select image for background slide\"\r\n          trigger={\r\n            <Icon\r\n              name=\"camera\"\r\n              size=\"large\"\r\n              onClick={handleInputClick}\r\n              style={{ cursor: \"pointer\", color: \"#2193b0\", opacity: 0.75 }}\r\n              className=\"icon_camera-custom\"\r\n            />\r\n          }\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageSection;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { DGrid, Content } from \"../../../../styled/containers\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport useUploadFile from \"../../../../../util/hooks/useUploadFile\";\r\nimport ImageSection from \"./ImageSection\";\r\nimport toaster from \"toasted-notes\";\r\nimport \"./modal.custom.css\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalSlide = ({ open, setOpen, showcase }) => {\r\n  const [isDark, setIsDark] = useState(showcase ? showcase.dark : false);\r\n  const [isPosition, setIsPosition] = useState(\r\n    showcase ? showcase.position : \"left\"\r\n  );\r\n\r\n  const [isColor, setIsColor] = useState(\r\n    showcase ? showcase.bgColor : \"#FFFFFF\"\r\n  );\r\n  const [values, setValues] = useState({\r\n    title: showcase ? showcase.title : \"\",\r\n    subtitle: showcase ? showcase.subtitle : \"\",\r\n    paragraph: showcase ? showcase.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  // ADD OR UPDATE\r\n  const mutation = showcase ? UPDATE_SLIDE : ADD_NEW_SLIDE;\r\n\r\n  const [addOrUpdateSlide, { loading }] = useMutation(mutation, {\r\n    variables: {\r\n      showcaseId: showcase && showcase._id,\r\n      ...values,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      position: isPosition,\r\n      dark: isDark,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } },\r\n    ],\r\n    update() {\r\n      if (!showcase) {\r\n        values.title = \"\";\r\n        values.subtitle = \"\";\r\n        values.paragraph = \"\";\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n      setIsDark(false);\r\n      setIsPosition(\"left\");\r\n      setSelectedFile();\r\n      setIsColor(\"#E9E4F0\");\r\n      if (showcase) {\r\n        toaster.notify(\"Update Slide Successfully\");\r\n      } else {\r\n        toaster.notify(\"Add New Slide Successfully\");\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handlePosition = (event) => {\r\n    setIsPosition(event.target.value);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    addOrUpdateSlide();\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Add New Slide </Modal.Header>\r\n      <DGrid custom=\"2fr 1fr\" gap=\"10px\">\r\n        <Modal.Content style={{ padding: \"10px\" }}>\r\n          <ImageSection\r\n            isPosition={isPosition}\r\n            isDark={isDark}\r\n            isColor={isColor}\r\n            preview={preview}\r\n            selectedFile={selectedFile}\r\n            onSelectedFile={onSelectedFile}\r\n            values={values}\r\n            bgImg={showcase && showcase.bgImg}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Content scrolling>\r\n          <Content pad=\"10px\" width=\"100%\" height=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={values.subtitle || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  maxLength=\"150\"\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={values.paragraph || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Text Positioning</label>\r\n                <Content\r\n                  flex\r\n                  justify=\"space-around\"\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"left\"\r\n                      checked={isPosition === \"left\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Left</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default  p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"center\"\r\n                      checked={isPosition === \"center\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Center</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pretty p-default p-curve p-pulse\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"switch1\"\r\n                      value=\"right\"\r\n                      checked={isPosition === \"right\" ? true : false}\r\n                      onChange={handlePosition}\r\n                    />\r\n                    <div className=\"state  p-info-o\">\r\n                      <label>Right</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay{\" \"}\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Dark</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n        </Modal.Content>\r\n      </DGrid>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" confirm onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n        <DButton alert>Cancel</DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_NEW_SLIDE = gql`\r\n  mutation addNewShowCase(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    addNewShowCase(\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_SLIDE = gql`\r\n  mutation updateShowcase(\r\n    $showcaseId: ID!\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $position: String\r\n    $dark: Boolean\r\n  ) {\r\n    updateShowcase(\r\n      showcaseId: $showcaseId\r\n      inputShowcaseContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        position: $position\r\n        dark: $dark\r\n      }\r\n    ) {\r\n      _id\r\n      content {\r\n        _id\r\n        title\r\n        subtitle\r\n        paragraph\r\n        bgImg\r\n        bgColor\r\n        position\r\n        dark\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst NewSlide = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"add\" />\r\n        New Slide\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewSlide;\r\n","import React, { useState } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ModalSlide from \"./ModalSlide\";\r\n\r\nconst EditSlide = ({ showcase }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"edit\" style={{ color: \"white\" }} fitted />\r\n      </DButton>\r\n      <ModalSlide open={open} setOpen={setOpen} showcase={showcase} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSlide;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst RemoveSlide = ({ showcase }) => {\r\n  const [isOpenRemove, setIsOpenRemove] = useState(false);\r\n\r\n  const [removeSlide, { loading }] = useMutation(REMOVE_SLIDE, {\r\n    variables: {\r\n      showcaseId: showcase._id\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_THE_SHOWCASE, variables: { sectionName: \"SHOWCASE\" } }\r\n    ],\r\n    onCompleted() {\r\n      setIsOpenRemove(false);\r\n      toaster.notify(\"Slide Remove\", { position: \"bottom-right\" });\r\n    }\r\n  });\r\n\r\n  const handleRemoveSlide = e => {\r\n    e.preventDefault();\r\n    removeSlide();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton alert onClick={() => setIsOpenRemove(true)}>\r\n        <Icon name=\"trash\" fitted />\r\n      </DButton>\r\n      <Modal\r\n        basic\r\n        open={isOpenRemove}\r\n        closeIcon\r\n        onClose={() => setIsOpenRemove(false)}\r\n      >\r\n        <Modal.Header>Slide ID: {showcase._id}</Modal.Header>\r\n        <Modal.Content>\r\n          <h1>Are you sure you want to remove this slide?</h1>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton basic confirm onClick={handleRemoveSlide}>\r\n            {loading ? <Spinner inverted small /> : \"Yes\"}\r\n          </DButton>\r\n          <DButton basic alert onClick={() => setIsOpenRemove(false)}>\r\n            No\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst REMOVE_SLIDE = gql`\r\n  mutation removeShowcase($showcaseId: ID!) {\r\n    removeShowcase(showcaseId: $showcaseId)\r\n  }\r\n`;\r\n\r\nexport default RemoveSlide;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_THE_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport {\r\n  DShowCase,\r\n  Overlay,\r\n  DSection,\r\n  DImage\r\n} from \"../../../../styled/containers\";\r\nimport NewSlide from \"./NewSlide\";\r\nimport EditSlide from \"./EditSlide\";\r\nimport RemoveSlide from \"./RemoveSlide\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Showcase = () => {\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  const { data: showcaseData, loading: dataLoading } = useQuery(\r\n    FETCH_THE_SHOWCASE,\r\n    {\r\n      variables: {\r\n        sectionName: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.showcaseCMS.content);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" mcenter>\r\n      <NewSlide />\r\n      <div style={{ position: \"relative\" }}>\r\n        {dataLoading ? (\r\n          <DShowCase height=\"80vh\">\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src=\"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                alt=\"showcase\"\r\n              />\r\n            </DImage>\r\n          </DShowCase>\r\n        ) : (\r\n          <Slider {...settings}>\r\n            {showcase.map(sc => (\r\n              <DShowCase\r\n                height=\"80vh\"\r\n                key={sc._id}\r\n                background={sc.bgImg && `/images/cms/home/${sc.bgImg}`}\r\n                bgcolor={sc.bgColor}\r\n              >\r\n                <Overlay\r\n                  flex\r\n                  bgr={sc.dark && sc.position === \"right\" ? true : false}\r\n                  bgl={sc.dark && sc.position === \"left\" ? true : false}\r\n                  bgc={sc.dark && sc.position === \"center\" ? true : false}\r\n                  justify={\r\n                    sc.position === \"left\"\r\n                      ? \"flex-start\"\r\n                      : sc.position === \"right\"\r\n                      ? \"flex-end\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  talign={\r\n                    sc.position === \"left\"\r\n                      ? \"left\"\r\n                      : sc.position === \"right\"\r\n                      ? \"right\"\r\n                      : sc.position === \"center\"\r\n                      ? \"center\"\r\n                      : \"\"\r\n                  }\r\n                  align=\"center\"\r\n                  className={sc.dark ? \"dark\" : \"\"}\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h1>{sc.title}</h1>\r\n                    <h2>{sc.subtitle}</h2>\r\n                    <p>{sc.paragraph}</p>\r\n                  </div>\r\n                </Overlay>\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 20,\r\n                    zIndex: 2,\r\n                    width: \"auto\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <EditSlide showcase={sc} />\r\n                  <RemoveSlide showcase={sc} />\r\n                </div>\r\n              </DShowCase>\r\n            ))}\r\n          </Slider>\r\n        )}\r\n      </div>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport Spinner from \"../../../../Spinner\";\r\n\r\nconst EditModal = ({ aboutBool }) => {\r\n  const [updateAboutSection, { loading }] = useMutation(UPDATE_ABOUT_SECTION, {\r\n    variables: { sectionName: \"ABOUT\" },\r\n  });\r\n\r\n  const handleReverse = () => {\r\n    updateAboutSection();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner small />\r\n      ) : (\r\n        <Popup\r\n          content=\"Toggle Position\"\r\n          trigger={\r\n            <div className=\"pretty p-switch p-fill p-toggle\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"alt\"\r\n                value={aboutBool}\r\n                onChange={handleReverse}\r\n                checked={aboutBool === true ? true : false}\r\n              />\r\n              <div className=\"state p-primary p-on\">\r\n                <label style={{ fontWeight: 500 }}>Reverse</label>\r\n              </div>\r\n              <div className=\"state p-warning p-off\">\r\n                <label style={{ fontWeight: 500 }}>Default</label>\r\n              </div>\r\n            </div>\r\n          }\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n          inverted\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_SECTION = gql`\r\n  mutation updateAboutSection($sectionName: String!) {\r\n    updateAboutSection(sectionName: $sectionName) {\r\n      _id\r\n      sectionName\r\n      alt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_HOME_SECTION,\r\n  FETCH_ABOUT_CMS,\r\n} from \"../../../../../util/graphql/cms\";\r\nimport { Section2Styled, Content } from \"../../../../styled/containers\";\r\nimport EditModal from \"./EditModal\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst SectionAbout = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n  const [about, setAbout] = useState({});\r\n\r\n  const { data: dataAboutSection, loading: loadingAboutSection } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: { sectionName: \"ABOUT\" },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataAboutSection) {\r\n      setIsAbout(dataAboutSection.homeCMS);\r\n    }\r\n  }, [dataAboutSection]);\r\n\r\n  const { data: dataAbout, loading: loadingAbout } = useQuery(FETCH_ABOUT_CMS, {\r\n    variables: { contentName: \"ABOUTUS\" },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataAbout) {\r\n      setAbout(dataAbout.aboutUsCMS);\r\n    }\r\n  }, [dataAbout]);\r\n\r\n  return (\r\n    <Section2Styled visible width=\"90%\" alt={isAbout.alt ? true : false}>\r\n      <div className=\"switch\">\r\n        {loadingAboutSection ? (\r\n          <Spinner tiny />\r\n        ) : (\r\n          <EditModal aboutBool={dataAboutSection.homeCMS.alt} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"sec2-container\">\r\n        <div className=\"sec2-inner\">\r\n          {loadingAbout ? (\r\n            <Content\r\n              margin=\"0 auto\"\r\n              height=\"100%\"\r\n              width=\"50%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Spinner />\r\n            </Content>\r\n          ) : (\r\n            <div className=\"sec2-content\">\r\n              <div className=\"sec2-content_inner\">\r\n                <h1>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner\">{about.title}</div>\r\n                  </div>\r\n                  <div className=\"sec2-content_line\">\r\n                    <div className=\"sec2-content_line-inner subtitle\">\r\n                      {about.story && about.story.title}\r\n                    </div>\r\n                  </div>\r\n                </h1>\r\n                <p>\r\n                  {about.story &&\r\n                    (about.story.paragraph.length > 300\r\n                      ? parser(about.story.paragraph.substr(0, 300)) + \"...\"\r\n                      : parser(about.story.paragraph.substr(0, 300)))}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\">\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.story && about.story.photo\r\n                        ? `/images/cms/about/${about.story.photo}`\r\n                        : \"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                {loadingAbout ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  <img\r\n                    src={\r\n                      about.missionvision && about.missionvision.photo\r\n                        ? `/images/cms/about/${about.missionvision.photo}`\r\n                        : \"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    }\r\n                    alt=\"about\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default SectionAbout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../../../util/graphql/service\";\r\nimport { DGrid, Content } from \"../../../../styled/containers\";\r\nimport { JCard } from \"../../../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst CategoryCards = ({ gridCount }) => {\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <Content height=\"100%\" width=\"100%\">\r\n      {loading ? (\r\n        <DGrid four gap=\"20px\">\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n          <Skeleton width=\"100%\" height={300} />\r\n        </DGrid>\r\n      ) : (\r\n        <DGrid\r\n          two={gridCount === 2 ? true : false}\r\n          three={gridCount === 3 ? true : false}\r\n          four={gridCount === 4 ? true : false}\r\n          gap=\"20px\"\r\n        >\r\n          {isCategories.map(category => (\r\n            <JCard\r\n              titleSize=\"24px\"\r\n              height=\"calc(100% - 30%)\"\r\n              key={category._id}\r\n            >\r\n              <img\r\n                src={\r\n                  category.photo !== null\r\n                    ? `/images/service/${category.photo}`\r\n                    : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                }\r\n                alt={category.name}\r\n              />\r\n              <figcaption>\r\n                <h3>{parser(category.name)}</h3>\r\n                <div className=\"description\">\r\n                  <p>\r\n                    {category.description.length > 50\r\n                      ? parser(category.description.substr(0, 50) + \"...\")\r\n                      : parser(category.description.substr(0, 50))}\r\n                  </p>\r\n                </div>\r\n              </figcaption>\r\n            </JCard>\r\n          ))}\r\n        </DGrid>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { Modal, Icon, Form, TextArea, Popup } from \"semantic-ui-react\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport Spinner from \"../../../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport { Content } from \"../../../../styled/containers\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\"\r\n];\r\n\r\nconst UpdateSectCategory = ({\r\n  setOpenCatSec,\r\n  openCatSec,\r\n  categorySectionInfo\r\n}) => {\r\n  const [isColor, setIsColor] = useState(\r\n    categorySectionInfo && categorySectionInfo.bgColor\r\n  );\r\n\r\n  const [isDark, setIsDark] = useState(\r\n    categorySectionInfo && categorySectionInfo.dark\r\n  );\r\n\r\n  const [gridCount, setGridCount] = useState(\r\n    categorySectionInfo && categorySectionInfo.grid\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: categorySectionInfo && categorySectionInfo.title,\r\n    subtitle: categorySectionInfo && categorySectionInfo.subtitle,\r\n    paragraph: categorySectionInfo && categorySectionInfo.paragraph\r\n  });\r\n\r\n  const [updateSectionCategory, { loading }] = useMutation(\r\n    UPDATE_CATEGORY_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\",\r\n        ...values,\r\n        grid: gridCount,\r\n        dark: isDark,\r\n        bgColor: isColor\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_HOME_SECTION, variables: { sectionName: \"CATEGORY\" } }\r\n      ],\r\n      onCompleted() {\r\n        setOpenCatSec(false);\r\n        toaster.notify(\"Update Category Section\");\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = color => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleGrid = event => {\r\n    setGridCount(parseInt(event.target.value));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    updateSectionCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={openCatSec}\r\n      onClose={() => setOpenCatSec(false)}\r\n      closeIcon\r\n    >\r\n      <Modal.Header>Update Section Category</Modal.Header>\r\n      <Modal.Content scrolling>\r\n        <Form>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              name=\"title\"\r\n              value={values.title || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Subtitle</label>\r\n            <input\r\n              name=\"subtitle\"\r\n              value={values.subtitle || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Paragraph</label>\r\n            <TextArea\r\n              maxLength=\"150\"\r\n              style={{ minHeight: 100 }}\r\n              name=\"paragraph\"\r\n              value={values.paragraph || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Background-color{\" \"}\r\n              <Popup\r\n                content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n\r\n            <BlockPicker\r\n              width=\"200px\"\r\n              triangle=\"hide\"\r\n              color={isColor}\r\n              colors={colors}\r\n              onChange={handleChangeComplete}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>\r\n              Text Contrast{\" \"}\r\n              <Popup\r\n                content=\"Change the text to white if background is dark and dark text if background is light\"\r\n                trigger={<Icon name=\"question circle outline\" size=\"large\" />}\r\n              />\r\n            </label>\r\n            <Content\r\n              flex\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-switch p-fill\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"dark\"\r\n                  value={isDark}\r\n                  checked={isDark === true ? true : false}\r\n                  onChange={handleDark}\r\n                />\r\n                <div className=\"state p-info\">\r\n                  <label>{isDark === true ? \"Light\" : \"Dark\"}</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Grid Count Display</label>\r\n            <Content\r\n              flex\r\n              justify=\"space-around\"\r\n              align=\"center\"\r\n              margin=\"0 auto\"\r\n              width=\"80%\"\r\n              height=\"10vh\"\r\n            >\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"2\"\r\n                  checked={gridCount === 2 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Two</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default  p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"3\"\r\n                  checked={gridCount === 3 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Three</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"pretty p-default p-curve p-pulse\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"switch1\"\r\n                  value=\"4\"\r\n                  checked={gridCount === 4 ? true : false}\r\n                  onChange={handleGrid}\r\n                />\r\n                <div className=\"state  p-info-o\">\r\n                  <label>Four</label>\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton onClick={handleSave}>\r\n          {loading ? <Spinner small inverted /> : \"Save\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_CATEGORY_SECTION = gql`\r\n  mutation updateHomeSection(\r\n    $sectionName: String\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $grid: Int\r\n  ) {\r\n    updateHomeSection(\r\n      sectionName: $sectionName\r\n      inputHomeContent: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        grid: $grid\r\n      }\r\n    ) {\r\n      _id\r\n      sectionName\r\n      title\r\n      subtitle\r\n      paragraph\r\n      bgColor\r\n      dark\r\n      grid\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UpdateSectCategory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_HOME_SECTION } from \"../../../../../util/graphql/cms\";\r\nimport { DSection, Content } from \"../../../../styled/containers\";\r\nimport { DButtonFree } from \"../../../../styled/utils\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport FancyText from \"../../../../FancyText\";\r\nimport CategoryCards from \"./CategoryCards\";\r\nimport UpdateSectCategory from \"./UpdateSectCategory\";\r\n\r\nconst SectionCategory = () => {\r\n  const [sectCategory, setSectCategory] = useState({});\r\n  const [openCatSec, setOpenCatSec] = useState(false);\r\n\r\n  const { data: sectionCategory, loading: loadSectionCategory } = useQuery(\r\n    FETCH_HOME_SECTION,\r\n    {\r\n      variables: {\r\n        sectionName: \"CATEGORY\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (sectionCategory) {\r\n      setSectCategory(sectionCategory.homeCMS);\r\n    }\r\n  }, [sectionCategory]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        margin=\"48px auto\"\r\n        pad=\"10px\"\r\n        bgcolor={sectCategory.bgColor}\r\n      >\r\n        <Popup\r\n          content=\"Update Category Section\"\r\n          trigger={\r\n            <DButtonFree top={0} right={0} onClick={() => setOpenCatSec(true)}>\r\n              <Icon name=\"edit\" fitted />\r\n            </DButtonFree>\r\n          }\r\n          position=\"top right\"\r\n        />\r\n\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <Content\r\n            width=\"auto\"\r\n            height=\"auto\"\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            className={sectCategory.dark ? \"dark\" : \"\"}\r\n          >\r\n            <FancyText alt={sectCategory.dark ? true : false}>\r\n              {sectCategory.title}\r\n            </FancyText>\r\n            <h3>\r\n              {sectCategory.subtitle !== \"\"\r\n                ? sectCategory.subtitle\r\n                : \"SUBTITLE\"}\r\n            </h3>\r\n            <p>\r\n              {sectCategory.paragraph !== \"\"\r\n                ? sectCategory.paragraph\r\n                : \"PARAGRAPH\"}\r\n            </p>\r\n          </Content>\r\n          {!loadSectionCategory && (\r\n            <UpdateSectCategory\r\n              openCatSec={openCatSec}\r\n              setOpenCatSec={setOpenCatSec}\r\n              categorySectionInfo={sectionCategory.homeCMS}\r\n            />\r\n          )}\r\n\r\n          <CategoryCards gridCount={sectCategory.grid} />\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionCategory;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/showcase/Showcase\";\r\nimport SectionAbout from \"../../../components/admin/cms/home/sectionabout/SectionAbout\";\r\nimport SectionCategory from \"../../../components/admin/cms/home/sectioncategory/SectionCategory\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Showcase />\r\n      <SectionAbout />\r\n      <SectionCategory />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport { BlockPicker } from \"react-color\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst colors = [\r\n  \"#6dd5ed\",\r\n  \"#2193b0\",\r\n  \"#fe8c00\",\r\n  \"#E9E4F0\",\r\n  \"#203A43\",\r\n  \"#FFFFFF\",\r\n];\r\n\r\nconst ModalHeading = ({ isAbout }) => {\r\n  const fileInput = useRef();\r\n  const [openHead, setOpenHead] = useState(false);\r\n  const [isDark, setIsDark] = useState(isAbout ? isAbout.dark : false);\r\n  const [isOverlay, setIsOverlay] = useState(isAbout ? isAbout.overlay : false);\r\n  const [headers, setHeaders] = useState({\r\n    title: isAbout ? isAbout.title : \"\",\r\n    subtitle: isAbout ? isAbout.subtitle : \"\",\r\n    paragraph: isAbout ? isAbout.paragraph : \"\",\r\n  });\r\n  const [isColor, setIsColor] = useState(isAbout ? isAbout.bgColor : \"#FFFFFF\");\r\n\r\n  const {\r\n    preview,\r\n    selectedFile,\r\n    setSelectedFile,\r\n    onSelectedFile,\r\n  } = useUploadFile();\r\n\r\n  const [updateAboutUs, { loading }] = useMutation(UPDATE_ABOUT_HEADER, {\r\n    variables: {\r\n      ...headers,\r\n      bgImg: selectedFile,\r\n      bgColor: isColor,\r\n      dark: isDark,\r\n      overlay: isOverlay,\r\n    },\r\n\r\n    onCompleted() {\r\n      setOpenHead(false);\r\n      toaster.notify(\"Update Successful\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeHeaders = (e) => {\r\n    setHeaders({ ...headers, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setIsColor(color.hex);\r\n  };\r\n\r\n  const handleDark = () => {\r\n    setIsDark(!isDark);\r\n  };\r\n\r\n  const handleOverlay = () => {\r\n    setIsOverlay(!isOverlay);\r\n  };\r\n\r\n  const handleSaveHeader = () => {\r\n    updateAboutUs();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenHead(true)}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openHead} onClose={() => setOpenHead(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\" bgcolor={isColor}>\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isAbout.bgImg && (\r\n                    <img\r\n                      src={`/images/cms/about/${isAbout.bgImg}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n\r\n              <Overlay bgc={isOverlay ? true : false}>\r\n                <Content\r\n                  flex\r\n                  justify=\"center\"\r\n                  direct=\"column\"\r\n                  align=\"center\"\r\n                  width=\"50%\"\r\n                  margin=\"0 auto\"\r\n                  height=\"100%\"\r\n                  style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n                  className={isDark ? \"dark\" : \"\"}\r\n                >\r\n                  <h1 style={{ fontSize: \"22px\" }}>\r\n                    {headers.title ? headers.title : \"TITLE\"}\r\n                  </h1>\r\n                  <h4> {headers.subtitle ? headers.subtitle : \"SUBTITLE\"}</h4>\r\n                </Content>\r\n              </Overlay>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={headers.title || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={headers.subtitle || \"\"}\r\n                  onChange={handleChangeHeaders}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Background-color{\" \"}\r\n                  <Popup\r\n                    content=\"This Background color is for fallback if background image is not set or unavailable\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n\r\n                <BlockPicker\r\n                  width=\"200px\"\r\n                  triangle=\"hide\"\r\n                  color={isColor}\r\n                  colors={colors}\r\n                  onChange={handleChangeComplete}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Text Contrast\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={isDark}\r\n                      checked={isDark === true ? true : false}\r\n                      onChange={handleDark}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Light</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>\r\n                  Overlay\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"overlay\"\r\n                      value={isOverlay}\r\n                      checked={isOverlay === true ? true : false}\r\n                      onChange={handleOverlay}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Off</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveHeader}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_HEADER = gql`\r\n  mutation updateAboutUs(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $bgImg: Upload\r\n    $bgColor: String\r\n    $dark: Boolean\r\n    $overlay: Boolean\r\n  ) {\r\n    updateAboutUs(\r\n      inputAbout: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        bgImg: $bgImg\r\n        bgColor: $bgColor\r\n        dark: $dark\r\n        overlay: $overlay\r\n      }\r\n    ) {\r\n      _id\r\n      title\r\n      subtitle\r\n      bgImg\r\n      bgColor\r\n      dark\r\n      overlay\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalHeading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, Overlay } from \"../../../styled/containers\";\r\nimport MouseScroll from \"../../../MouseScroll\";\r\nimport ModalHeading from \"./ModalHeading\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Heading = () => {\r\n  const [isAbout, setIsAbout] = useState({});\r\n\r\n  const {\r\n    data: dataAboutContent,\r\n    loading: loadAboutContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataAboutContent) {\r\n      setIsAbout(dataAboutContent.aboutUsCMS);\r\n    }\r\n  }, [dataAboutContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadAboutContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          background={isAbout.bgImg && `/images/cms/about/${isAbout.bgImg}`}\r\n          bgcolor={isAbout.bgColors}\r\n          width=\"90%\"\r\n          mcenter\r\n          height=\"55vh\"\r\n          fixed\r\n        >\r\n          <Content\r\n            flex\r\n            justify=\"center\"\r\n            direct=\"column\"\r\n            align=\"center\"\r\n            width=\"50%\"\r\n            margin=\"0 auto\"\r\n            height=\"100%\"\r\n            style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n            className={isAbout.dark ? \"dark\" : \"\"}\r\n          >\r\n            <h1 style={{ fontSize: \"38px\" }}>{isAbout.title}</h1>\r\n            {isAbout.subtitle !== \"\" && <h4>{isAbout.subtitle}</h4>}\r\n            <MouseScroll />\r\n          </Content>\r\n          <Overlay bgc={isAbout.overlay ? true : false} />\r\n          <ModalHeading isAbout={dataAboutContent.aboutUsCMS} />\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, TextArea } from \"semantic-ui-react\";\r\nimport {\r\n  DImage,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DGrid,\r\n} from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalStory = ({ isStory }) => {\r\n  const fileInput = useRef();\r\n  const [openStory, setOpenStory] = useState(false);\r\n  const [reverse, setReverse] = useState(isStory ? isStory.alt : false);\r\n\r\n  const [stories, setStories] = useState({\r\n    title: isStory ? isStory.title : \"\",\r\n    subtitle: isStory ? isStory.subtitle : \"\",\r\n    paragraph: isStory ? isStory.paragraph : \"\",\r\n  });\r\n\r\n  const { preview, selectedFile, onSelectedFile } = useUploadFile();\r\n\r\n  const [updateStory, { loading }] = useMutation(UPDATE_ABOUT_STORY, {\r\n    variables: {\r\n      ...stories,\r\n      photo: selectedFile,\r\n      alt: reverse,\r\n    },\r\n    onCompleted() {\r\n      setOpenStory(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClick = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const handleChangeStory = (e) => {\r\n    setStories({ ...stories, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverse = () => {\r\n    setReverse(!reverse);\r\n  };\r\n\r\n  const handleSaveStory = () => {\r\n    updateStory();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        style={{ zIndex: 2 }}\r\n        onClick={() => setOpenStory(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openStory} onClose={() => setOpenStory(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid custom=\"2fr 1fr\" gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFile ? (\r\n                  <img src={preview} alt=\"showcase\" />\r\n                ) : (\r\n                  isStory.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isStory.photo}`}\r\n                      alt=\"showcase\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFile}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClick}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={stories.title || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"subtitle\"\r\n                  value={stories.subtitle || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"paragraph\"\r\n                  value={stories.paragraph || \"\"}\r\n                  onChange={handleChangeStory}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"dark\"\r\n                      value={reverse}\r\n                      checked={reverse === true ? true : false}\r\n                      onChange={handleReverse}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveStory}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_STORY = gql`\r\n  mutation updateStory(\r\n    $title: String\r\n    $subtitle: String\r\n    $paragraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateStory(\r\n      inputStory: {\r\n        title: $title\r\n        subtitle: $subtitle\r\n        paragraph: $paragraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      _id\r\n      story {\r\n        title\r\n        subtitle\r\n        paragraph\r\n        photo\r\n        alt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalStory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\nimport ModalStory from \"./ModalStory\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isStory, setIsStory] = useState({});\r\n\r\n  const {\r\n    data: dataStoryContent,\r\n    loading: loadStoryContent,\r\n  } = useQuery(FETCH_ABOUT_CMS, { variables: { contentName: \"ABOUTUS\" } });\r\n\r\n  useEffect(() => {\r\n    if (dataStoryContent) {\r\n      setIsStory(dataStoryContent.aboutUsCMS.story);\r\n    }\r\n  }, [dataStoryContent]);\r\n\r\n  return (\r\n    <>\r\n      {loadStoryContent ? (\r\n        <DSection width=\"90%\" mcenter>\r\n          <Skeleton width=\"100%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          mcenter\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768 ? \"column\" : isStory.alt ? \"row-reverse\" : \"row\"\r\n          }\r\n        >\r\n          <ModalStory isStory={dataStoryContent.aboutUsCMS.story} />\r\n\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isStory\r\n                    ? `/images/cms/about/${isStory.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"20px\"\r\n            style={{ maxHeight: \"90vh\" }}\r\n          >\r\n            <h3>{isStory.title}</h3>\r\n            {isStory.subtitle !== \"\" && <h4>{isStory.subtitle}</h4>}\r\n            <p\r\n              style={{\r\n                fontSize: \"15px\",\r\n                letterSpacing: \"2px\",\r\n                lineHeight: 1.8,\r\n                textAlign: \"justify\",\r\n                overflowWrap: \"break-word\",\r\n                overflow: \"auto\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              {isStory.paragraph}\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { Icon, Modal, Form, Popup, Divider, TextArea } from \"semantic-ui-react\";\r\nimport { DImage, Content, DSection, DGrid } from \"../../../styled/containers\";\r\nimport { DButtonFree, DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\nimport useUploadFile from \"../../../../util/hooks/useUploadFile\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ModalMissionVision = ({ isMissionVision }) => {\r\n  const fileInputMV = useRef();\r\n  const [openMission, setOpenMission] = useState(false);\r\n  const [reverseMV, setReverseMV] = useState(\r\n    isMissionVision ? isMissionVision.alt : false\r\n  );\r\n\r\n  const [valuesMV, setValuesMV] = useState({\r\n    mtitle: isMissionVision ? isMissionVision.mission.title : \"\",\r\n    msubtitle: isMissionVision ? isMissionVision.mission.subtitle : \"\",\r\n    mparagraph: isMissionVision ? isMissionVision.mission.paragraph : \"\",\r\n    vtitle: isMissionVision ? isMissionVision.vision.title : \"\",\r\n    vsubtitle: isMissionVision ? isMissionVision.vision.subtitle : \"\",\r\n    vparagraph: isMissionVision ? isMissionVision.vision.paragraph : \"\",\r\n  });\r\n\r\n  const {\r\n    preview: previewMV,\r\n    selectedFile: selectedFileMV,\r\n    onSelectedFile: onSelectedFileMV,\r\n  } = useUploadFile();\r\n\r\n  const [updateMission, { loading }] = useMutation(UPDATE_ABOUT_MISSIONVISION, {\r\n    variables: {\r\n      ...valuesMV,\r\n      photo: selectedFileMV,\r\n      alt: reverseMV,\r\n    },\r\n    refetchQueries: [\r\n      { query: FETCH_ABOUT_CMS, variables: { contentName: \"ABOUTUS\" } },\r\n    ],\r\n    onCompleted() {\r\n      setOpenMission(false);\r\n      toaster.notify(\"Update Successfully\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleInputClickMV = () => {\r\n    fileInputMV.current.click();\r\n  };\r\n\r\n  const handleChangeValues = (e) => {\r\n    setValuesMV({ ...valuesMV, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleReverseMV = () => {\r\n    setReverseMV(!reverseMV);\r\n  };\r\n\r\n  const handleSaveMV = () => {\r\n    updateMission();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButtonFree\r\n        top={0}\r\n        right={0}\r\n        onClick={() => setOpenMission(true)}\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Icon name=\"edit\" fitted />\r\n      </DButtonFree>\r\n      <Modal open={openMission} onClose={() => setOpenMission(false)} closeIcon>\r\n        <Modal.Header>Update Header Content</Modal.Header>\r\n        <DGrid two gap=\"20px\">\r\n          <Modal.Content style={{ padding: \"10px\" }}>\r\n            <DSection width=\"100%\" height=\"50vh\">\r\n              <DImage dashed height=\"100%\" width=\"100%\">\r\n                {selectedFileMV ? (\r\n                  <img src={previewMV} alt=\"showcase\" />\r\n                ) : (\r\n                  isMissionVision.photo && (\r\n                    <img\r\n                      src={`/images/cms/about/${isMissionVision.photo}`}\r\n                      alt=\"about\"\r\n                    />\r\n                  )\r\n                )}\r\n              </DImage>\r\n            </DSection>\r\n\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                value={undefined}\r\n                onChange={onSelectedFileMV}\r\n                style={{ display: \"none\" }}\r\n                ref={fileInputMV}\r\n              />\r\n              <Popup\r\n                content=\"Select image for background slide\"\r\n                trigger={\r\n                  <Icon\r\n                    name=\"camera\"\r\n                    size=\"large\"\r\n                    onClick={handleInputClickMV}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"#2193b0\",\r\n                      opacity: 0.75,\r\n                    }}\r\n                    className=\"icon_camera-custom\"\r\n                  />\r\n                }\r\n              />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling style={{ padding: \"10px\" }}>\r\n            <Form>\r\n              <Divider horizontal>Mission</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"mtitle\"\r\n                  value={valuesMV.mtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"msubtitle\"\r\n                  value={valuesMV.msubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"mparagraph\"\r\n                  value={valuesMV.mparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Divider horizontal>Vision</Divider>\r\n              <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                  name=\"vtitle\"\r\n                  value={valuesMV.vtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subtitle</label>\r\n                <input\r\n                  name=\"vsubtitle\"\r\n                  value={valuesMV.vsubtitle || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>Paragraph</label>\r\n                <TextArea\r\n                  style={{ minHeight: 100 }}\r\n                  name=\"vparagraph\"\r\n                  value={valuesMV.vparagraph || \"\"}\r\n                  onChange={handleChangeValues}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <label>\r\n                  Image Position\r\n                  <Popup\r\n                    content=\"Adding overlay over the top of slide and make the text white for contrast\"\r\n                    trigger={\r\n                      <Icon name=\"question circle outline\" size=\"large\" />\r\n                    }\r\n                  />\r\n                </label>\r\n                <Content\r\n                  flex\r\n                  align=\"center\"\r\n                  margin=\"0 auto\"\r\n                  width=\"80%\"\r\n                  height=\"10vh\"\r\n                >\r\n                  <div className=\"pretty p-switch p-fill\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"reverse\"\r\n                      value={reverseMV}\r\n                      checked={reverseMV === true ? true : false}\r\n                      onChange={handleReverseMV}\r\n                    />\r\n                    <div className=\"state p-info\">\r\n                      <label>Reverse</label>\r\n                    </div>\r\n                  </div>\r\n                </Content>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n        </DGrid>\r\n        <Modal.Actions>\r\n          <DButton confirm onClick={handleSaveMV}>\r\n            {loading ? <Spinner small inverted /> : \"Update\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst UPDATE_ABOUT_MISSIONVISION = gql`\r\n  mutation updateMission(\r\n    $mtitle: String\r\n    $msubtitle: String\r\n    $mparagraph: String\r\n    $vtitle: String\r\n    $vsubtitle: String\r\n    $vparagraph: String\r\n    $photo: Upload\r\n    $alt: Boolean\r\n  ) {\r\n    updateMission(\r\n      inputMissionVision: {\r\n        mtitle: $mtitle\r\n        msubtitle: $msubtitle\r\n        mparagraph: $mparagraph\r\n        vtitle: $vtitle\r\n        vsubtitle: $vsubtitle\r\n        vparagraph: $vparagraph\r\n        photo: $photo\r\n        alt: $alt\r\n      }\r\n    ) {\r\n      missionvision {\r\n        photo\r\n        alt\r\n        mission {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n        vision {\r\n          title\r\n          subtitle\r\n          paragraph\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ModalMissionVision;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ABOUT_CMS } from \"../../../../util/graphql/cms\";\r\nimport { DSection, Content, DImage } from \"../../../styled/containers\";\r\nimport ModalMissionVision from \"./ModalMissionVision\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport useWindowSize from \"../../../../util/hooks/useWindowSize\";\r\n\r\nconst Story = () => {\r\n  const { width } = useWindowSize();\r\n  const [isMission, setIsMission] = useState({});\r\n\r\n  const { data: dataMissionVision, loading: loadMissionVision } = useQuery(\r\n    FETCH_ABOUT_CMS,\r\n    {\r\n      variables: {\r\n        contentName: \"ABOUTUS\",\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataMissionVision) {\r\n      setIsMission(dataMissionVision.aboutUsCMS.missionvision);\r\n    }\r\n  }, [dataMissionVision]);\r\n\r\n  return (\r\n    <>\r\n      {loadMissionVision ? (\r\n        <DSection\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          mcenter\r\n        >\r\n          <Skeleton width=\"50%\" height=\"50vh\" />\r\n        </DSection>\r\n      ) : (\r\n        <DSection\r\n          height=\"100%\"\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          direct={\r\n            width === 768\r\n              ? \"column\"\r\n              : isMission.alt === true\r\n              ? \"row-reverse\"\r\n              : \"row\"\r\n          }\r\n          margin=\"24px auto\"\r\n        >\r\n          <ModalMissionVision\r\n            isMissionVision={dataMissionVision.aboutUsCMS.missionvision}\r\n          />\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"24px\"\r\n          >\r\n            <h3>{isMission.mission && isMission.mission.title}</h3>\r\n            {isMission.mission && isMission.mission.subtitle !== \"\" && (\r\n              <h4>{isMission.mission.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.mission && isMission.mission.paragraph}</p>\r\n            <h3>{isMission.vision && isMission.vision.title}</h3>\r\n            {isMission.vision && isMission.vision.subtitle !== \"\" && (\r\n              <h4>{isMission.vision.subtitle}</h4>\r\n            )}\r\n            <p>{isMission.vision && isMission.vision.paragraph}</p>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DImage height=\"100%\">\r\n              <img\r\n                src={\r\n                  isMission.photo\r\n                    ? `/images/cms/about/${isMission.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"about\"\r\n              />\r\n            </DImage>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n      s\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Heading from \"../../../components/admin/cms/about/Heading\";\r\nimport Story from \"../../../components/admin/cms/about/Story\";\r\nimport Mission from \"../../../components/admin/cms/about/Mission\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Layout>\r\n      <Content\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        margin=\"20px auto\"\r\n        align=\"center\"\r\n      >\r\n        <div>\r\n          <h3>Content Management</h3>\r\n        </div>\r\n        <div style={{ margin: \"0 1em\" }}>\r\n          <Icon name=\"angle right\" size=\"large\" fitted />\r\n        </div>\r\n        <div>\r\n          <Link\r\n            to=\"/zeadmin/cms_about\"\r\n            style={{\r\n              fontSize: \"18px\",\r\n              fontWeight: 700,\r\n              borderBottom: \"2px solid\",\r\n              paddingBottom: \"5px\",\r\n            }}\r\n          >\r\n            About Us\r\n          </Link>\r\n        </div>\r\n      </Content>\r\n      <Heading />\r\n      <Mission />\r\n      <Story />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Spinner from \"../../Spinner\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\nconst ToggleView = ({ swid, tggl }) => {\r\n  const [toggleValue, setToggleValue] = useState(\"\");\r\n\r\n  const [toggleTestimonial, { loading: loadToggle }] = useMutation(\r\n    TOGGLE_REVIEW,\r\n    {\r\n      variables: {\r\n        id: toggleValue,\r\n      },\r\n      refetchQueries: [{ query: FETCH_TESTIMONIALS }],\r\n    }\r\n  );\r\n\r\n  const hoverSwitch = (e) => {\r\n    setToggleValue(e.currentTarget.dataset.sid);\r\n  };\r\n\r\n  const handleSwitch = (e) => {\r\n    toggleTestimonial();\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      content=\"Switch on to display testimonial in Home Page\"\r\n      style={style.popContent}\r\n      inverted\r\n      trigger={\r\n        <div\r\n          className=\"pretty p-switch p-fill\"\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"5px\",\r\n          }}\r\n        >\r\n          {loadToggle ? (\r\n            <Spinner tiny />\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"checkbox\"\r\n                data-sid={swid}\r\n                checked={tggl === true ? true : false}\r\n                onMouseOver={hoverSwitch}\r\n                onChange={handleSwitch}\r\n              />\r\n              <div className=\"state p-success\">\r\n                <label></label>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID!) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n      view\r\n    }\r\n  }\r\n`;\r\n\r\nconst style = {\r\n  popContent: {\r\n    borderRadius: 0,\r\n    opacity: 0.7,\r\n    padding: \"2em\",\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default ToggleView;\r\n","import React, { useState } from \"react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Modal, Icon } from \"semantic-ui-react\";\r\n\r\nconst ModalView = ({ ridd, open, setOpen }) => {\r\n  return (\r\n    <>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Content>{ridd}</Modal.Content>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalView;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\n\r\nimport { Modal, Icon, Popup } from \"semantic-ui-react\";\r\nimport { Archive } from \"@styled-icons/boxicons-solid/Archive\";\r\nimport { DeleteForever } from \"@styled-icons/material/DeleteForever\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport { Content } from \"../../../components/styled/containers\";\r\nimport useWindowSize from \"../../../util/hooks/useWindowSize\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport Toasted from \"../../../components/Toasted\";\r\n\r\nconst DeleteView = ({ ridd, rvw, isDltModal, setIsDltModal }) => {\r\n  const { width: wdth } = useWindowSize();\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [archiveTestimonial, { loading: loadArchive }] = useMutation(\r\n    ARCHIVED_REVIEW,\r\n    {\r\n      variables: { id: ridd },\r\n      refetchQueries: [\r\n        { query: FETCH_TESTIMONIALS, variables: { active: true } },\r\n      ],\r\n      onCompleted() {\r\n        toaster.notify(\"Testimonial was sent to archive files\");\r\n      },\r\n      onError(err) {\r\n        if (err.graphQLErrors[0].extensions.exception.errors.unauth) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted alert onClick={onClose}>\r\n                {err.graphQLErrors[0].extensions.exception.errors.unauth}\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleArchive = () => {\r\n    archiveTestimonial();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"small\"\r\n        basic\r\n        closeIcon\r\n        onClose={() => setIsDltModal(false)}\r\n        open={isDltModal}\r\n        style={{ zIndex: 9 }}\r\n      >\r\n        <Modal.Header>\r\n          <Archive size=\"22px\" /> Archived this User's Review?\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <h3>\r\n            Name: {rvw.user.firstName} {rvw.user.firstName}\r\n          </h3>\r\n          <h4>Message:</h4>\r\n          <p style={{ textIndent: \"1em\" }}>\r\n            <strong>{rvw.message}</strong>\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Content\r\n            width={wdth <= 768 ? \"100%\" : \"90%\"}\r\n            margin=\"0 auto\"\r\n            flex\r\n            justify=\"space-between\"\r\n            align=\"center\"\r\n          >\r\n            <Content width=\"auto\">\r\n              <Popup\r\n                content=\"Deleting will permanently erase this review\"\r\n                trigger={\r\n                  <DButton alert style={{ fontSize: \"12px\" }}>\r\n                    <DeleteForever size=\"22px\" /> Delete Permanently\r\n                  </DButton>\r\n                }\r\n                inverted\r\n              />\r\n            </Content>\r\n            <Content width=\"auto\" flex justify=\"space-around\" align=\"center\">\r\n              <DButton confirm onClick={handleArchive} basic>\r\n                {loadArchive ? (\r\n                  <Spinner inverted small />\r\n                ) : (\r\n                  <>\r\n                    <Icon name=\"check\" /> Yes\r\n                  </>\r\n                )}\r\n              </DButton>\r\n\r\n              <DButton alert onClick={() => setIsDltModal(false)} basic>\r\n                <Icon name=\"ban\" /> No\r\n              </DButton>\r\n            </Content>\r\n          </Content>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ARCHIVED_REVIEW = gql`\r\n  mutation archiveTestimonial($id: ID!) {\r\n    archiveTestimonial(_id: $id)\r\n  }\r\n`;\r\n\r\nexport default DeleteView;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { DotsVertical } from \"../../../components/styled/utils\";\r\nimport { Popup, Grid, Icon } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../components/styled/utils\";\r\nimport ModalView from \"../../../components/admin/testimonial/ModalView\";\r\nimport DeleteView from \"../../../components/admin/testimonial/DeleteView\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nconst MenuView = ({ menuId, review }) => {\r\n  const [menuValue, setMenuValue] = useState(\"\");\r\n  const [isDltModal, setIsDltModal] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const handleMenu = (e) => {\r\n    setMenuValue(e.currentTarget.dataset.rid);\r\n  };\r\n\r\n  const modalDeleteShow = () => {\r\n    setIsDltModal(true);\r\n  };\r\n\r\n  console.log(employeeAuth);\r\n\r\n  return (\r\n    <>\r\n      <Popup\r\n        on=\"click\"\r\n        trigger={\r\n          <DotsVertical\r\n            size=\"24px\"\r\n            data-rid={menuId}\r\n            onMouseOver={handleMenu}\r\n          />\r\n        }\r\n        flowing\r\n        position=\"top right\"\r\n        style={{ zIndex: 3 }}\r\n      >\r\n        <Grid\r\n          centered\r\n          divided\r\n          columns={\r\n            employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3 ? 2 : 1\r\n          }\r\n        >\r\n          {(employeeAuth.role === \"ADMIN\" || employeeAuth.level >= 3) && (\r\n            <Grid.Column textAlign=\"center\">\r\n              <DButton alert>\r\n                <Icon name=\"trash\" fitted onClick={modalDeleteShow} />\r\n              </DButton>\r\n            </Grid.Column>\r\n          )}\r\n\r\n          <Grid.Column>\r\n            <DButton confirm onClick={() => setOpen(true)}>\r\n              <Icon name=\"eye\" fitted />\r\n            </DButton>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Popup>\r\n\r\n      <DeleteView\r\n        ridd={menuValue}\r\n        rvw={review}\r\n        setIsDltModal={setIsDltModal}\r\n        isDltModal={isDltModal}\r\n      />\r\n      <ModalView ridd={menuValue} open={open} setOpen={setOpen} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_TESTIMONIALS } from \"../../../util/graphql/testimonial\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, Content } from \"../../../components/styled/containers\";\r\n\r\nimport ToggleView from \"../../../components/admin/testimonial/ToggleView\";\r\nimport MenuView from \"../../../components/admin/testimonial/MenuView\";\r\nimport Spinner from \"../../../components/Spinner\";\r\n\r\nconst Testimonial = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const {\r\n    data: dataReviews,\r\n    loading: loadReviews,\r\n  } = useQuery(FETCH_TESTIMONIALS, { variables: { active: true } });\r\n\r\n  useEffect(() => {\r\n    if (dataReviews) {\r\n      setReviews(dataReviews.testimonials);\r\n    }\r\n  }, [dataReviews]);\r\n\r\n  const columns = [\r\n    {\r\n      cell: (row) => <ToggleView swid={row._id} tggl={row.view} />,\r\n      width: \"80px\",\r\n      button: true,\r\n      style: {\r\n        borderBottom: \"1px solid #FFFFFF\",\r\n        marginBottom: \"-1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"user.lastName\",\r\n      sortable: true,\r\n      format: (row) => `${row.user.firstName} ${row.user.lastName}`,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => <MenuView menuId={row._id} review={row} />,\r\n      button: true,\r\n      allowOverflow: true,\r\n      width: \"80px\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        width=\"90%\"\r\n        mcenter\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n      >\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            columns={columns}\r\n            data={reviews.map((rev) => rev)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n            progressPending={loadReviews}\r\n            progressComponent={\r\n              <Spinner content=\"Please wait while we fetch our data...\" />\r\n            }\r\n          />\r\n        </Content>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\",\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\",\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\",\r\n    },\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nconst TOGGLE_REVIEW = gql`\r\n  mutation toggleTestimonial($id: ID) {\r\n    toggleTestimonial(_id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Testimonial;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport About from \"./admin/cms/About\";\r\nimport Testimonial from \"./admin/cms/Testimonial\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/dashboard\" exact />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/paccount\"\r\n          component={PersonalAccount}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/userInfo/:_id\"\r\n          component={UserInfo}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_about\" component={About} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/cms_testimonial\"\r\n          component={Testimonial}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Main from \"./pages/Main\";\r\nimport Admin from \"./pages/Admin\";\r\nimport Page404 from \"./pages/Page404\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./components/theme\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Switch>\r\n            {/* <Redirect from=\"/\" to=\"/zessence\" exact /> */}\r\n            <Route path=\"/zeadmin\" component={Admin} />\r\n            <Route path=\"/\" component={Main} />\r\n\r\n            <Route component={Page404} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ApolloProvider from \"./ApolloProvider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"toasted-notes/src/styles.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./css/slick-theme.custom.css\";\r\nimport \"./css/slick.custom.css\";\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}