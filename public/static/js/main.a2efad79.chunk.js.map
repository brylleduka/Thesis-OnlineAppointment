{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","util/hooks/useScroll.js","components/main/navigation/Navigation.js","util/graphql/cms.js","components/styled/containers.js","components/styled/scroll.styled.js","components/MouseScroll.js","components/main/home/Showcase.js","util/graphql/service.js","components/styled/card.js","components/styled/text.js","components/FancyText.js","components/styled/utils.js","components/main/utils/ReadMore.js","components/main/home/CategorySection.js","util/graphql/employee.js","components/main/home/TeamSection.js","components/main/home/AboutSection.js","components/main/home/PromoSection1.js","components/main/home/TestimonialSection.js","components/main/utils/ScrollButton.js","pages/main/Home.js","components/main/about/Story.js","components/main/about/TeamDetails.js","components/main/about/Team.js","util/useScrollDown.js","pages/main/About.js","util/hooks/useForm.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/styled/loader.js","components/Spinner.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Gallery.js","pages/main/Contact.js","components/main/testimonial/TestimonialCard.js","pages/main/Testimonials.js","pages/main/Services.js","pages/main/Service.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/styled/skeleton.js","components/Skeleton.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","components/admin/appointment/HistoryAppointments.js","pages/admin/FileReport.js","components/admin/cms/home/showcase/ShowcaseModal.js","components/admin/cms/home/showcase/DeleteShowcase.js","components/admin/cms/home/showcase/NewSlide.js","components/admin/cms/home/showcase/Showcase.js","pages/admin/cms/Home.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","DropdownCustomNav","Dropdown","Burger","setOpen","onClick","useScroll","scrollVal","useState","scrolling","setScrolling","scrollTop","setScrollTop","scrollH","undefined","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Navigation","ref","handler","node","useRef","listener","event","current","contains","document","history","useHistory","useContext","handleLogout","push","trigger","style","fontSize","Icon","name","firstName","scrollBehavior","el","scrollIntoView","behavior","block","className","src","alt","to","userId","_id","scroll","simple","Menu","Item","as","Link","disabled","FETCH_SHOWCASE","gql","columns","rows","DContainer","div","DShowCase","height","background","bgcolor","Overlay","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","cwidth","cmarg","color","fs","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","med10","med7","med5","DCard","p","dh","dw","justifyCenter","justifyAround","justifyBetween","jusitfyFend","alignCenter","alignAround","alignBetween","alignFend","fcol","bs","DSection","width","mcenter","fixed","Content","fluid","rounded","br1","weight","size","bluer","imgHeight","imgWidth","DImage","bordered","dashed","m","DFooterLinks","DFooter","footer","Section2Styled","keyframes","DMouseScroll","inverted","basic","MouseScroll","Showcase","nextSection","matchMedia","showcase","setShowcase","useQuery","variables","showcaseData","data","dataLoading","loading","error","contentManagements","position","id","dots","infinite","fade","speed","slidesToShow","slidesToScroll","map","sc","key","photo","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","JCard","figure","titleSize","JCard2","oflow","JCard3","JCard4","top","right","bottom","left","DTestimonialCard","DFancyText","h1","FancyText","children","ripple","DButton","button","fSize","text","radius","alert","red","warning","yellow","confirm","green","default","DButtonCancel","border","DButtonConfirm","DLabel","label","ls","tt","w","hover","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","status","ReadMore","ScrollUp","DIconCustom","customSize","CategorySection","setRef","isCategories","setIsCategories","categories","category","parser","description","length","substr","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","styles","dloading","display","justifyContent","alignItems","flexDirection","lineHeight","TeamSection","cards","employeesAR","setEmployeesAR","limit","data_employeesAR","loading_employeesAR","aestheticiansReceps","marginBottom","count","employee","data-emp","title","lastName","role","bio","AboutSection","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","css","visibility","from","y","ease","Power3","easeOut","scale","animate","PromoSection1","TestimonialSection","autoplay","autoplaySpeed","ScrollButton","intervalId","pageYOffset","clearInterval","this","scrollPx","setInterval","scrollStep","bind","delay","setState","scrollToTop","React","Component","Home","card1","Story","content","maxHeight","letterSpacing","textAlign","overflowWrap","overflow","padding","TeamDetails","href","Modal","onClose","closeIcon","Team","employees","setEmployees","dataEmployees","loadingEmployees","minHeight","emp","scrollView","About","minWidth","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","zIndex","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","result","console","log","loginUser","userX","general","Signin","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","loading_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","schedule","breakStart","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","setCategories","services","setServices","loading_categories","data_categories","useLazyQuery","categoryId","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","cursor","outline","servEmp","keyring","SpinnerRing","small","medium","Spinner","large","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","addInfo","setAddInfo","setService","cache","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","toaster","notify","expiredLog","check","start","message","Header","readOnly","toDateString","Actions","Appointment","jusitfy","photos","Gallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","index","currentIndex","views","x","srcset","srcSet","caption","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","TestimonialCard","slidesPerRow","arrows","Testimonials","Services","sectionDown","Service","params","isReadMore","setIsReadMore","isServices","setIsServices","goBack","onPointerLeave","price","VERRIFIED_APPOINTMENT","ThankYou","emailToken","go","appointmentId","verifiedAppointment","onload","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","parseInt","dateOfBirth","contact","updateUser","showYearDropdown","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","Accordion","setActive","contentRef","scrollHeight","icon","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","CANCEL_APPOINTMENT_MUTATION","absoluteCenter","transform","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","setServiceEmp","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","new","Popup","circular","mouseEnterDelay","mouseLeaveDelay","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","row","cell","fitted","wide","Grid","divided","Column","currentAppoint","responsive","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","currentTarget","compact","historyAppoint","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","input","AppointmentDetails","schedDate","myAppoint","setMyAppoint","margn","Main","path","exact","UpcommingAppointments","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","pointing","SideNav","activeClassName","Layout","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","placeholderAnimate","DSkeleton","wid","Skeleton","CurrentAppointments","currentAppointmentData","currAppoint","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","NewDateTime","NewAppointmentDetails","CREATE_GUEST_APPOINTMENT","myAppointments","createGuestAppointment","NewAppointment","Divider","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","workLength","breakLength","newEmployee","Checkbox","class","Employees","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","dataCategory","loadingCategory","addService","close","marginLeft","EmployeeServices","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","newCategory","Categories","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","newService","serviceExist","ServiceList","descript","trimString","substring","parse","progressComponent","UPLOAD_CATEGORY_PHOTO","Category","setCategory","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","serviceData","serviceLoading","addServicePhoto","replace","REPLY_MESSAGE","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","loadingInq","inquiry","replyInquiry","column","Inquiry","setInquiries","data_inquiries","loading_inquiries","msg","PhotoBooth","fetchEmployee","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","empData","empLoading","handleSchedule","User","setUsers","data_users","loading_users","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","HistoryAppointments","historyAppointments","setHistoryAppointments","historyAppointmentData","downloadCSV","array","link","createElement","csv","keys","Object","join","forEach","ctr","convertArrayOfObjectsToCSV","setAttribute","encodeURI","click","appointmentHistory","Export","onExport","actionsMemo","useMemo","actions","FileReport","ShowcaseModal","openEdit","setOpenEdit","DELETE_SHOWCASE","DeleteShowcase","openAlert","setOpenAlert","isDeleteShowCase","deleteShowcase","loadingDelete","NewSlide","TextArea","isShowCase","setIsShowCase","setIsDeleteShowCase","handleEdit","dataset","scvalueedit","handleDelete","scvalue","data-scvalueedit","data-scvalue","Admin","App","uploadLink","createUploadLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a2efad79.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${props => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 14vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${props =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${props => props.scrolled && \"li a {color: #fff}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n      &:nth-child(7) {\r\n        transition-delay: 0s, 400ms;\r\n      }\r\n      &:nth-child(8) {\r\n        transition-delay: 0s, 450ms;\r\n      }\r\n      &:nth-child(9) {\r\n        transition-delay: 0s, 500ms;\r\n      }\r\n      &:nth-child(10) {\r\n        transition-delay: 0s, 550ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n\r\n  ${props => props.scrolled && \"li a {color: #fff}\"};\r\n\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const DropdownCustomNav = styled(Dropdown)`\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & a {\r\n    color: #232323;\r\n    font-weight: 700;\r\n  }\r\n  & a:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & .customDropMenu a {\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.primary} !important;\r\n  }\r\n\r\n  ${props => props.scrolled && \"color: #fff; a {color: #fff}\"};\r\n\r\n  @media (max-width: 1024px) {\r\n    a {\r\n      color: #ffff;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n    a:hover {\r\n      color: ${({ theme }) => theme.secondary};\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n  }\r\n\r\n  .customDropMenu .customDropMenuItem {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #232323 !important;\r\n    font-size: 14px !important;\r\n  }\r\n  .customDropMenu .customDropMenuItem:hover {\r\n    color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll(scrollVal) {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const scrollH = scrollVal !== undefined ? scrollVal : 100;\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > scrollH);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import React, { useRef, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport {\r\n  DNavigation,\r\n  DMainMenu,\r\n  DRightMenu,\r\n  DropdownCustomNav\r\n} from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  let history = useHistory();\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/zessence\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const scrollBehavior = el =>\r\n    el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/zessence/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/#home\" scroll={scrollBehavior}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/services&rates/#services\">Services</Link>\r\n          </li>\r\n\r\n          {/* <Link to=\"/zessence/about\">About&nbsp;Us</Link> */}\r\n          <DropdownCustomNav\r\n            trigger={\r\n              <Link to=\"/zessence/about/#about\" scroll={scrollBehavior}>\r\n                About&nbsp;Us\r\n              </Link>\r\n            }\r\n            simple\r\n            scrolled={scrolling ? true : false}\r\n          >\r\n            <Dropdown.Menu className=\"customDropMenu\">\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/zessence/about/#story\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Story\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/zessence/about/#team\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Team\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </DropdownCustomNav>\r\n\r\n          <li>\r\n            <Link to=\"/zessence/gallery/#gallery\" scroll={scrollBehavior}>\r\n              Gallery\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/testimonials/#tstmnl\" scroll={scrollBehavior}>\r\n              Testimonials\r\n            </Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/zessence/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired\r\n};\r\n\r\nexport default Navigation;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_SHOWCASE = gql`\r\n  query contentManagements($section: String) {\r\n    contentManagements(section: $section) {\r\n      _id\r\n      photo\r\n      section\r\n      headline\r\n      paragraph\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_SHOWCASE };\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n  margin-top: 14vh;\r\n`;\r\n\r\nexport const DShowCase = styled.div`\r\n  width: 100%;\r\n  height: ${props => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n\r\n  h1,h2,\r\n  p {\r\n    \r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img{\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${props => (props.bg ? props.bg : \"rgba(0, 0, 0, 0.15)\")};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  padding: ${props => props.pad && props.pad};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  opacity: ${props => props.opac && props.opac};\r\n  transition: opacity 0.3s ease;\r\n\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: 0;\r\n    height: 100%;\r\n\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n\r\n      text-align: center;\r\n      transform: rotate(-45deg);\r\n      h1 {\r\n        transform: translateY(80px);\r\n        transition: transform 0.4s ease-in-out;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${props => (props.cwidth ? props.cwidth : \"50%\")};\r\n    text-align: left;\r\n    height: auto;\r\n    margin: ${props => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    padding: 10px;\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    p {\r\n      color: ${props => (props.color ? props.color : \"#fff\")};\r\n      letter-spacing: 5px;\r\n      line-height: 2;\r\n    }\r\n    h1 {\r\n      font-size: ${props => (props.fs ? props.fs : \"48px\")};\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: ${props =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${props => props.gap && props.gap};\r\n  grid-template-rows: ${props =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${props => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${props => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: ${props =>\r\n      props.med10 ? props.med10 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${props =>\r\n      props.med7 ? props.med7 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: ${props => (props.med5 ? props.med5 : \"1fr\")};\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: ${props => (props.p ? props.p : \"10px\")};\r\n  height: ${props => (props.dh ? props.dh : \"300px\")};\r\n  width: ${props => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${props =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${props => props.fcol && \"column\"};\r\n\r\n  overflow: hidden;\r\n  background: ${props => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${props =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n        \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n        \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${props => (props.height ? props.height : \"400px\")};\r\n  width:  ${props => (props.width ? props.width : \"100%\")};;\r\n  margin: ${props =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${props => props.pad && props.pad};\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${props => props.fixed && \"fixed\"};\r\n  background-color: ${props => props.bgcolor && props.bgcolor};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  position: relative;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${props => props.height && props.height};\r\n  width: ${props => (props.width ? props.width : props.fluid ? \"100%\" : \"50%\")};\r\n  padding: ${props => props.pad && props.pad};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${props => props.margin && props.margin};\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${props => props.fixed && \"fixed\"};\r\n  background-color: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props =>\r\n    props.rounded\r\n      ? \"10px\"\r\n      : props.br1\r\n      ? \"0% 24% 26% 39% / 20% 0% 100% 0% \"\r\n      : \"0\"};\r\n  box-shadow: ${props =>\r\n    props.bs &&\r\n    (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n    \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n    \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n    \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n    \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n  z-index: 2;\r\n  font-weight: ${props => props.weight && props.weight};\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  span {\r\n    color: ${props => props.color && props.color};\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${props => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${props => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${props => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${props => (props.height ? props.height : \"300px\")};\r\n  width: ${props => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${props =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  border-width: ${props => props.bordered && \"1px\"};\r\n  border-style: ${props => (props.dashed ? \"dashed\" : \"solid\")};\r\n  border-color: ${props => (props.dashed ? \"#ccc\" : \"#000\")};\r\n  margin: ${props => (props.m ? props.m : \"0 auto\")};\r\n  padding: ${props => props.pad && props.pad};\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  visibility: hidden;\r\n  height: 100vh;\r\n  margin: 32px 0;\r\n  width: 90%;\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: space-between;\r\n      margin: 0 24px;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 400px;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            margin-bottom: 24px .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding-right: 48px;\r\n            margin-bottom: 56px;\r\n            text-align: justify;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 50%;\r\n        height: 100vh;\r\n        position: relative;\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .sec2-images {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst scroll = keyframes`\r\n\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    10% {\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    }\r\n    100% {\r\n        transform: translateY(5px);\r\n        opacity: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const DMouseScroll = styled.div`\r\n  position: absolute;\r\n  top: 85%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n\r\n  &:hover {\r\n    .mousey {\r\n      opacity: 1;\r\n      left: 50%;\r\n    }\r\n    .scroll-downs {\r\n      &::before,\r\n      &::after {\r\n        top: 50%;\r\n        left: 50%;\r\n        border: 1px solid rgba(255, 255, 255, 0.5);\r\n      }\r\n    }\r\n  }\r\n\r\n  .scroll-downs {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      content: \"\";\r\n      width: 100%;\r\n      height: 100%;\r\n      border: 1px solid rgba(255, 255, 255, 0.25);\r\n      transform: translate(-50%, -50%);\r\n      border-radius: 100%;\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n    &::before {\r\n      top: 48%;\r\n      left: 60%;\r\n    }\r\n\r\n    &::after {\r\n      top: 52%;\r\n      left: 52%;\r\n    }\r\n  }\r\n\r\n  .mousey {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 2px;\r\n    padding: 3px 5px;\r\n    height: 15px;\r\n    border: 2px solid #fff;\r\n    border-radius: 25px;\r\n    opacity: 0.75;\r\n    box-sizing: content-box;\r\n    background: #fff;\r\n  }\r\n\r\n  .scroller {\r\n    width: 2px;\r\n    height: 5px;\r\n    border-radius: 25%;\r\n    background-color: #000;\r\n    animation-name: ${scroll};\r\n    animation-duration: 2.2s;\r\n    animation-timing-function: cubic-bezier(0.15, 0.41, 0.69, 0.94);\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  ${props =>\r\n    props.inverted &&\r\n    \".mousey{background: #232323; border-color: #232323;} .scroller{background-color: #fff;} .scroll-downs{&::before,&::after{border-color: rgba(0,0,0,0.25)}} &:hover{.scroll-downs{&::before,&::after{border-color: rgba(0,0,0,0.5)}}}\"}\r\n\r\n  ${props =>\r\n    props.basic &&\r\n    \".mousey{background: transparent; border-width: 1px;} .scroller{background-color: #fff;} \"}\r\n`;\r\n","import React from \"react\";\r\nimport { DMouseScroll } from \"./styled/scroll.styled\";\r\n\r\nconst MouseScroll = props => {\r\n  return (\r\n    <DMouseScroll {...props}>\r\n      <div className=\"scroll-downs\">\r\n        <div className=\"mousey\">\r\n          <div className=\"scroller\"></div>\r\n        </div>\r\n      </div>\r\n    </DMouseScroll>\r\n  );\r\n};\r\n\r\nexport default MouseScroll;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport MouseScroll from \"../../MouseScroll\";\r\n\r\nconst Showcase = ({ nextSection }) => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\"\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(nextSection);\r\n  };\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }} id=\"home\">\r\n      <MouseScroll onClick={scrollDown} />\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"90vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcase.map(sc => (\r\n            <DShowCase\r\n              height=\"90vh\"\r\n              key={sc._id}\r\n              background={\r\n                sc.photo !== null || sc.photo !== undefined\r\n                  ? `/images/cms/home/${sc.photo}`\r\n                  : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n            >\r\n              <Overlay\r\n                bg={\r\n                  \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                }\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h1>Z Essence Facial & Spa</h1>\r\n                  <p>\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Quisquam, doloribus.\r\n                  </p>\r\n                  <Link to=\"/zessence\" className=\"btn\">\r\n                    Book Appointment\r\n                  </Link>\r\n                </div>\r\n              </Overlay>\r\n            </DShowCase>\r\n          ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  height: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  display: \"block\"\r\n};\r\n\r\nexport default Showcase;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const JCard = styled.figure`\r\n  background-color: #fff;\r\n  color: #ffffff;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  max-width: 100%;\r\n  min-width: 200px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  width: 100%;\r\n  -webkit-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  img {\r\n    backface-visibility: hidden;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    background-color: #fe8c00;\r\n    opacity: 0.5;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  &:before {\r\n    -webkit-transform: skew(30deg) translateX(-80%);\r\n    transform: skew(30deg) translateX(-80%);\r\n  }\r\n\r\n  &:after {\r\n    -webkit-transform: skew(-30deg) translateX(-70%);\r\n    transform: skew(-30deg) translateX(-70%);\r\n  }\r\n\r\n  figcaption {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    padding: 25px 40% 25px 20px;\r\n\r\n    &::before,\r\n    &::after {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      background-color: #2193b0;\r\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\r\n      content: \"\";\r\n      opacity: 0.5;\r\n      z-index: -1;\r\n    }\r\n\r\n    &::before {\r\n      -webkit-transform: skew(30deg) translateX(-100%);\r\n      transform: skew(30deg) translateX(-100%);\r\n    }\r\n\r\n    &::after {\r\n      -webkit-transform: skew(-30deg) translateX(-90%);\r\n      transform: skew(-30deg) translateX(-90%);\r\n    }\r\n\r\n    h3,\r\n    p {\r\n      margin: 0;\r\n      opacity: 0;\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    h3 {\r\n      font-family: \"Teko\", sans-serif;\r\n      font-size: ${props => (props.titleSize ? props.titleSize : \"36px\")};\r\n      font-weight: 700;\r\n      line-height: 1em;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    a {\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      z-index: 1;\r\n    }\r\n  }\r\n\r\n  &:hover h3,\r\n  &.hover h3,\r\n  &:hover p,\r\n  &.hover p {\r\n    -webkit-transform: translateY(0);\r\n    transform: translateY(0);\r\n    opacity: 0.9;\r\n    -webkit-transition-delay: 0.2s;\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover:before,\r\n  &.hover:before {\r\n    -webkit-transform: skew(30deg) translateX(-20%);\r\n    transform: skew(30deg) translateX(-20%);\r\n    -webkit-transition-delay: 0.05s;\r\n    transition-delay: 0.05s;\r\n  }\r\n\r\n  &:hover:after,\r\n  &.hover:after {\r\n    -webkit-transform: skew(-30deg) translateX(-10%);\r\n    transform: skew(-30deg) translateX(-10%);\r\n  }\r\n\r\n  &:hover figcaption:before,\r\n  &.hover figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-40%);\r\n    transform: skew(30deg) translateX(-40%);\r\n    -webkit-transition-delay: 0.15s;\r\n    transition-delay: 0.15s;\r\n  }\r\n\r\n  &:hover figcaption:after,\r\n  &.hover figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-30%);\r\n    transform: skew(-30deg) translateX(-30%);\r\n    -webkit-transition-delay: 0.1s;\r\n    transition-delay: 0.1s;\r\n  }\r\n`;\r\n\r\nexport const JCard2 = styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    background: #fff;\r\n    max-width: 100%;\r\n    min-width: 240px;\r\n    height: 400px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: ${props =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n\r\n    .thumbnail {\r\n      width: 100%;\r\n      height:100%;\r\n      overflow: hidden;\r\n      border-radius: 10px 10px 0 0;\r\n      background: #eee;\r\n      img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n       object-fit: cover;\r\n      }\r\n    }\r\n\r\n \r\n    .post-content {\r\n      position: absolute;\r\n      bottom: 0;\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border-radius: 0 0 10px 10px;\r\n      .category {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 0;\r\n        background: ${({ theme }) => theme.secondary};\r\n        padding: 10px 15px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n      }\r\n      .title {\r\n        color: #ccc;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n      }\r\n      .sub_title {\r\n        margin: 0;\r\n        padding: 0 0 20px;\r\n        color: ${({ theme }) => theme.secondary};\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n      }\r\n\r\n      .description {\r\n          height: 10px;\r\n          margin-top: 12px;\r\n         \r\n          &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            background-color: #f5f5f5;\r\n          }\r\n\r\n          &::-webkit-scrollbar {\r\n            width: 10px;\r\n            background-color: #f5f5f5;\r\n          }\r\n          &::-webkit-scrollbar-thumb {\r\n            background-image: -webkit-gradient(\r\n              linear,\r\n              left bottom,\r\n              left top,\r\n              color-stop(0.44, rgb(122, 153, 217)),\r\n              color-stop(0.72, rgb(73, 125, 189)),\r\n              color-stop(0.86, rgb(28, 58, 148))\r\n            );\r\n          }\r\n        \r\n          p{\r\n            color: #232323;\r\n            font-size: 14px;\r\n            line-height: 1.8em;\r\n            opacity: 0;\r\n            \r\n            pointer-events: none;\r\n            transition: all 0.45s ease;\r\n            &:first-of-type {\r\n              margin-top: 1.25rem;\r\n              &:before {\r\n                content: \"\";\r\n                position: absolute;\r\n                height: 5px;\r\n                background: ${({ theme }) => theme.blue};\r\n                width: 35px;\r\n                top: -0.75rem;\r\n                border-radius: 3px;\r\n              }\r\n            }\r\n          }\r\n        \r\n        }\r\n     \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .thumbnail {\r\n        background-color: #000;\r\n    \r\n        img {\r\n          -webkit-transform: scale(1.1);\r\n          -moz-transform: scale(1.1);\r\n          transform: scale(1.1);\r\n          opacity: 0.8;\r\n          transition: all 0.8s ease-in;\r\n        }\r\n        transition: all 0.8s ease-in-out;\r\n\r\n      }\r\n      .post-content{\r\n        .description{\r\n          height: 175px;\r\n          transition: height 0.6s ease-in-out;\r\n          overflow: ${props => props.oflow && \"auto\"};\r\n          p{\r\n            cursor: default;\r\n            pointer-events: auto;\r\n            -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n            opacity: 0.9;\r\n            -webkit-transition-delay: 0.6s;\r\n            transition-delay: 0.6s;\r\n          }\r\n         \r\n        }\r\n        \r\n      }\r\n     \r\n\r\n    }\r\n  \r\n`;\r\n\r\nexport const JCard3 = styled.div`\r\n  .description {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #fff;\r\n    z-index: 1;\r\n\r\n    h1 {\r\n      line-height: 1;\r\n      margin: 0;\r\n      font-size: 1.7rem;\r\n    }\r\n    h4 {\r\n      font-size: 1rem;\r\n      font-weight: 300;\r\n      text-transform: capitalize;\r\n      color: #a2a2a2;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      margin: 1rem 0 0;\r\n      font-size: 16px;\r\n      &:first-of-type {\r\n        margin-top: 1.25rem;\r\n        &:before {\r\n          content: \"\";\r\n          position: absolute;\r\n          height: 5px;\r\n          background: ${({ theme }) => theme.blue};\r\n          width: 35px;\r\n          top: -0.75rem;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JCard4 = styled.figure`\r\n  position: relative;\r\n  margin: 10px;\r\n  min-width: 230px;\r\n  max-width: 315px;\r\n  width: 100%;\r\n  height: ${props => props.height && props.height};\r\n  color: #000000;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n  font-size: 14px;\r\n\r\n  & * {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .profile-image {\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 300px;\r\n    z-index: 1;\r\n    position: relative;\r\n    margin: ${props => props.margin && props.margin};\r\n    top: ${props => props.top && props.top};\r\n    right: ${props => props.right && props.right};\r\n    bottom: ${props => props.bottom && props.bottom};\r\n    left: ${props => props.left && props.left};\r\n    padding: 10px;\r\n    border: 2px solid #6dd5ed;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      vertical-align: top;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    .profile-image {\r\n      border-color: #2193b0;\r\n    }\r\n    figcaption {\r\n      box-shadow: ${props =>\r\n        props.bs\r\n          ? props.bs\r\n          : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n            \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n            \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n            \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n            \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n    }\r\n  }\r\n\r\n  figcaption {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    padding: 125px 25px 25px;\r\n    margin-top: -100px;\r\n    display: inline-block;\r\n    box-shadow: ${props =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.11)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.11)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.11)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.11)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.11)\")};\r\n\r\n    h3,\r\n    h4,\r\n    p {\r\n      margin: 0 0 5px;\r\n    }\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    h4 {\r\n      color: #8c8c8c;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n      letter-spacing: 1px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .icons {\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .linkToPage {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const DTestimonialCard = styled.div`\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  outline: 0;\r\n  border: 0;\r\n\r\n  figure {\r\n    position: relative;\r\n    float: left;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    min-width: 230px;\r\n    width: 100%;\r\n    color: #000000;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    background: #2193b0;\r\n    background: -webkit-linear-gradient(\r\n      to bottom,\r\n      rgba(248, 181, 0, 0.4),\r\n      #2193b0\r\n    );\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(248, 181, 0, 0.2),\r\n      rgba(33, 147, 176, 0.7)\r\n    );\r\n    padding: 15px;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n\r\n    & *,\r\n    & *::before,\r\n    & *::after {\r\n      -webkit-box-sizing: border-box;\r\n      box-sizing: border-box;\r\n      -webkit-transition: all 0.35s ease;\r\n      transition: all 0.35s ease;\r\n    }\r\n\r\n    img {\r\n      width: 100px;\r\n      border-radius: 50%;\r\n      display: inline-block;\r\n      -webkit-box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.4);\r\n      margin-bottom: 10px;\r\n      border: solid 5px #fe8c00;\r\n      border-color: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    figcaption {\r\n      position: relative;\r\n      width: 100%;\r\n\r\n      h5,\r\n      h4,\r\n      blockquote {\r\n        margin: 0;\r\n      }\r\n\r\n      h5,\r\n      h4 {\r\n        font-weight: 300;\r\n      }\r\n\r\n      h4 {\r\n        color: #ffffff;\r\n      }\r\n\r\n      h5 {\r\n        color: ${props =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n      }\r\n\r\n      blockquote {\r\n        font-size: 1em;\r\n        padding: 45px 20px 40px 50px;\r\n        margin-top: 30px;\r\n        background: #ffffff;\r\n        border-radius: 5px;\r\n        -webkit-box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        box-shadow: inset -1.4px -1.4px 2px rgba(0, 0, 0, 0.3);\r\n        text-align: left;\r\n        position: relative;\r\n        color: ${props =>\r\n          props.inverted\r\n            ? ({ theme }) => theme.light\r\n            : ({ theme }) => theme.dark};\r\n\r\n        &::before,\r\n        &::after {\r\n          font-family: \"FontAwesome\";\r\n          position: absolute;\r\n          font-size: 22px;\r\n          opacity: 0.25;\r\n          color: ${props =>\r\n            props.inverted\r\n              ? ({ theme }) => theme.light\r\n              : ({ theme }) => theme.dark};\r\n        }\r\n\r\n        &::before {\r\n          content: \"\\f10d\";\r\n          top: 20px;\r\n          left: 20px;\r\n        }\r\n        &::after {\r\n          content: \"\\f10e\";\r\n          bottom: 10px;\r\n          right: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ${props =>\r\n    props.basic &&\r\n    \"figure{background: transparent; figcaption{blockquote{box-shadow: none; background: transparent}}}\"}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DFancyText = styled.h1`\r\n  font-size: ${props => (props.size ? props.size : \"22px\")};\r\n  letter-spacing: 2px;\r\n  margin: 30px auto;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  display: table;\r\n  white-space: nowrap;\r\n\r\n  &:before,\r\n  &:after {\r\n    border-top-width: 2px;\r\n    border-top-style: solid;\r\n    border-top-color: ${props =>\r\n      props.color\r\n        ? props.color\r\n        : props.alt\r\n        ? ({ theme }) => theme.light\r\n        : ({ theme }) => theme.dark};\r\n    content: \"\";\r\n    display: table-cell;\r\n    position: relative;\r\n    top: 0.5em;\r\n    width: 100px;\r\n    min-width: 50px;\r\n  }\r\n  &:before {\r\n    right: 3%;\r\n  }\r\n  &:after {\r\n    left: 3%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DFancyText } from \"./styled/text\";\r\n\r\nconst FancyText = props => {\r\n  return <DFancyText {...props}>{props.children}</DFancyText>;\r\n};\r\n\r\nexport default FancyText;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${props => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${props => (props.size ? props.size : \"36px\")};\r\n  width: ${props =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${props => (props.pad ? props.pad : \"6px 16px\")};\r\n  line-height: 1.42857143;\r\n  margin: 1.5%;\r\n  text-align: center;\r\n  text-transform: ${props => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border-radius: ${props =>\r\n    props.radius ? props.radius : props.circle ? \"50%\" : \"5px\"};\r\n  border-width: ${props => (props.basic ? \"1px\" : \"0\")};\r\n  border-style: ${props => props.basic && \"solid\"};\r\n  border-color: ${props =>\r\n    props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.default\r\n      ? ({ theme }) => theme.dark\r\n      : ({ theme }) => theme.blue};\r\n      \r\n  color: ${props => (props.color ? props.color : ({ theme }) => theme.light)};\r\n\r\n  background: ${props =>\r\n    props.basic\r\n      ? \"transparent\"\r\n      : props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : ({ theme }) => theme.blue};\r\n\r\n  ${props =>\r\n    props.disabled &&\r\n    \"background: #E9E4F0; color: #D3CCE3; &:hover:{opacity: 1}\"}\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n   opacity: 0.8;\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonCancel = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.red};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #f12711\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.red)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n`;\r\n\r\nexport const DButtonConfirm = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.green};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #0f9b0f\"\r\n      : props.basic\r\n      ? \"2px solid #0f9b0f\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n`;\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${props => (props.size ? props.size : \"12px\")};\r\n  color: ${props => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${props => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${props => props.weight && props.weight};\r\n  padding: ${props => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${props => (props.m ? props.m : \"1%\")};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  text-transform: ${props => props.tt && props.tt};\r\n  width: ${props => (props.w ? props.w : \"auto\")};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${props =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${props => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hover && \"0.8\"};\r\n    cursor: ${props => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${props => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${props => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${props =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${props =>\r\n        props.activeBg ? props.activeBg : ({ theme }) => theme.blue};\r\n      color: ${props =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${props => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${props => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${props =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${props =>\r\n    props.status === \"error\"\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.status === \"success\"\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.status === \"warning\"\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(69, 170, 242,1.0)\"};\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .close {\r\n    height: 100%;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.p`\r\n  text-align: right;\r\n  cursor: pointer !important;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.secondary};\r\n    display: inline-block;\r\n    position: relative;\r\n    font-weight: 700;\r\n    &:after {\r\n      content: \"\\f061\";\r\n      font-family: FontAwesome;\r\n      ${props =>\r\n        props.hover === 0\r\n          ? \"margin-left: 5px;opacity: 1;\"\r\n          : \"margin-left: -10px; opacity: 0;\"};\r\n      vertical-align: middle;\r\n      transition: margin 0.3s, opacity 0.3s;\r\n    }\r\n    a {\r\n      color: ${({ theme }) => theme.secondary};\r\n    }\r\n    &:hover {\r\n      &:after {\r\n        margin-left: 5px;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollUp = styled(Icon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: block;\r\n`;\r\n\r\nexport const DIconCustom = styled(Icon)`\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  font-size: ${props => props.customSize && props.customSize} !important;\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"../../styled/utils\";\r\n\r\nconst ReadMore = props => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport { JCard } from \"../../styled/card\";\r\nimport FancyText from \"../../FancyText\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\n\r\nconst CategorySection = ({ setRef }) => {\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <DSection\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      width=\"90%\"\r\n      margin=\"48px auto\"\r\n      ref={setRef}\r\n    >\r\n      <FancyText size=\"38px\">What We Offer</FancyText>\r\n      <Content height=\"100%\" width=\"100%\">\r\n        <DGrid four margin=\"0 0 40px 0\" gap=\"20px\">\r\n          {loading ? (\r\n            <>\r\n              <Skeleton width={300} height={300} />\r\n              <Skeleton width={300} height={300} />\r\n              <Skeleton width={300} height={300} />\r\n              <Skeleton width={300} height={300} />\r\n            </>\r\n          ) : (\r\n            isCategories.map(category => (\r\n              <JCard titleSize=\"22px\">\r\n                <img\r\n                  src={\r\n                    category.photo !== null\r\n                      ? `/images/service/${category.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                  }\r\n                  alt={category.name}\r\n                />\r\n                <figcaption>\r\n                  <h3>{parser(category.name)}</h3>\r\n                  <div className=\"description\">\r\n                    <p>\r\n                      {category.description.length > 50\r\n                        ? parser(category.description.substr(0, 50) + \"...\")\r\n                        : parser(category.description.substr(0, 50))}\r\n                    </p>\r\n                    <ReadMore hover={0}>View Services</ReadMore>\r\n                  </div>\r\n                </figcaption>\r\n                <Link to={`/zessence/service/${category._id}`}></Link>\r\n              </JCard>\r\n            ))\r\n          )}\r\n        </DGrid>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategorySection;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int) {\r\n    aestheticiansReceps(limit: $limit) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      dateOfBirth\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DSection } from \"../../styled/containers\";\r\nimport { JCard4 } from \"../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\nimport FancyText from \"../../FancyText\";\r\n\r\nconst TeamSection = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <FancyText size=\"40px\">Our Team</FancyText>\r\n      <DGrid four margin=\"0 auto\" gap=\"25px\" style={{ marginBottom: \"24px\" }}>\r\n        {loading_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          employeesAR &&\r\n          employeesAR.map(employee => (\r\n            <JCard4 data-emp={employee._id}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n              <figcaption>\r\n                <h3>\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </h3>\r\n                <h4>{employee.role}</h4>\r\n                <p>\r\n                  {employee.bio.length > 50\r\n                    ? parser(employee.bio.substr(0, 50) + \"...\")\r\n                    : parser(employee.bio.substr(0, 50))}\r\n                </p>\r\n                <ReadMore hover={0}>Read More</ReadMore>\r\n              </figcaption>\r\n              <Link to=\"/zessence/about\" className=\"linkToPage\" />\r\n            </JCard4>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n      <Link to=\"/zessence/about\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"centet\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2\r\n  }\r\n};\r\n\r\nexport default TeamSection;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Section2Styled } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\nimport ReadMore from \"../utils/ReadMore\";\r\n\r\nconst AboutSection = ({ nextSection }) => {\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled ref={el => (section2 = el)}>\r\n      <div className=\"sec2-container\" ref={nextSection}>\r\n        <div className=\"sec2-inner\">\r\n          <div className=\"sec2-content\">\r\n            <div className=\"sec2-content_inner\">\r\n              <h1>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Z Essence</div>\r\n                </div>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Facial & Spa</div>\r\n                </div>\r\n              </h1>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Totam\r\n                labore dolore ad nemo, veritatis iure mollitia impedit. Quod, id\r\n                tempore? Lorem ipsum dolor sit amet, consectetur adipisicing\r\n                elit. Placeat dolorum repudiandae tempora, sunt nostrum\r\n                explicabo. Doloribus, quis est, corporis deserunt excepturi\r\n                praesentium fugit eius minus laudantium nesciunt modi temporibus\r\n                vitae.\r\n              </p>\r\n              <ReadMore>\r\n                <Link to=\"/zessence/appointment\">Learn More</Link>\r\n              </ReadMore>\r\n            </div>\r\n          </div>\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={el => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default AboutSection;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst PromoSection1 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default PromoSection1;\r\n","import React from \"react\";\r\nimport { DSection, Content, Overlay } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\nimport FancyText from \"../../FancyText\";\r\n\r\nconst TestimonialSection = () => {\r\n  const settings = {\r\n    dots: true,\r\n    fade: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    speed: 1000,\r\n    autoplaySpeed: 4000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      width=\"100%\"\r\n      mcenter\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      fixed\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content width=\"80%\" height=\"auto\" margin=\"auto\" pad=\"50px 0\">\r\n        <Slider {...settings}>\r\n          <DTestimonialCard basic inverted>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard basic inverted>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample5.jpg\"\r\n                alt=\"profile-sample5\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Gordon Norman</h4>\r\n                <h5>Accountant</h5>\r\n                <blockquote>\r\n                  Wormwood : Calvin, how about you? Calvin : Hard to say ma'am.\r\n                  I think my cerebellum has just fused.{\" \"}\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard basic inverted>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample6.jpg\"\r\n                alt=\"profile-sample6\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Sue Shei</h4>\r\n                <h5>Public Relations</h5>\r\n                <blockquote>\r\n                  The strength to change what I can, the inability to accept\r\n                  what I can't and the incapacity to tell the difference.\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard basic inverted>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard basic inverted>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample5.jpg\"\r\n                alt=\"profile-sample5\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Gordon Norman</h4>\r\n                <h5>Accountant</h5>\r\n                <blockquote>\r\n                  Wormwood : Calvin, how about you? Calvin : Hard to say ma'am.\r\n                  I think my cerebellum has just fused.{\" \"}\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard basic inverted>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample6.jpg\"\r\n                alt=\"profile-sample6\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Sue Shei</h4>\r\n                <h5>Public Relations</h5>\r\n                <blockquote>\r\n                  The strength to change what I can, the inability to accept\r\n                  what I can't and the incapacity to tell the difference.\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard basic inverted>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n        </Slider>\r\n      </Content>\r\n      <Overlay\r\n        bg={\"rgba(0,0,0,0.5)\"}\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        pad=\"20px\"\r\n      >\r\n        <FancyText size=\"40px\" alt>\r\n          What Our Client Say\r\n        </FancyText>\r\n      </Overlay>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default TestimonialSection;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { ScrollUp, DButton } from \"../../styled/utils\";\r\nimport \"./scroll.css\";\r\n\r\nclass ScrollButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(\r\n      0,\r\n      window.pageYOffset - (this.props.scrollPx ? this.props.scrollPx : \"100\")\r\n    );\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delay ? this.props.delay : \"16.66\"\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        title=\"Back to top\"\r\n        className=\"scroll\"\r\n        onClick={() => {\r\n          this.scrollToTop();\r\n        }}\r\n      >\r\n        <ScrollUp name=\"chevron up\" size=\"large\" className=\"arrow-up\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ScrollButton;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategorySection from \"../../components/main/home/CategorySection\";\r\nimport TeamSection from \"../../components/main/home/TeamSection\";\r\nimport AboutSection from \"../../components/main/home/AboutSection\";\r\nimport PromoSection1 from \"../../components/main/home/PromoSection1\";\r\nimport TestimonialSection from \"../../components/main/home/TestimonialSection\";\r\nimport { DContainer } from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Home = () => {\r\n  const nextSection = useRef();\r\n  const card1 = \"/images/card1.jpg\";\r\n  const scrolling = useScroll(300);\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton />}\r\n      <Showcase nextSection={nextSection} />\r\n\r\n      <AboutSection nextSection={nextSection} />\r\n\r\n      <CategorySection cards={card1} />\r\n      <PromoSection1 />\r\n      <TeamSection cards={card1} />\r\n      <TestimonialSection />\r\n      <PromoSection1 />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { DGrid, DSection, Content, DImage } from \"../../styled/containers\";\r\n\r\nconst Story = ({ content }) => {\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        margin=\"24px auto 0 auto\"\r\n        ref={content}\r\n        id=\"story\"\r\n      >\r\n        <DGrid two>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"24px\"\r\n          >\r\n            <h3>Our Mission</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero\r\n              quia at alias reiciendis voluptatum illo quidem natus quod porro\r\n              voluptatem? Obcaecati totam libero rerum nihil nemo, iusto aliquid\r\n              repellendus repudiandae?\r\n            </p>\r\n            <h3>Our Vision</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero\r\n              quia at alias reiciendis voluptatum illo quidem natus quod porro\r\n              voluptatem? Obcaecati totam libero rerum nihil nemo, iusto aliquid\r\n              repellendus repudiandae?\r\n            </p>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DGrid gap=\"20px\">\r\n              <DImage height=\"100%\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </DImage>\r\n            </DGrid>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" mcenter>\r\n        <DGrid two>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DGrid gap=\"20px\">\r\n              <DImage height=\"250px\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </DImage>\r\n              <DImage height=\"250px\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </DImage>\r\n            </DGrid>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"20px\"\r\n            style={{ maxHeight: \"90vh\" }}\r\n          >\r\n            <h3>Our Story</h3>\r\n            <p\r\n              style={{\r\n                fontSize: \"15px\",\r\n                letterSpacing: \"2px\",\r\n                lineHeight: 1.8,\r\n                textAlign: \"justify\",\r\n                overflowWrap: \"break-word\",\r\n                overflow: \"auto\",\r\n                padding: \"10px\"\r\n              }}\r\n            >\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero\r\n              quia at alias reiciendis voluptatum illo quidem natus quod porro\r\n              voluptatem? Obcaecati totam libero rerum nihil nemo, iusto aliquid\r\n              repellendus repudiandae? Lorem ipsum dolor sit amet consectetur\r\n              adipisicing elit. Minima officiis nobis, nam voluptatem saepe\r\n              quidem aspernatur harum qui, esse quasi delectus, ipsa culpa\r\n              velit. Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n            </p>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../styled/card\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst TeamDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModal = event => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JCard4 data-emp={employee._id} onClick={handleModal}>\r\n        <div className=\"profile-image\">\r\n          <img\r\n            src={\r\n              employee.photo\r\n                ? `/images/employees/${employee.photo}`\r\n                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n            }\r\n            alt={employee.photo}\r\n          />\r\n        </div>\r\n        <figcaption>\r\n          <h3>\r\n            {employee.title} {employee.firstName} {employee.lastName}\r\n          </h3>\r\n          <h4>{employee.role}</h4>\r\n          <p>\r\n            {employee.bio.length > 50\r\n              ? parser(employee.bio.substr(0, 50) + \"...\")\r\n              : parser(employee.bio.substr(0, 50))}\r\n          </p>\r\n          <ReadMore hover={0}>Read More</ReadMore>\r\n          <div className=\"icons\">\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-reddit\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-vimeo\"></i>\r\n            </a>\r\n          </div>\r\n        </figcaption>\r\n      </JCard4>\r\n      <Modal size=\"small\" open={open} onClose={() => setOpen(false)} closeIcon>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4 top={\"-60px\"}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{employee.firstName}</h1>\r\n                <h4>{employee.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {parser(employee.bio)}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nconst Team = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const { data: dataEmployees, loading: loadingEmployees } = useQuery(\r\n    FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmployees) {\r\n      setEmployees(dataEmployees.aestheticiansReceps);\r\n    }\r\n  }, [dataEmployees]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        fixed\r\n        id=\"team\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n        >\r\n          <h3>Our TEAM</h3>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        pad=\"10px 0\"\r\n        mcenter\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DGrid three gap=\"20px\">\r\n            {loadingEmployees ? (\r\n              <>\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n              </>\r\n            ) : (\r\n              employees &&\r\n              employees.map(emp => <TeamDetails key={emp._id} employee={emp} />)\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","export const scrollView = ref => {\r\n  if (ref.current)\r\n    ref.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\"\r\n    });\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport Story from \"../../components/main/about/Story\";\r\nimport Team from \"../../components/main/about/Team\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst About = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"about\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>About Us</h1>\r\n          <h3>The Concept of Beauty</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Story content={content} />\r\n      <Team />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/login\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/home\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n    \r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted(result) {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/appointment\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        pad=\"0\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n        {data_employee && data_service ? (\r\n          loading_employee || loading_appointments || loading_service ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <DGrid two gap=\"20px\">\r\n              {!times ? (\r\n                <h2>Loading...</h2>\r\n              ) : (\r\n                times.map(time => (\r\n                  <div className=\"pretty p-default p-curve\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"time\"\r\n                      key={time}\r\n                      value={time}\r\n                      onChange={handleTimeChanged}\r\n                    />\r\n                    <div className=\"state p-info-o\">\r\n                      <label style={styles.label}>{time}</label>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </DGrid>\r\n          )\r\n        ) : (\r\n          \"Select Available Time\"\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data_categories) {\r\n      setCategories(data_categories.categories);\r\n    }\r\n  }, [data_categories]);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_serviceEmp) {\r\n      setEmployees(data_serviceEmp.service.employees);\r\n    }\r\n  }, [data_serviceEmp]);\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {categories &&\r\n                categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {services &&\r\n                services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {employees &&\r\n                employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n  height: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    height: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    margin: ${props => (props.small ? \"3px\" : props.medium ? \"6px\" : \"8px\")};\r\n    border: ${props =>\r\n      props.small\r\n        ? \"3px solid #fff\"\r\n        : props.medium\r\n        ? \"6px solid #fff\"\r\n        : \"8px  solid #fff\"};\r\n\r\n    border-radius: 50%;\r\n    animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: ${props =>\r\n      props.inverted\r\n        ? \"#fff transparent transparent transparent\"\r\n        : \"#fe8c00 transparent transparent transparent\"};\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = ({ small, large, medium, inverted }) => {\r\n  return (\r\n    <SpinnerRing\r\n      small={small}\r\n      large={large}\r\n      medium={medium}\r\n      inverted={inverted}\r\n    >\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const [service, setService] = useState({});\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setService(data_service.service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/zessence/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {loading_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={service.name}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\n// import { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n            <DSection\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              background={\r\n                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              height=\"100vh\"\r\n            >\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                jusitfy=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Advertisement</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DSection>\r\n        \r\n          <DGrid>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    basic={\r\n                      (values.category === \"\" ||\r\n                        serviceValue === \"\" ||\r\n                        employeeVal === \"\" ||\r\n                        selectedTime === \"\") &&\r\n                      true\r\n                    }\r\n                    disabled={\r\n                      values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst photos = [\r\n  {\r\n    src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\r\n    width: 1,\r\n    height: 1,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  }\r\n];\r\n\r\nconst Gallery = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"gallery\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>Gallery</h1>\r\n          <h3>Love Your Skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        width=\"80%\"\r\n        mcenter\r\n        pad=\"20px 0\"\r\n        ref={content}\r\n      >\r\n        <MyGallery photos={photos} onClick={openLightbox} />\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel\r\n                currentIndex={currentImage}\r\n                views={photos.map(x => ({\r\n                  ...x,\r\n                  srcset: x.srcSet,\r\n                  caption: x.title\r\n                }))}\r\n              />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { DSection, Content, Overlay } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport { DTestimonialCard } from \"../../styled/card\";\r\n\r\nconst TestimonialCard = ({ content }) => {\r\n  const settings = {\r\n    dots: true,\r\n\r\n    infinite: true,\r\n    speed: 500,\r\n    rows: 2,\r\n    slidesPerRow: 3,\r\n    arrows: false\r\n  };\r\n  return (\r\n    <DSection height=\"100%\" width=\"100%\" mcenter ref={content}>\r\n      <Content width=\"80%\" height=\"100%\" margin=\"0 auto\" pad=\"50px 0\">\r\n        <Slider {...settings}>\r\n          <DTestimonialCard>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample5.jpg\"\r\n                alt=\"profile-sample5\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Gordon Norman</h4>\r\n                <h5>Accountant</h5>\r\n                <blockquote>\r\n                  Wormwood : Calvin, how about you? Calvin : Hard to say ma'am.\r\n                  I think my cerebellum has just fused.{\" \"}\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample6.jpg\"\r\n                alt=\"profile-sample6\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Sue Shei</h4>\r\n                <h5>Public Relations</h5>\r\n                <blockquote>\r\n                  The strength to change what I can, the inability to accept\r\n                  what I can't and the incapacity to tell the difference.\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample5.jpg\"\r\n                alt=\"profile-sample5\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Gordon Norman</h4>\r\n                <h5>Accountant</h5>\r\n                <blockquote>\r\n                  Wormwood : Calvin, how about you? Calvin : Hard to say ma'am.\r\n                  I think my cerebellum has just fused.{\" \"}\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample6.jpg\"\r\n                alt=\"profile-sample6\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Sue Shei</h4>\r\n                <h5>Public Relations</h5>\r\n                <blockquote>\r\n                  The strength to change what I can, the inability to accept\r\n                  what I can't and the incapacity to tell the difference.\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n          <DTestimonialCard>\r\n            <figure className=\"testimonial\">\r\n              <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              />\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </DTestimonialCard>\r\n        </Slider>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default TestimonialCard;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport TestimonialCard from \"../../components/main/testimonial/TestimonialCard\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\n\r\nconst Testimonials = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(content);\r\n  };\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"tstmnl\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\", fontWeight: 700 }}>\r\n            What Our Client Says\r\n          </h1>\r\n          {/* <h3>We continously improve our service</h3> */}\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <TestimonialCard content={content} />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport MouseScroll from \"../../components/MouseScroll\";\r\nimport { scrollView } from \"../../util/useScrollDown\";\r\n\r\nconst Services = () => {\r\n  const sectionDown = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  const scrollDown = () => {\r\n    scrollView(sectionDown);\r\n  };\r\n\r\n  return (\r\n    <DContainer id=\"services\">\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\" }}>Our Services</h1>\r\n          <h3>It's time to take care of your skin</h3>\r\n          <MouseScroll onClick={scrollDown} />\r\n        </Content>\r\n        <Overlay\r\n          bg={\"linear-gradient(to top, rgba(0,0,0,0.3), rgba(255,255,255,0.1))\"}\r\n        />\r\n      </DSection>\r\n      <DSection\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n        mcenter\r\n        pad=\"24px\"\r\n        height=\"100%\"\r\n        ref={sectionDown}\r\n      >\r\n        <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n          <DGrid three gap=\"24px\" med7={\"1fr\"}>\r\n            {loading ? (\r\n              <>\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n              </>\r\n            ) : (\r\n              isCategories.map(category => (\r\n                <JCard>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <div className=\"description\">\r\n                      <p>\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n                      </p>\r\n                      <ReadMore hover={0}>View Services</ReadMore>\r\n                    </div>\r\n                  </figcaption>\r\n                  <Link to={`/zessence/service/${category._id}`}></Link>\r\n                </JCard>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CATEGORY_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { JCard2 } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ServiceDetails from \"../../components/main/services/ServiceDetails\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Service = props => {\r\n  const categoryId = props.match.params._id;\r\n  const history = useHistory();\r\n  const [isReadMore, setIsReadMore] = useState(false);\r\n\r\n  const [isServices, setIsServices] = useState([]);\r\n\r\n  const { data, loading } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsServices(data.category.services);\r\n    }\r\n  }, [data]);\r\n\r\n  const backHist = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"50vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          fluid\r\n          height=\"100%\"\r\n          className=\"dark\"\r\n        >\r\n          {!data ? (\r\n            <Spinner inverted />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ fontSize: \"22px\" }}>{data.category.name}</h1>\r\n              <p style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                {parser(data.category.description)}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Content flex width=\"90%\" height=\"50px\" margin=\"20px auto\">\r\n        <DButton onClick={backHist}>\r\n          <Icon name=\"arrow left\" /> <span>Back to Services</span>\r\n        </DButton>\r\n      </Content>\r\n      {loading ? (\r\n        <DGrid three gap=\"15px\">\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n        </DGrid>\r\n      ) : (\r\n        <DSection\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          mcenter\r\n          pad=\"24px\"\r\n          height=\"100%\"\r\n        >\r\n          <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n            <DGrid three gap=\"15px\">\r\n              {isServices &&\r\n                isServices.map(service => (\r\n                  <JCard2\r\n                    key={service._id}\r\n                    oflow={isReadMore ? true : false}\r\n                    onPointerLeave={() => setIsReadMore(false)}\r\n                  >\r\n                    <div className=\"thumbnail\">\r\n                      <img\r\n                        src={\r\n                          service.photo !== null\r\n                            ? `/images/service/${service.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/169963/photo-1429043794791-eb8f26f44081.jpeg\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"post-content\">\r\n                      <div className=\"category\">{service.name}</div>\r\n                      <h4 className=\"title\">{service.duration} mins</h4>\r\n                      <h4 className=\"title\">Php {service.price}</h4>\r\n                      <div className=\"description\">\r\n                        {isReadMore ? (\r\n                          <p>{parser(service.description)}</p>\r\n                        ) : (\r\n                          <p>\r\n                            {service.description.length > 100\r\n                              ? parser(\r\n                                  service.description.substr(0, 100) + \"...\"\r\n                                )\r\n                              : parser(service.description.substr(0, 100))}\r\n                          </p>\r\n                        )}\r\n                        {service.description.length <= 100 ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <ReadMore onClick={() => setIsReadMore(!isReadMore)}>\r\n                            {isReadMore ? \"Read Less\" : \"Read More\"}\r\n                          </ReadMore>\r\n                        )}\r\n\r\n                        {/* <ServiceDetails service={service} /> */}\r\n                      </div>\r\n                    </div>\r\n                  </JCard2>\r\n                ))}\r\n            </DGrid>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const { userId } = useContext(AuthContext);\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence\">\r\n            Explore\r\n          </DButton>\r\n          <DButton\r\n            as={Link}\r\n            to={userId ? `/zessence/account/${userId}` : `/zessence/login`}\r\n          >\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid>\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hoverColorText}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  // const [addInfo, setAddInfo] = useState(\"\");\r\n  // const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  // const handleMessage = e => {\r\n  //   setAddInfo(e.target.value);\r\n  // };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n    default:\r\n      return <h1>Something went wrong</h1>;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Redirect to=\"/zessence\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zessence/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n \r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {dataLoading ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input value={myAppoint._id} readOnly style={styles.input} />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={myAppoint.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={myAppoint.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${myAppoint.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={myAppoint.status}\r\n                  readOnly\r\n                  style={\r\n                    myAppoint.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : myAppoint.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : myAppoint.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {myAppoint.status === \"CANCELLED\" || myAppoint.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Testimonials from \"./main/Testimonials\";\r\nimport Services from \"./main/Services\";\r\nimport Service from \"./main/Service\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/`} component={Home} exact />\r\n        <Route path={`${match.path}/about`} component={About} exact />\r\n        <Route path={`${match.path}/contact`} component={Contact} exact />\r\n        <Route path={`${match.path}/gallery`} component={Gallery} exact />\r\n        <Route\r\n          path={`${match.path}/testimonials`}\r\n          component={Testimonials}\r\n          exact\r\n        />\r\n        <Route\r\n          path={`${match.path}/services&rates`}\r\n          component={Services}\r\n          exact\r\n        />\r\n        <Route path={`${match.path}/service/:_id`} component={Service} exact />\r\n        <Route\r\n          path={`${match.path}/verified/:emailToken`}\r\n          component={ThankYou}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`${match.path}/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`${match.path}/login`} component={Signin} exact />\r\n\r\n        <UserPrivateRoute\r\n          path={`${match.path}/account/:_id`}\r\n          component={Account}\r\n          exact\r\n        />\r\n\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/appointment`}\r\n          component={Appointment}\r\n          exact\r\n        />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst UpcommingAppointments = ({ appointments }) => {\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map(appointment => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n  position: relative;\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  position: relative;\r\n  width: 100%;\r\n  background: rgba(242, 242, 242, 0.2);\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, DImage, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Image, Icon } from \"semantic-ui-react\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Dropdown\r\n        trigger={\r\n          <DImage circle height=\"50px\" width=\"50px\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"avatar\"\r\n            />\r\n            <Overlay opac={0} hovOpac={1} />\r\n          </DImage>\r\n        }\r\n        pointing=\"top right\"\r\n        icon={null}\r\n      >\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to=\"/zeadmin/paccount\">\r\n            <Icon name=\"user\" />\r\n            Account\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={handleLogout}>\r\n            <Icon name=\"sign out\" />\r\n            Sign out\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      {/* <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton> */}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion\r\n        title={\"Accounts\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            About Us\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/testimonials\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map(user => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"#6dd5ed\"\r\n                color=\"#fff\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <Spinner small />\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"green\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"firebrick\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.bluer}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.secondary}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\n// import { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Cards />\r\n      <DSection height=\"100%\" margin=\"20px 0 20px 0\">\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            {loading ? (\r\n              <Overlay flex justify=\"center\" align=\"center\">\r\n                <h2>Loading...</h2>\r\n              </Overlay>\r\n            ) : (\r\n              appointments && (\r\n                <UpcommingAppointments\r\n                  appointments={appointments}\r\n                  loading={loading}\r\n                />\r\n              )\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  // const [currentAppointments, setCurrentAppointments] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (currentAppointmentData) {\r\n  //     setCurrentAppointments(currentAppointmentData.currentAppointments);\r\n  //   }\r\n  // }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!currentAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={currentAppointmentData.currentAppointments.map(\r\n            currAppoint => currAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Apointment List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\n// import HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButtonCancel>\r\n        <DButtonConfirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  DButtonConfirm\r\n} from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n        height=\"100vh\"\r\n      >\r\n        <h2 style={{ color: \"#111\" }}>\r\n          {data && (\r\n            <span style={{ color: \"#2980B9\", fontWeight: 700 }}>\r\n              {`${data.appointment.user.firstName} ${data.appointment.user.lastName}'s`}\r\n            </span>\r\n          )}{\" \"}\r\n          Appointment Details\r\n        </h2>\r\n\r\n        {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\"\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\"\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\"\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\"\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ||\r\n              data.appointment.status === \"RESCHEDULED\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButtonConfirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButtonConfirm>\r\n                  <ReschedModal\r\n                    isAdmin={true}\r\n                    status={\"VERIFIED\"}\r\n                    setOpen={setOpen}\r\n                    appointmentId={appointmentId}\r\n                  />\r\n                  <DButtonCancel onClick={() => setOpenCancel(true)}>\r\n                    Cancel\r\n                  </DButtonCancel>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )}\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton,\r\n  DButtonConfirm,\r\n  DButtonCancel\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButtonConfirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButtonConfirm>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButtonCancel>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategory) {\r\n      setCategories(dataCategory.categories);\r\n    }\r\n  }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Exit</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n            <DButtonConfirm type=\"submit\">Yes</DButtonConfirm>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection margin=\"20px 0\">\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <DGrid two gap=\"15px\" margin=\"40px 0\">\r\n          {loading ? (\r\n            <>\r\n              <Skeleton width={300} height={300} />\r\n              <Skeleton width={300} height={300} />\r\n            </>\r\n          ) : (\r\n            categories.map(category => (\r\n              <JCard>\r\n                <img\r\n                  src={\r\n                    category.photo !== null\r\n                      ? `/images/service/${category.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                  }\r\n                  alt={category.name}\r\n                />\r\n                <figcaption>\r\n                  <h3>{parser(category.name)}</h3>\r\n                  <p>{parser(category.description)}</p>\r\n                </figcaption>\r\n                <Link to={`/zeadmin/category/${category._id}`} />\r\n              </JCard>\r\n            ))\r\n          )}\r\n        </DGrid>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButtonCancel width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButtonCancel>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      format: row => {\r\n        const length = 20;\r\n        const descript = row.description;\r\n\r\n        const trimString =\r\n          descript.length > length\r\n            ? descript.substring(0, length) + \"...\"\r\n            : descript.substring(0, length);\r\n\r\n        return <p style={{ fontWeight: 500 }}>{parse(trimString)}</p>;\r\n      }\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = props => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Skeleton width=\"100%\" />\r\n        </>\r\n      ) : (\r\n        <DSection margin=\"20px 0\">\r\n          <h2>{data.category.name}</h2>\r\n          <DGrid>\r\n            <DSection width=\"100%\" height=\"100%\">\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\"\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/category/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </DSection>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport {\r\n  Toasted,\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel\r\n} from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              // onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButtonConfirm onClick={handleSubmit}>\r\n          {loading ? \"Loading...\" : \"Save\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(true)}>Delete</DButtonCancel>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql/service\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <>\r\n                    <Content height=\"300px\"></Content>\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      className=\"dark\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  // const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n  //   variables: {\r\n  //     inqId: inqId\r\n  //   }\r\n  // });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n  };\r\n\r\n  const handleReplyMsg = e => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingInq ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{inq.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {inq.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {inq.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={inq.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={inq.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n// const READ_INQ = gql`\r\n//   mutation readInquiry($inqId: ID) {\r\n//     readInquiry(_id: $inqId)\r\n//   }\r\n// `;\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const handleRow = e => {\r\n    setInq(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Inquiry ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: row => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      }\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      {loading_inquiries ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map(inq => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n      {inq && <ReplyModal inqId={inq} open={open} setOpen={setOpen} />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"22px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    customStyles={customStyles}\r\n    rounded\r\n  >\r\n    Inquiry List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  id,\r\n  photo,\r\n  fetchEmployee,\r\n}) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            {loading ? (\r\n              <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n                <Spinner small />\r\n              </Content>\r\n            ) : (\r\n              <img\r\n                src={\r\n                  photo !== null\r\n                    ? `/images/employees/${photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            )}\r\n          </DImage>\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        {/* <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleSchedule} fluid>\r\n            Schedule\r\n          </DButton>\r\n        </DCard> */}\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = e => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole\r\n    }\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  // const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(employee.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(employee.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from \"react\";\r\n\r\nconst AccountSched = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = () => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeAuth.id\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {empData && empData.employee ? (\r\n            !empLoading ? (\r\n              <>\r\n                <PhotoBooth\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                  photo={empData.employee.photo}\r\n                  id={empData.employee._id}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                />\r\n                <AccountInfo\r\n                  employee={empData.employee}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                  isAccount={isAccount}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"User ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        {loading_users ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map(getUser => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments]\r\n          }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\"\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton confirm onClick={() => setNewConfirm(true)}>\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = props => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\n\r\nconst SigninForm = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function convertArrayOfObjectsToCSV(array, data) {\r\n    let result;\r\n\r\n    const columnDelimiter = \",\";\r\n    const lineDelimiter = \"\\n\";\r\n    const keys = Object.keys(data[0]);\r\n\r\n    result = \"\";\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr = 0;\r\n      keys.forEach(key => {\r\n        if (ctr > 0) result += columnDelimiter;\r\n\r\n        result += item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\");\r\n    let csv = convertArrayOfObjectsToCSV(array);\r\n    if (csv == null) return;\r\n\r\n    const filename = \"export.csv\";\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv));\r\n    link.setAttribute(\"download\", filename);\r\n    link.click();\r\n  }\r\n\r\n  const Export = ({ onExport }) => (\r\n    <DButton onClick={e => onExport(e.target.value)}>Export</DButton>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const actionsMemo = useMemo(\r\n    () => <Export onExport={() => downloadCSV(historyAppointments)} />,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!historyAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={historyAppointmentData.appointmentHistory}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          actions={actionsMemo}\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst FileReport = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n              File Report\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <DGrid>\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import React from \"react\";\r\n\r\nimport { Modal } from \"semantic-ui-react\";\r\n\r\nconst ShowcaseModal = ({ openEdit, setOpenEdit, showcase }) => {\r\n  return (\r\n    <Modal size=\"small\" open={openEdit} onClose={() => setOpenEdit(false)}>\r\n      <Modal.Header></Modal.Header>\r\n      <Modal.Content>{showcase}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShowcaseModal;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport Spinner from \"../../../../Spinner\";\r\n\r\nconst DeleteShowcase = ({ openAlert, setOpenAlert, isDeleteShowCase }) => {\r\n  const [deleteShowcase, { loading: loadingDelete }] = useMutation(\r\n    DELETE_SHOWCASE,\r\n    {\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_SHOWCASE,\r\n          variables: {\r\n            section: \"SHOWCASE\"\r\n          }\r\n        }\r\n      ],\r\n      variables: {\r\n        _id: isDeleteShowCase\r\n      },\r\n      onCompleted(result) {\r\n        setOpenAlert(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  function deleteShowcaseCB() {\r\n    deleteShowcase();\r\n  }\r\n\r\n  return (\r\n    <Modal basic open={openAlert} onClose={() => setOpenAlert(false)}>\r\n      <Modal.Header>Delete Showcase</Modal.Header>\r\n      <Modal.Content>\r\n        Are you sure you want to delete this Showcase Image?\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={deleteShowcaseCB}>\r\n          {loadingDelete ? <Spinner small /> : \"Yes\"}\r\n        </DButton>\r\n        <DButton alert basic>\r\n          No\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SHOWCASE = gql`\r\n  mutation deleteShowcase($_id: ID!) {\r\n    deleteShowcase(_id: $_id)\r\n  }\r\n`;\r\n\r\nexport default DeleteShowcase;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Icon, Form, TextArea } from \"semantic-ui-react\";\r\nimport { DButton, DIconCustom } from \"../../../../styled/utils\";\r\nimport { DGrid, DImage, Content } from \"../../../../styled/containers\";\r\nimport \"./modal.custom.css\";\r\n\r\nconst NewSlide = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>\r\n        <Icon name=\"add\" />\r\n        New Slide\r\n      </DButton>\r\n      <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>Add New Slide</Modal.Header>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <Content pad=\"10px\" width=\"100%\" margin=\"0 auto\" height=\"auto\">\r\n              <DImage bordered dashed></DImage>\r\n            </Content>\r\n            <Content\r\n              width=\"80%\"\r\n              margin=\"0 auto\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <DIconCustom name=\"camera\" size=\"large\" color=\"teal\" pointer />\r\n            </Content>\r\n          </Modal.Content>\r\n          <Modal.Content>\r\n            <Content pad=\"10px\" width=\"100%\" height=\"100%\">\r\n              <Form>\r\n                <Form.Field>\r\n                  <label>Title</label>\r\n                  <input placeholder=\"title\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Subtitle</label>\r\n                  <input placeholder=\"title\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Paragraph</label>\r\n                  <TextArea style={{ minHeight: 100 }} />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Text Positioning</label>\r\n                  <Content\r\n                    flex\r\n                    justify=\"space-around\"\r\n                    align=\"center\"\r\n                    margin=\"0 auto\"\r\n                    width=\"80%\"\r\n                    height=\"10vh\"\r\n                  >\r\n                    <div className=\"pretty p-default  p-curve p-pulse\">\r\n                      <input type=\"radio\" name=\"switch1\" value=\"left\" />\r\n                      <div className=\"state  p-info-o\">\r\n                        <label>Left</label>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pretty p-default  p-curve p-pulse\">\r\n                      <input type=\"radio\" name=\"switch1\" value=\"center\" />\r\n                      <div className=\"state  p-info-o\">\r\n                        <label>Center</label>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pretty p-default p-curve p-pulse\">\r\n                      <input type=\"radio\" name=\"switch1\" value=\"right\" />\r\n                      <div className=\"state  p-info-o\">\r\n                        <label>Right</label>\r\n                      </div>\r\n                    </div>\r\n                  </Content>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>\r\n                    Background-color{\" \"}\r\n                    <DIconCustom\r\n                      name=\"question circle outline\"\r\n                      customSize=\"16px\"\r\n                      pointer\r\n                    />\r\n                  </label>\r\n                  <input placeholder=\"hex\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>\r\n                    Overlay{\" \"}\r\n                    <DIconCustom\r\n                      name=\"question circle outline\"\r\n                      customSize=\"16px\"\r\n                      pointer\r\n                    />\r\n                  </label>\r\n                  <Content\r\n                    flex\r\n                    align=\"center\"\r\n                    margin=\"0 auto\"\r\n                    width=\"80%\"\r\n                    height=\"10vh\"\r\n                  >\r\n                    <div class=\"pretty p-switch p-fill\">\r\n                      <input type=\"checkbox\" />\r\n                      <div class=\"state p-info\">\r\n                        <label>Dark</label>\r\n                      </div>\r\n                    </div>\r\n                  </Content>\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewSlide;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../../../util/graphql/cms\";\r\nimport {\r\n  DShowCase,\r\n  Overlay,\r\n  DSection,\r\n  DContainer\r\n} from \"../../../../styled/containers\";\r\nimport { DButton } from \"../../../../styled/utils\";\r\nimport ShowcaseModal from \"./ShowcaseModal\";\r\nimport DeleteShowcase from \"./DeleteShowcase\";\r\nimport NewSlide from \"./NewSlide\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Showcase = () => {\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState([]);\r\n  const [isShowCase, setIsShowCase] = useState({});\r\n  const [isDeleteShowCase, setIsDeleteShowCase] = useState({});\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    setOpenEdit(true);\r\n    setIsShowCase(e.currentTarget.dataset.scvalueedit);\r\n  };\r\n\r\n  const handleDelete = e => {\r\n    e.preventDefault();\r\n    setOpenAlert(true);\r\n    setIsDeleteShowCase(e.currentTarget.dataset.scvalue);\r\n  };\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <DSection width=\"900px\" mcenter>\r\n      <NewSlide />\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"50vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcase.map(sc => (\r\n            <DShowCase\r\n              height=\"50vh\"\r\n              key={sc._id}\r\n              background={\r\n                sc.photo !== null || sc.photo !== undefined\r\n                  ? `/images/cms/home/${sc.photo}`\r\n                  : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n            >\r\n              <Overlay\r\n                bg={\r\n                  \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                }\r\n                flex\r\n                justify=\"flex-start\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-content\">\r\n                  <h3>Z Essence Facial & Spa</h3>\r\n                  <p>\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Quisquam, doloribus.\r\n                  </p>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    right: 20,\r\n                    display: \"flex\"\r\n                  }}\r\n                >\r\n                  <DButton\r\n                    value={sc._id}\r\n                    data-scvalueedit={sc._id}\r\n                    onClick={handleEdit}\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                  </DButton>\r\n                  <DButton\r\n                    alert\r\n                    value={sc._id}\r\n                    data-scvalue={sc._id}\r\n                    onClick={handleDelete}\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                  </DButton>\r\n                </div>\r\n              </Overlay>\r\n            </DShowCase>\r\n          ))}\r\n        </Slider>\r\n      )}\r\n\r\n      {isShowCase && (\r\n        <ShowcaseModal\r\n          openEdit={openEdit}\r\n          setOpenEdit={setOpenEdit}\r\n          showcase={isShowCase}\r\n        />\r\n      )}\r\n\r\n      {isDeleteShowCase && (\r\n        <DeleteShowcase\r\n          openAlert={openAlert}\r\n          setOpenAlert={setOpenAlert}\r\n          isDeleteShowCase={isDeleteShowCase}\r\n        />\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/showcase/Showcase\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Showcase />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/signin\" exact />\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/paccount\"\r\n          component={PersonalAccount}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/userInfo/:_id\"\r\n          component={UserInfo}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n        <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Main from \"./pages/Main\";\r\nimport Admin from \"./pages/Admin\";\r\nimport Page404 from \"./pages/Page404\";\r\nimport { AuthProvider } from \"./context/auth\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./components/theme\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <Switch>\r\n            <Redirect from=\"/\" to=\"/zessence\" exact />\r\n            <Route path=\"/zessence\" component={Main} />\r\n            <Route path=\"/zeadmin\" component={Admin} />\r\n            <Route component={Page404} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ApolloProvider from \"./ApolloProvider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"toasted-notes/src/styles.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./css/slick-theme.custom.css\";\r\nimport \"./css/slick.custom.css\";\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}