{"version":3,"sources":["serviceWorker.js","context/auth.js","components/main/navigation/navHook.js","components/styled/navigation.js","components/main/navigation/Burger.js","util/hooks/useScroll.js","components/main/navigation/Navigation.js","util/graphql/cms.js","components/styled/containers.js","components/styled/utils.js","components/main/home/Showcase.js","components/main/home/CategoryCards.js","util/graphql/employee.js","components/styled/card.js","components/main/utils/ReadMore.js","components/main/home/Team.js","components/main/home/Section2.js","components/main/home/Section3.js","components/main/utils/ScrollButton.js","pages/main/Home.js","components/main/about/Story.js","components/main/about/TeamDetails.js","components/main/about/Team.js","pages/main/About.js","util/hooks/useForm.js","components/main/authenticate/SignupForm.js","pages/main/Signup.js","util/graphql/appointment.js","components/main/authenticate/SigninForm.js","pages/main/Signin.js","util/graphql/service.js","components/main/appointment/AppointDate.js","pages/Page404.js","components/main/appointment/AppointmentInputs.js","components/styled/loader.js","components/Spinner.js","components/main/appointment/Confirmation.js","pages/main/Appointment.js","pages/main/Gallery.js","pages/main/Contact.js","components/main/testimonial/TestimonialCard.js","pages/main/Testimonials.js","pages/main/Services.js","pages/main/Service.js","pages/main/ThankYou.js","pages/main/VerifyNotice.js","util/graphql/user.js","components/main/user/AccountContentOne.js","components/main/user/PersonalModal.js","components/main/user/EmailModal.js","components/main/user/SecurityModal.js","components/main/user/UserDetails.js","components/Accordion.js","components/main/user/ReschedInfo.js","components/main/user/CancelAppoint.js","components/main/appointment/ReschedConfirm.js","components/main/appointment/ReschedModal.js","components/main/user/CurrentAppointModal.js","components/main/user/CurrentAppointment.js","components/main/user/MyAppointmentHistory.js","components/main/user/UserAppointments.js","components/main/user/AccountContentTwo.js","pages/main/Account.js","util/AuthRoute.js","util/PrivateRoute.js","components/main/footer/Footer.js","pages/main/AppointmentDetails.js","pages/Main.js","components/admin/dashboard/UpcommingAppointments.js","components/styled/layout.js","components/admin/layout/Header.js","components/admin/layout/SideNav.js","components/admin/layout/Layout.js","components/admin/dashboard/ClientCard.js","components/admin/dashboard/AppointmentCard.js","util/graphql/inquiry.js","components/admin/dashboard/InquiryCard.js","components/admin/dashboard/Cards.js","pages/admin/Dashboard.js","components/styled/skeleton.js","components/Skeleton.js","components/admin/appointment/CurrentAppointments.js","components/admin/appointment/NewModal.js","pages/admin/Appointments.js","components/admin/appointment/AppointmentCancel.js","components/admin/appointment/AppointmentDone.js","pages/admin/AppointmentDetails.js","components/admin/appointment/NewUserAppointment.js","components/admin/appointment/NewAppointmentInput.js","components/admin/appointment/NewDateTime.js","components/admin/appointment/NewAppointmentDetails.js","components/admin/appointment/NewConfirmation.js","pages/admin/NewAppointment.js","components/admin/employees/NewEmployee.js","pages/admin/Employees.js","components/admin/employees/EmployeeDetails.js","components/admin/employees/ServiceAdd.js","components/admin/employees/EmployeeServices.js","pages/admin/Employee.js","components/admin/services/NewCategory.js","pages/admin/Categories.js","components/admin/services/CategoryDelete.js","components/admin/services/CategoryDetails.js","components/admin/services/NewService.js","components/admin/services/ServiceList.js","pages/admin/Category.js","components/admin/services/ServiceConfirmDelete.js","components/admin/services/ServiceDetails.js","pages/admin/Service.js","components/admin/inquiry/ReplyModal.js","pages/admin/Inquiry.js","components/admin/accounts/PhotoBooth.js","components/admin/accounts/AccountModal.js","components/admin/accounts/PersonalModal.js","components/admin/accounts/SecurityModal.js","components/admin/accounts/AccountDetails.js","components/admin/accounts/AccountSched.js","components/admin/accounts/AccountInfo.js","pages/admin/PersonalAccount.js","pages/admin/User.js","components/admin/client/PhotoBooth.js","components/admin/client/ClientDetails.js","components/admin/client/NewConfirm.js","components/admin/client/AppointmentModal.js","pages/admin/UserInfo.js","components/admin/authentications/SigninForm.js","pages/admin/Signin.js","components/admin/appointment/HistoryAppointments.js","pages/admin/FileReport.js","components/admin/cms/home/ShowcaseModal.js","components/admin/cms/home/DeleteShowcase.js","components/admin/cms/home/Showcase.js","pages/admin/cms/Home.js","pages/Admin.js","components/theme.js","App.js","ApolloProvider.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","user","employeeAuth","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","decodedEmployeeToken","AuthContext","createContext","login","userData","employeeLogin","employeeData","logout","employeeLogout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","employeeToken","DNavigation","styled","nav","bg","scrolled","DMenu","ul","theme","dark","primary","DMainMenu","blue","light","open","secondary","DRightMenu","DBurger","DropdownCustomNav","Dropdown","Burger","setOpen","onClick","useScroll","scrollVal","useState","scrolling","setScrolling","scrollTop","setScrollTop","scrollH","undefined","useEffect","onScroll","e","target","documentElement","addEventListener","removeEventListener","Navigation","ref","handler","node","useRef","listener","event","current","contains","document","history","useHistory","useContext","handleLogout","push","trigger","style","fontSize","Icon","name","firstName","scrollBehavior","el","scrollIntoView","behavior","block","className","src","alt","to","userId","_id","scroll","simple","Menu","Item","as","Link","disabled","FETCH_SHOWCASE","gql","columns","rows","DContainer","div","DShowCase","height","background","bgcolor","Overlay","flex","justify","align","flow","direct","pad","pointer","opac","hovOpac","cwidth","cmarg","color","fs","DGrid","section","two","three","four","six","custom","gap","row2","row3","row4","row6","rowCustom","margin","circle","med10","med7","med5","DCard","p","dh","dw","justifyCenter","justifyAround","justifyBetween","jusitfyFend","alignCenter","alignAround","alignBetween","alignFend","fcol","bs","DSection","width","mcenter","fixed","Content","fluid","rounded","br1","weight","size","bluer","imgHeight","imgWidth","DImage","m","DFooterLinks","DFooter","footer","Section2Styled","ripple","keyframes","DButton","button","fSize","text","radius","basic","alert","red","warning","yellow","confirm","green","default","DButtonCancel","border","DButtonConfirm","DLabel","label","ls","tt","w","hover","NavItem","DAccordion","oblong","activeBg","hoverColorText","uc","lc","Toasted","status","ReadMore","ScrollUp","absoluteCenter","position","top","left","transform","display","Showcase","nextSection","matchMedia","setShowcase","useQuery","variables","showcaseData","data","dataLoading","loading","error","contentManagements","id","bottom","zIndex","circular","dots","infinite","fade","speed","slidesToShow","slidesToScroll","map","sc","key","photo","CategoryCards","cards","setRef","FETCH_ALL_EMPLOYEES_QUERY","FETCH_EMPLOYEES_NOT_ADMIN_QUERY","FETCH_EMPLOYEE_QUERY","JCard","figure","JCard2","oflow","JCard3","JCard4","right","children","styles","dloading","justifyContent","alignItems","flexDirection","lineHeight","Team","employeesAR","setEmployeesAR","limit","data_employeesAR","loading_employeesAR","aestheticiansReceps","marginBottom","count","employee","data-emp","title","lastName","role","bio","length","parser","substr","Section2","section2","images","tl","TimelineLite","img1","firstElementChild","img2","lastElementChild","TweenMax","css","visibility","from","y","ease","Power3","easeOut","scale","animate","Section3","ScrollButton","intervalId","pageYOffset","clearInterval","this","scrollPx","setInterval","scrollStep","bind","delay","setState","scrollToTop","React","Component","Home","card1","Story","content","maxHeight","letterSpacing","textAlign","overflowWrap","overflow","padding","TeamDetails","href","Modal","onClose","closeIcon","employees","setEmployees","dataEmployees","loadingEmployees","minHeight","emp","About","minWidth","useForm","callback","values","setValues","handleChange","handleSubmit","preventDefault","REGISTER_USER","SignupForm","hist","errors","setErrors","register","email","password","confirmPassword","useMutation","update","onError","err","graphQLErrors","extensions","exception","Form","noValidate","onSubmit","Group","widths","Field","Label","Input","onChange","placeholder","emailX","userTaken","pwdShort","confirmPasswordEmpty","Dimmer","active","Loader","marginTop","textTransform","fontWeight","Signup","pathname","FETCH_APPOINTMENTS_QUERY","FETCH_MY_APPOINTMENTS","FETCH_MY_CURRENT_APPOINTMENTS","FETCH_MY_APPOINTMENT_HISTORY","FETCH_CHECKED_APPOINTMENTS","FETCH_SINGLE_APPOINTMENT_QUERY","FETCH_CURRENT_APPOINTMENTS","FETCH_HISTORY_APPOINTMENTS","FETCH_APPOINTMENT_STATUS","LOGIN_USER","SigninForm","context","_","userLogin","refetchQueries","query","onCompleted","result","console","log","loginUser","userX","general","Signin","FETCH_ALL_CATEGORIES_QUERY","FETCH_CATEGORY_QUERY","FETCH_ALL_SERVICES_QUERY","FETCH_SERVICES_QUERY","FETCH_SINGLE_SERVICE_QUERY","timelineLabels","desiredStartTime","timeLength","interval","periodsInADay","moment","duration","timeSlot","startTimeMoment","i","add","format","AppointDate","setStartDate","setSelectedTime","startDate","employeeVal","serviceValue","days","times","appointmentTimes","handleTimeChanged","employeeId","data_employee","loading_employee","serviceId","data_service","loading_service","date","toLocaleDateString","data_appointments","loading_appointments","workStart","schedule","breakStart","day","d","checkedAppointments","occcupied","slot_start","startTime","breakStime","intervalTime","service","workingTime","breakTime","filter","item","includes","oras","ft","selected","minDate","setDate","getDate","inline","time","Page404","AppointmentInputs","setServiceValue","setEmployeeVal","categories","setCategories","services","setServices","loading_categories","data_categories","useLazyQuery","categoryId","category","loadService","called","loading_services","data_services","loadServiceEmp","calledServiceEmp","loading_serviceEmp","data_serviceEmp","cursor","outline","servEmp","keyring","SpinnerRing","small","medium","inverted","Spinner","large","CREATE_NEW_APPOINTMENT","diplay","Confirmation","selectedTime","addInfo","setAddInfo","setService","cache","readQuery","newAppointment","createAppointment","writeQuery","myCurrentAppointment","toaster","notify","expiredLog","check","start","message","Header","readOnly","toDateString","Actions","Appointment","jusitfy","photos","Gallery","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","index","currentIndex","views","x","srcset","srcSet","caption","SEND_INQUIRY","Contact","sendInquiry","subject","borderBottom","TestimonialCard","slidesPerRow","arrows","Testimonials","Services","sectionDown","isCategories","setIsCategories","description","Service","params","isReadMore","setIsReadMore","isServices","setIsServices","goBack","onPointerLeave","price","VERRIFIED_APPOINTMENT","ThankYou","emailToken","go","appointmentId","verifiedAppointment","onload","VerifyNotice","FETCH_USER_ACCOUNT","FETCH_USERS_ACCOUNT","UPLOAD_USER_PHOTO","AccountContentOne","handleAppointments","handleDetails","userInfo","addUserPhoto","onDrop","file","useDropzone","getRootProps","getInputProps","isDragActive","UPDATE_USER","PersonalModal","personalOpen","setPersonalOpen","parseInt","dateOfBirth","contact","updateUser","showYearDropdown","UPDATE_USER_EMAIL","EmailModal","emailOpen","setEmailOpen","isEmail","setIsEmail","UPDATE_USER_PWD","SecurityModal","securityOpen","setSecurityOpen","newPassword","oldPassword","isPwds","setIsPwds","handlePwdChange","UserDetails","personalModal","setPersonalModal","emailModal","setEmailModal","securityModal","setSecurityModal","aling","justifyEnd","Accordion","setActive","contentRef","scrollHeight","icon","ReschedInfo","reschedId","appointResched","reschedule","reschedData","reschedLoading","appointment","CANCEL_APPOINTMENT_MUTATION","CancelAppoint","isCancelOpen","setIsCancelOpen","isNote","setIsNote","note","invalidCancellation","cancelAppointment","RESCHED_APPOINTMENT","ReschedConfirm","setIsResched","isAdmin","isReschedConfirm","setIsReschedConfirm","reAppointment","reschedAppointment","appointments","ReschedModal","isResched","setServiceEmp","CurrentAppointModal","verified","pending","done","rescheduled","cancelled","appointedDate","addDate","diffDate","appointId","appointmentInfo","appointmentLoading","new","Popup","mouseEnterDelay","mouseLeaveDelay","customStyles","headRow","headCells","highlightOnHoverStyle","backgroundColor","borderBottomColor","borderRadius","pagination","paginationRowsPerPageOptions","CurrentAppointment","isPop","setIsPop","handlePop","currentAppointData","currentAppointLoading","selector","sortable","wrap","row","cell","fitted","wide","Grid","divided","Column","currentAppoint","responsive","paginationPerPage","highlightOnHover","pointerOnHover","MyAppointmentHistory","appoint","setAppoint","appointHistory","setAppointHistory","appointHistoryData","appointHistoryLoading","myAppointmentHistory","handleRow","currentTarget","compact","historyAppoint","UserAppointments","AccountContentTwo","isAccount","Account","stored","setIsAccount","AdminAuthRoute","component","rest","render","UserAuthRoute","PrivateRoute","UserPrivateRoute","Footer","getFullYear","field","jusitfyContent","input","AppointmentDetails","schedDate","myAppoint","setMyAppoint","margn","Main","path","exact","UpcommingAppointments","LayoutContainer","MainLayout","SideNavLayout","HeaderLayout","pointing","SideNav","activeClassName","Layout","ClientCard","newClients","isUsers","setIsUsers","dataUsers","getUsers","newUser","createdAt","AppointmentCard","isDone","setIsDone","isCancelled","setIsCancelled","isAppointments","setIsAppointments","dataIsAppointments","loadingIsAppointments","dataIsDone","loadingIsDone","appointmentsByStatus","dataIsCancelled","loadingIsCancelled","FETCH_INQUIRIES","FETCH_INQUIRIES_READ","FETCH_INQUIRY","InquiryCard","isInqs","setIsInqs","isInqsRead","setIsInqsRead","isInqsUnread","setIsInqsUnread","dataInqs","loadingInqs","inquiries","read","dataInqsRead","loadingInqsRead","inquiriesRead","dataInqsUnread","loadingInqsUnread","Cards","Dashboard","setAppointments","currentAppointments","placeholderAnimate","DSkeleton","wid","Skeleton","CurrentAppointments","currentAppointmentData","currAppoint","NewModal","Appointments","Breadcrumb","Section","AppointmentCancel","openCancel","setOpenCancel","DONE_APPOINTMENT_MUTATION","AppointmentDone","openDone","setOpenDone","doneAppointment","NewUserAppointment","valueChange","NewAppointmentInput","categoryVal","setCategoryVal","NewDateTime","NewAppointmentDetails","CREATE_GUEST_APPOINTMENT","myAppointments","createGuestAppointment","NewAppointment","Divider","NewConfirmation","CREATE_EMPLOYEE_MUTATION","NewEmployee","setDays","createEmployee","workLength","breakLength","newEmployee","Checkbox","class","Employees","grow","empId","level","aesrep","config","readonly","UPDATE_EMPLOYEE_DETAILS","EmployeeDetails","editor","setContent","updateEmployee","parseFloat","borderRight","tabIndex","onBlur","newContent","ADD_SERVICES_MUTATION","ServiceAdd","dataCategory","loadingCategory","addService","close","marginLeft","EmployeeServices","UPLOAD_EMPLOYEE_PHOTO","Employee","setEmployee","employeeLoading","addEmployeePhoto","objectFit","CREATE_NEW_CATEGORY_MUTATION","NewCategory","createCategory","newCategory","Categories","DELETE_CATEGORY_MUTATION","CategoryDelete","historyCallback","categ","deleteCategory","UPDATE_CATEGORY_DETAILS","CategoryDetails","updateCategory","CREATE_NEW_SERVICE","NewService","createService","newService","serviceExist","ServiceList","descript","trimString","substring","parse","progressComponent","UPLOAD_CATEGORY_PHOTO","Category","setCategory","addCategoryPhoto","paddingBottom","DELETE_SERVICE_MUTATION","ServiceConfirmDelete","serviceHistoryCallback","serv","deleteService","UPDATE_SERVICE_DETAILS","ServiceDetails","updateService","UPLOAD_SERVICE_PHOTO","serviceData","serviceLoading","addServicePhoto","replace","REPLY_MESSAGE","ReplyModal","inqId","displayMsg","setDisplayMsg","isMessage","setIsMessage","inq","setInq","inquiryId","dataInq","loadingInq","inquiry","replyInquiry","column","Inquiry","setInquiries","data_inquiries","loading_inquiries","msg","PhotoBooth","fetchEmployee","reader","FileReader","binaryStr","UPDATE_EMPLOYEE_ROLE","AccountModal","employeeModal","setEmployeeModal","isRole","setIsRole","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_PWD","AccountDetails","AccountSched","AccountInfo","PersonalAccount","empData","empLoading","handleSchedule","User","setUsers","data_users","loading_users","getUser","ClientDetails","NEW_APPOINTMENT","NewConfirm","clientId","newConfirm","setNewConfirm","createUserExistAppointment","AppointmentModal","UserInfo","isClient","setIsClient","dataClient","loadingClient","EMPLOYEE_LOGIN_MUTATION","loginEmployee","isNotEqual","fontFamily","HistoryAppointments","historyAppointments","setHistoryAppointments","historyAppointmentData","downloadCSV","array","link","createElement","csv","keys","Object","join","forEach","ctr","convertArrayOfObjectsToCSV","setAttribute","encodeURI","click","appointmentHistory","Export","onExport","actionsMemo","useMemo","actions","FileReport","ShowcaseModal","showcase","DELETE_SHOWCASE","DeleteShowcase","openAlert","setOpenAlert","isDeleteShowCase","deleteShowcase","loadingDelete","NEW_SHOWCASE","isShowCase","setIsShowCase","setIsDeleteShowCase","addShowcase","handleEdit","handleDelete","dataset","scvalue","data-scvalue","Admin","App","uploadLink","createUploadLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","concat","InMemoryCache","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.435250cb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  employeeAuth: null\r\n};\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nif (localStorage.getItem(\"jwtTokenEmployee\")) {\r\n  const decodedEmployeeToken = jwtDecode(\r\n    localStorage.getItem(\"jwtTokenEmployee\")\r\n  );\r\n\r\n  if (decodedEmployeeToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n  } else {\r\n    initialState.employeeAuth = decodedEmployeeToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  employeeAuth: null,\r\n  login: userData => {},\r\n  employeeLogin: employeeData => {},\r\n  logout: () => {},\r\n  employeeLogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    case \"EMPLOYEE_LOGIN\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: action.payload\r\n      };\r\n    case \"EMPLOYEE_LOGOUT\":\r\n      return {\r\n        ...state,\r\n        employeeAuth: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  function employeeLogin(employeeData) {\r\n    localStorage.setItem(\"jwtTokenEmployee\", employeeData.employeeToken);\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGIN\",\r\n      payload: employeeData\r\n    });\r\n  }\r\n\r\n  function employeeLogout() {\r\n    localStorage.removeItem(\"jwtTokenEmployee\");\r\n    dispatch({\r\n      type: \"EMPLOYEE_LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        employeeAuth: state.employeeAuth,\r\n        login,\r\n        logout,\r\n        employeeLogin,\r\n        employeeLogout\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(\"mousedown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nexport const DNavigation = styled.nav`\r\n  width: 100%;\r\n  background: ${props => (props.bg ? props.bg : \"rgba(255,255,255,1)\")};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  height: 14vh;\r\n  z-index: 10;\r\n\r\n  .content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    padding: 30px 0;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    letter-spacing: 2px;\r\n\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    outline: 0;\r\n    border: 0;\r\n\r\n    .logo {\r\n      width: 90px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n      padding: 10px 0;\r\n      height: 7rem;\r\n      width: 100%;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 10px 0;\r\n      height: 100px;\r\n\r\n      .logo {\r\n        width: 90px;\r\n        margin-left: 60px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      padding: 2px 0;\r\n      height: 80px;\r\n      width: 90%;\r\n\r\n      .logo {\r\n        width: 70px;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${props =>\r\n    props.scrolled &&\r\n    \"background: rgba(0,0,0,0.4); height: 12vh; transition: all 0.2s ease-in-out;\"};\r\n`;\r\n\r\nexport const DMenu = styled.ul`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    padding-bottom: 2px;\r\n    color: ${({ theme }) => theme.dark};\r\n  }\r\n\r\n  ${props => props.scrolled && \"li a {color: #fff}\"};\r\n\r\n  li a:hover,\r\n  &.active {\r\n    color: ${({ theme }) => theme.primary};\r\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nexport const DMainMenu = styled(DMenu)`\r\n  flex: 1;\r\n  margin-left: 30px;\r\n\r\n  li:nth-child(1),\r\n  li:nth-child(2),\r\n  .account-nav,\r\n  .hr-nav {\r\n    display: none;\r\n  }\r\n\r\n  li:nth-child(2) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 100vh;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.blue};\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    padding: 2rem;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 8;\r\n    color: ${({ theme }) => theme.light};\r\n    transform: ${({ open }) => (open ? \"translateX(0%)\" : \"translateX(100%)\")};\r\n    transform-origin: bottom left;\r\n    transition: transform 0.3s ease-in-out;\r\n    border: 1px solid #fff;\r\n\r\n    li:nth-child(1),\r\n    li:nth-child(2) {\r\n      display: block;\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    li:nth-child(2) {\r\n      .btn {\r\n        background: none;\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .account-nav {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .account-nav li,\r\n    .account-nav li a {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: flex-end;\r\n      font-size: 14px;\r\n    }\r\n\r\n    .account-nav li:first-child span {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    .account-nav .signing_out {\r\n      cursor: pointer;\r\n      &:hover {\r\n        color: ${({ theme }) => theme.secondary};\r\n      }\r\n    }\r\n\r\n    .hr-nav {\r\n      display: block;\r\n      width: 70%;\r\n      margin: 10px auto;\r\n      hr {\r\n        border: 0;\r\n        height: 1px;\r\n        background: #333;\r\n        background-image: linear-gradient(to right, #ccc, #333, #ccc);\r\n      }\r\n    }\r\n\r\n    li {\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      margin-right: 20px;\r\n      transform: ${({ open }) =>\r\n        open ? \" translateX(0%)\" : \"translateX(100%)\"};\r\n\r\n      transition: color 0.15s, transform 0.5s;\r\n      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);\r\n\r\n      a {\r\n        margin: 0.5em 0;\r\n\r\n        font-size: 18px;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        letter-spacing: 0.5rem;\r\n        text-align: center;\r\n        line-height: 2.8;\r\n        color: ${({ theme }) => theme.light};\r\n        text-decoration: none;\r\n      }\r\n\r\n      a:hover,\r\n      &.active {\r\n        color: ${({ theme }) => theme.secondary};\r\n        border-bottom: 0;\r\n      }\r\n      &:nth-child(1) {\r\n        transition-delay: 0s, 100ms;\r\n      }\r\n      &:nth-child(2) {\r\n        transition-delay: 0s, 150ms;\r\n      }\r\n      &:nth-child(3) {\r\n        transition-delay: 0s, 200ms;\r\n      }\r\n      &:nth-child(4) {\r\n        transition-delay: 0s, 250ms;\r\n      }\r\n      &:nth-child(5) {\r\n        transition-delay: 0s, 300ms;\r\n      }\r\n      &:nth-child(6) {\r\n        transition-delay: 0s, 350ms;\r\n      }\r\n      &:nth-child(7) {\r\n        transition-delay: 0s, 400ms;\r\n      }\r\n      &:nth-child(8) {\r\n        transition-delay: 0s, 450ms;\r\n      }\r\n      &:nth-child(9) {\r\n        transition-delay: 0s, 500ms;\r\n      }\r\n      &:nth-child(10) {\r\n        transition-delay: 0s, 550ms;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DRightMenu = styled(DMenu)`\r\n  display: flex;\r\n\r\n  li {\r\n    padding: 0 10px;\r\n  }\r\n  li a {\r\n    color: #232323;\r\n  }\r\n  li:first-child {\r\n    padding: 10px;\r\n  }\r\n\r\n  li:last-child a {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  li:last-child a:hover {\r\n    border-bottom: 0;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    justify-content: flex-end;\r\n    margin-right: 60px;\r\n    width: 90%;\r\n    display: none;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-end;\r\n    margin-right: 100px;\r\n    width: 90%;\r\n    .btn {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n\r\n    .btn {\r\n      height: auto;\r\n      padding: 5px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DBurger = styled.nav`\r\n  position: fixed;\r\n  top: 5%;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    div {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.3rem;\r\n    background: ${({ theme, open }) => (open ? theme.dark : theme.blue)};\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    box-shadow: 0 1px 1px rgba(103, 128, 159, 0.12),\r\n      0 2px 2px rgba(103, 128, 159, 0.12), 0 3px 3px rgba(103, 128, 159, 0.12);\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\r\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1025px) {\r\n    display: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    top: 3%;\r\n    right: 5rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    top: 3.5%;\r\n    right: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    top: 3%;\r\n    right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const DropdownCustomNav = styled(Dropdown)`\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & a {\r\n    color: #232323;\r\n    font-weight: 700;\r\n  }\r\n  & a:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n\r\n  & .customDropMenu a {\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.primary} !important;\r\n  }\r\n\r\n  ${props => props.scrolled && \"color: #fff; a {color: #fff}\"};\r\n\r\n  @media (max-width: 1024px) {\r\n    a {\r\n      color: #ffff;\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n    a:hover {\r\n      color: ${({ theme }) => theme.secondary};\r\n      font-size: 18px;\r\n      text-transform: uppercase;\r\n      margin-right: 24px;\r\n    }\r\n  }\r\n\r\n  .customDropMenu .customDropMenuItem {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #232323 !important;\r\n    font-size: 14px !important;\r\n  }\r\n  .customDropMenu .customDropMenuItem:hover {\r\n    color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { bool, func } from \"prop-types\";\r\nimport { DBurger } from \"../../styled/navigation\";\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <DBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </DBurger>\r\n  );\r\n};\r\n\r\nBurger.propTypes = {\r\n  open: bool.isRequired,\r\n  setOpen: func.isRequired\r\n};\r\n\r\nexport default Burger;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useScroll(scrollVal) {\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollTop, setScrollTop] = useState(0);\r\n  const scrollH = scrollVal !== undefined ? scrollVal : 100;\r\n\r\n  useEffect(() => {\r\n    const onScroll = e => {\r\n      setScrollTop(e.target.documentElement.scrollTop);\r\n      setScrolling(e.target.documentElement.scrollTop > scrollH);\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [scrollTop]);\r\n\r\n  return scrolling;\r\n}\r\n","import React, { useRef, useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { bool } from \"prop-types\";\r\nimport { useOnClickOutside } from \"./navHook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport {\r\n  DNavigation,\r\n  DMainMenu,\r\n  DRightMenu,\r\n  DropdownCustomNav\r\n} from \"../../styled/navigation\";\r\nimport Burger from \"./Burger\";\r\nimport useScroll from \"../../../util/hooks/useScroll\";\r\n\r\nconst Navigation = ({ open, setOpen }) => {\r\n  const scrolling = useScroll();\r\n\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => setOpen(false));\r\n  let history = useHistory();\r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    history.push(\"/zessence\");\r\n  };\r\n\r\n  const trigger = (\r\n    <>\r\n      {user && (\r\n        <span style={{ fontSize: \"12px\" }}>\r\n          <Icon name=\"user\" /> Hello, {user.firstName}\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const scrollBehavior = el =>\r\n    el.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n\r\n  return (\r\n    <DNavigation ref={node} scrolled={scrolling ? true : false}>\r\n      <div className=\"content\">\r\n        <img src={\"/images/logo.png\"} alt=\"Z Essence\" className=\"logo\" />\r\n        <Burger open={open} setOpen={setOpen} />\r\n\r\n        <DMainMenu open={open} scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <div className=\"account-nav\">\r\n              <li>\r\n                Signed is as <span>{user.firstName}</span>\r\n              </li>\r\n              <li>\r\n                <Link to={`/zessence/myaccount/${user.userId || user._id}`}>\r\n                  My Account\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <span onClick={handleLogout} className=\"signing_out\">\r\n                  Sign out\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n          <li className=\"hr-nav\">\r\n            <hr className=\"hr-one\" />\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/#home\" scroll={scrollBehavior}>\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/services&rates/#services\">Services</Link>\r\n          </li>\r\n\r\n          {/* <Link to=\"/zessence/about\">About&nbsp;Us</Link> */}\r\n          <DropdownCustomNav\r\n            trigger={\r\n              <Link to=\"/zessence/about/#about\" scroll={scrollBehavior}>\r\n                About&nbsp;Us\r\n              </Link>\r\n            }\r\n            simple\r\n            scrolled={scrolling ? true : false}\r\n          >\r\n            <Dropdown.Menu className=\"customDropMenu\">\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/zessence/about/#story\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Story\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                className=\"customDropMenuItem\"\r\n                as={Link}\r\n                to=\"/zessence/about/#team\"\r\n                scroll={scrollBehavior}\r\n              >\r\n                Our Team\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </DropdownCustomNav>\r\n\r\n          <li>\r\n            <Link to=\"/zessence/gallery/#gallery\" scroll={scrollBehavior}>\r\n              Gallery\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/contact\">Contact</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/zessence/testimonials\">Testimonials</Link>\r\n          </li>\r\n        </DMainMenu>\r\n        <DRightMenu scrolled={scrolling ? true : false}>\r\n          {user ? (\r\n            <li>\r\n              <Dropdown trigger={trigger}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item disabled>\r\n                    <span style={{ fontSize: \"10px\" }}>\r\n                      Signed is as <strong>{user.firstName}</strong>\r\n                    </span>\r\n                  </Dropdown.Item>\r\n\r\n                  <Dropdown.Item>\r\n                    <Link\r\n                      to={`/zessence/account/${user.userId || user._id}`}\r\n                      className=\"account-right\"\r\n                      onClick={() => localStorage.setItem(\"account\", \"details\")}\r\n                    >\r\n                      Account\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleLogout}>Sign out</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n          ) : (\r\n            <li>\r\n              <Link to=\"/zessence/login\">Sign in</Link>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <Link to=\"/zessence/appointment\" className=\"btn\">\r\n              Book Appointment\r\n            </Link>\r\n          </li>\r\n        </DRightMenu>\r\n      </div>\r\n    </DNavigation>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  open: bool.isRequired\r\n};\r\n\r\nexport default Navigation;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_SHOWCASE = gql`\r\n  query contentManagements($section: String) {\r\n    contentManagements(section: $section) {\r\n      _id\r\n      photo\r\n      section\r\n      headline\r\n      paragraph\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_SHOWCASE };\r\n","import styled from \"styled-components\";\r\n\r\nconst columns = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nconst rows = {\r\n  two: \"repeat(2, 1fr)\",\r\n  three: \"repeat(3, 1fr)\",\r\n  four: \"repeat(4 , 1fr)\",\r\n  five: \"repeat(5 , 1fr)\",\r\n  six: \"repeat(6,1fr)\"\r\n};\r\n\r\nexport const DContainer = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n  margin-top: 14vh;\r\n`;\r\n\r\nexport const DShowCase = styled.div`\r\n  width: 100%;\r\n  height: ${props => (props.height ? props.height : \"100vh\")};\r\n  position: relative;\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n\r\n\r\n  h1,h2,\r\n  p {\r\n    \r\n    margin-left: 48px;\r\n  }\r\n  .btn {\r\n    margin-left: 48px;\r\n  }\r\n\r\n  img{\r\n    height: 100%;\r\n    width: auto;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: ${props => (props.bg ? props.bg : \"rgba(0, 0, 0, 0.15)\")};\r\n  border-radius: inherit;\r\n  z-index: 1;\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  padding: ${props => props.pad && props.pad};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  opacity: ${props => props.opac && props.opac};\r\n  transition: opacity 0.3s ease;\r\n\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hovOpac && props.hovOpac};\r\n  }\r\n\r\n  .overlay-box {\r\n    width: 0;\r\n    height: 100%;\r\n\r\n    border: 1px solid white;\r\n    margin: 0 auto;\r\n    transform: rotate(45deg);\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    .overlay-box__content {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n\r\n      text-align: center;\r\n      transform: rotate(-45deg);\r\n      h1 {\r\n        transform: translateY(80px);\r\n        transition: transform 0.4s ease-in-out;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover .overlay-box {\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover .overlay-box .overlay-box__content {\r\n    h1 {\r\n      transform: translateY(20px);\r\n    }\r\n  }\r\n\r\n  .overlay-content {\r\n    width: ${props => (props.cwidth ? props.cwidth : \"50%\")};\r\n    text-align: left;\r\n    margin: ${props => (props.cmarg ? props.cmarg : \"0 24px\")};\r\n    h1,\r\n    h2,\r\n    h3,\r\n    p {\r\n      color: ${props => (props.color ? props.color : \"#fff\")};\r\n      letter-spacing: 5px;\r\n      line-height: 2;\r\n    }\r\n    h1 {\r\n      font-size: ${props => (props.fs ? props.fs : \"48px\")};\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .overlay-content {\r\n      min-width: 90%;\r\n      h1 {\r\n        font-size: 32px;\r\n      }\r\n      h1,\r\n      p {\r\n        letter-spacing: 2px;\r\n        line-height: 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const DGrid = styled.section`\r\n  display: grid;\r\n  grid-template-columns: ${props =>\r\n    props.two\r\n      ? columns.two\r\n      : props.three\r\n      ? columns.three\r\n      : props.four\r\n      ? columns.four\r\n      : props.six\r\n      ? columns.six\r\n      : props.custom\r\n      ? props.custom\r\n      : \"1fr\"};\r\n  grid-gap: ${props => props.gap && props.gap};\r\n  grid-template-rows: ${props =>\r\n    props.row2\r\n      ? rows.two\r\n      : props.row3\r\n      ? rows.three\r\n      : props.row4\r\n      ? rows.four\r\n      : props.row6\r\n      ? rows.six\r\n      : props.rowCustom\r\n      ? props.rowCustom\r\n      : \"1fr\"};\r\n  margin: ${props => props.margin && props.margin};\r\n\r\n  .card-content {\r\n    border-radius: ${props => (props.circle ? \"40% 40% 10px 10px\" : \"5px\")};\r\n    padding: 10px;\r\n    background: #fff;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.2),\r\n      0 4px 4px rgba(0, 0, 0, 0.15), 0 8px 8px rgba(0, 0, 0, 0.1),\r\n      0 16px 16px rgba(0, 0, 0, 0.05);\r\n\r\n    .card-details {\r\n      padding: 0 10px;\r\n\r\n      h3 {\r\n        margin-bottom: 5px;\r\n      }\r\n      p {\r\n        font-size: 13px;\r\n      }\r\n      a {\r\n        display: inline-block;\r\n        padding: 10px 0;\r\n        color: #0067b8;\r\n        text-transform: uppercase;\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: ${props =>\r\n      props.med10 ? props.med10 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: ${props =>\r\n      props.med7 ? props.med7 : \"repeat(2, 1fr)\"};\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: ${props => (props.med5 ? props.med5 : \"1fr\")};\r\n  }\r\n`;\r\n\r\nexport const DCard = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: ${props => (props.p ? props.p : \"10px\")};\r\n  height: ${props => (props.dh ? props.dh : \"300px\")};\r\n  width: ${props => (props.dw ? props.dw : \"250px\")};\r\n  cursor: ${props => props.pointer && \"pointer\"};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${props =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${props => props.fcol && \"column\"};\r\n\r\n  overflow: hidden;\r\n  background: ${props => (props.bg ? props.bg : \"#ffffff\")};\r\n  box-shadow: ${props =>\r\n    props.bs\r\n      ? props.bs\r\n      : (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n        \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n        \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n        \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n        \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n\r\n  .card-details {\r\n    padding: 0 10px;\r\n    margin: 16px 0;\r\n\r\n    h3 {\r\n      margin-bottom: 5px;\r\n    }\r\n    p {\r\n      font-size: 13px;\r\n    }\r\n    a {\r\n      display: inline-block;\r\n      padding: 10px 0;\r\n      color: #0067b8;\r\n      text-transform: uppercase;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n\r\n  .camera {\r\n    position: absolute;\r\n    bottom: 15%;\r\n    right: 25%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 50%;\r\n    height: 25px;\r\n    width: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background: ${({ theme }) => theme.blue};\r\n    }\r\n\r\n    &:focus,\r\n    &:active {\r\n      background: darken(${({ theme }) => theme.primary}, 12%);\r\n      outline: none;\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DSection = styled.section`\r\n  height: ${props => (props.height ? props.height : \"400px\")};\r\n  width:  ${props => (props.width ? props.width : \"100%\")};;\r\n  margin: ${props =>\r\n    props.margin ? props.margin : props.mcenter ? \"0 auto\" : \"0\"};\r\n  padding: ${props => props.pad && props.pad};\r\n  background: url('${props =>\r\n    props.background && props.background}') no-repeat center center/cover;\r\n  background-attachment: ${props => props.fixed && \"fixed\"};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  position: relative;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: ${props => props.height && props.height};\r\n  width: ${props => (props.width ? props.width : props.fluid ? \"100%\" : \"50%\")};\r\n  padding: ${props => props.pad && props.pad};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props => props.justify && props.justify};\r\n  align-items: ${props => props.align && props.align};\r\n  flex-flow: ${props => props.flow && props.flow};\r\n  flex-direction: ${props => props.direct && props.direct};\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  margin: ${props => props.margin && props.margin};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props =>\r\n    props.rounded\r\n      ? \"10px\"\r\n      : props.br1\r\n      ? \"0% 24% 26% 39% / 20% 0% 100% 0% \"\r\n      : \"0\"};\r\n  box-shadow: ${props =>\r\n    props.bs &&\r\n    (\"0 1px 1px rgba(0, 0, 0, 0.12)\",\r\n    \"0 2px 2px rgba(0, 0, 0, 0.12)\",\r\n    \"0 4px 4px rgba(0, 0, 0, 0.12)\",\r\n    \"0 6px 8px rgba(0, 0, 0, 0.12)\",\r\n    \"0 8px 16px rgba(0, 0, 0, 0.12)\")};\r\n  z-index: 2;\r\n  font-weight: ${props => props.weight && props.weight};\r\n\r\n  h2 {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  p,\r\n  span {\r\n    color: ${props => props.color && props.color};\r\n  }\r\n\r\n  p {\r\n    margin: 10px 0 20px;\r\n    font-size: ${props => (props.size ? props.size : \"14px\")};\r\n  }\r\n  .content-edit {\r\n    color: ${({ theme }) => theme.blue};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bluer};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-height: ${props => (props.imgHeight ? props.imgHeight : \"300px\")};\r\n    width: ${props => (props.imgWidth ? props.imgWidth : \"100%\")};\r\n    border-radius: ${props => props.circle && \"50%\"};\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nexport const DImage = styled.div`\r\n  height: ${props => (props.height ? props.height : \"300px\")};\r\n  width: ${props => (props.width ? props.width : \"auto\")};\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: ${props =>\r\n    props.circle ? \"50%\" : props.rounded ? \"20px\" : \"0\"};\r\n  margin: ${props => (props.m ? props.m : \"0 auto\")};\r\n  padding: ${props => props.pad && props.pad};\r\n  img {\r\n    display: inline;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const DFooterLinks = styled.section`\r\n  background: #f2f2f2;\r\n  color: #616161;\r\n  font-size: 12px;\r\n  padding: 35px 0;\r\n\r\n  .links-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-gap: 10px;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    li {\r\n      line-height: 2.8;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DFooter = styled.footer`\r\n  background: #f2f2f2;\r\n  font-size: 12px;\r\n  padding: 20px 0;\r\n  color: #616161;\r\n\r\n  .footer-inner {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 0 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n    }\r\n    li {\r\n      margin-right: 30px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Section2Styled = styled.div`\r\n  visibility: hidden;\r\n  height: 100vh;\r\n  margin: 32px 0;\r\n  width: 90%;\r\n  .sec2-container {\r\n    width: 100%;\r\n    min-width: 90%;\r\n    margin: 0 auto;\r\n\r\n    .sec2-inner {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n      margin: 0 24px;\r\n      height: 100vh;\r\n\r\n      .sec2-content {\r\n        width: 50%;\r\n\r\n        .sec2-content_inner {\r\n          width: 400px;\r\n          margin: 0 auto;\r\n          color: #323232;\r\n          h1 {\r\n            font-weight: 500;\r\n            font-size: 32px;\r\n            margin-bottom: 24px .sec2-content_line {\r\n              margin: 0;\r\n              height: 44px;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          p {\r\n            font-size: 14px;\r\n            line-height: 24px;\r\n            padding-right: 48px;\r\n            margin-bottom: 56px;\r\n          }\r\n        }\r\n      }\r\n      .sec2-images {\r\n        width: 50%;\r\n        height: 100vh;\r\n        position: relative;\r\n        .sec2-images_inner {\r\n          .sec2-image {\r\n            position: absolute;\r\n            overflow: hidden;\r\n\r\n            &.imgs:nth-child(1) {\r\n              top: 0;\r\n              right: 0;\r\n              width: 45%;\r\n              height: 50%;\r\n            }\r\n            &.imgs:nth-child(2) {\r\n              bottom: 24px;\r\n              left: 0;\r\n              width: 52%;\r\n              height: 65%;\r\n            }\r\n            img {\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n              right: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst ripple = keyframes`\r\n\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  20% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\n// BUTTONS\r\nexport const DButton = styled.button`\r\n  font-size: ${props => (props.fSize ? props.fSize : \"16px\")};\r\n  height: ${props => (props.size ? props.size : \"36px\")};\r\n  width: ${props =>\r\n    props.fluid ? \"100%\" : props.width ? props.width : \"auto\"};\r\n  display: inline-block;\r\n  padding: ${props => (props.pad ? props.pad : \"6px 16px\")};\r\n  line-height: 1.42857143;\r\n  margin: 1.5%;\r\n  text-align: center;\r\n  text-transform: ${props => props.text || \"capitalize\"};\r\n  letter-spacing: 1.5px;\r\n  white-space: nowrap;\r\n  vertical-align: middle;\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  border-radius: ${props =>\r\n    props.radius ? props.radius : props.circle ? \"50%\" : \"5px\"};\r\n  border-width: ${props => (props.basic ? \"1px\" : \"0\")};\r\n  border-style: ${props => props.basic && \"solid\"};\r\n  border-color: ${props =>\r\n    props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : props.default\r\n      ? ({ theme }) => theme.dark\r\n      : ({ theme }) => theme.blue};\r\n      \r\n  color: ${props => (props.color ? props.color : ({ theme }) => theme.light)};\r\n\r\n  background: ${props =>\r\n    props.basic\r\n      ? \"transparent\"\r\n      : props.alert\r\n      ? ({ theme }) => theme.red\r\n      : props.warning\r\n      ? ({ theme }) => theme.yellow\r\n      : props.confirm\r\n      ? ({ theme }) => theme.green\r\n      : props.primary\r\n      ? ({ theme }) => theme.primary\r\n      : ({ theme }) => theme.blue};\r\n\r\n  ${props =>\r\n    props.disabled &&\r\n    \"background: #E9E4F0; color: #D3CCE3; &:hover:{opacity: 1}\"}\r\n\r\n  font-weight: 700;\r\n  outline: 0;\r\n\r\n  &:hover {\r\n   opacity: 0.8;\r\n  }\r\n\r\n  &:focus {\r\n    background: darken(${({ theme }) => theme.dark}, 12%);\r\n    outline: 0;\r\n  }\r\n\r\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n  transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:active {\r\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\r\n  }\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 200px;\r\n    height: 200px;\r\n    margin-left: -100px;\r\n    margin-top: -100px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 100%;\r\n    transform: scale(0);\r\n  }\r\n\r\n  &:not(:active):after {\r\n    animation: ${ripple} 0.6s ease-out;\r\n  }\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n  }\r\n\r\n  &:focus:after {\r\n    visibility: visible;\r\n  }\r\n\r\n  a{\r\n    color: #fff;\r\n    &:hover: #fff\r\n  }\r\n`;\r\n\r\nexport const DButtonCancel = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.red};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #1CA7EC\"\r\n      : props.basic\r\n      ? \"2px solid #f12711\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n\r\n  &:hover {\r\n    background: ${props => props.basic && (({ theme }) => theme.red)};\r\n    color: ${props => props.basic && (({ theme }) => theme.light)};\r\n  }\r\n`;\r\n\r\nexport const DButtonConfirm = styled(DButton)`\r\n  background: ${props =>\r\n    props.background\r\n      ? props.background\r\n      : props.basic\r\n      ? \"transparent\"\r\n      : ({ theme }) => theme.green};\r\n\r\n  border: ${props =>\r\n    props.border\r\n      ? \"2px solid #0f9b0f\"\r\n      : props.basic\r\n      ? \"2px solid #0f9b0f\"\r\n      : \"0\"};\r\n\r\n  color: ${props =>\r\n    props.color\r\n      ? props.color\r\n      : props.basic\r\n      ? \"inherit\"\r\n      : ({ theme }) => theme.light};\r\n`;\r\n// LABELS\r\nexport const DLabel = styled.label`\r\n  font-size: ${props => (props.size ? props.size : \"12px\")};\r\n  color: ${props => (props.color ? props.color : \"#000\")};\r\n  letter-spacing: ${props => (props.ls ? props.ls : \"1px\")};\r\n  font-weight: ${props => props.weight && props.weight};\r\n  padding: ${props => (props.pad ? props.pad : \"5px 10px\")};\r\n  margin: ${props => (props.m ? props.m : \"1%\")};\r\n  background: ${props => props.bgcolor && props.bgcolor};\r\n  border-radius: ${props => props.rounded && \"10px\"};\r\n  text-transform: ${props => props.tt && props.tt};\r\n  width: ${props => (props.w ? props.w : \"auto\")};\r\n  display: ${props => props.flex && \"flex\"};\r\n  justify-content: ${props =>\r\n    props.justifyCenter\r\n      ? \"center\"\r\n      : props.justifyAround\r\n      ? \"space-around\"\r\n      : props.justifyBetween\r\n      ? \"space-between\"\r\n      : props.jusitfyFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n\r\n  align-items: ${props =>\r\n    props.alignCenter\r\n      ? \"center\"\r\n      : props.alignAround\r\n      ? \"space-around\"\r\n      : props.alignBetween\r\n      ? \"space-between\"\r\n      : props.alignFend\r\n      ? \"flex-end\"\r\n      : \"flex-start\"};\r\n  flex-direction: ${props => props.fcol && \"column\"};\r\n\r\n  &:hover {\r\n    opacity: ${props => props.hover && \"0.8\"};\r\n    cursor: ${props => props.hover && \"pointer\"};\r\n  }\r\n`;\r\n\r\n// ACCORDION\r\n\r\nexport const NavItem = styled.div`\r\n  width: 90%;\r\n  a {\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      color: white;\r\n      background: ${({ theme }) => theme.blue};\r\n      opacity: 0.9;\r\n    }\r\n\r\n    &.active {\r\n      background: ${({ theme }) => theme.bluer};\r\n    }\r\n  }\r\n  span {\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const DAccordion = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90%;\r\n\r\n  .accordion-title {\r\n    background: ${props => (props.bg ? props.bg : ({ theme }) => theme.dark)};\r\n    color: ${props => (props.color ? props.color : \"#fff\")};\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: ${props =>\r\n      props.oblong ? \"25px\" : props.rounded ? \"15px\" : \"0\"};\r\n    transition: background-color 0.6s ease;\r\n\r\n    &:hover,\r\n    &.active {\r\n      background: ${props =>\r\n        props.activeBg ? props.activeBg : ({ theme }) => theme.blue};\r\n      color: ${props =>\r\n        props.hoverColorText ? props.hoverColorText : \"#232323\"};\r\n    }\r\n\r\n    .accordion-icon {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: transform 0.6s ease;\r\n    }\r\n\r\n    p {\r\n      font-size: ${props => (props.fs ? props.fs : \"12px\")};\r\n      font-weight: 500;\r\n      padding: ${props => (props.pad ? props.pad : \"10px 20px\")};\r\n      text-transform: ${props =>\r\n        props.uc ? \"uppercase\" : props.lc ? \"lowercase\" : \"capitalize\"};\r\n      margin: 0;\r\n      width: 95%;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      justify-content: flex-start;\r\n      letter-spacing: 1.5px;\r\n\r\n      .acc-icon {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n\r\n    .rotate {\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .accordion-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    transition: max-height 0.4s ease-in-out;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 5px;\r\n      transition: margin-left 0.2s linear;\r\n      &:hover {\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 16px;\r\n      padding-left: 20px;\r\n\r\n      &:hover {\r\n        color: white;\r\n        background: ${({ theme }) => theme.blue};\r\n        opacity: 0.9;\r\n      }\r\n\r\n      &.active {\r\n        color: white;\r\n        background: ${({ theme }) => theme.bluer};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Toasted = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background: ${props =>\r\n    props.status === \"error\"\r\n      ? \"rgba(229, 80, 57,0.9)\"\r\n      : props.status === \"success\"\r\n      ? \"rgba(46, 213, 115,0.9)\"\r\n      : props.status === \"warning\"\r\n      ? \"rgba(254, 211, 48,0.9)\"\r\n      : \"rgba(69, 170, 242,1.0)\"};\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  padding: 2%;\r\n  position: relative;\r\n\r\n  .description {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .close {\r\n    height: 100%;\r\n    padding: 1%;\r\n    border-left: 1px solid rgba(245, 246, 250, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 1%;\r\n    top: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.p`\r\n  text-align: right;\r\n  cursor: pointer !important;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.secondary};\r\n    display: inline-block;\r\n    position: relative;\r\n    font-weight: 700;\r\n    &:after {\r\n      content: \"\\f061\";\r\n      font-family: FontAwesome;\r\n      ${props =>\r\n        props.hover === 0\r\n          ? \"margin-left: 5px;opacity: 1;\"\r\n          : \"margin-left: -10px; opacity: 0;\"};\r\n      vertical-align: middle;\r\n      transition: margin 0.3s, opacity 0.3s;\r\n    }\r\n    &:hover {\r\n      &:after {\r\n        margin-left: 5px;\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScrollUp = styled(Icon)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  height: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: block;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../util/graphql/cms\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DShowCase, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Showcase = ({ nextSection }) => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState([]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\"\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(nextSection);\r\n  };\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }} id=\"home\">\r\n      <DButton\r\n        onClick={scrollDown}\r\n        basic\r\n        circle\r\n        default\r\n        size=\"48px\"\r\n        width=\"48px\"\r\n        pad=\"auto\"\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"20px\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%,-50%)\",\r\n          zIndex: 5\r\n        }}\r\n      >\r\n        <Icon\r\n          name=\"chevron down\"\r\n          size=\"large\"\r\n          circular\r\n          style={absoluteCenter}\r\n        />\r\n      </DButton>\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"90vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcaseData &&\r\n            showcaseData.contentManagements.map(sc => (\r\n              <DShowCase\r\n                height=\"90vh\"\r\n                key={sc._id}\r\n                background={\r\n                  sc.photo !== null || sc.photo !== undefined\r\n                    ? `/images/cms/home/${sc.photo}`\r\n                    : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n              >\r\n                <Overlay\r\n                  bg={\r\n                    \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                  }\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h1>Z Essence Facial & Spa</h1>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                      Quisquam, doloribus.\r\n                    </p>\r\n                    <Link to=\"/zessence\" className=\"btn\">\r\n                      Book Appointment\r\n                    </Link>\r\n                  </div>\r\n                </Overlay>\r\n              </DShowCase>\r\n            ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  height: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  display: \"block\"\r\n};\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DGrid, DSection } from \"../../styled/containers\";\r\n\r\nconst CategoryCards = ({ cards, setRef }) => {\r\n  return (\r\n    <DSection width=\"90%\" height=\"100%\" margin=\"24px auto\" ref={setRef}>\r\n      <h1>What We Offer</h1>\r\n      <DGrid four margin=\"0 0 40px 0\" gap=\"20px\">\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"/images/category/face.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n              alt=\"category\"\r\n            />\r\n            <h3>Skin Care</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"/images/category/foot.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n              alt=\"category\"\r\n            />\r\n            <h3>Healt Spa</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"/images/category/foot.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n              alt=\"category\"\r\n            />\r\n            <h3>Healt Spa</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"card-details\">\r\n            <img\r\n              src=\"/images/category/wax.png\"\r\n              width=\"64px\"\r\n              height=\"64px\"\r\n              alt=\"category\"\r\n            />\r\n            <h3>Waxing</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi\r\n              eaque ducimus cumque aliquid dolore! Perspiciatis?\r\n            </p>\r\n            <Link to=\"/\">Learn More</Link>\r\n          </div>\r\n        </div>\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default CategoryCards;\r\n","import gql from \"graphql-tag\";\r\n\r\n// EMPLOYEES\r\n\r\nconst FETCH_ALL_EMPLOYEES_QUERY = gql`\r\n  query employees {\r\n    employees {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEES_NOT_ADMIN_QUERY = gql`\r\n  query aestheticiansReceps($limit: Int) {\r\n    aestheticiansReceps(limit: $limit) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      bio\r\n      role\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_EMPLOYEE_QUERY = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      dateOfBirth\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-EMPLOYEES\r\n\r\nexport {\r\n  FETCH_ALL_EMPLOYEES_QUERY,\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const JCard = styled.figure`\r\n  background-color: #fff;\r\n  color: #ffffff;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  max-width: 100%;\r\n  min-width: 200px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: left;\r\n  width: 100%;\r\n  -webkit-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  img {\r\n    backface-visibility: hidden;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    content: \"\";\r\n    background-color: #fe8c00;\r\n    opacity: 0.5;\r\n    -webkit-transition: all 0.45s ease;\r\n    transition: all 0.45s ease;\r\n  }\r\n\r\n  &:before {\r\n    -webkit-transform: skew(30deg) translateX(-80%);\r\n    transform: skew(30deg) translateX(-80%);\r\n  }\r\n\r\n  &:after {\r\n    -webkit-transform: skew(-30deg) translateX(-70%);\r\n    transform: skew(-30deg) translateX(-70%);\r\n  }\r\n\r\n  figcaption {\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    z-index: 1;\r\n    bottom: 0;\r\n    padding: 25px 40% 25px 20px;\r\n  }\r\n\r\n  figcaption:before,\r\n  figcaption:after {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: #2193b0;\r\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\r\n    content: \"\";\r\n    opacity: 0.5;\r\n    z-index: -1;\r\n  }\r\n\r\n  figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-100%);\r\n    transform: skew(30deg) translateX(-100%);\r\n  }\r\n\r\n  figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-90%);\r\n    transform: skew(-30deg) translateX(-90%);\r\n  }\r\n\r\n  h3,\r\n  p {\r\n    margin: 0;\r\n    opacity: 0;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  h3 {\r\n    font-family: \"Teko\", sans-serif;\r\n    font-size: 36px;\r\n    font-weight: 700;\r\n    line-height: 1em;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  p {\r\n    font-size: 0.9em;\r\n  }\r\n\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  &:hover h3,\r\n  &.hover h3,\r\n  &:hover p,\r\n  &.hover p {\r\n    -webkit-transform: translateY(0);\r\n    transform: translateY(0);\r\n    opacity: 0.9;\r\n    -webkit-transition-delay: 0.2s;\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover:before,\r\n  &.hover:before {\r\n    -webkit-transform: skew(30deg) translateX(-20%);\r\n    transform: skew(30deg) translateX(-20%);\r\n    -webkit-transition-delay: 0.05s;\r\n    transition-delay: 0.05s;\r\n  }\r\n\r\n  &:hover:after,\r\n  &.hover:after {\r\n    -webkit-transform: skew(-30deg) translateX(-10%);\r\n    transform: skew(-30deg) translateX(-10%);\r\n  }\r\n\r\n  &:hover figcaption:before,\r\n  &.hover figcaption:before {\r\n    -webkit-transform: skew(30deg) translateX(-40%);\r\n    transform: skew(30deg) translateX(-40%);\r\n    -webkit-transition-delay: 0.15s;\r\n    transition-delay: 0.15s;\r\n  }\r\n\r\n  &:hover figcaption:after,\r\n  &.hover figcaption:after {\r\n    -webkit-transform: skew(-30deg) translateX(-30%);\r\n    transform: skew(-30deg) translateX(-30%);\r\n    -webkit-transition-delay: 0.1s;\r\n    transition-delay: 0.1s;\r\n  }\r\n`;\r\n\r\nexport const JCard2 = styled.div`\r\n    position: relative;\r\n    z-index: 1;\r\n    display: block;\r\n    background: #fff;\r\n    max-width: 100%;\r\n    min-width: 240px;\r\n    height: 400px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: ${props =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n\r\n    .thumbnail {\r\n      width: 100%;\r\n      height:100%;\r\n      overflow: hidden;\r\n      border-radius: 10px 10px 0 0;\r\n      background: #eee;\r\n      img {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n       object-fit: cover;\r\n      }\r\n    }\r\n\r\n \r\n    .post-content {\r\n      position: absolute;\r\n      bottom: 0;\r\n      background: #fff;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border-radius: 0 0 10px 10px;\r\n      .category {\r\n        position: absolute;\r\n        top: -40px;\r\n        left: 0;\r\n        background: ${({ theme }) => theme.secondary};\r\n        padding: 10px 15px;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n      }\r\n      .title {\r\n        color: #ccc;\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n      }\r\n      .sub_title {\r\n        margin: 0;\r\n        padding: 0 0 20px;\r\n        color: ${({ theme }) => theme.secondary};\r\n        font-size: 16px;\r\n        font-weight: 400;\r\n      }\r\n\r\n      .description {\r\n          height: 10px;\r\n          margin-top: 12px;\r\n         \r\n          &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n            background-color: #f5f5f5;\r\n          }\r\n\r\n          &::-webkit-scrollbar {\r\n            width: 10px;\r\n            background-color: #f5f5f5;\r\n          }\r\n          &::-webkit-scrollbar-thumb {\r\n            background-image: -webkit-gradient(\r\n              linear,\r\n              left bottom,\r\n              left top,\r\n              color-stop(0.44, rgb(122, 153, 217)),\r\n              color-stop(0.72, rgb(73, 125, 189)),\r\n              color-stop(0.86, rgb(28, 58, 148))\r\n            );\r\n          }\r\n        \r\n          p{\r\n            color: #232323;\r\n            font-size: 14px;\r\n            line-height: 1.8em;\r\n            opacity: 0;\r\n            \r\n            pointer-events: none;\r\n            transition: all 0.45s ease;\r\n            &:first-of-type {\r\n              margin-top: 1.25rem;\r\n              &:before {\r\n                content: \"\";\r\n                position: absolute;\r\n                height: 5px;\r\n                background: ${({ theme }) => theme.blue};\r\n                width: 35px;\r\n                top: -0.75rem;\r\n                border-radius: 3px;\r\n              }\r\n            }\r\n          }\r\n        \r\n        }\r\n     \r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .thumbnail {\r\n        background-color: #000;\r\n    \r\n        img {\r\n          -webkit-transform: scale(1.1);\r\n          -moz-transform: scale(1.1);\r\n          transform: scale(1.1);\r\n          opacity: 0.8;\r\n          transition: all 0.8s ease-in;\r\n        }\r\n        transition: all 0.8s ease-in-out;\r\n\r\n      }\r\n      .post-content{\r\n        .description{\r\n          height: 175px;\r\n          transition: height 0.6s ease-in-out;\r\n          overflow: ${props => props.oflow && \"auto\"};\r\n          p{\r\n            cursor: default;\r\n            pointer-events: auto;\r\n            -webkit-transform: translateY(0);\r\n            transform: translateY(0);\r\n            opacity: 0.9;\r\n            -webkit-transition-delay: 0.6s;\r\n            transition-delay: 0.6s;\r\n          }\r\n         \r\n        }\r\n        \r\n      }\r\n     \r\n\r\n    }\r\n  \r\n`;\r\n\r\nexport const JCard3 = styled.div`\r\n  .description {\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background: #fff;\r\n    z-index: 1;\r\n\r\n    h1 {\r\n      line-height: 1;\r\n      margin: 0;\r\n      font-size: 1.7rem;\r\n    }\r\n    h4 {\r\n      font-size: 1rem;\r\n      font-weight: 300;\r\n      text-transform: capitalize;\r\n      color: #a2a2a2;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      margin: 1rem 0 0;\r\n      font-size: 16px;\r\n      &:first-of-type {\r\n        margin-top: 1.25rem;\r\n        &:before {\r\n          content: \"\";\r\n          position: absolute;\r\n          height: 5px;\r\n          background: ${({ theme }) => theme.blue};\r\n          width: 35px;\r\n          top: -0.75rem;\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const JCard4 = styled.figure`\r\n  position: relative;\r\n  margin: 10px;\r\n  min-width: 230px;\r\n  max-width: 315px;\r\n  width: 100%;\r\n  height: ${props => props.height && props.height};\r\n  color: #000000;\r\n  text-align: center;\r\n  line-height: 1.4em;\r\n  font-size: 14px;\r\n\r\n  & * {\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .profile-image {\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 300px;\r\n    z-index: 1;\r\n    position: relative;\r\n    margin: ${props => props.margin && props.margin};\r\n    top: ${props => props.top && props.top};\r\n    right: ${props => props.right && props.right};\r\n    bottom: ${props => props.bottom && props.bottom};\r\n    left: ${props => props.left && props.left};\r\n    padding: 10px;\r\n    border: 2px solid #6dd5ed;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      vertical-align: top;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    .profile-image {\r\n      border-color: #2193b0;\r\n    }\r\n    figcaption {\r\n      box-shadow: ${props =>\r\n        props.bs\r\n          ? props.bs\r\n          : (\"0 1px 1px rgba(0, 0, 0, 0.22)\",\r\n            \"0 2px 2px rgba(0, 0, 0, 0.22)\",\r\n            \"0 4px 4px rgba(0, 0, 0, 0.22)\",\r\n            \"0 6px 8px rgba(0, 0, 0, 0.22)\",\r\n            \"0 8px 16px rgba(0, 0, 0, 0.22)\")};\r\n    }\r\n  }\r\n\r\n  figcaption {\r\n    width: 100%;\r\n    height: 250px;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    padding: 125px 25px 25px;\r\n    margin-top: -100px;\r\n    display: inline-block;\r\n    box-shadow: ${props =>\r\n      props.bs\r\n        ? props.bs\r\n        : (\"0 1px 1px rgba(0, 0, 0, 0.11)\",\r\n          \"0 2px 2px rgba(0, 0, 0, 0.11)\",\r\n          \"0 4px 4px rgba(0, 0, 0, 0.11)\",\r\n          \"0 6px 8px rgba(0, 0, 0, 0.11)\",\r\n          \"0 8px 16px rgba(0, 0, 0, 0.11)\")};\r\n\r\n    h3,\r\n    h4,\r\n    p {\r\n      margin: 0 0 5px;\r\n    }\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n      font-size: 1.3em;\r\n    }\r\n\r\n    h4 {\r\n      color: #8c8c8c;\r\n      font-weight: 400;\r\n      letter-spacing: 2px;\r\n    }\r\n\r\n    p {\r\n      font-size: 0.9em;\r\n      letter-spacing: 1px;\r\n      opacity: 0.9;\r\n    }\r\n\r\n    .icons {\r\n      text-align: center;\r\n      width: 100%;\r\n    }\r\n  }\r\n  .linkToPage {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ReadMore as RM } from \"../../styled/utils\";\r\n\r\nconst ReadMore = props => {\r\n  return (\r\n    <RM {...props}>\r\n      <span>{props.children}</span>\r\n    </RM>\r\n  );\r\n};\r\n\r\nexport default ReadMore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n} from \"../../styled/containers\";\r\nimport { JCard4 } from \"../../styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst Team = ({ cards }) => {\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 4\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  return (\r\n    <DSection\r\n      width=\"90%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      height=\"100%\"\r\n      margin=\"48px auto\"\r\n    >\r\n      <h1 style={{ marginBottom: \"24px\" }}>Our Team</h1>\r\n      <DGrid four margin=\"0 auto\" gap=\"25px\" style={{ marginBottom: \"24px\" }}>\r\n        {loading_employeesAR ? (\r\n          <>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n            <div style={styles.dloading}>\r\n              <Skeleton width=\"150px\" height=\"150px\" circle={true} />\r\n              <Skeleton width=\"250px\" count={4} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          employeesAR &&\r\n          employeesAR.map(employee => (\r\n            <JCard4 data-emp={employee._id}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n              <figcaption>\r\n                <h3>\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </h3>\r\n                <h4>{employee.role}</h4>\r\n                <p>\r\n                  {employee.bio.length > 50\r\n                    ? parser(employee.bio.substr(0, 50) + \"...\")\r\n                    : parser(employee.bio.substr(0, 50))}\r\n                </p>\r\n                <ReadMore hover={0}>Read More</ReadMore>\r\n              </figcaption>\r\n              <Link to=\"/zessence/about\" className=\"linkToPage\" />\r\n            </JCard4>\r\n          ))\r\n        )}\r\n      </DGrid>\r\n      <Link to=\"/zessence/about\" className=\"btn btn-blue\">\r\n        Learn More\r\n      </Link>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  dloading: {\r\n    display: \"flex\",\r\n    justifyContent: \"centet\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"250px\",\r\n    lineHeight: 2\r\n  }\r\n};\r\n\r\nexport default Team;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Section2Styled } from \"../../styled/containers\";\r\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\r\n\r\nconst Section2 = ({ nextSection }) => {\r\n  let section2 = useRef(null);\r\n  let images = useRef(null);\r\n  let tl = new TimelineLite();\r\n\r\n  const animate = () => {\r\n    const img1 = images.firstElementChild;\r\n    const img2 = images.lastElementChild;\r\n\r\n    TweenMax.to(section2, 0, { css: { visibility: \"visible\" } });\r\n\r\n    tl.from(img1, 1.2, { y: 1280, ease: Power3.easeOut })\r\n      .from(\r\n        img1.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      )\r\n      .from(img2, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2)\r\n      .from(\r\n        img2.firstElementChild,\r\n        2,\r\n        { scale: 1.6, ease: Power3.easeOut },\r\n        0.2\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Images vars\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <Section2Styled ref={el => (section2 = el)}>\r\n      <div className=\"sec2-container\" ref={nextSection}>\r\n        <div className=\"sec2-inner\">\r\n          <div className=\"sec2-content\">\r\n            <div className=\"sec2-content_inner\">\r\n              <h1>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Z Essence</div>\r\n                </div>\r\n                <div className=\"sec2-content_line\">\r\n                  <div className=\"sec2-content_line-inner\">Facial & Spa</div>\r\n                </div>\r\n              </h1>\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Totam\r\n                labore dolore ad nemo, veritatis iure mollitia impedit. Quod, id\r\n                tempore?\r\n                <Link to=\"/zessence/appointment\">Learn More</Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"sec2-images\">\r\n            <div className=\"sec2-images_inner\" ref={el => (images = el)}>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n              <div className=\"sec2-image imgs\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/3779501/pexels-photo-3779501.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Section2Styled>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <DSection\r\n      background={\r\n        \"https://images.pexels.com/photos/735552/pexels-photo-735552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      pad=\"100px 0 0 30px\"\r\n      className=\"dark\"\r\n    >\r\n      <Content>\r\n        <h2>Simply Beauty</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias\r\n          aliquam culpa veniam harum deleniti nihil, aut quasi ipsam minus.\r\n          Quidem!\r\n        </p>\r\n        <Link to=\"/\" className=\"btn\">\r\n          Book Now!\r\n        </Link>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default Section3;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { ScrollUp, DButton } from \"../../styled/utils\";\r\nimport \"./scroll.css\";\r\n\r\nclass ScrollButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(\r\n      0,\r\n      window.pageYOffset - (this.props.scrollPx ? this.props.scrollPx : \"100\")\r\n    );\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(\r\n      this.scrollStep.bind(this),\r\n      this.props.delay ? this.props.delay : \"16.66\"\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        title=\"Back to top\"\r\n        className=\"scroll\"\r\n        onClick={() => {\r\n          this.scrollToTop();\r\n        }}\r\n      >\r\n        <ScrollUp name=\"chevron up\" size=\"large\" className=\"arrow-up\" />\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default ScrollButton;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Showcase from \"../../components/main/home/Showcase\";\r\nimport CategoryCards from \"../../components/main/home/CategoryCards\";\r\nimport Team from \"../../components/main/home/Team\";\r\nimport Section2 from \"../../components/main/home/Section2\";\r\nimport Section3 from \"../../components/main/home/Section3\";\r\nimport { DContainer } from \"../../components/styled/containers\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Home = () => {\r\n  const nextSection = useRef();\r\n  const card1 = \"/images/card1.jpg\";\r\n  const scrolling = useScroll(300);\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton />}\r\n      <Showcase nextSection={nextSection} />\r\n\r\n      <Section2 nextSection={nextSection} />\r\n\r\n      <CategoryCards cards={card1} />\r\n\r\n      <Team cards={card1} />\r\n      {/* Carbon */}\r\n      <Section3 />\r\n      <section className=\"follow\">\r\n        <p>Follow Z Essence</p>\r\n        <Link to=\"/\">\r\n          <h4>Facebook</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>Twitter</h4>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <h4>LinkedIn</h4>\r\n        </Link>\r\n      </section>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { DGrid, DSection, Content, DImage } from \"../../styled/containers\";\r\n\r\nconst Story = ({ content }) => {\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        margin=\"24px auto 0 auto\"\r\n        ref={content}\r\n        id=\"story\"\r\n      >\r\n        <DGrid two>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"24px\"\r\n          >\r\n            <h3>Our Mission</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero\r\n              quia at alias reiciendis voluptatum illo quidem natus quod porro\r\n              voluptatem? Obcaecati totam libero rerum nihil nemo, iusto aliquid\r\n              repellendus repudiandae?\r\n            </p>\r\n            <h3>Our Vision</h3>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero\r\n              quia at alias reiciendis voluptatum illo quidem natus quod porro\r\n              voluptatem? Obcaecati totam libero rerum nihil nemo, iusto aliquid\r\n              repellendus repudiandae?\r\n            </p>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DGrid gap=\"20px\">\r\n              <DImage height=\"100%\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </DImage>\r\n            </DGrid>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" mcenter>\r\n        <DGrid two>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n            width=\"90%\"\r\n            height=\"100%\"\r\n            margin=\"0 auto\"\r\n            pad=\"24px\"\r\n          >\r\n            <DGrid gap=\"20px\">\r\n              <DImage height=\"250px\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </DImage>\r\n              <DImage height=\"250px\">\r\n                <img\r\n                  src=\"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                  alt=\"about\"\r\n                />\r\n              </DImage>\r\n            </DGrid>\r\n          </Content>\r\n          <Content\r\n            flex\r\n            justify=\"flex-start\"\r\n            align=\"center\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            direct=\"column\"\r\n            pad=\"20px\"\r\n            style={{ maxHeight: \"90vh\" }}\r\n          >\r\n            <h3>Our Story</h3>\r\n            <p\r\n              style={{\r\n                fontSize: \"15px\",\r\n                letterSpacing: \"2px\",\r\n                lineHeight: 1.8,\r\n                textAlign: \"justify\",\r\n                overflowWrap: \"break-word\",\r\n                overflow: \"auto\",\r\n                padding: \"10px\"\r\n              }}\r\n            >\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Vero\r\n              quia at alias reiciendis voluptatum illo quidem natus quod porro\r\n              voluptatem? Obcaecati totam libero rerum nihil nemo, iusto aliquid\r\n              repellendus repudiandae? Lorem ipsum dolor sit amet consectetur\r\n              adipisicing elit. Minima officiis nobis, nam voluptatem saepe\r\n              quidem aspernatur harum qui, esse quasi delectus, ipsa culpa\r\n              velit. Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n            </p>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport { JCard4, JCard3 } from \"../../styled/card\";\r\nimport parser from \"html-react-parser\";\r\nimport ReadMore from \"../../main/utils/ReadMore\";\r\n\r\nconst TeamDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleModal = event => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <JCard4 data-emp={employee._id} onClick={handleModal}>\r\n        <div className=\"profile-image\">\r\n          <img\r\n            src={\r\n              employee.photo\r\n                ? `/images/employees/${employee.photo}`\r\n                : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n            }\r\n            alt={employee.photo}\r\n          />\r\n        </div>\r\n        <figcaption>\r\n          <h3>\r\n            {employee.title} {employee.firstName} {employee.lastName}\r\n          </h3>\r\n          <h4>{employee.role}</h4>\r\n          <p>\r\n            {employee.bio.length > 50\r\n              ? parser(employee.bio.substr(0, 50) + \"...\")\r\n              : parser(employee.bio.substr(0, 50))}\r\n          </p>\r\n          <ReadMore hover={0}>Read More</ReadMore>\r\n          <div className=\"icons\">\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-reddit\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"ion-social-vimeo\"></i>\r\n            </a>\r\n          </div>\r\n        </figcaption>\r\n      </JCard4>\r\n      <Modal size=\"small\" open={open} onClose={() => setOpen(false)} closeIcon>\r\n        <DGrid two>\r\n          <Modal.Content>\r\n            <JCard4 top={\"-60px\"}>\r\n              <div className=\"profile-image\">\r\n                <img\r\n                  src={\r\n                    employee.photo\r\n                      ? `/images/employees/${employee.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample83.jpg\"\r\n                  }\r\n                  alt={employee.photo}\r\n                />\r\n              </div>\r\n            </JCard4>\r\n          </Modal.Content>\r\n          <Modal.Content scrolling className=\"modal-content2\">\r\n            <JCard3>\r\n              <div className=\"description\">\r\n                <h1>{employee.firstName}</h1>\r\n                <h4>{employee.role}</h4>\r\n                <p style={{ letterSpacing: \"2px\", lineHeight: 1.5 }}>\r\n                  {parser(employee.bio)}\r\n                </p>\r\n              </div>\r\n            </JCard3>\r\n          </Modal.Content>\r\n        </DGrid>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { DGrid, DSection, Content } from \"../../styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport TeamDetails from \"./TeamDetails\";\r\n\r\nconst Team = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const { data: dataEmployees, loading: loadingEmployees } = useQuery(\r\n    FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataEmployees) {\r\n      setEmployees(dataEmployees.aestheticiansReceps);\r\n    }\r\n  }, [dataEmployees]);\r\n\r\n  return (\r\n    <>\r\n      <DSection\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        fixed\r\n        id=\"team\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n        >\r\n          <h3>Our TEAM</h3>\r\n        </Content>\r\n      </DSection>\r\n      <DSection\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        height=\"100%\"\r\n        width=\"90%\"\r\n        pad=\"10px 0\"\r\n        mcenter\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Content\r\n          height=\"100%\"\r\n          width=\"100%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DGrid three gap=\"20px\">\r\n            {loadingEmployees ? (\r\n              <>\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n                <Skeleton width={300} height={400} />\r\n              </>\r\n            ) : (\r\n              employees &&\r\n              employees.map(emp => <TeamDetails key={emp._id} employee={emp} />)\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, ScrollUp } from \"../../components/styled/utils\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport Story from \"../../components/main/about/Story\";\r\nimport Team from \"../../components/main/about/Team\";\r\n\r\nconst About = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\"\r\n      });\r\n  }\r\n\r\n  const pageDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"about\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>About Us</h1>\r\n          <h3>The Concept of Beauty</h3>\r\n          <DButton\r\n            onClick={pageDown}\r\n            basic\r\n            circle\r\n            default\r\n            size=\"58px\"\r\n            width=\"58px\"\r\n            pad=\"auto\"\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"20px\"\r\n            }}\r\n          >\r\n            <ScrollUp name=\"chevron down\" size=\"large\" circular />\r\n          </DButton>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Story content={content} />\r\n      <Team />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SignupForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const [register, { loading }] = useMutation(REGISTER_USER, {\r\n    update() {\r\n      hist.push(from);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function registerCallBack() {\r\n    register();\r\n  }\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Create a free account</h2>\r\n\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field error={errors.firstName ? true : false}>\r\n            <label>First Name</label>\r\n            {errors.firstName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.firstName}\r\n              </Label>\r\n            )}\r\n\r\n            <Input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"First name\"\r\n            />\r\n          </Form.Field>\r\n\r\n          <Form.Field error={errors.lastName ? true : false}>\r\n            <label>Last Name</label>\r\n            {errors.lastName && (\r\n              <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n                {errors.lastName}\r\n              </Label>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              fluid\r\n              placeholder=\"Last name\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userTaken ? true : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n          {errors.email || errors.emailX || errors.userTaken ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userTaken}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            placeholder=\"example@example.com\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.password || errors.confirmPassword || errors.pwdShort\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.pwdShort || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.pwdShort || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            placeholder=\"**********\"\r\n          />\r\n        </Form.Field>\r\n        <Form.Field\r\n          error={\r\n            errors.confirmPasswordEmpty || errors.confirmPassword ? true : false\r\n          }\r\n        >\r\n          <label>Confirm Password</label>\r\n          {errors.confirmPasswordEmpty || errors.confirmPassword ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.confirmPasswordEmpty || errors.confirmPassword}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"************\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Create an account\"\r\n          )}\r\n        </DButton>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signin\">\r\n            Already have an account? Sign in <Icon name=\"arrow right\" />\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      userInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n      }\r\n    )\r\n  }\r\n`;\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport SignupForm from \"../../components/main/authenticate/SignupForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  Overlay,\r\n  DContainer\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signup = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/home\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signup-custom\">\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <SignupForm from={from} hist={hist} />\r\n        </DSection>\r\n        <DSection\r\n          height=\"100%\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        >\r\n          <Content width=\"90%\" className=\"dark\" style={{ zIndex: 2 }}>\r\n            <h2>Sign Up</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n          <Overlay />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import gql from \"graphql-tag\";\r\n// APPOINTMENT\r\n\r\nconst FETCH_APPOINTMENTS_QUERY = gql`\r\n  query appointments {\r\n    appointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENTS = gql`\r\n  query myAppointments {\r\n    myAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_CURRENT_APPOINTMENTS = gql`\r\n  query myCurrentAppointment {\r\n    myCurrentAppointment {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_MY_APPOINTMENT_HISTORY = gql`\r\n  query myAppointmentHistory {\r\n    myAppointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CHECKED_APPOINTMENTS = gql`\r\n  query checkedAppointments($employeeId: ID!, $date: String!) {\r\n    checkedAppointments(employeeId: $employeeId, date: $date) {\r\n      _id\r\n      date\r\n      slot_start\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_APPOINTMENT_QUERY = gql`\r\n  query appointment($appointmentId: ID!) {\r\n    appointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CURRENT_APPOINTMENTS = gql`\r\n  query currentAppointments {\r\n    currentAppointments {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_HISTORY_APPOINTMENTS = gql`\r\n  query appointmentHistory {\r\n    appointmentHistory {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n        role\r\n        photo\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_APPOINTMENT_STATUS = gql`\r\n  query appointmentsByStatus($status: String!) {\r\n    appointmentsByStatus(status: $status) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n    }\r\n  }\r\n`;\r\n\r\n// END-APPOINTMENTS\r\n\r\nexport {\r\n  FETCH_APPOINTMENTS_QUERY,\r\n  FETCH_CHECKED_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENTS,\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_MY_APPOINTMENT_HISTORY,\r\n  FETCH_SINGLE_APPOINTMENT_QUERY,\r\n  FETCH_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS,\r\n  FETCH_APPOINTMENT_STATUS\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Dimmer, Loader, Label, Input } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst SigninForm = ({ hist, from }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { userLogin: userData } }) {\r\n      context.login(userData);\r\n    \r\n\r\n      values.email = \"\";\r\n      values.password = \"\";\r\n\r\n      return hist.push(from);\r\n    },\r\n    refetchQueries: [{ query: FETCH_MY_APPOINTMENTS }],\r\n    onCompleted(result) {\r\n      console.log(\"success\");\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    loginUser();\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\" flex justify=\"center\" margin=\"50px 0 80px 0\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>Account Login</h2>\r\n\r\n        <Form.Field\r\n          error={\r\n            errors.email || errors.emailX || errors.userX || errors.general\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <label>Email</label>\r\n\r\n          {errors.email || errors.emailX || errors.userX || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.email || errors.emailX || errors.userX || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"example@example.com\"\r\n            values={values.email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.general ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.general}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n        <div\r\n          style={{\r\n            marginTop: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: \"12px\",\r\n            fontWeight: \"700\"\r\n          }}\r\n        >\r\n          <Link to=\"/zessence/signup\">\r\n            <Icon name=\"arrow left\" />\r\n            Create your account\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst LOGIN_USER = gql`\r\n  mutation userLogin($email: String!, $password: String!) {\r\n    userLogin(email: $email, password: $password) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport SigninForm from \"../../components/main/authenticate/SigninForm\";\r\nimport {\r\n  DGrid,\r\n  Content,\r\n  DSection,\r\n  DContainer\r\n} from \"../../components/styled/containers\";\r\n\r\nconst Signin = props => {\r\n  const { from } = props.location.state || {\r\n    from: { pathname: \"/zessence/appointment\" }\r\n  };\r\n\r\n  const hist = props.history;\r\n\r\n  return (\r\n    <DContainer>\r\n      <DGrid two className=\"signin-custom\">\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"0\"\r\n          background={\r\n            \"https://images.pexels.com/photos/458766/pexels-photo-458766.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n          className=\"signin-left\"\r\n        >\r\n          <Content width=\"90%\">\r\n            <h2>Sign In</h2>\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Impedit\r\n              magnam in veniam cupiditate voluptatem, aspernatur quod nesciunt\r\n              est, iure iusto ea voluptatum illo quaerat voluptas exercitationem\r\n              repudiandae tempore alias ratione.\r\n            </p>\r\n          </Content>\r\n        </DSection>\r\n        <DSection\r\n          height=\"100vh\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          className=\"signin-right\"\r\n        >\r\n          <SigninForm from={from} hist={hist} />\r\n        </DSection>\r\n      </DGrid>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_ALL_CATEGORIES_QUERY = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_CATEGORY_QUERY = gql`\r\n  query category($categoryId: ID!) {\r\n    category(_id: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END-CATEGORIES\r\n\r\n// SERVICES\r\n\r\nconst FETCH_ALL_SERVICES_QUERY = gql`\r\n  query allServices {\r\n    allServices {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      photo\r\n      description\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SERVICES_QUERY = gql`\r\n  query services($categoryId: ID) {\r\n    services(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        title\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_SINGLE_SERVICE_QUERY = gql`\r\n  query service($serviceId: ID!) {\r\n    service(_id: $serviceId) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        title\r\n        empId\r\n        firstName\r\n        lastName\r\n        email\r\n        contact\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// END _ SERVICES\r\n\r\nexport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n};\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst AppointDate = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two gap=\"10px\">\r\n      <Content\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        pad=\"0\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n        {data_employee && data_service ? (\r\n          loading_employee || loading_appointments || loading_service ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <DGrid two gap=\"20px\">\r\n              {!times ? (\r\n                <h2>Loading...</h2>\r\n              ) : (\r\n                times.map(time => (\r\n                  <div className=\"pretty p-default p-curve\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"time\"\r\n                      key={time}\r\n                      value={time}\r\n                      onChange={handleTimeChanged}\r\n                    />\r\n                    <div className=\"state p-info-o\">\r\n                      <label style={styles.label}>{time}</label>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </DGrid>\r\n          )\r\n        ) : (\r\n          \"Select Available Time\"\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default AppointDate;\r\n","import React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return <div>PAGE 404</div>;\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AppointmentInputs = ({\r\n  values,\r\n  setValues,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data_categories) {\r\n      setCategories(data_categories.categories);\r\n    }\r\n  }, [data_categories]);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: values.category\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_serviceEmp) {\r\n      setEmployees(data_serviceEmp.service.employees);\r\n    }\r\n  }, [data_serviceEmp]);\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setValues({ [e.target.name]: e.target.value });\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  if (error) {\r\n    return <Page404 />;\r\n  }\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"20px 0\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"80%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={values.category}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {categories &&\r\n                categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {services &&\r\n                services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {employees &&\r\n                employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AppointmentInputs;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst keyring = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\n// SPINNER\r\n\r\nexport const SpinnerRing = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n  height: ${props => (props.small ? \"30px\" : props.medium ? \"60px\" : \"80px\")};\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    height: ${props => (props.small ? \"24px\" : props.medium ? \"48px\" : \"64px\")};\r\n    margin: ${props => (props.small ? \"3px\" : props.medium ? \"6px\" : \"8px\")};\r\n    border: ${props =>\r\n      props.small\r\n        ? \"3px solid #fff\"\r\n        : props.medium\r\n        ? \"6px solid #fff\"\r\n        : \"8px  solid #fff\"};\r\n\r\n    border-radius: 50%;\r\n    animation: ${keyring} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: ${props =>\r\n      props.inverted\r\n        ? \"#fff transparent transparent transparent\"\r\n        : \"#fe8c00 transparent transparent transparent\"};\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SpinnerRing } from \"./styled/loader\";\r\nconst Spinner = ({ small, large, medium, inverted }) => {\r\n  return (\r\n    <SpinnerRing\r\n      small={small}\r\n      large={large}\r\n      medium={medium}\r\n      inverted={inverted}\r\n    >\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </SpinnerRing>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime\r\n}) => {\r\n  const history = useHistory();\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const [service, setService] = useState({});\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_service) {\r\n      setService(data_service.service);\r\n    }\r\n  }, [data_service]);\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createAppointment, { loading }] = useMutation(CREATE_NEW_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS\r\n      });\r\n\r\n      const newAppointment = result.data.createAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_CURRENT_APPOINTMENTS,\r\n        data: {\r\n          myCurrentAppointment: [newAppointment, ...data.myCurrentAppointment]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setOpen(false);\r\n      history.push(\"/zessence/verifynotice\");\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Successfully booked an appointment\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n\r\n      if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">\r\n              {err.graphQLErrors[0].extensions.exception.errors.check}\r\n            </span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    variables: {\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      message: addInfo\r\n    }\r\n  });\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Service\r\n            </DLabel>\r\n            {loading_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={service.name}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Aesthetician\r\n            </DLabel>\r\n            {!data_employee ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              data_employee.employee && (\r\n                <input\r\n                  value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                  readOnly\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              )\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Date\r\n            </DLabel>\r\n            <input\r\n              value={new Date(startDate).toDateString()}\r\n              readOnly\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Time\r\n            </DLabel>\r\n            <input value={selectedTime} readOnly style={{ width: \"60%\" }} />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Duration\r\n            </DLabel>\r\n            {!data_service ? (\r\n              <h6>Loading...</h6>\r\n            ) : (\r\n              <input\r\n                value={data_service.service.duration + \" min\"}\r\n                readOnly\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel bgcolor=\"#2193b0\" style={styles.label} rounded m=\"10px 0\">\r\n              Additional Info(optional)\r\n            </DLabel>\r\n            <textarea\r\n              name=\"message\"\r\n              value={addInfo}\r\n              onChange={handleMessage}\r\n            ></textarea>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_APPOINTMENT = gql`\r\n  mutation createAppointment(\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createAppointment(\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      message\r\n      date\r\n      slot_start\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\n// import { AuthContext } from \"../../context/auth\";\r\n\r\nimport AppointDate from \"../../components/main/appointment/AppointDate\";\r\nimport AppointmentInputs from \"../../components/main/appointment/AppointmentInputs\";\r\nimport {\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Confirmation from \"../../components/main/appointment/Confirmation\";\r\n\r\nconst Appointment = () => {\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <DGrid>\r\n      <DSection\r\n        height=\"40vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        className=\"dark\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"flex-end\"\r\n        width=\"100%\"\r\n      >\r\n        <h1 style={{ margin: \"24px\" }}>Appointment</h1>\r\n      </DSection>\r\n      <DSection width=\"100%\" height=\"100%\">\r\n        <DGrid two>\r\n            <DSection\r\n              width=\"100%\"\r\n              flex\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              background={\r\n                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              height=\"100vh\"\r\n            >\r\n              <Overlay\r\n                hovOpac=\"1\"\r\n                opac=\"0\"\r\n                bg={\"rgba(0,0,0,0.7)\"}\r\n                flex\r\n                jusitfy=\"center\"\r\n                align=\"center\"\r\n              >\r\n                <div className=\"overlay-box\">\r\n                  <div className=\"overlay-box__content dark\">\r\n                    <h1>Advertisement</h1>\r\n                  </div>\r\n                </div>\r\n              </Overlay>\r\n            </DSection>\r\n        \r\n          <DGrid>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <Content width=\"100%\" margin=\"20px 0\">\r\n              <DGrid>\r\n                <AppointDate\r\n                  setStartDate={setStartDate}\r\n                  setSelectedTime={setSelectedTime}\r\n                  selectedTime={selectedTime}\r\n                  startDate={startDate}\r\n                  employeeVal={employeeVal}\r\n                  serviceValue={serviceValue}\r\n                />\r\n                <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                  <DButton\r\n                    size=\"50px\"\r\n                    onClick={() => setOpen(true)}\r\n                    basic={\r\n                      (values.category === \"\" ||\r\n                        serviceValue === \"\" ||\r\n                        employeeVal === \"\" ||\r\n                        selectedTime === \"\") &&\r\n                      true\r\n                    }\r\n                    disabled={\r\n                      values.category === \"\" ||\r\n                      serviceValue === \"\" ||\r\n                      employeeVal === \"\" ||\r\n                      selectedTime === \"\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    Book an Appointment\r\n                  </DButton>\r\n                  <Confirmation\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    serviceValue={serviceValue}\r\n                    employeeVal={employeeVal}\r\n                    startDate={startDate}\r\n                    selectedTime={selectedTime}\r\n                  />\r\n                </Content>\r\n              </DGrid>\r\n            </Content>\r\n          </DGrid>\r\n        </DGrid>\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport MyGallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, ScrollUp } from \"../../components/styled/utils\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst photos = [\r\n  {\r\n    src: \"https://source.unsplash.com/2ShvY8Lf6l0/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/Dm-qxdynoEc/800x799\",\r\n    width: 1,\r\n    height: 1,\r\n    alt: \"Facility\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/qDkso9nvCg0/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/iecJiKe_RNg/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Operation\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/epcsn8Ed8kY/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/NQSWvyVRIJk/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/zh7GEuORbUw/600x799\",\r\n    width: 3,\r\n    height: 4,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/PpOHJezOalU/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  },\r\n  {\r\n    src: \"https://source.unsplash.com/I1ASdgphUH4/800x599\",\r\n    width: 4,\r\n    height: 3,\r\n    alt: \"Satisfied\"\r\n  }\r\n];\r\n\r\nconst Gallery = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\"\r\n      });\r\n  }\r\n\r\n  const pageDown = () => {\r\n    scrollView(content);\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n        id=\"gallery\"\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"38px\" }}>Gallery</h1>\r\n          <h3>Love Your Skin</h3>\r\n          <DButton\r\n            onClick={pageDown}\r\n            basic\r\n            circle\r\n            default\r\n            size=\"48px\"\r\n            width=\"48px\"\r\n            pad=\"auto\"\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"20px\"\r\n            }}\r\n          >\r\n            <ScrollUp name=\"chevron down\" size=\"large\" circular />\r\n          </DButton>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <DSection\r\n        height=\"100%\"\r\n        style={{ minHeight: \"100vh\" }}\r\n        width=\"80%\"\r\n        mcenter\r\n        pad=\"20px 0\"\r\n        ref={content}\r\n      >\r\n        <MyGallery photos={photos} onClick={openLightbox} />\r\n        <ModalGateway>\r\n          {viewerIsOpen ? (\r\n            <Modal onClose={closeLightbox}>\r\n              <Carousel\r\n                currentIndex={currentImage}\r\n                views={photos.map(x => ({\r\n                  ...x,\r\n                  srcset: x.srcSet,\r\n                  caption: x.title\r\n                }))}\r\n              />\r\n            </Modal>\r\n          ) : null}\r\n        </ModalGateway>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Contact = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const { values, handleChange, handleSubmit } = useForm(sendInquiryCallback, {\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n\r\n  const [sendInquiry, { loading }] = useMutation(SEND_INQUIRY, {\r\n    variables: {\r\n      name: values.name,\r\n      email: values.email,\r\n      subject: values.subject,\r\n      message: values.message,\r\n      to: values.email\r\n    },\r\n\r\n    update() {\r\n      values.name = \"\";\r\n      values.email = \"\";\r\n      values.subject = \"\";\r\n      values.message = \"\";\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  function sendInquiryCallback() {\r\n    sendInquiry();\r\n  }\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        height=\"300px\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <h1>Contact</h1>\r\n      </DSection>\r\n      <DSection height=\"100%\" width=\"90%\" margin=\"24px auto\">\r\n        <DGrid two>\r\n          <Content width=\"70%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form>\r\n              <Form.Field>\r\n                <label>Location</label>\r\n                <input\r\n                  value=\"Brgy. Zone 1 Malihan street\r\nDasmariñas, Cavite 4114\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Phone</label>\r\n                <input\r\n                  value=\"\r\n                  0926 652 4505\"\r\n                  readOnly\r\n                  style={{ border: \"0\", borderBottom: \"1px solid  #ccc\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"90%\" height=\"100%\" margin=\"0 auto\">\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Field>\r\n                <label>Name</label>\r\n                <input\r\n                  name=\"name\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Subject</label>\r\n                <input\r\n                  name=\"subject\"\r\n                  value={values.subject}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Message</label>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={values.message}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <DButton fluid type=\"submit\">\r\n                {loading ? <p>Loading...</p> : \"Send\"}\r\n              </DButton>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n        <Content\r\n          height=\"50vh\"\r\n          width=\"100%\"\r\n          bgcolor=\"#ccc\"\r\n          flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          Map\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nconst SEND_INQUIRY = gql`\r\n  mutation sendInquiry(\r\n    $name: String\r\n    $email: String\r\n    $to: String\r\n    $subject: String\r\n    $message: String\r\n  ) {\r\n    sendInquiry(\r\n      name: $name\r\n      email: $email\r\n      to: $to\r\n      subject: $subject\r\n      message: $message\r\n    ) {\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport Slider from \"react-slick\";\r\nimport \"./testimonial.css\";\r\n\r\nconst TestimonialCard = ({ content }) => {\r\n  const settings = {\r\n    dots: true,\r\n\r\n    infinite: true,\r\n    speed: 500,\r\n    rows: 2,\r\n    slidesPerRow: 3,\r\n    arrows: false\r\n  };\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\" mcenter ref={content}>\r\n      <Content width=\"100%\" height=\"100%\" pad=\"50px 0\">\r\n        <Slider {...settings}>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample5.jpg\"\r\n                alt=\"profile-sample5\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Gordon Norman</h4>\r\n                <h5>Accountant</h5>\r\n                <blockquote>\r\n                  Wormwood : Calvin, how about you? Calvin : Hard to say ma'am.\r\n                  I think my cerebellum has just fused.{\" \"}\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample6.jpg\"\r\n                alt=\"profile-sample6\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Sue Shei</h4>\r\n                <h5>Public Relations</h5>\r\n                <blockquote>\r\n                  The strength to change what I can, the inability to accept\r\n                  what I can't and the incapacity to tell the difference.\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample5.jpg\"\r\n                alt=\"profile-sample5\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Gordon Norman</h4>\r\n                <h5>Accountant</h5>\r\n                <blockquote>\r\n                  Wormwood : Calvin, how about you? Calvin : Hard to say ma'am.\r\n                  I think my cerebellum has just fused.{\" \"}\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample6.jpg\"\r\n                alt=\"profile-sample6\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Sue Shei</h4>\r\n                <h5>Public Relations</h5>\r\n                <blockquote>\r\n                  The strength to change what I can, the inability to accept\r\n                  what I can't and the incapacity to tell the difference.\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample5.jpg\"\r\n                alt=\"profile-sample5\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Gordon Norman</h4>\r\n                <h5>Accountant</h5>\r\n                <blockquote>\r\n                  Wormwood : Calvin, how about you? Calvin : Hard to say ma'am.\r\n                  I think my cerebellum has just fused.{\" \"}\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample6.jpg\"\r\n                alt=\"profile-sample6\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Sue Shei</h4>\r\n                <h5>Public Relations</h5>\r\n                <blockquote>\r\n                  The strength to change what I can, the inability to accept\r\n                  what I can't and the incapacity to tell the difference.\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample3.jpg\"\r\n                alt=\"profile-sample3\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Eleanor Crisp</h4>\r\n                <h5>UX Design</h5>\r\n                <blockquote>\r\n                  Dad buried in landslide! Jubilant throngs fill streets!\r\n                  Stunned father inconsolable - demands recount!\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample5.jpg\"\r\n                alt=\"profile-sample5\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Gordon Norman</h4>\r\n                <h5>Accountant</h5>\r\n                <blockquote>\r\n                  Wormwood : Calvin, how about you? Calvin : Hard to say ma'am.\r\n                  I think my cerebellum has just fused.{\" \"}\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n          <div className=\"testimonial-container\">\r\n            <figure className=\"testimonial\">\r\n              {/* <img\r\n                src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/profile-sample6.jpg\"\r\n                alt=\"profile-sample6\"\r\n                className=\"profile\"\r\n              /> */}\r\n              <figcaption>\r\n                <h4>Sue Shei</h4>\r\n                <h5>Public Relations</h5>\r\n                <blockquote>\r\n                  The strength to change what I can, the inability to accept\r\n                  what I can't and the incapacity to tell the difference.\r\n                </blockquote>\r\n              </figcaption>\r\n            </figure>\r\n          </div>\r\n        </Slider>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default TestimonialCard;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton, ScrollUp } from \"../../components/styled/utils\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\nimport TestimonialCard from \"../../components/main/testimonial/TestimonialCard\";\r\n\r\nconst Testimonials = () => {\r\n  const content = useRef();\r\n  const scrolling = useScroll(500);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\"\r\n      });\r\n  }\r\n\r\n  const pageDown = () => {\r\n    scrollView(content);\r\n  };\r\n  return (\r\n    <DContainer>\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\", fontWeight: 700 }}>\r\n            What Our Client Says\r\n          </h1>\r\n          {/* <h3>We continously improve our service</h3> */}\r\n          <DButton\r\n            onClick={pageDown}\r\n            basic\r\n            circle\r\n            default\r\n            size=\"48px\"\r\n            width=\"48px\"\r\n            pad=\"auto\"\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"20px\"\r\n            }}\r\n          >\r\n            <ScrollUp name=\"chevron down\" size=\"large\" circular />\r\n          </DButton>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <TestimonialCard content={content} />\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  Content,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport { DButton, ScrollUp } from \"../../components/styled/utils\";\r\nimport ScrollButton from \"../../components/main/utils/ScrollButton\";\r\nimport useScroll from \"../../util/hooks/useScroll\";\r\n\r\nconst Services = () => {\r\n  const sectionDown = useRef();\r\n  const scrolling = useScroll(500);\r\n  const [isCategories, setIsCategories] = useState([]);\r\n  const { data, loading } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  function scrollView(ref) {\r\n    if (ref.current)\r\n      ref.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\"\r\n      });\r\n  }\r\n\r\n  const scrollDown = () => {\r\n    scrollView(sectionDown);\r\n  };\r\n\r\n  return (\r\n    <DContainer id=\"services\">\r\n      {scrolling && <ScrollButton scrollPx=\"100\" delay=\"16.66\" />}\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"85vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          width=\"50%\"\r\n          margin=\"0 auto\"\r\n          height=\"100%\"\r\n          style={{ minWidth: \"90%\", textAlign: \"center\" }}\r\n          className=\"dark\"\r\n        >\r\n          <h1 style={{ fontSize: \"48px\" }}>Our Services</h1>\r\n          <h3>It's time to take care of your skin</h3>\r\n          <DButton\r\n            onClick={scrollDown}\r\n            basic\r\n            circle\r\n            default\r\n            size=\"48px\"\r\n            width=\"48px\"\r\n            pad=\"auto\"\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"20px\"\r\n            }}\r\n          >\r\n            <ScrollUp name=\"chevron down\" size=\"large\" circular />\r\n          </DButton>\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <DSection\r\n        width=\"90%\"\r\n        flex\r\n        justify=\"flex-start\"\r\n        align=\"flex-start\"\r\n        direct=\"column\"\r\n        mcenter\r\n        pad=\"24px\"\r\n        height=\"100%\"\r\n        ref={sectionDown}\r\n      >\r\n        <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n          <DGrid three gap=\"24px\" med7={\"1fr\"}>\r\n            {loading ? (\r\n              <>\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n                <Skeleton width={400} height={300} />\r\n              </>\r\n            ) : (\r\n              isCategories.map(category => (\r\n                <JCard>\r\n                  <img\r\n                    src={\r\n                      category.photo !== null\r\n                        ? `/images/service/${category.photo}`\r\n                        : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                    }\r\n                    alt={category.name}\r\n                  />\r\n                  <figcaption>\r\n                    <h3>{parser(category.name)}</h3>\r\n                    <div className=\"description\">\r\n                      <p>\r\n                        {category.description.length > 100\r\n                          ? parser(category.description.substr(0, 100) + \"...\")\r\n                          : parser(category.description.substr(0, 100))}\r\n                      </p>\r\n                      <ReadMore hover={0}>View Services</ReadMore>\r\n                    </div>\r\n                  </figcaption>\r\n                  <Link to={`/zessence/service/${category._id}`}></Link>\r\n                </JCard>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        </Content>\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CATEGORY_QUERY } from \"../../util/graphql/service\";\r\nimport {\r\n  DContainer,\r\n  DSection,\r\n  DGrid,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { JCard2 } from \"../../components/styled/card\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import ServiceDetails from \"../../components/main/services/ServiceDetails\";\r\nimport ReadMore from \"../../components/main/utils/ReadMore\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Service = props => {\r\n  const categoryId = props.match.params._id;\r\n  const history = useHistory();\r\n  const [isReadMore, setIsReadMore] = useState(false);\r\n\r\n  const [isServices, setIsServices] = useState([]);\r\n\r\n  const { data, loading } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setIsServices(data.category.services);\r\n    }\r\n  }, [data]);\r\n\r\n  const backHist = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n        height=\"50vh\"\r\n        fixed\r\n      >\r\n        <Content\r\n          flex\r\n          justify=\"center\"\r\n          direct=\"column\"\r\n          align=\"center\"\r\n          fluid\r\n          height=\"100%\"\r\n          className=\"dark\"\r\n        >\r\n          {!data ? (\r\n            <Spinner inverted />\r\n          ) : (\r\n            <>\r\n              <h1 style={{ fontSize: \"22px\" }}>{data.category.name}</h1>\r\n              <p style={{ width: \"50%\", margin: \"0 auto\" }}>\r\n                {parser(data.category.description)}\r\n              </p>\r\n            </>\r\n          )}\r\n        </Content>\r\n        <Overlay />\r\n      </DSection>\r\n      <Content flex width=\"90%\" height=\"50px\" margin=\"20px auto\">\r\n        <DButton onClick={backHist}>\r\n          <Icon name=\"arrow left\" /> <span>Back to Services</span>\r\n        </DButton>\r\n      </Content>\r\n      {loading ? (\r\n        <DGrid three gap=\"15px\">\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n          <Skeleton width={300} height={475} />\r\n        </DGrid>\r\n      ) : (\r\n        <DSection\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"flex-start\"\r\n          align=\"flex-start\"\r\n          direct=\"column\"\r\n          mcenter\r\n          pad=\"24px\"\r\n          height=\"100%\"\r\n        >\r\n          <Content width=\"100%\" margin=\"0 auto\" style={{ minHeight: \"100vh\" }}>\r\n            <DGrid three gap=\"15px\">\r\n              {isServices &&\r\n                isServices.map(service => (\r\n                  <JCard2\r\n                    key={service._id}\r\n                    oflow={isReadMore ? true : false}\r\n                    onPointerLeave={() => setIsReadMore(false)}\r\n                  >\r\n                    <div className=\"thumbnail\">\r\n                      <img\r\n                        src={\r\n                          service.photo !== null\r\n                            ? `/images/service/${service.photo}`\r\n                            : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/169963/photo-1429043794791-eb8f26f44081.jpeg\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"post-content\">\r\n                      <div className=\"category\">{service.name}</div>\r\n                      <h4 className=\"title\">{service.duration} mins</h4>\r\n                      <h4 className=\"title\">Php {service.price}</h4>\r\n                      <div className=\"description\">\r\n                        {isReadMore ? (\r\n                          <p>{parser(service.description)}</p>\r\n                        ) : (\r\n                          <p>\r\n                            {service.description.length > 100\r\n                              ? parser(\r\n                                  service.description.substr(0, 100) + \"...\"\r\n                                )\r\n                              : parser(service.description.substr(0, 100))}\r\n                          </p>\r\n                        )}\r\n                        {service.description.length <= 100 ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <ReadMore onClick={() => setIsReadMore(!isReadMore)}>\r\n                            {isReadMore ? \"Read Less\" : \"Read More\"}\r\n                          </ReadMore>\r\n                        )}\r\n\r\n                        {/* <ServiceDetails service={service} /> */}\r\n                      </div>\r\n                    </div>\r\n                  </JCard2>\r\n                ))}\r\n            </DGrid>\r\n          </Content>\r\n        </DSection>\r\n      )}\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst ThankYou = props => {\r\n  const { userId } = useContext(AuthContext);\r\n  const emailToken = props.match.params.emailToken;\r\n  const history = useHistory();\r\n  history.go(1);\r\n\r\n  const decodedToken = jwtDecode(emailToken);\r\n\r\n  const { _id } = decodedToken;\r\n\r\n  const [verifiedAppointment] = useMutation(VERRIFIED_APPOINTMENT, {\r\n    variables: {\r\n      appointmentId: _id\r\n    }\r\n  });\r\n\r\n  window.onload = () => {\r\n    verifiedAppointment();\r\n  };\r\n\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>Thank you for Booking an appointment with us!</h1>\r\n        <h4>\r\n          You can view your appointment details by signing in and go to My\r\n          Account Page\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence\">\r\n            Explore\r\n          </DButton>\r\n          <DButton\r\n            as={Link}\r\n            to={userId ? `/zessence/account/${userId}` : `/zessence/login`}\r\n          >\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst VERRIFIED_APPOINTMENT = gql`\r\n  mutation verifiedAppointment($appointmentId: ID!) {\r\n    verifiedAppointment(_id: $appointmentId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ThankYou;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\n\r\nconst VerifyNotice = () => {\r\n  const history = useHistory();\r\n  history.go(1);\r\n  return (\r\n    <DSection\r\n      height=\"100vh\"\r\n      margin=\"15vh 0 0 0\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n    >\r\n      <Content\r\n        width=\"80%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        bgcolor=\"rgba(223, 230, 233,0.5)\"\r\n        height=\"80%\"\r\n        pad=\"20px\"\r\n        rounded\r\n      >\r\n        <h1>You are one step a way to complete your appointment</h1>\r\n        <h4>\r\n          To complete your process, we send you an email with verification link\r\n        </h4>\r\n        <Content\r\n          width=\"80%\"\r\n          flex\r\n          justify=\"space-around\"\r\n          align=\"center\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DButton as={Link} to=\"/zessence/home\" basic>\r\n            Explore\r\n          </DButton>\r\n          <DButton as={Link} basic>\r\n            Go to my account\r\n          </DButton>\r\n        </Content>\r\n      </Content>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default VerifyNotice;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_USER_ACCOUNT = gql`\r\n  query user($userId: ID!) {\r\n    user(_id: $userId) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_USERS_ACCOUNT = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      photo\r\n      dateOfBirth\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_USER_ACCOUNT, FETCH_USERS_ACCOUNT };\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { DGrid, DCard, Content, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nconst AccountContentOne = ({ handleAppointments, handleDetails, userInfo }) => {\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addUserPhoto, { loading }] = useMutation(UPLOAD_USER_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_USER_ACCOUNT,\r\n        variables: {\r\n          userId: userInfo._id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addUserPhoto({ variables: { userId: userInfo._id, file } });\r\n    },\r\n    [addUserPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const images = [{ src: `/images/users/${userInfo.photo}` }];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          {loading ? (\r\n            <h1>Loading..</h1>\r\n          ) : (\r\n            <DImage circle height=\"150px\" width=\"150px\">\r\n              <img\r\n                src={\r\n                  userInfo.photo !== null\r\n                    ? `/images/users/${userInfo.photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            </DImage>\r\n          )}\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <Edit size=\"18px\" />\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleAppointments} fluid>\r\n            Appointments\r\n          </DButton>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_USER_PHOTO = gql`\r\n  mutation addUserPhoto($userId: ID!, $file: Upload) {\r\n    addUserPhoto(_id: $userId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default AccountContentOne;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(userInfo.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: userInfo.firstName,\r\n    lastName: userInfo.lastName,\r\n    contact: userInfo.contact\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateUserCallBack = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n    ) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      contact\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst EmailModal = ({ emailOpen, setEmailOpen, userInfo }) => {\r\n  const [isEmail, setIsEmail] = useState(userInfo.email);\r\n\r\n  const handleEmailChange = e => {\r\n    setIsEmail(e.target.value);\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_EMAIL, {\r\n    onCompleted(result) {\r\n      setEmailOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      email: isEmail\r\n    }\r\n  });\r\n\r\n  const updateUserEmail = () => {\r\n    updateUser();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"tiny\" open={emailOpen} onClose={() => setEmailOpen(false)}>\r\n      <Modal.Header>Email Address</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={isEmail} onChange={handleEmailChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserEmail}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_EMAIL = gql`\r\n  mutation updateUser($userId: ID!, $email: String) {\r\n    updateUser(_id: $userId, email: $email) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmailModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, userInfo }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateUser, { loading }] = useMutation(UPDATE_USER_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: userInfo._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateUserPassword() {\r\n    updateUser();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateUserPassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_USER_PWD = gql`\r\n  mutation updateUser(\r\n    $userId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateUser(\r\n      _id: $userId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport EmailModal from \"./EmailModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst UserDetails = ({ userInfo }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmail = () => {\r\n    setEmailModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Email Address</h3>\r\n            <div className=\"content-edit\" onClick={handleEmail}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        userInfo={userInfo}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n      />\r\n      <EmailModal\r\n        userInfo={userInfo}\r\n        emailOpen={emailModal}\r\n        setEmailOpen={setEmailModal}\r\n      />\r\n      <SecurityModal\r\n        userInfo={userInfo}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { ArrowRight } from \"styled-icons/material/ArrowRight\";\r\nimport { DAccordion } from \"./styled/utils\";\r\n\r\nconst Accordion = props => {\r\n  const [active, setActive] = useState(false);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    contentRef.current.style.maxHeight = active\r\n      ? `${contentRef.current.scrollHeight}px`\r\n      : \"0px\";\r\n  }, [contentRef, active]);\r\n\r\n  const toggleActive = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  return (\r\n    <DAccordion\r\n      fs={props.fs}\r\n      uc={props.uc}\r\n      bg={props.bg}\r\n      color={props.color}\r\n      hoverColorText={props.hoverColorText}\r\n      rounded={props.rounded}\r\n      oblong={props.oblong}\r\n    >\r\n      <div\r\n        className={active ? \"accordion-title active\" : \"accordion-title\"}\r\n        onClick={toggleActive}\r\n      >\r\n        <p>\r\n          <span className=\"acc-icon\">{props.icon}</span>\r\n          {props.title}\r\n        </p>\r\n        <ArrowRight\r\n          size=\"18px\"\r\n          className={active ? \"accordion-icon rotate\" : \"accordion-icon\"}\r\n        />\r\n      </div>\r\n\r\n      <div ref={contentRef} className=\"accordion-content\">\r\n        {props.children}\r\n      </div>\r\n    </DAccordion>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\n\r\nconst ReschedInfo = ({ appointResched }) => {\r\n  const reschedId = appointResched.reschedule.appointmentId;\r\n\r\n  const { data: reschedData, loading: reschedLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: reschedId\r\n      }\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {reschedData &&\r\n        (reschedLoading ? (\r\n          <h5>Loading...</h5>\r\n        ) : (\r\n          <Accordion\r\n            title={\"Rescheduled Appointment\"}\r\n            fs=\"14px\"\r\n            bg=\"#eee\"\r\n            color=\"#232323\"\r\n            hoverColorText=\"#fff\"\r\n            rounded\r\n          >\r\n            <DGrid>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Service:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.service.name}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Aesthetician:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {reschedData.appointment.employee.title}{\" \"}\r\n                    {reschedData.appointment.employee.firstName}{\" \"}\r\n                    {reschedData.appointment.employee.lastName}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Date:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>\r\n                    {moment(parseInt(reschedData.appointment.date)).format(\r\n                      \"LL\"\r\n                    )}\r\n                  </h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Time:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.slot_start}</h6>\r\n                </Content>\r\n              </Content>\r\n              <Content\r\n                width=\"90%\"\r\n                bgcolor=\"#f2f2f2\"\r\n                flex\r\n                justify=\"space-between\"\r\n                margin=\"0 auto\"\r\n              >\r\n                <DLabel\r\n                  flex\r\n                  justifyCenter\r\n                  alignCenter\r\n                  weight={500}\r\n                  w={\"40%\"}\r\n                  size=\"12px\"\r\n                  bgcolor=\"#eee\"\r\n                  rounded\r\n                >\r\n                  Status:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"50%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <h6>{reschedData.appointment.status}</h6>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Accordion>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_MY_CURRENT_APPOINTMENTS,\r\n  FETCH_HISTORY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst CancelAppoint = ({ isCancelOpen, setIsCancelOpen, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [isNote, setIsNote] = useState(\"\" || null);\r\n\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId,\r\n        note: isNote\r\n      },\r\n      refetchQueries: [\r\n        { query: FETCH_MY_CURRENT_APPOINTMENTS },\r\n        { query: FETCH_HISTORY_APPOINTMENTS }\r\n      ],\r\n      onCompleted(data) {\r\n        setIsCancelOpen(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setIsCancelOpen(false);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        if (\r\n          err.graphQLErrors[0].extensions.exception.errors.invalidCancellation\r\n        ) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {\r\n                  err.graphQLErrors[0].extensions.exception.errors\r\n                    .invalidCancellation\r\n                }\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNote = e => {\r\n    setIsNote(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={isCancelOpen}\r\n      onClose={() => setIsCancelOpen(false)}\r\n      style={absoluteCenter}\r\n    >\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h3>Are you sure you want to cancel your appointment?</h3>\r\n\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Reason of cancellation</label>\r\n            <textarea value={isNote} onChange={handleNote} />\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <h5>\r\n          Note:{\" \"}\r\n          <h6>\r\n            Often cancellation of appointments may affect future scheduling of\r\n            appointments.\r\n          </h6>\r\n        </h5>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton blue primary onClick={() => setIsCancelOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButton red alert onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!, $note: String) {\r\n    cancelAppointment(_id: $appointmentId, note: $note) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      note\r\n      message\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst absoluteCenter = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%,-50%)\"\r\n};\r\n\r\nexport default CancelAppoint;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport {\r\n  FETCH_MY_APPOINTMENTS\r\n} from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst ReschedConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setIsResched,\r\n  appointmentId,\r\n  setOpen,\r\n  isAdmin,\r\n  status\r\n}) => {\r\n  // const [addInfo, setAddInfo] = useState(\"\");\r\n  // const history = useHistory();\r\n  const [isReschedConfirm, setIsReschedConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [reschedAppointment, { loading }] = useMutation(RESCHED_APPOINTMENT, {\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_MY_APPOINTMENTS\r\n      });\r\n\r\n      const reAppointment = result.data.reschedAppointment;\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_MY_APPOINTMENTS,\r\n        data: {\r\n          appointments: [reAppointment, ...data.appointments]\r\n        }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      setIsReschedConfirm(false);\r\n      setIsResched(false);\r\n      setOpen(false);\r\n\r\n      if (data) {\r\n        toaster.notify(\r\n          ({ onClose }) => (\r\n            <Toasted status={\"success\"}>\r\n              <span className=\"description\">\r\n                Please confirm your appointment booking to complete your\r\n                process. We send a confirmation link in your email. Thank You!\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ),\r\n          { position: \"bottom-right\" }\r\n        );\r\n      }\r\n    },\r\n\r\n    variables: {\r\n      _id: appointmentId,\r\n      serviceId: serviceValue,\r\n      employeeId: employeeVal,\r\n      date: new Date(startDate).toLocaleDateString(),\r\n      start: selectedTime,\r\n      isAdmin,\r\n      status,\r\n      message: \"\"\r\n    }\r\n  });\r\n\r\n  // const handleMessage = e => {\r\n  //   setAddInfo(e.target.value);\r\n  // };\r\n\r\n  const handleReschedAppointment = () => {\r\n    reschedAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton\r\n        onClick={() => setIsReschedConfirm(true)}\r\n        disabled={\r\n          employeeVal === \"\" || serviceValue === \"\" || selectedTime === \"\"\r\n            ? true\r\n            : false\r\n        }\r\n      >\r\n        Make an appointment\r\n      </DButton>\r\n\r\n      <Modal\r\n        open={isReschedConfirm}\r\n        size=\"tiny\"\r\n        onClose={() => setIsReschedConfirm(false)}\r\n      >\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleReschedAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Confirm\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RESCHED_APPOINTMENT = gql`\r\n  mutation reschedAppointment(\r\n    $_id: ID!\r\n    $status: String\r\n    $isAdmin: Boolean\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    reschedAppointment(\r\n      _id: $_id\r\n      status: $status\r\n      isAdmin: $isAdmin\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ReschedConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"./AppointmentInputs\";\r\nimport AppointDate from \"./AppointDate\";\r\nimport ReschedConfirm from \"./ReschedConfirm\";\r\n\r\nconst ReschedModal = ({ appointmentId, setOpen, isAdmin, status }) => {\r\n  const [isResched, setIsResched] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  const handleModalResched = () => {\r\n    setIsResched(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={handleModalResched}>Reschedule</DButton>\r\n      <Modal size=\"large\" open={isResched} onClose={() => setIsResched(false)}>\r\n        <Modal.Header>Reschedule of Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <ReschedConfirm\r\n            appointmentId={appointmentId}\r\n            setOpen={setOpen}\r\n            setIsResched={setIsResched}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n            isAdmin={isAdmin}\r\n            status={status}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReschedModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Popup, Icon } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DLabel, DButton } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\nimport moment from \"moment\";\r\nimport ReschedInfo from \"./ReschedInfo\";\r\nimport CancelAppoint from \"./CancelAppoint\";\r\nimport ReschedModal from \"../appointment/ReschedModal\";\r\n\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CurrentAppointModal = ({ appointId, open, setOpen }) => {\r\n  let verified;\r\n  let pending;\r\n  let done;\r\n  let rescheduled;\r\n  let cancelled;\r\n  let appointedDate;\r\n  let addDate;\r\n  let diffDate;\r\n\r\n  const [isCancelOpen, setIsCancelOpen] = useState(false);\r\n\r\n  const { data: appointmentInfo, loading: appointmentLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId: appointId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (appointmentInfo) {\r\n    verified = appointmentInfo.appointment.status === \"VERIFIED\";\r\n    pending = appointmentInfo.appointment.status === \"PENDING\";\r\n    done = appointmentInfo.appointment.status === \"DONE\";\r\n    rescheduled = appointmentInfo.appointment.status === \"RESCHEDULED\";\r\n    cancelled = appointmentInfo.appointment.status === \"CANCELLED\";\r\n\r\n    appointedDate = new Date(parseInt(appointmentInfo.appointment.date));\r\n    addDate = moment()\r\n      .add(1, \"d\")\r\n      .format(\"M/D/YYYY\");\r\n    diffDate = appointedDate <= new Date(addDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"tiny\"\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        closeIcon\r\n      >\r\n        <Modal.Header>Appointment Details</Modal.Header>\r\n        {appointmentInfo ? (\r\n          appointmentLoading ? (\r\n            <Modal.Content>\r\n              <Skeleton />\r\n              <Skeleton count={5} />\r\n            </Modal.Content>\r\n          ) : (\r\n            <>\r\n              <Modal.Content scrolling>\r\n                <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                  <DGrid>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                    >\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        <span>Service:</span>\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.service.name}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Aesthetician:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.employee.title}{\" \"}\r\n                          {appointmentInfo.appointment.employee.firstName}{\" \"}\r\n                          {appointmentInfo.appointment.employee.lastName}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Date:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {moment(\r\n                            parseInt(appointmentInfo.appointment.date)\r\n                          ).format(\"LL\")}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Time:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>{appointmentInfo.appointment.slot_start}</h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Duration:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5>\r\n                          {appointmentInfo.appointment.service.duration} min\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content width=\"100%\" flex justify=\"space-between\">\r\n                      <DLabel\r\n                        flex\r\n                        justifyCenter\r\n                        alignCenter\r\n                        weight={700}\r\n                        w={\"40%\"}\r\n                        size=\"16px\"\r\n                        bgcolor=\"#eee\"\r\n                        rounded\r\n                      >\r\n                        Status:\r\n                      </DLabel>\r\n                      <Content\r\n                        width=\"50%\"\r\n                        flex\r\n                        justify=\"flex-start\"\r\n                        align=\"center\"\r\n                        pad=\"10px 15px\"\r\n                      >\r\n                        <h5\r\n                          style={\r\n                            ({\r\n                              width: \"60%\",\r\n                              fontSize: \"12px\",\r\n                              fontWeight: 700\r\n                            },\r\n                            verified\r\n                              ? { color: \"#0f9b0f\" }\r\n                              : pending\r\n                              ? { color: \"#fffc00\" }\r\n                              : done\r\n                              ? { color: \"#2980B9\" }\r\n                              : cancelled\r\n                              ? { color: \"#f12711\" }\r\n                              : rescheduled\r\n                              ? { color: \"#6dd5ed\" }\r\n                              : \"#2193b0\")\r\n                          }\r\n                        >\r\n                          {appointmentInfo.appointment.status}\r\n                        </h5>\r\n                      </Content>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      <Accordion\r\n                        title={\"Message\"}\r\n                        fs=\"14px\"\r\n                        bg=\"#eee\"\r\n                        color=\"#232323\"\r\n                        hoverColorText=\"#fff\"\r\n                        rounded\r\n                      >\r\n                        <p>{appointmentInfo.appointment.message}</p>\r\n                      </Accordion>\r\n                    </Content>\r\n                    <Content\r\n                      width=\"100%\"\r\n                      margin=\"10px 0\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                    >\r\n                      {appointmentInfo.appointment.reschedule.appointmentId ? (\r\n                        <ReschedInfo\r\n                          appointResched={appointmentInfo.appointment}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Content>\r\n                  </DGrid>\r\n                </Content>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                {appointmentInfo.appointment.status === \"PENDING\" ||\r\n                appointmentInfo.appointment.status === \"VERIFIED\" ? (\r\n                  <>\r\n                    {appointmentInfo.appointment.reschedule.new !== true && (\r\n                      <ReschedModal\r\n                        status={\"PENDING\"}\r\n                        isAdmin={false}\r\n                        setOpen={setOpen}\r\n                        appointmentId={appointmentInfo.appointment._id}\r\n                      />\r\n                    )}\r\n\r\n                    <DButton\r\n                      alert\r\n                      onClick={() => setIsCancelOpen(true)}\r\n                      disabled={diffDate ? true : false}\r\n                    >\r\n                      Cancel\r\n                    </DButton>\r\n                    <Popup\r\n                      trigger={\r\n                        <Icon\r\n                          circular\r\n                          name=\"question\"\r\n                          size=\"small\"\r\n                          color=\"blue\"\r\n                        />\r\n                      }\r\n                      mouseEnterDelay={500}\r\n                      mouseLeaveDelay={500}\r\n                      content=\"Cancellation of appointment may place under 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <CancelAppoint\r\n                  setIsCancelOpen={setIsCancelOpen}\r\n                  isCancelOpen={isCancelOpen}\r\n                  appointmentId={appointmentInfo.appointment._id}\r\n                />\r\n              </Modal.Actions>\r\n            </>\r\n          )\r\n        ) : (\r\n          <Modal.Content>\r\n            <Skeleton count={5} />\r\n          </Modal.Content>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentAppointModal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_MY_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Grid, Popup, Icon } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\n\r\nconst CurrentAppointment = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const { data: currentAppointData, loading: currentAppointLoading } = useQuery(\r\n    FETCH_MY_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      flex: 0,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 12, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 12, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <>\r\n          <Popup\r\n            trigger={\r\n              <DButton\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={() => setOpen(true)}\r\n              >\r\n                <Icon name=\"eye\" fitted />\r\n              </DButton>\r\n            }\r\n            mouseEnterDelay={500}\r\n            mouseLeaveDelay={500}\r\n            content=\"View detailed appointment info.\"\r\n            position=\"left center\"\r\n            size=\"tiny\"\r\n          />\r\n\r\n          <Popup\r\n            wide\r\n            trigger={\r\n              <DButton\r\n                alert\r\n                height=\"auto\"\r\n                width=\"100%\"\r\n                pad=\"2px 8px\"\r\n                onClick={handlePop}\r\n              >\r\n                <Icon name=\"ban\" fitted />\r\n              </DButton>\r\n            }\r\n            open={isPop}\r\n            position=\"top right\"\r\n          >\r\n            <Grid divided columns=\"equal\">\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton confirm height=\"auto\" width=\"100%\" pad=\"2px 8px\">\r\n                      <Icon name=\"check\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"Yes I want to cancel my appointment\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Popup\r\n                  trigger={\r\n                    <DButton\r\n                      alert\r\n                      height=\"auto\"\r\n                      width=\"100%\"\r\n                      pad=\"2px 8px\"\r\n                      onClick={() => setIsPop(false)}\r\n                    >\r\n                      <Icon name=\"close\" fitted />\r\n                    </DButton>\r\n                  }\r\n                  mouseEnterDelay={500}\r\n                  mouseLeaveDelay={500}\r\n                  content=\"No, I do not want to cancel my appointment.\"\r\n                  position=\"top center\"\r\n                  size=\"tiny\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Popup>\r\n          <CurrentAppointModal\r\n            appointId={row._id}\r\n            open={open}\r\n            setOpen={setOpen}\r\n          />\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"100%\"\r\n      rounded\r\n    >\r\n      {currentAppointLoading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={currentAppointData.myCurrentAppointment.map(\r\n            currentAppoint => currentAppoint\r\n          )}\r\n          responsive\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          customStyles={customStyles}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointment;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { FETCH_MY_APPOINTMENT_HISTORY } from \"../../../util/graphql/appointment\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport CurrentAppointModal from \"./CurrentAppointModal\";\r\nimport moment from \"moment\";\r\n\r\nconst MyAppointmentHistory = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [isPop, setIsPop] = useState(false);\r\n  const [appoint, setAppoint] = useState(null);\r\n  const [appointHistory, setAppointHistory] = useState([]);\r\n\r\n  const { data: appointHistoryData, loading: appointHistoryLoading } = useQuery(\r\n    FETCH_MY_APPOINTMENT_HISTORY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (appointHistoryData) {\r\n      setAppointHistory(appointHistoryData.myAppointmentHistory);\r\n    }\r\n  }, [appointHistoryData]);\r\n\r\n  const handleRow = e => {\r\n    setAppoint(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    setIsPop(!isPop);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service.name\",\r\n\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n      >\r\n        {appointHistoryLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <DataTable\r\n            compact\r\n            columns={columns}\r\n            data={appointHistory.map(historyAppoint => historyAppoint)}\r\n            responsive\r\n            customStyles={customStyles}\r\n            pagination={true}\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        )}\r\n      </Content>\r\n      {appoint && (\r\n        <CurrentAppointModal\r\n          appointId={appoint}\r\n          setAppoint={setAppoint}\r\n          open={open}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"12px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default MyAppointmentHistory;\r\n","import React from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport CurrentAppointment from \"./CurrentAppointment\";\r\nimport MyAppointmentHistory from \"./MyAppointmentHistory\";\r\n\r\nconst UserAppointments = () => {\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\">\r\n      <DGrid dh=\"100%\" gap=\"20px\">\r\n        <DCard dw=\"100%\" flex fcol justifyCenter>\r\n          <h2>Ongoing Appointment</h2>\r\n          <CurrentAppointment />\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyCenter>\r\n          <h2>Appointment History</h2>\r\n          <MyAppointmentHistory />\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default UserAppointments;\r\n","import React from \"react\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport UserAppointments from \"./UserAppointments\";\r\n\r\nconst AccountContentTwo = ({ isAccount, userInfo }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return <UserDetails userInfo={userInfo} />;\r\n    case \"appointments\":\r\n      return <UserAppointments />;\r\n    default:\r\n      return <h1>Something went wrong</h1>;\r\n  }\r\n};\r\n\r\nexport default AccountContentTwo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  DSection,\r\n  DGrid,\r\n  DContainer,\r\n  Content\r\n} from \"../../components/styled/containers\";\r\nimport AccountContentOne from \"../../components/main/user/AccountContentOne\";\r\nimport AccountContentTwo from \"../../components/main/user/AccountContentTwo\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst Account = props => {\r\n  const { user } = useContext(AuthContext);\r\n  const userId = props.match.params._id;\r\n\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"appointments\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: userInfo, loading: userLoading } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId\r\n      }\r\n    }\r\n  );\r\n\r\n  if (user) {\r\n    console.log(\"success\");\r\n  }\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleAppointments = () => {\r\n    setIsAccount(\"appointments\");\r\n    localStorage.setItem(\"account\", \"appointments\");\r\n  };\r\n\r\n  return (\r\n    <DContainer>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <h1>Account</h1>\r\n        {!userInfo ? (\r\n          <DSection width=\"80%\" mcenter height=\"100vh\">\r\n            <Content flex justify=\"space-around\" width=\"100%\" height=\"100%\">\r\n              <Skeleton circle height=\"150px\" width=\"150px\" />\r\n              <div style={{ width: \"70%\", margin: \"0 auto\" }}>\r\n                <Skeleton width=\"100%\" height=\"100px\" />\r\n                <br />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n                <Skeleton width=\"100%\" height=\"50px\" />\r\n              </div>\r\n            </Content>\r\n          </DSection>\r\n        ) : (\r\n          <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n            <AccountContentOne\r\n              handleAppointments={handleAppointments}\r\n              handleDetails={handleDetails}\r\n              userInfo={userInfo.user}\r\n            />\r\n            <AccountContentTwo isAccount={isAccount} userInfo={userInfo.user} />\r\n          </DGrid>\r\n        )}\r\n      </DSection>\r\n    </DContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nexport const AdminAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Redirect to=\"/zeadmin/dashboard\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserAuthRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Redirect to=\"/zessence\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        employeeAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zeadmin/signin\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const UserPrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    toaster.notify(\"You must login first to continue\");\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/zessence/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DFooter, DFooterLinks } from \"../../styled/containers\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <DFooterLinks>\r\n        <div className=\"links-inner\">\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <h3>What's new</h3>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooterLinks>\r\n      <DFooter>\r\n        <div className=\"footer-inner\">\r\n          <div>English (Philippines)</div>\r\n\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beautiful and Pretty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">Beauty</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/\">\r\n                &copy; Z Essence 2019-{new Date().getFullYear()}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </DFooter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Form, Popup, Icon } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState({});\r\n \r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  //Date Difference\r\n\r\n  let schedDate;\r\n  let addDate;\r\n\r\n  if (data) {\r\n    schedDate = moment(parseInt(data.appointment.date)).format(\"M/D/YYYY\");\r\n    addDate = moment()\r\n      .add(12, \"h\")\r\n      .format(\"M/D/YYYY\");\r\n  }\r\n\r\n  const diffDate = schedDate <= addDate;\r\n\r\n  return (\r\n    <DSection\r\n      margin=\"15vh auto 0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direct=\"column\"\r\n      width=\"80%\"\r\n      height=\"100vh\"\r\n      background={\r\n        \"https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n      }\r\n    >\r\n      <h2 style={{ color: \"#fff\" }}>My Appointment Details</h2>\r\n\r\n      {dataLoading ? (\r\n        <Spinner inverted />\r\n      ) : (\r\n        <DGrid rowCustom=\"1fr 100px\">\r\n          <Content\r\n            bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            margn=\"0 auto\"\r\n            pad=\"1.5rem 2em\"\r\n            flex\r\n            jusitfy=\"center\"\r\n            align=\"center\"\r\n            direct=\"column\"\r\n          >\r\n            <Form>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Appointment Id</label>\r\n                <input value={myAppoint._id} readOnly style={styles.input} />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Service</label>\r\n                <input\r\n                  value={myAppoint.service.name}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Aesthetician</label>\r\n                <input\r\n                  value={`${myAppoint.employee.title}. ${myAppoint.employee.firstName} ${myAppoint.employee.lastName}`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Date of Appointment</label>\r\n                <input\r\n                  value={moment(parseInt(myAppoint.date)).format(\"LL\")}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Time of Appointment</label>\r\n                <input\r\n                  value={myAppoint.slot_start}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Duration</label>\r\n                <input\r\n                  value={`${myAppoint.service.duration} min`}\r\n                  readOnly\r\n                  style={styles.input}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field style={styles.field}>\r\n                <label style={styles.label}>Status</label>\r\n                <input\r\n                  value={myAppoint.status}\r\n                  readOnly\r\n                  style={\r\n                    myAppoint.status === \"PENDING\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"gold\"\r\n                        }\r\n                      : myAppoint.status === \"CANCELLED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"firebrick\"\r\n                        }\r\n                      : myAppoint.status === \"VERIFIED\"\r\n                      ? {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"green\"\r\n                        }\r\n                      : {\r\n                          width: \"60%\",\r\n                          fontSize: 14,\r\n                          fontWeight: 700,\r\n                          color: \"blue\"\r\n                        }\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n            <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n            {myAppoint.status === \"CANCELLED\" || myAppoint.status === \"DONE\" ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <DButton>Reschedule</DButton>\r\n                <Content flex align=\"center\" justify=\"center\">\r\n                  <DButton alert disabled>\r\n                    Cancel\r\n                  </DButton>\r\n                  {diffDate && (\r\n                    <Popup\r\n                      trigger={<Icon circular name=\"question\" size=\"small\" />}\r\n                      content=\"Cancellation of appointment 12 hours before the scheduled appointment day. If you wish to still cancel your appointment, you may call us on (+63) 926 652 4505. Thank you!\"\r\n                      inverted\r\n                    />\r\n                  )}\r\n                </Content>\r\n              </>\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      )}\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/main/navigation/Navigation\";\r\nimport Home from \"./main/Home\";\r\nimport About from \"./main/About\";\r\nimport Signup from \"./main/Signup\";\r\nimport Signin from \"./main/Signin\";\r\nimport Appointment from \"./main/Appointment\";\r\nimport Gallery from \"./main/Gallery\";\r\nimport Contact from \"./main/Contact\";\r\nimport Testimonials from \"./main/Testimonials\";\r\nimport Services from \"./main/Services\";\r\nimport Service from \"./main/Service\";\r\nimport ThankYou from \"./main/ThankYou\";\r\nimport VerifyNotice from \"./main/VerifyNotice\";\r\nimport Account from \"./main/Account\";\r\nimport { UserAuthRoute } from \"../util/AuthRoute\";\r\nimport { UserPrivateRoute } from \"../util/PrivateRoute\";\r\nimport Footer from \"../components/main/footer/Footer\";\r\nimport Page404 from \"./Page404\";\r\nimport AppointmentDetails from \"./main/AppointmentDetails\";\r\n\r\nfunction Main({ match }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation open={open} setOpen={setOpen} />\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/`} component={Home} exact />\r\n        <Route path={`${match.path}/about`} component={About} exact />\r\n        <Route path={`${match.path}/contact`} component={Contact} exact />\r\n        <Route path={`${match.path}/gallery`} component={Gallery} exact />\r\n        <Route\r\n          path={`${match.path}/testimonials`}\r\n          component={Testimonials}\r\n          exact\r\n        />\r\n        <Route\r\n          path={`${match.path}/services&rates`}\r\n          component={Services}\r\n          exact\r\n        />\r\n        <Route path={`${match.path}/service/:_id`} component={Service} exact />\r\n        <Route\r\n          path={`${match.path}/verified/:emailToken`}\r\n          component={ThankYou}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/verifynotice`}\r\n          component={VerifyNotice}\r\n          exact\r\n        />\r\n        <UserAuthRoute path={`${match.path}/signup`} component={Signup} exact />\r\n        <UserAuthRoute path={`${match.path}/login`} component={Signin} exact />\r\n\r\n        <UserPrivateRoute\r\n          path={`${match.path}/account/:_id`}\r\n          component={Account}\r\n          exact\r\n        />\r\n\r\n        <UserPrivateRoute\r\n          path={`${match.path}/myappointment/:_id`}\r\n          component={AppointmentDetails}\r\n          exact\r\n        />\r\n        <UserPrivateRoute\r\n          path={`${match.path}/appointment`}\r\n          component={Appointment}\r\n          exact\r\n        />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton } from \"../../styled/utils\";\r\n\r\nconst UpcommingAppointments = ({ appointments }) => {\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const title = <h2>Upcomming Appointments</h2>;\r\n\r\n  return (\r\n    <DataTable\r\n      title={title}\r\n      columns={columns}\r\n      data={appointments.map(appointment => appointment)}\r\n      responsive={true}\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationRowsPerPageOptions={[5]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcommingAppointments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-template-areas:\r\n    \"sidenav header\"\r\n    \"sidenav main\"\r\n    \"sidenav footer\";\r\n\r\n  position: relative;\r\n`;\r\n\r\nexport const MainLayout = styled.div`\r\n  grid-area: main;\r\n  width: 100%;\r\n  margin: auto;\r\n  background: rgba(242, 242, 242, 0.2);\r\n`;\r\nexport const SideNavLayout = styled.div`\r\n  grid-area: sidenav;\r\n  width: 300px;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n  line-height: 2.8;\r\n  padding-top: 5rem;\r\n  background: ${({ theme }) => theme.dark};\r\n  position: fixed;\r\n\r\n  .avatar {\r\n    height: 30%;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const HeaderLayout = styled.div`\r\n  grid-area: header;\r\n  width: 100%;\r\n  height: 10vh;\r\n  padding: 0 1rem;\r\n  background: ${({ theme }) => theme.light};\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FooterLayout = styled.div`\r\n  grid-area: footer;\r\n  height: 10vh;\r\n  background-color: white;\r\n`;\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { HeaderLayout } from \"../../styled/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, DImage, Overlay } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Exit } from \"styled-icons/boxicons-regular/Exit\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Dropdown, Image, Icon } from \"semantic-ui-react\";\r\n\r\nconst Header = () => {\r\n  const { employeeLogout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    employeeLogout();\r\n  };\r\n\r\n  return (\r\n    <HeaderLayout>\r\n      <Dropdown\r\n        trigger={\r\n          <DImage circle height=\"50px\" width=\"50px\">\r\n            <img\r\n              src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              alt=\"avatar\"\r\n            />\r\n            <Overlay opac={0} hovOpac={1} />\r\n          </DImage>\r\n        }\r\n        pointing=\"top right\"\r\n        icon={null}\r\n      >\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item as={Link} to=\"/zeadmin/paccount\">\r\n            <Icon name=\"user\" />\r\n            Account\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={handleLogout}>\r\n            <Icon name=\"sign out\" />\r\n            Sign out\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      {/* <DImage circle height=\"50px\" width=\"50px\">\r\n          <img\r\n            src=\"https://images.pexels.com/photos/413885/pexels-photo-413885.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n            alt=\"avatar\"\r\n          />\r\n        </DImage>\r\n        <DButton background=\"transparent\" color=\"blue\" onClick={handleLogout}>\r\n          <Exit size=\"24px\" style={{ marginLeft: \"2%\" }} />\r\n        </DButton> */}\r\n    </HeaderLayout>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Dashboard } from \"styled-icons/material/Dashboard\";\r\nimport { BookContent } from \"styled-icons/boxicons-solid/BookContent\";\r\nimport { CalendarEvent } from \"styled-icons/boxicons-regular/CalendarEvent\";\r\nimport { Service } from \"styled-icons/remix-line/Service\";\r\nimport { SideNavLayout } from \"../../styled/layout\";\r\nimport { NavItem } from \"../../styled/utils\";\r\nimport Accordion from \"../../Accordion\";\r\n\r\nconst SideNav = () => {\r\n  return (\r\n    <SideNavLayout>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/dashboard\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Dashboard</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/appointments\">\r\n          <CalendarEvent size=\"16px\" />\r\n          <span>Appointments</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/inquiry\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>Inquiry</span>\r\n        </NavLink>\r\n      </NavItem>\r\n\r\n      <Accordion\r\n        title={\"Accounts\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/user\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Users\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        title={\"Content Manangement\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/cms_home\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Home\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/about\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            About Us\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/testimonials\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Testimonials\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/contact\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Dashboard size=\"16px\" />\r\n            Contact\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <Accordion\r\n        title={\"File Maintenance\"}\r\n        icon={<BookContent size=\"16px\" />}\r\n        fs=\"14px\"\r\n      >\r\n        <NavLink to=\"/zeadmin/categories\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Services\r\n          </span>\r\n        </NavLink>\r\n        <NavLink to=\"/zeadmin/employees\" activeClassName=\"navlink-active\">\r\n          <span>\r\n            <Service size=\"16px\" />\r\n            Employees\r\n          </span>\r\n        </NavLink>\r\n      </Accordion>\r\n      <NavItem>\r\n        <NavLink to=\"/zeadmin/report\">\r\n          <Dashboard size=\"16px\" />\r\n          <span>File Report</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    </SideNavLayout>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SideNav from \"./SideNav\";\r\n\r\nimport { LayoutContainer, MainLayout } from \"../../styled/layout\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <LayoutContainer>\r\n      <Header />\r\n      <SideNav />\r\n      <MainLayout>{props.children}</MainLayout>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../../util/graphql/user\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientCard = ({ history }) => {\r\n  let newClients = [];\r\n  const [isUsers, setIsUsers] = useState([]);\r\n\r\n  const { data: dataUsers, loading: loadingUsers } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  if (dataUsers) {\r\n    dataUsers.getUsers.map(user => {\r\n      const newUser = new Date(parseInt(user.createdAt)).setDate(\r\n        new Date(parseInt(user.createdAt)).getDate() + 15\r\n      );\r\n\r\n      const newUser2 =\r\n        moment(parseInt(newUser)).format(\"MM/DD/YYYY\") >=\r\n        moment().format(\"MM/DD/YYYY\");\r\n\r\n      if (newUser2) {\r\n        newClients.push(moment(parseInt(newUser)).format(\"MM/DD/YYYY\"));\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataUsers) {\r\n      setIsUsers(dataUsers.getUsers);\r\n    }\r\n  }, [dataUsers]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/user\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Clients\r\n          </DLabel>\r\n          <Content width=\"50%\" flex justify=\"center\" align=\"center\">\r\n            {dataUsers && isUsers.length > 0 ? (\r\n              <h1>{isUsers.length}</h1>\r\n            ) : (\r\n              <Spinner small />\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"#6dd5ed\"\r\n                color=\"#fff\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                New Clients:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {newClients.length > 0 ? (\r\n                  <h4>{newClients.length}</h4>\r\n                ) : (\r\n                  <Spinner small />\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default ClientCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_APPOINTMENT_STATUS,\r\n  FETCH_APPOINTMENTS_QUERY\r\n} from \"../../../util/graphql/appointment\";\r\nimport { DGrid, DCard, Content } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCard = ({ history }) => {\r\n  const [isDone, setIsDone] = useState([]);\r\n  const [isCancelled, setIsCancelled] = useState([]);\r\n  const [isAppointments, setIsAppointments] = useState([]);\r\n\r\n  const { data: dataIsAppointments, loading: loadingIsAppointments } = useQuery(\r\n    FETCH_APPOINTMENTS_QUERY\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsAppointments) {\r\n      setIsAppointments(dataIsAppointments.appointments);\r\n    }\r\n  }, [dataIsAppointments]);\r\n\r\n  console.log(isAppointments);\r\n\r\n  const { data: dataIsDone, loading: loadingIsDone } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"DONE\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsDone) {\r\n      setIsDone(dataIsDone.appointmentsByStatus);\r\n    }\r\n  }, [dataIsDone]);\r\n\r\n  const { data: dataIsCancelled, loading: loadingIsCancelled } = useQuery(\r\n    FETCH_APPOINTMENT_STATUS,\r\n    {\r\n      variables: {\r\n        status: \"CANCELLED\"\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (dataIsCancelled) {\r\n      setIsCancelled(dataIsCancelled.appointmentsByStatus);\r\n    }\r\n  }, [dataIsCancelled]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/appointments\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Appointments\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingIsAppointments ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isAppointments && <h1>{isAppointments.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"green\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Successful:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsDone ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isDone && <h4>{isDone.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor=\"firebrick\"\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Cancelled:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingIsCancelled ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isCancelled && <h4>{isCancelled.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default AppointmentCard;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst FETCH_INQUIRIES = gql`\r\n  query inquiries {\r\n    inquiries {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRIES_READ = gql`\r\n  query inquiriesRead($read: Boolean) {\r\n    inquiriesRead(read: $read) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_INQUIRY = gql`\r\n  query inquiry($inquiryId: ID!) {\r\n    inquiry(_id: $inquiryId) {\r\n      _id\r\n      name\r\n      email\r\n      subject\r\n      message\r\n      to\r\n      reply\r\n    }\r\n  }\r\n`;\r\n\r\nexport { FETCH_INQUIRIES, FETCH_INQUIRIES_READ, FETCH_INQUIRY };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_INQUIRIES,\r\n  FETCH_INQUIRIES_READ\r\n} from \"../../../util/graphql/inquiry\";\r\nimport { Content, DCard, DGrid } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst InquiryCard = ({ history }) => {\r\n  const [isInqs, setIsInqs] = useState([]);\r\n  const [isInqsRead, setIsInqsRead] = useState([]);\r\n  const [isInqsUnread, setIsInqsUnread] = useState([]);\r\n\r\n  const { data: dataInqs, loading: loadingInqs } = useQuery(FETCH_INQUIRIES);\r\n\r\n  useEffect(() => {\r\n    if (dataInqs) {\r\n      setIsInqs(dataInqs.inquiries);\r\n    }\r\n  }, [dataInqs]);\r\n\r\n  const { data: dataInqsRead, loading: loadingInqsRead } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: true\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsRead) {\r\n      setIsInqsRead(dataInqsRead.inquiriesRead);\r\n    }\r\n  }, [dataInqsRead]);\r\n\r\n  const { data: dataInqsUnread, loading: loadingInqsUnread } = useQuery(\r\n    FETCH_INQUIRIES_READ,\r\n    {\r\n      variables: {\r\n        read: false\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataInqsUnread) {\r\n      setIsInqsUnread(dataInqsUnread.inquiriesRead);\r\n    }\r\n  }, [dataInqsUnread]);\r\n\r\n  return (\r\n    <DCard\r\n      dh=\"200px\"\r\n      dw=\"300px\"\r\n      onClick={() => history.push(\"/zeadmin/inquiry\")}\r\n      pointer\r\n    >\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        margin=\"0 auto\"\r\n      >\r\n        <Content\r\n          width=\"90%\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          direct=\"column\"\r\n          margin=\"0 auto\"\r\n        >\r\n          <DLabel\r\n            flex\r\n            justifyCenter\r\n            alignCenter\r\n            weight={500}\r\n            w={\"100%\"}\r\n            size=\"18px\"\r\n            bgcolor=\"#eee\"\r\n            rounded\r\n          >\r\n            Inquiries:\r\n          </DLabel>\r\n          <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n            {loadingInqs ? (\r\n              <Spinner small />\r\n            ) : (\r\n              isInqs && <h1>{isInqs.length}</h1>\r\n            )}\r\n          </Content>\r\n        </Content>\r\n        <Content width=\"100%\">\r\n          <DGrid>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.bluer}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Read:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsRead ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsRead && <h4>{isInqsRead.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n            <Content width=\"100%\" flex justify=\"space-between\" margin=\"0 auto\">\r\n              <DLabel\r\n                flex\r\n                justifyCenter\r\n                alignCenter\r\n                weight={500}\r\n                w={\"100%\"}\r\n                bgcolor={({ theme }) => theme.secondary}\r\n                color=\"white\"\r\n                size=\"12px\"\r\n                rounded\r\n              >\r\n                Unread:\r\n              </DLabel>\r\n              <Content width=\"100%\" flex justify=\"center\" align=\"center\">\r\n                {loadingInqsUnread ? (\r\n                  <Spinner small />\r\n                ) : (\r\n                  isInqsUnread && <h4>{isInqsUnread.length}</h4>\r\n                )}\r\n              </Content>\r\n            </Content>\r\n          </DGrid>\r\n        </Content>\r\n      </Content>\r\n    </DCard>\r\n  );\r\n};\r\n\r\nexport default InquiryCard;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, DGrid } from \"../../styled/containers\";\r\nimport ClientCard from \"./ClientCard\";\r\nimport AppointmentCard from \"./AppointmentCard\";\r\nimport InquiryCard from \"./InquiryCard\";\r\n\r\nconst Cards = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <DSection\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"space-around\"\r\n      align=\"center\"\r\n      margin=\"20px 0\"\r\n    >\r\n      <DGrid three gap=\"25px\">\r\n        <ClientCard history={history} />\r\n        <AppointmentCard history={history} />\r\n        <InquiryCard history={history} />\r\n      </DGrid>\r\n    </DSection>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        display: false\r\n      }\r\n    ]\r\n  },\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../util/graphql/appointment\";\r\nimport UpcommingAppointments from \"../../components/admin/dashboard/UpcommingAppointments\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DSection,\r\n  DGrid,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\n// import { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport Cards from \"../../components/admin/dashboard/Cards\";\r\n\r\nconst Dashboard = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  // const [percentage, setpercentage] = useState(1);\r\n  // const [chartData, setChartData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setpercentage(80);\r\n\r\n  //   setChartData({\r\n  //     labels: [\r\n  //       \"Jan\",\r\n  //       \"Feb\",\r\n  //       \"Mar\",\r\n  //       \"Apr\",\r\n  //       \"May\",\r\n  //       \"Jun\",\r\n  //       \"Jul\",\r\n  //       \"Aug\",\r\n  //       \"Sep\",\r\n  //       \"Oct\",\r\n  //       \"Nov\",\r\n  //       \"Dec\"\r\n  //     ],\r\n  //     datasets: [\r\n  //       {\r\n  //         label: \"# of Appointments\",\r\n  //         data: [12, 19, 3, 5, 2, 3, 10, 22, 24, 19, 30, 33],\r\n  //         backgroundColor: [\r\n  //           \"rgba(255, 99, 132, 0.2)\",\r\n  //           \"rgba(54, 162, 235, 0.7)\",\r\n  //           \"rgba(255, 206, 86, 0.7)\",\r\n  //           \"rgba(75, 192, 192, 0.7)\",\r\n  //           \"rgba(153, 102, 255, 0.7)\",\r\n  //           \"rgba(234, 103, 64, 0.7)\",\r\n  //           \"rgba(75, 59, 64, 0.7)\",\r\n  //           \"rgba(75, 159, 64, 0.7)\",\r\n  //           \"rgba(55, 15, 64, 0.7)\",\r\n  //           \"rgba(55, 59, 44, 0.7)\",\r\n  //           \"rgba(25, 59, 34, 0.7)\",\r\n  //           \"rgba(25, 159, 64, 0.7)\"\r\n  //         ],\r\n  //         borderColor: [\r\n  //           \"rgba(255, 99, 132, 1)\",\r\n  //           \"rgba(54, 162, 235, 1)\",\r\n  //           \"rgba(255, 206, 86, 1)\",\r\n  //           \"rgba(75, 192, 192, 1)\",\r\n  //           \"rgba(153, 102, 255, 1)\",\r\n  //           \"rgba(255, 159, 64, 1)\"\r\n  //         ],\r\n  //         borderWidth: 1\r\n  //       }\r\n  //     ]\r\n  //   });\r\n  // }, [setpercentage, setChartData]);\r\n\r\n  // const options = {\r\n  //   scales: {\r\n  //     xAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ],\r\n  //     yAxes: [\r\n  //       {\r\n  //         gridLines: {\r\n  //           display: false\r\n  //         },\r\n  //         display: false\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   legend: {\r\n  //     display: false\r\n  //   }\r\n  // };\r\n\r\n  const { loading, data } = useQuery(FETCH_CURRENT_APPOINTMENTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAppointments(data.currentAppointments);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Cards />\r\n      <DSection height=\"100%\" margin=\"20px 0 20px 0\">\r\n        <DGrid gap=\"40px\">\r\n          {/* <DGrid two>\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Bar data={chartData}></Bar>\r\n            </Content>\r\n\r\n            <Content width=\"100%\" height=\"auto\">\r\n              <Doughnut data={chartData}></Doughnut>\r\n            </Content>\r\n          </DGrid> */}\r\n\r\n          <Content height=\"40vh\" width=\"100%\">\r\n            {loading ? (\r\n              <Overlay flex justify=\"center\" align=\"center\">\r\n                <h2>Loading...</h2>\r\n              </Overlay>\r\n            ) : (\r\n              appointments && (\r\n                <UpcommingAppointments\r\n                  appointments={appointments}\r\n                  loading={loading}\r\n                />\r\n              )\r\n            )}\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst placeholderAnimate = keyframes`\r\n\r\n    0% {\r\n      background-position: -650px 0;\r\n    }\r\n    100% {\r\n      background-position: 650px 0;\r\n    }\r\n  \r\n\r\n\r\n`;\r\n\r\n// SKELETON\r\n\r\nexport const DSkeleton = styled.div`\r\n  width: ${props => (props.wid ? props.wid : \"100%\")};\r\n  padding: 20px;\r\n\r\n  &-content {\r\n    background: #fff;\r\n    padding: 15px 0;\r\n  }\r\n\r\n  .placeholder-content {\r\n    height: 205px;\r\n    overflow: hidden;\r\n    background: #000;\r\n    position: relative;\r\n\r\n    animation-duration: 1.7s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    animation-name: ${placeholderAnimate};\r\n    background: #f6f7f8; // Fallback\r\n    background: linear-gradient(to right, #eee 2%, #ddd 18%, #eee 33%);\r\n    background-size: 1300px; // Animation Area\r\n\r\n    &_item {\r\n      width: 100%;\r\n      height: 20px;\r\n      position: absolute;\r\n      background: #fff;\r\n      z-index: 2;\r\n\r\n      &:after,\r\n      &:before {\r\n        width: inherit;\r\n        height: inherit;\r\n        content: \"\";\r\n        position: absolute;\r\n      }\r\n\r\n      &:nth-child(1) {\r\n        top: 0;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 20px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: 0px;\r\n        left: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(4) {\r\n        top: 20px;\r\n        width: 20px;\r\n        left: 170px;\r\n        height: 90px;\r\n      }\r\n\r\n      &:nth-child(5) {\r\n        top: 40px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(6) {\r\n        top: 75px;\r\n        left: 190px;\r\n        height: 12px;\r\n      }\r\n\r\n      &:nth-child(7) {\r\n        top: 20px;\r\n        right: 0;\r\n        width: 23%;\r\n        height: 20px;\r\n      }\r\n\r\n      &:nth-child(8) {\r\n        top: 0;\r\n        right: 0;\r\n        width: 10%;\r\n        height: 100%;\r\n      }\r\n\r\n      &:nth-child(9) {\r\n        top: 110px;\r\n        height: 17px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(10) {\r\n        top: 149px;\r\n        height: 12px;\r\n        left: 0;\r\n      }\r\n\r\n      &:nth-child(11) {\r\n        top: 183px;\r\n        left: 0;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DSkeleton } from \"./styled/skeleton\";\r\n\r\nconst Skeleton = ({ width }) => {\r\n  return (\r\n    <DSkeleton wid={width}>\r\n      <div className=\"page-content\">\r\n        <div className=\"placeholder-content\">\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n          <div className=\"placeholder-content_item\"></div>\r\n        </div>\r\n      </div>\r\n    </DSkeleton>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { DSection, DGrid, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport Skeleton from \"../../Skeleton\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst CurrentAppointments = () => {\r\n  // const [currentAppointments, setCurrentAppointments] = useState([]);\r\n\r\n  const { loading, data: currentAppointmentData } = useQuery(\r\n    FETCH_CURRENT_APPOINTMENTS\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (currentAppointmentData) {\r\n  //     setCurrentAppointments(currentAppointmentData.currentAppointments);\r\n  //   }\r\n  // }, [currentAppointmentData]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"PENDING\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"gold\" }\r\n              : row.status === \"VERIFIED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"green\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!currentAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={currentAppointmentData.currentAppointments.map(\r\n            currAppoint => currAppoint\r\n          )}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Apointment List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default CurrentAppointments;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewModal = ({ setOpen, open }) => {\r\n  return (\r\n    <Modal size=\"tiny\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Choose Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <Content flex justify=\"space-around\" align=\"center\" width=\"100%\">\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Existing Client\r\n          </Link>\r\n          <Link to=\"/zeadmin/new_appointment\" className=\"btn btn-blue\">\r\n            Guest Client\r\n          </Link>\r\n        </Content>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\n// import HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst Appointments = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n        </Content>\r\n        <DGrid>\r\n          <CurrentAppointments />\r\n          {/* <HistoryAppointments /> */}\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentCancel = ({ openCancel, setOpenCancel, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [cancelAppointment, { loading }] = useMutation(\r\n    CANCEL_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenCancel(false);\r\n        toaster.notify(\"Appointment Cancelled\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenCancel(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    cancelAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openCancel}>\r\n      <Modal.Header>Appointment Cancellation</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Are you sure you want to cancel the appointment?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm basic onClick={() => setOpenCancel(false)}>\r\n          No\r\n        </DButtonConfirm>\r\n        <DButtonCancel basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CANCEL_APPOINTMENT_MUTATION = gql`\r\n  mutation cancelAppointment($appointmentId: ID!) {\r\n    cancelAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentCancel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_APPOINTMENTS_QUERY } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst AppointmentDone = ({ openDone, setOpenDone, appointmentId }) => {\r\n  const [errors, setErrors] = useState([]);\r\n  const [doneAppointment, { loading }] = useMutation(\r\n    DONE_APPOINTMENT_MUTATION,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      },\r\n      refetchQueries: [{ query: FETCH_APPOINTMENTS_QUERY }],\r\n      onCompleted(data) {\r\n        setOpenDone(false);\r\n        toaster.notify(\"Appointment Done\", { position: \"bottom-right\" });\r\n      },\r\n      onError(err) {\r\n        setOpenDone(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    doneAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={openDone}>\r\n      <Modal.Header>Appointment</Modal.Header>\r\n      <Modal.Content>\r\n        <h2>Appointment already done?</h2>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel basic onClick={() => setOpenDone(false)}>\r\n          Close\r\n        </DButtonCancel>\r\n        <DButtonConfirm basic onClick={handleConfirm}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DONE_APPOINTMENT_MUTATION = gql`\r\n  mutation doneAppointment($appointmentId: ID!) {\r\n    doneAppointment(_id: $appointmentId) {\r\n      _id\r\n      date\r\n      slot_start\r\n      status\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        duration\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AppointmentDone;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SINGLE_APPOINTMENT_QUERY } from \"../../util/graphql/appointment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DSection, Content, DGrid } from \"../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  DButtonConfirm\r\n} from \"../../components/styled/utils\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport moment from \"moment\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport AppointmentCancel from \"../../components/admin/appointment/AppointmentCancel\";\r\nimport AppointmentDone from \"../../components/admin/appointment/AppointmentDone\";\r\nimport ReschedModal from \"../../components/main/appointment/ReschedModal\";\r\n\r\nconst AppointmentDetails = props => {\r\n  const history = useHistory();\r\n  const appointmentId = props.match.params._id;\r\n  const [myAppoint, setMyAppoint] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [openCancel, setOpenCancel] = useState(false);\r\n  const [openDone, setOpenDone] = useState(false);\r\n\r\n  const { data, loading: dataLoading } = useQuery(\r\n    FETCH_SINGLE_APPOINTMENT_QUERY,\r\n    {\r\n      variables: {\r\n        appointmentId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMyAppoint(data.appointment);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection\r\n        margin=\"5vh auto 0 auto\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direct=\"column\"\r\n        width=\"100%\"\r\n        height=\"100vh\"\r\n      >\r\n        <h2 style={{ color: \"#111\" }}>\r\n          {data && (\r\n            <span style={{ color: \"#2980B9\", fontWeight: 700 }}>\r\n              {`${data.appointment.user.firstName} ${data.appointment.user.lastName}'s`}\r\n            </span>\r\n          )}{\" \"}\r\n          Appointment Details\r\n        </h2>\r\n\r\n        {!data ? (\r\n          <Spinner />\r\n        ) : (\r\n          <DGrid rowCustom=\"1fr 100px\" style={{ width: \"70%\" }}>\r\n            <Content\r\n              bgcolor=\"rgba(223, 230, 233,0.8)\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              margn=\"0 auto\"\r\n              pad=\"1.5rem 2em\"\r\n              flex\r\n              jusitfy=\"center\"\r\n              align=\"center\"\r\n              direct=\"column\"\r\n              rounded\r\n            >\r\n              <Form style={{ width: \"90%\" }}>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Appointment Id</label>\r\n                  <input\r\n                    value={data.appointment._id}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Service</label>\r\n                  <input\r\n                    value={data.appointment.service.name}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Aesthetician</label>\r\n                  <input\r\n                    value={`${data.appointment.employee.title}. ${data.appointment.employee.firstName} ${data.appointment.employee.lastName}`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Date of Appointment</label>\r\n                  <input\r\n                    value={moment(parseInt(data.appointment.date)).format(\"LL\")}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Time of Appointment</label>\r\n                  <input\r\n                    value={data.appointment.slot_start}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Duration</label>\r\n                  <input\r\n                    value={`${data.appointment.service.duration} min`}\r\n                    readOnly\r\n                    style={styles.input}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field style={styles.field}>\r\n                  <label style={styles.label}>Status</label>\r\n                  <input\r\n                    value={data.appointment.status}\r\n                    readOnly\r\n                    style={\r\n                      data.appointment.status === \"PENDING\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"gold\"\r\n                          }\r\n                        : data.appointment.status === \"CANCELLED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"firebrick\"\r\n                          }\r\n                        : data.appointment.status === \"VERIFIED\"\r\n                        ? {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"green\"\r\n                          }\r\n                        : {\r\n                            width: \"60%\",\r\n                            fontSize: 14,\r\n                            fontWeight: 700,\r\n                            color: \"blue\"\r\n                          }\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Content>\r\n            <Content width=\"100%\" flex align=\"center\" justify=\"space-between\">\r\n              <DButton onClick={() => history.goBack()}>Back</DButton>\r\n\r\n              {data.appointment.status === \"CANCELLED\" ||\r\n              data.appointment.status === \"DONE\" ||\r\n              data.appointment.status === \"RESCHEDULED\" ? (\r\n                \"\"\r\n              ) : (\r\n                <>\r\n                  <DButtonConfirm onClick={() => setOpenDone(true)}>\r\n                    Done\r\n                  </DButtonConfirm>\r\n                  <ReschedModal\r\n                    isAdmin={true}\r\n                    status={\"VERIFIED\"}\r\n                    setOpen={setOpen}\r\n                    appointmentId={appointmentId}\r\n                  />\r\n                  <DButtonCancel onClick={() => setOpenCancel(true)}>\r\n                    Cancel\r\n                  </DButtonCancel>\r\n                </>\r\n              )}\r\n            </Content>\r\n          </DGrid>\r\n        )}\r\n        <AppointmentCancel\r\n          openCancel={openCancel}\r\n          setOpenCancel={setOpenCancel}\r\n          appointmentId={appointmentId}\r\n        />\r\n        <AppointmentDone\r\n          openDone={openDone}\r\n          setOpenDone={setOpenDone}\r\n          appointmentId={appointmentId}\r\n        />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  field: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    jusitfyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  },\r\n  label: {\r\n    width: \"40%\"\r\n  },\r\n  input: {\r\n    width: \"60%\"\r\n  }\r\n};\r\n\r\nexport default AppointmentDetails;\r\n","import React from \"react\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst NewUserAppointment = ({ values, valueChange }) => {\r\n  return (\r\n    <Content width=\"90%\">\r\n      <h2>Guest Details</h2>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>First Name</label>\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Last Name</label>\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Contact</label>\r\n          <input\r\n            name=\"contact\"\r\n            value={values.contact || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            value={values.email || \"\"}\r\n            onChange={valueChange}\r\n          />\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewUserAppointment;\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_CATEGORIES_QUERY,\r\n  FETCH_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../../util/graphql/service\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Content } from \"../../styled/containers\";\r\n\r\nconst NewAppointmentInput = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  serviceValue,\r\n  setServiceValue,\r\n  employeeVal,\r\n  setEmployeeVal\r\n}) => {\r\n  //CATEGORY\r\n  const {\r\n    loading: loading_categories,\r\n    data: data_categories,\r\n    error\r\n  } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  //SERVICE\r\n  const [\r\n    loadService,\r\n    { called, loading: loading_services, data: data_services }\r\n  ] = useLazyQuery(FETCH_SERVICES_QUERY, {\r\n    variables: {\r\n      categoryId: categoryVal\r\n    }\r\n  });\r\n\r\n  //EMPLOYEE\r\n  const [\r\n    loadServiceEmp,\r\n    {\r\n      called: calledServiceEmp,\r\n      loading: loading_serviceEmp,\r\n      data: data_serviceEmp\r\n    }\r\n  ] = useLazyQuery(FETCH_SINGLE_SERVICE_QUERY, {\r\n    variables: {\r\n      serviceId: serviceValue\r\n    }\r\n  });\r\n\r\n  //Handle Changes\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setCategoryVal(e.target.value);\r\n    loadService();\r\n  };\r\n\r\n  const handleServiceChange = e => {\r\n    e.preventDefault();\r\n    setServiceValue(e.target.value);\r\n    loadServiceEmp();\r\n  };\r\n\r\n  const handleEmployeeChange = e => {\r\n    e.preventDefault();\r\n    setEmployeeVal(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      margin=\"0 auto\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      pad=\"0\"\r\n      flow=\"nowrap column\"\r\n    >\r\n      <h2>Appointment Details</h2>\r\n      <Form style={{ width: \"100%\", padding: \"1rem 0\" }} size=\"large\">\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\", fontWeight: 700 }}>\r\n            Categories\r\n          </label>\r\n          {loading_categories ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"category\"\r\n              value={categoryVal}\r\n              onChange={handleChange}\r\n              className=\"input-custom\"\r\n            >\r\n              <option></option>\r\n              {data_categories.categories &&\r\n                data_categories.categories.map(category => (\r\n                  <option value={category._id} key={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>Select a service</label>\r\n          {called && loading_services ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"service\"\r\n              onChange={handleServiceChange}\r\n              value={serviceValue}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"38px\",\r\n                padding: \"0.5em\",\r\n                border: \"1px solid rgba(34,36,38,.15)\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                outline: \"0\",\r\n                visibility: \"visible\",\r\n                textAlign: \"left\"\r\n              }}\r\n            >\r\n              <option></option>\r\n              {data_services &&\r\n                data_services.services.map(service => (\r\n                  <option key={service._id} value={service._id}>\r\n                    {service.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n\r\n        <Form.Field>\r\n          <label style={{ textTransform: \"uppercase\" }}>\r\n            Select Aesthetician\r\n          </label>\r\n          {calledServiceEmp && loading_serviceEmp ? (\r\n            <h4>Loading...</h4>\r\n          ) : (\r\n            <select\r\n              name=\"employee\"\r\n              value={employeeVal}\r\n              onChange={handleEmployeeChange}\r\n              className=\"ui fluid dropdown\"\r\n            >\r\n              <option></option>\r\n              {data_serviceEmp &&\r\n                data_serviceEmp.service.employees.map(servEmp => (\r\n                  <option key={servEmp._id} value={servEmp._id}>\r\n                    {servEmp.firstName}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          )}\r\n        </Form.Field>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentInput;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_CHECKED_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport moment from \"moment\";\r\n\r\nconst timelineLabels = (desiredStartTime, timeLength, interval) => {\r\n  const periodsInADay = moment.duration(timeLength, \"MINUTES\").as(\"MINUTES\");\r\n\r\n  let timeSlot = [];\r\n\r\n  const startTimeMoment = moment(desiredStartTime, \"hh:mm A\");\r\n  for (let i = 0; i <= periodsInADay; i += interval) {\r\n    startTimeMoment.add(i === 0 ? 0 : interval, \"MINUTES\");\r\n    timeSlot.push(startTimeMoment.format(\"hh:mm A\"));\r\n  }\r\n  return timeSlot;\r\n};\r\n\r\nconst NewDateTime = ({\r\n  setStartDate,\r\n  setSelectedTime,\r\n  startDate,\r\n  employeeVal,\r\n  serviceValue\r\n}) => {\r\n  let days = [];\r\n  let times = [];\r\n  let appointmentTimes = [];\r\n\r\n  const handleTimeChanged = event => {\r\n    setSelectedTime(event.target.value);\r\n  };\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_appointments, loading: loading_appointments } = useQuery(\r\n    FETCH_CHECKED_APPOINTMENTS,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString()\r\n      }\r\n    }\r\n  );\r\n\r\n  if (data_employee && data_service && data_appointments) {\r\n    const workStart = data_employee.employee.schedule.workStart;\r\n    const breakStart = data_employee.employee.schedule.breakStart;\r\n    data_employee.employee.schedule.day.map(d => days.push(d));\r\n    data_appointments.checkedAppointments.map(occcupied =>\r\n      appointmentTimes.push(occcupied.slot_start)\r\n    );\r\n\r\n    const startTime = moment(workStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const breakStime = moment(breakStart, \"h:m a\").format(\"HH:mm\");\r\n\r\n    const intervalTime = data_service.service.duration;\r\n\r\n    const workingTime = timelineLabels(startTime, 9 * 60, intervalTime);\r\n    const breakTime = timelineLabels(breakStime, 1 * 60, 60);\r\n\r\n    let initialTime = workingTime.filter(item => {\r\n      return !breakTime.includes(item);\r\n    });\r\n\r\n    let finalTime = initialTime.filter(oras => {\r\n      return !appointmentTimes.includes(oras);\r\n    });\r\n    finalTime.map(ft => times.push(ft));\r\n  }\r\n\r\n  return (\r\n    <DGrid two style={{ margin: \"48px auto\" }}>\r\n      <Content width=\"100%\" flex justify=\"center\" align=\"center\" pad=\"0\">\r\n        <DatePicker\r\n          selected={startDate}\r\n          minDate={new Date().setDate(new Date().getDate() + 1)}\r\n          onChange={handleDateChanged}\r\n          inline\r\n        />\r\n      </Content>\r\n      <Content\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        flex\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        margin=\"0 10px\"\r\n      >\r\n        {!data_employee && !data_service ? (\r\n          <h1>No available time slot</h1>\r\n        ) : loading_employee ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <DGrid two gap=\"10px\">\r\n            {!times ? (\r\n              <h2>Loading...</h2>\r\n            ) : (\r\n              times.map(time => (\r\n                <div className=\"pretty p-default p-curve\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    key={time}\r\n                    value={time}\r\n                    onChange={handleTimeChanged}\r\n                  />\r\n                  <div className=\"state p-info-o\">\r\n                    <label style={styles.label}>{time}</label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </DGrid>\r\n        )}\r\n      </Content>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    fontWeight: 700\r\n  }\r\n};\r\n\r\nexport default NewDateTime;\r\n","import React from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport NewAppointmentInput from \"./NewAppointmentInput\";\r\nimport NewDateTime from \"./NewDateTime\";\r\n\r\nconst NewAppointmentDetails = ({\r\n  categoryVal,\r\n  setCategoryVal,\r\n  categories,\r\n  employeeVal,\r\n  service,\r\n  setCategories,\r\n  setService,\r\n  setServiceEmp,\r\n  serviceValue,\r\n  setServiceValue,\r\n  setEmployeeVal,\r\n  startDate,\r\n  setStartDate,\r\n  selectedTime,\r\n  setSelectedTime\r\n}) => {\r\n  return (\r\n    <DGrid>\r\n      <NewAppointmentInput\r\n        categoryVal={categoryVal}\r\n        setCategoryVal={setCategoryVal}\r\n        categories={categories}\r\n        service={service}\r\n        employeeVal={employeeVal}\r\n        setCategories={setCategories}\r\n        setService={setService}\r\n        setServiceEmp={setServiceEmp}\r\n        serviceValue={serviceValue}\r\n        setServiceValue={setServiceValue}\r\n        setEmployeeVal={setEmployeeVal}\r\n        startDate={startDate}\r\n      />\r\n      <NewDateTime\r\n        setStartDate={setStartDate}\r\n        setSelectedTime={setSelectedTime}\r\n        selectedTime={selectedTime}\r\n        startDate={startDate}\r\n        employeeVal={employeeVal}\r\n        serviceValue={serviceValue}\r\n      />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default NewAppointmentDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_MY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport {\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel,\r\n  Toasted\r\n} from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst Confirmation = ({\r\n  open,\r\n  setOpen,\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  values\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [addInfo, setAddInfo] = useState(\"\");\r\n  const history = useHistory();\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createGuestAppointment, { loading }] = useMutation(\r\n    CREATE_GUEST_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_MY_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_MY_APPOINTMENTS,\r\n          data: { myAppointments: [newAppointment, ...data.myAppointments] }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setOpen(false);\r\n        history.push(\"/zeadmin/appointments\");\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">\r\n                  Successfully booked an appointment\r\n                </span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.expiredLog) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.expiredLog}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n\r\n        if (err.graphQLErrors[0].extensions.exception.errors.check) {\r\n          toaster.notify(({ onClose }) => (\r\n            <Toasted status={\"error\"}>\r\n              <span className=\"description\">\r\n                {err.graphQLErrors[0].extensions.exception.errors.check}\r\n              </span>\r\n              <span className=\"close\" onClick={onClose}>\r\n                &times;\r\n              </span>\r\n            </Toasted>\r\n          ));\r\n        }\r\n      },\r\n      variables: {\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: addInfo,\r\n        ...values\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleMessage = e => {\r\n    setAddInfo(e.target.value);\r\n  };\r\n\r\n  const handleCreateAppointment = () => {\r\n    createGuestAppointment();\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"large\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Appointment Confirmation</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <DGrid two gap=\"48px\">\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  FirstName\r\n                </DLabel>\r\n\r\n                <input name=\"firstName\" value={values.firstName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  LastName\r\n                </DLabel>\r\n\r\n                <input value={values.lastName} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Contact\r\n                </DLabel>\r\n                <input value={values.contact} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Email\r\n                </DLabel>\r\n                <input value={values.email} readOnly />\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Service\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input value={data_service.service.name} readOnly />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Aesthetician\r\n                </DLabel>\r\n                {!data_employee ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  data_employee.employee && (\r\n                    <input\r\n                      value={`${data_employee.employee.title} ${data_employee.employee.firstName} ${data_employee.employee.lastName}`}\r\n                      readOnly\r\n                    />\r\n                  )\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Date\r\n                </DLabel>\r\n                <input value={new Date(startDate).toDateString()} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Time\r\n                </DLabel>\r\n                <input value={selectedTime} readOnly />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Duration\r\n                </DLabel>\r\n                {!data_service ? (\r\n                  <h6>Loading...</h6>\r\n                ) : (\r\n                  <input\r\n                    value={data_service.service.duration + \" min\"}\r\n                    readOnly\r\n                  />\r\n                )}\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <DLabel\r\n                  bgcolor=\"#2193b0\"\r\n                  style={styles.label}\r\n                  rounded\r\n                  m=\"10px 0\"\r\n                >\r\n                  Additional Info(optional)\r\n                </DLabel>\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={addInfo}\r\n                  onChange={handleMessage}\r\n                ></textarea>\r\n              </Form.Field>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm onClick={handleCreateAppointment}>\r\n          {loading ? <Spinner small inverted /> : \"Book\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Cancel</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_GUEST_APPOINTMENT = gql`\r\n  mutation createGuestAppointment(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createGuestAppointment(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n        contact\r\n        email\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        photo\r\n      }\r\n      employee {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  label: {\r\n    color: \"#fff\",\r\n    width: \"30%\",\r\n    diplay: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, DSection, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { useForm } from \"../../util/hooks/useForm\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport NewUserAppointment from \"../../components/admin/appointment/NewUserAppointment\";\r\nimport NewAppointmentDetails from \"../../components/admin/appointment/NewAppointmentDetails\";\r\nimport NewConfirmation from \"../../components/admin/appointment/NewConfirmation\";\r\n\r\nconst NewAppointment = () => {\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const { values, handleChange } = useForm({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    contact: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [categoryVal, setCategoryVal] = useState(\"\");\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  console.log(values);\r\n  return (\r\n    <Layout>\r\n      <DSection>\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\">\r\n              Appointment\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/appointments\" active>\r\n              New Appointment\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <DButton>Existing Client</DButton>\r\n        </Content>\r\n\r\n        <DGrid two gap=\"24px\">\r\n          <NewUserAppointment values={values} valueChange={handleChange} />\r\n          <NewAppointmentDetails\r\n            categoryVal={categoryVal}\r\n            setCategoryVal={setCategoryVal}\r\n            categories={categories}\r\n            service={service}\r\n            employeeVal={employeeVal}\r\n            setCategories={setCategories}\r\n            setService={setService}\r\n            setServiceEmp={setServiceEmp}\r\n            serviceValue={serviceValue}\r\n            setServiceValue={setServiceValue}\r\n            setEmployeeVal={setEmployeeVal}\r\n            startDate={startDate}\r\n            setStartDate={setStartDate}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n          />\r\n        </DGrid>\r\n        <DButton size=\"50px\" onClick={() => setOpen(true)}>\r\n          Book an Appointment\r\n        </DButton>\r\n      </DSection>\r\n      <NewConfirmation\r\n        open={open}\r\n        values={values}\r\n        setOpen={setOpen}\r\n        serviceValue={serviceValue}\r\n        employeeVal={employeeVal}\r\n        startDate={startDate}\r\n        selectedTime={selectedTime}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default NewAppointment;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../../util/graphql/employee\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport { DGrid, Content } from \"../../styled/containers\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\n\r\nconst NewEmployee = ({ setOpen, open }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [days, setDays] = useState([]);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createEmployeeCallback,\r\n    {\r\n      title: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      contact: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n      workStart: \"\",\r\n      workLength: \"\",\r\n      breakStart: \"\",\r\n      breakLength: \"\"\r\n    }\r\n  );\r\n\r\n  const [createEmployee, { loading }] = useMutation(CREATE_EMPLOYEE_MUTATION, {\r\n    variables: {\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      contact: values.contact,\r\n      email: values.email,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      workLength: parseInt(values.workLength) * 60,\r\n      breakStart: values.breakStart,\r\n      breakLength: parseInt(values.breakLength) * 60,\r\n      day: days\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY\r\n      });\r\n\r\n      const newEmployee = result.data.createEmployee;\r\n      cache.writeQuery({\r\n        query: FETCH_EMPLOYEES_NOT_ADMIN_QUERY,\r\n        data: {\r\n          aestheticiansReceps: [newEmployee, ...data.aestheticiansReceps]\r\n        }\r\n      });\r\n\r\n      values.title = \"\";\r\n      values.firstName = \"\";\r\n      values.lastName = \"\";\r\n      values.contact = \"\";\r\n      values.email = \"\";\r\n      values.role = \"\";\r\n      values.workStart = \"\";\r\n      values.workLength = \"\";\r\n      values.breakStart = \"\";\r\n      values.breakLength = \"\";\r\n      days = [];\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    }\r\n  });\r\n\r\n  const handleDayChange = val => {\r\n    setDays(val);\r\n  };\r\n\r\n  function createEmployeeCallback() {\r\n    createEmployee();\r\n  }\r\n\r\n  console.log(days);\r\n\r\n  return (\r\n    <Modal size={\"large\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <DGrid two gap=\"10px\">\r\n            <Content width=\"100%\">\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field width=\"8\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    onChange={handleChange}\r\n                    value={values.title}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"first Name\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  placeholder=\"Contact\"\r\n                  name=\"contact\"\r\n                  value={values.contact}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Role</label>\r\n                <select name=\"role\" onChange={handleChange} value={values.role}>\r\n                  <option></option>\r\n                  <option value=\"AESTHETICIAN\">AESTHETICIAN</option>\r\n                  <option value=\"RECEPTIONIST\">RECEPTIONIST</option>\r\n                </select>\r\n              </Form.Field>\r\n            </Content>\r\n            <Content width=\"100%\">\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div class=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n            </Content>\r\n          </DGrid>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          Yes\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_EMPLOYEE_MUTATION = gql`\r\n  mutation createEmployee(\r\n    $title: String!\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $contact: String\r\n    $email: String!\r\n    $role: String!\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    createEmployee(\r\n      employeeInput: {\r\n        title: $title\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        contact: $contact\r\n        email: $email\r\n        role: $role\r\n      }\r\n      scheduleInput: {\r\n        day: $day\r\n        workStart: $workStart\r\n        workLength: $workLength\r\n        breakStart: $breakStart\r\n        breakLength: $breakLength\r\n      }\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      photo\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakStart\r\n        breakLength\r\n      }\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewEmployee;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEES_NOT_ADMIN_QUERY } from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst Employees = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [employeesAR, setEmployeesAR] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const {\r\n    data: data_employeesAR,\r\n    loading: loading_employeesAR,\r\n    error\r\n  } = useQuery(FETCH_EMPLOYEES_NOT_ADMIN_QUERY, {\r\n    variables: {\r\n      limit: 0\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data_employeesAR) {\r\n      setEmployeesAR(data_employeesAR.aestheticiansReceps);\r\n    }\r\n  }, [data_employeesAR]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Employee ID\",\r\n      selector: \"empId\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      selector: \"role\",\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/employee/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Employee List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n          {employeeAuth.role !== \"ADMIN\" || employeeAuth.level < 3 ? (\r\n            \"\"\r\n          ) : (\r\n            <DButton onClick={() => setOpen(true)}>New Employee</DButton>\r\n          )}\r\n        </Content>\r\n        {loading_employeesAR ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_employeesAR.aestheticiansReceps.map(aesrep => aesrep)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n      <NewEmployee open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DSection } from \"../../styled/containers\";\r\nimport {\r\n  Toasted,\r\n  DButton,\r\n  DButtonConfirm,\r\n  DButtonCancel\r\n} from \"../../styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\nlet daay = [];\r\n\r\nconst EmployeeDetails = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(employee.bio);\r\n  const [days, setDays] = useState(employee.schedule.day);\r\n\r\n  //   QUERY\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateEmployeeCallback,\r\n    {\r\n      title: employee.title,\r\n      firstName: employee.firstName,\r\n      lastName: employee.lastName,\r\n      email: employee.email,\r\n      contact: employee.contact,\r\n      role: employee.role,\r\n      workStart: employee.schedule.workStart,\r\n      workLength: employee.schedule.workLength / 60,\r\n      breakStart: employee.schedule.breakStart,\r\n      breakLength: employee.schedule.breakLength / 60\r\n    }\r\n  );\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_DETAILS, {\r\n    variables: {\r\n      employeeId: employee._id,\r\n      title: values.title,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      email: values.email,\r\n      contact: values.contact,\r\n      role: values.role,\r\n      workStart: values.workStart,\r\n      breakStart: values.breakStart,\r\n      workLength: parseInt(parseFloat(values.workLength) * 60),\r\n      breakLength: parseInt(parseFloat(values.breakLength) * 60),\r\n      day: days,\r\n      bio: content\r\n    },\r\n    onError(err) {\r\n      console.log(err);\r\n      //   setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateEmployeeCallback() {\r\n    updateEmployee();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DSection margin=\"40px 0\">\r\n        <DGrid two gap=\"20px\">\r\n          <Content\r\n            width=\"100%\"\r\n            pad=\"0 15px 15px 0\"\r\n            style={{ borderRight: \"1px solid #ccc\" }}\r\n          >\r\n            <h2>Employee Details</h2>\r\n            <Form noValidate>\r\n              <Form.Field width=\"six\">\r\n                <label>ID</label>\r\n                <input value={employee.empId} readOnly />\r\n              </Form.Field>\r\n              <Form.Group width=\"equal\">\r\n                <Form.Field width=\"four\">\r\n                  <label>Title</label>\r\n                  <select\r\n                    name=\"title\"\r\n                    value={values.title}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={employee.title}>{employee.title}</option>\r\n                    <option disabled>-------</option>\r\n                    <option value=\"Dr\">Dr</option>\r\n                    <option value=\"Ms\">Ms</option>\r\n                    <option value=\"Mr\">Mr</option>\r\n                  </select>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    onChange={handleChange}\r\n                    value={values.firstName}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    onChange={handleChange}\r\n                    value={values.lastName}\r\n                  />\r\n                </Form.Field>\r\n              </Form.Group>\r\n\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={values.email}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Contact</label>\r\n                <input\r\n                  name=\"contact\"\r\n                  onChange={handleChange}\r\n                  value={values.contact}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={content}\r\n                  config={config}\r\n                  tabIndex={1} // tabIndex of textarea\r\n                  onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                  onChange={newContent => {}}\r\n                />\r\n              </Form.Field>\r\n              <DButton>Change Password</DButton>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\" flex direct=\"column\">\r\n            <h2>Schedule Details</h2>\r\n            <Form style={{ padding: \"40px 0 0 0\" }}>\r\n              <Form.Group inline>\r\n                <CheckboxGroup name=\"days\" value={days} onChange={setDays}>\r\n                  {Checkbox => (\r\n                    <>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sun\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sun</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Mon\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Mon</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Tue\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Tue</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Wed\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Wed</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Thu\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Thu</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Fri\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Fri</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                        <Checkbox value=\"Sat\" />\r\n                        <div className=\"state p-info-o\">\r\n                          <label>Sat</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </CheckboxGroup>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\" style={{ marginTop: \"50px\" }}>\r\n                <Form.Field>\r\n                  <label>Start Time</label>\r\n                  <Label>{employee.schedule.workStart}</Label>\r\n                  <select\r\n                    name=\"workStart\"\r\n                    onChange={handleChange}\r\n                    value={values.workStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Work Length</label>\r\n                  <Label>{employee.schedule.workLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.workLength}\r\n                    name=\"workLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                    <option value=\"7\">7 hours</option>\r\n                    <option value=\"8\">8 hours</option>\r\n                    <option value=\"9\">9 hours</option>\r\n                    <option value=\"10\">10 hours</option>\r\n                    <option value=\"11\">11 hours</option>\r\n                    <option value=\"12\">12 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Form.Group widths=\"equal\">\r\n                <Form.Field>\r\n                  <label>Break Time</label>\r\n                  <Label>{employee.schedule.breakStart}</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    name=\"breakStart\"\r\n                    onChange={handleChange}\r\n                    value={values.breakStart}\r\n                  >\r\n                    <option></option>\r\n                    <option value=\"6:00 AM\">6:00 AM</option>\r\n                    <option value=\"7:00 AM\">7:00 AM</option>\r\n                    <option value=\"8:00 AM\">8:00 AM</option>\r\n                    <option value=\"9:00 AM\">9:00 AM</option>\r\n                    <option value=\"10:00 AM\">10:00 AM</option>\r\n                    <option value=\"11:00 AM\">11:00 AM</option>\r\n                    <option value=\"12:00 PM\">12:00 PM</option>\r\n                    <option value=\"1:00 PM\">1:00 PM</option>\r\n                    <option value=\"2:00 PM\">2:00 PM</option>\r\n                    <option value=\"3:00 PM\">3:00 PM</option>\r\n                    <option value=\"4:00 PM\">4:00 PM</option>\r\n                    <option value=\"5:00 PM\">5:00 PM</option>\r\n                    <option value=\"6:00 PM\">6:00 PM</option>\r\n                    <option value=\"7:00 PM\">7:00 PM</option>\r\n                    <option value=\"8:00 PM\">8:00 PM</option>\r\n                    <option value=\"9:00 PM\">9:00 PM</option>\r\n                    <option value=\"10:00 PM\">10:00 PM</option>\r\n                    <option value=\"11:00 PM\">11:00 PM</option>\r\n                  </select>\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                  <label>Break Length</label>\r\n                  <Label>{employee.schedule.breakLength / 60} hour</Label>\r\n                  <select\r\n                    className=\"ui dropdown\"\r\n                    onChange={handleChange}\r\n                    value={values.breakLength}\r\n                    name=\"breakLength\"\r\n                  >\r\n                    <option></option>\r\n                    <option value={\"1\"}>1 hour</option>\r\n                    <option value=\"2\">2 hours</option>\r\n                    <option value=\"3\">3 hours</option>\r\n                    <option value=\"4\">4 hours</option>\r\n                    <option value=\"5\">5 hours</option>\r\n                    <option value=\"6\">6 hours</option>\r\n                  </select>\r\n                </Form.Field>\r\n              </Form.Group>\r\n              <Content width=\"100%\" flex justify=\"flex-end\">\r\n                <DButtonConfirm onClick={handleSubmit}>\r\n                  {loading ? <Spinner small inverted /> : \"Save\"}\r\n                </DButtonConfirm>\r\n                <DButtonCancel onClick={() => setOpen(true)}>\r\n                  Delete\r\n                </DButtonCancel>\r\n              </Content>\r\n            </Form>\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const UPDATE_EMPLOYEE_DETAILS = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $email: String\r\n    $contact: String\r\n    $role: String\r\n    $bio: String\r\n    $day: [String]\r\n    $workStart: String\r\n    $workLength: Int\r\n    $breakStart: String\r\n    $breakLength: Int\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      contact: $contact\r\n      role: $role\r\n      bio: $bio\r\n      day: $day\r\n      workStart: $workStart\r\n      workLength: $workLength\r\n      breakStart: $breakStart\r\n      breakLength: $breakLength\r\n    ) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      email\r\n      contact\r\n      role\r\n      bio\r\n      schedule {\r\n        _id\r\n        day\r\n        workStart\r\n        workLength\r\n        breakLength\r\n        breakStart\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EmployeeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Form, Modal } from \"semantic-ui-react\";\r\nimport { DButtonConfirm, DButtonCancel } from \"../../styled/utils\";\r\nimport CheckboxGroup from \"react-checkbox-group\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst ServiceAdd = ({ open, setOpen, employeeId }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [categories, setCategories] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const { data: dataCategory, loading: loadingCategory } = useQuery(\r\n    FETCH_ALL_CATEGORIES_QUERY\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataCategory) {\r\n      setCategories(dataCategory.categories);\r\n    }\r\n  }, [dataCategory]);\r\n\r\n  const [addService, { loading }] = useMutation(ADD_SERVICES_MUTATION, {\r\n    variables: {\r\n      employeeId: employeeId,\r\n      serviceId: services\r\n    },\r\n\r\n    update(cache, result) {\r\n      setOpen(false);\r\n      const data = cache.readQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } })\r\n      });\r\n\r\n      const newEmployee = result.data.addService;\r\n      cache.writeQuery({\r\n        query:\r\n          (FETCH_THE_ADD_SERVICE, { variables: { employeeId: employeeId } }),\r\n        data: { employee: [newEmployee, ...data.employee] }\r\n      });\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      toaster.notify(\"Success\");\r\n    }\r\n  });\r\n\r\n  const handleAddService = () => {\r\n    addService();\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal size=\"small\" open={open}>\r\n      <Modal.Header>Choose Services</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingCategory ? (\r\n          <h3>Loading...</h3>\r\n        ) : (\r\n          <Form>\r\n            <DGrid two gap=\"10px\">\r\n              {categories.map(category => (\r\n                <Form.Group\r\n                  style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  key={category._id}\r\n                >\r\n                  <h4>{category.name}</h4>\r\n                  <CheckboxGroup\r\n                    name=\"services\"\r\n                    value={services}\r\n                    onChange={setServices}\r\n                  >\r\n                    {Checkbox => (\r\n                      <DGrid two gap=\"5px\">\r\n                        {category.services.map(service => (\r\n                          <div className=\"pretty p-default p-curve p-thick p-smooth\">\r\n                            <Checkbox value={service._id} key={service._id} />\r\n                            <div className=\"state p-info-o\">\r\n                              <label>{service.name}</label>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </DGrid>\r\n                    )}\r\n                  </CheckboxGroup>\r\n                </Form.Group>\r\n              ))}\r\n            </DGrid>\r\n          </Form>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonConfirm type=\"submit\" onClick={handleAddService}>\r\n          {loading ? <Spinner small inverted /> : \"Add\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(false)}>Exit</DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ADD_SERVICES_MUTATION = gql`\r\n  mutation addService($employeeId: ID!, $serviceId: [ID]) {\r\n    addService(employeeId: $employeeId, serviceId: $serviceId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_THE_ADD_SERVICE = gql`\r\n  query employee($employeeId: ID!) {\r\n    employee(_id: $employeeId) {\r\n      _id\r\n      services {\r\n        _id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceAdd;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport ServiceAdd from \"./ServiceAdd\";\r\n\r\nconst EmployeeServices = ({ employee }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DGrid rowCustom=\"4fr 1fr\">\r\n      <Content width=\"100%\" style={{ overflow: \"auto\" }}>\r\n        {employee &&\r\n          employee.services.map(service => (\r\n            <DLabel\r\n              bgcolor=\"#2980B9\"\r\n              color=\"white\"\r\n              rounded\r\n              pad=\"3px 8px\"\r\n              hover\r\n              style={{ display: \"inline-block\" }}\r\n            >\r\n              {service.name}\r\n              <span style={styles.close}>&times;</span>\r\n            </DLabel>\r\n          ))}\r\n      </Content>\r\n      <Content width=\"100%\">\r\n        <DButton onClick={() => setOpen(true)}>Add</DButton>\r\n      </Content>\r\n      <ServiceAdd open={open} setOpen={setOpen} employeeId={employee._id} />\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  close: {\r\n    fontSize: \"16px\",\r\n    marginLeft: \"3px\"\r\n  }\r\n};\r\n\r\nexport default EmployeeServices;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  FETCH_EMPLOYEE_QUERY,\r\n  FETCH_ALL_EMPLOYEES_QUERY\r\n} from \"../../util/graphql/employee\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport EmployeeDetails from \"../../components/admin/employees/EmployeeDetails\";\r\nimport EmployeeServices from \"../../components/admin/employees/EmployeeServices\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Employee = props => {\r\n  const employeeId = props.match.params._id;\r\n  const [employee, setEmployee] = useState({});\r\n\r\n  const { data: employeeData, loading: employeeLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeData) {\r\n      setEmployee(employeeData.employee);\r\n    }\r\n  }, [employeeData]);\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_EMPLOYEES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addEmployeePhoto({ variables: { employeeId, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <Layout>\r\n      {employeeLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid gap=\"15px\" margin=\"40px 0\">\r\n          <DSection\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid two gap=\"10px\">\r\n              <Content\r\n                width=\"100%\"\r\n                imgHeight=\"300px\"\r\n                style={{ borderRight: \"1px solid #ccc\" }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <Overlay\r\n                    flex\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bg=\"rgba(0, 0, 0, 0.6)\"\r\n                  >\r\n                    <h3>Drop Image</h3>\r\n                  </Overlay>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          employeeData.employee.photo !== null\r\n                            ? `/images/employees/${employeeData.employee.photo}`\r\n                            : // `/images/${photo}`\r\n                              \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Employee\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h2>Click or Drop an Image</h2>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <EmployeeServices employee={employeeData.employee} />\r\n            </DGrid>\r\n          </DSection>\r\n          <EmployeeDetails employee={employeeData.employee} />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Employee;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\n\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DButtonCancel, DButtonConfirm } from \"../../styled/utils\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst NewCategory = ({ open, setOpen }) => {\r\n  const editor = useRef(null);\r\n  const [errors, setErrors] = useState({});\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    createCategoryCallback,\r\n    {\r\n      title: \"\"\r\n    }\r\n  );\r\n\r\n  const [createCategory, { loading }] = useMutation(\r\n    CREATE_NEW_CATEGORY_MUTATION,\r\n    {\r\n      variables: {\r\n        title: values.title,\r\n        description: content\r\n      },\r\n\r\n      update(cache, result) {\r\n        setOpen(false);\r\n        const data = cache.readQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY\r\n        });\r\n\r\n        const newCategory = result.data.createCategory;\r\n        cache.writeQuery({\r\n          query: FETCH_ALL_CATEGORIES_QUERY,\r\n          data: { categories: [newCategory, ...data.categories] }\r\n        });\r\n\r\n        values.name = \"\";\r\n        content = \"\";\r\n      },\r\n      onCompleted(result) {\r\n        toaster.notify(\"New Category Add Successfully\");\r\n      },\r\n      onError(err) {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        toaster.notify(\"Something went Wrong\");\r\n      }\r\n    }\r\n  );\r\n\r\n  function createCategoryCallback() {\r\n    createCategory();\r\n  }\r\n\r\n  const config = {\r\n    readonly: false\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Category</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            <input\r\n              placeholder=\"title\"\r\n              name=\"title\"\r\n              value={values.title}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Description</label>\r\n\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n          <Modal.Actions>\r\n            <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n            <DButtonConfirm type=\"submit\">Yes</DButtonConfirm>\r\n          </Modal.Actions>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_CATEGORY_MUTATION = gql`\r\n  mutation createCategory($title: String!, $description: String) {\r\n    createCategory(categoryInput: { name: $title, description: $description }) {\r\n      _id\r\n      name\r\n      description\r\n      photo\r\n      services {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n        description\r\n        photo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../util/graphql/service\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  DCard,\r\n  DImage\r\n} from \"../../components/styled/containers\";\r\nimport { JCard } from \"../../components/styled/card\";\r\nimport NewCategory from \"../../components/admin/services/NewCategory\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport parser from \"html-react-parser\";\r\n\r\nconst Categories = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const { loading, data, error } = useQuery(FETCH_ALL_CATEGORIES_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategories(data.categories);\r\n    }\r\n  }, [data]);\r\n\r\n  if (error) {\r\n    return <div>Something went wrong</div>;\r\n  }\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function extractContent(html) {\r\n    return new DOMParser().parseFromString(html, \"text/html\").documentElement\r\n      .textContent;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection margin=\"20px 0\">\r\n        <Content flex justify=\"space-between\" width=\"100%\">\r\n          <h2>Services</h2>\r\n          <DButton onClick={handleOpenModal}>New Category</DButton>\r\n        </Content>\r\n        <h3>Category List</h3>\r\n        <DGrid two gap=\"15px\" margin=\"40px 0\">\r\n          {loading ? (\r\n            <>\r\n              <Skeleton width={300} height={300} />\r\n              <Skeleton width={300} height={300} />\r\n            </>\r\n          ) : (\r\n            categories.map(category => (\r\n              <JCard>\r\n                <img\r\n                  src={\r\n                    category.photo !== null\r\n                      ? `/images/service/${category.photo}`\r\n                      : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/sample108.jpg\"\r\n                  }\r\n                  alt={category.name}\r\n                />\r\n                <figcaption>\r\n                  <h3>{parser(category.name)}</h3>\r\n                  <p>{parser(category.description)}</p>\r\n                </figcaption>\r\n                <Link to={`/zeadmin/category/${category._id}`} />\r\n              </JCard>\r\n            ))\r\n          )}\r\n        </DGrid>\r\n        <NewCategory open={open} setOpen={setOpen} />\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_ALL_CATEGORIES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst CategoryDelete = ({ setOpen, open, historyCallback, category }) => {\r\n  const [deleteCategory] = useMutation(DELETE_CATEGORY_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY\r\n      });\r\n\r\n      data.categories = data.categories.filter(\r\n        categ => categ._id !== category._id\r\n      );\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_ALL_CATEGORIES_QUERY,\r\n\r\n        data: { categories: [...data.categories] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      historyCallback();\r\n    },\r\n    variables: {\r\n      categoryId: category._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteCategory = () => {\r\n    deleteCategory();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${category.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteCategory}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_CATEGORY_MUTATION = gql`\r\n  mutation deleteCategory($categoryId: ID!) {\r\n    deleteCategory(_id: $categoryId)\r\n  }\r\n`;\r\n\r\nexport default CategoryDelete;\r\n","import React, { useRef, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport toaster from \"toasted-notes\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport { Content, DGrid } from \"../../../components/styled/containers\";\r\nimport {\r\n  DButton,\r\n  DButtonCancel,\r\n  Toasted\r\n} from \"../../../components/styled/utils\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nimport CategoryDelete from \"./CategoryDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst CategoryDetails = ({ category, historyCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(category.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateCategoryCallback,\r\n    {\r\n      title: category.name\r\n    }\r\n  );\r\n\r\n  const [updateCategory, { loading }] = useMutation(UPDATE_CATEGORY_DETAILS, {\r\n    variables: {\r\n      categoryId: category._id,\r\n      title: values.title,\r\n      description: content\r\n    },\r\n    update(data) {\r\n      console.log(data);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(data) {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Category Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateCategoryCallback() {\r\n    updateCategory();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate>\r\n        <DGrid>\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>ID</Label>\r\n              <input\r\n                value={category._id}\r\n                style={{ width: \"60%\", cursor: \"default\" }}\r\n                readOnly\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <Label style={styles.label}>Title</Label>\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                style={{ width: \"60%\" }}\r\n              />\r\n            </Form.Field>\r\n          </Content>\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n          <Content flex width=\"100%\">\r\n            <DButton fluid type=\"submit\" onClick={handleSubmit}>\r\n              {loading ? <Spinner small inverted /> : \"Save\"}\r\n            </DButton>\r\n            <DButtonCancel width=\"30%\" onClick={() => setOpen(true)}>\r\n              Delete\r\n            </DButtonCancel>\r\n          </Content>\r\n        </DGrid>\r\n      </Form>\r\n      <CategoryDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        category={category}\r\n        historyCallback={historyCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nconst UPDATE_CATEGORY_DETAILS = gql`\r\n  mutation updateCategory(\r\n    $categoryId: ID!\r\n    $title: String\r\n    $description: String\r\n  ) {\r\n    updateCategory(_id: $categoryId, name: $title, description: $description) {\r\n      _id\r\n      name\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CategoryDetails;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport toaster from \"toasted-notes\";\r\nimport { DButtonConfirm, DButtonCancel, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst NewService = ({ categoryId, open, setOpen }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const { handleChange, handleSubmit, values } = useForm(registerCallBack, {\r\n    name: \"\",\r\n    price: \"\",\r\n    duration: \"\"\r\n  });\r\n\r\n  const [createService, { loading }] = useMutation(CREATE_NEW_SERVICE, {\r\n    // refetchQueries: [\r\n    //   { query: FETCH_SERVICES_QUERY, variables: { categoryId: categoryId } }\r\n    // ],\r\n    update(cache, result) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId }\r\n      });\r\n      const newService = result.data.createService;\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: { categoryId: categoryId },\r\n        data: { services: [newService, ...data.services] }\r\n      });\r\n\r\n      values.name = \"\";\r\n      values.price = \"\";\r\n      values.duration = \"\";\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n\r\n      if (err.graphQLErrors[0].extensions.errors.serviceExist) {\r\n        toaster.notify(({ onClose }) => (\r\n          <Toasted status={\"error\"}>\r\n            <span className=\"description\">Service already Exist</span>\r\n            <span className=\"close\" onClick={onClose}>\r\n              &times;\r\n            </span>\r\n          </Toasted>\r\n        ));\r\n      }\r\n    },\r\n    onCompleted() {\r\n      setOpen(false);\r\n\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">New Service Added Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      ...values,\r\n      description: content,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  function registerCallBack() {\r\n    createService();\r\n  }\r\n\r\n  return (\r\n    <Modal size={\"tiny\"} open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header>Create new Service</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field>\r\n            <label>Title</label>\r\n            {/* {errors.name ? (\r\n              <Label basic color=\"red\">\r\n                {errors.name}\r\n              </Label>\r\n            ) : (\r\n              \"\"\r\n            )} */}\r\n            <Form.Input\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"Title\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Price</label>\r\n            {/* {errors.numOnly && (\r\n              <Label basic color=\"red\">\r\n                {errors.numOnly}\r\n              </Label>\r\n            )} */}\r\n            <Form.Input\r\n              name=\"price\"\r\n              value={values.price}\r\n              placeholder=\"Price\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Duration</label>\r\n\r\n            <select\r\n              name=\"duration\"\r\n              value={values.duration}\r\n              onChange={handleChange}\r\n              className=\"ui dropdown\"\r\n            >\r\n              <option></option>\r\n              <option value=\"0.5\">30 mins</option>\r\n              <option value=\"0.75\">45 mins</option>\r\n              <option value=\"1\">60 mins</option>\r\n              <option value=\"1.5\">90 mins</option>\r\n              <option value=\"2\">120 mins</option>\r\n              <option value=\"2.5\">180 mins</option>\r\n              <option value=\"3\">210 mins</option>\r\n            </select>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              onChange={newContent => {}}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButtonCancel onClick={() => setOpen(false)}>No</DButtonCancel>\r\n        <DButtonConfirm type=\"submit\" onClick={handleSubmit}>\r\n          {loading ? <Spinner small inverted /> : \"Yes\"}\r\n        </DButtonConfirm>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CREATE_NEW_SERVICE = gql`\r\n  mutation createService(\r\n    $name: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n    $categoryId: ID\r\n  ) {\r\n    createService(\r\n      serviceInput: {\r\n        name: $name\r\n        price: $price\r\n        duration: $duration\r\n        description: $description\r\n        categoryId: $categoryId\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      duration\r\n      price\r\n      description\r\n      photo\r\n      employees {\r\n        _id\r\n        empId\r\n        firstName\r\n        lastName\r\n      }\r\n      category {\r\n        _id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport Spinner from \"../../Spinner\";\r\nimport NewService from \"./NewService\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst ServiceList = ({ categoryId }) => {\r\n  const [services, setServices] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { data: data_services, loading: loading_services } = useQuery(\r\n    FETCH_SERVICES_QUERY,\r\n    {\r\n      variables: {\r\n        categoryId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_services) {\r\n      setServices(data_services.services);\r\n    }\r\n  }, [data_services]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Service ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"84px\"\r\n          width=\"56px\"\r\n          alt={row.name}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/service/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Title\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      wrap: true,\r\n      format: row => {\r\n        const length = 20;\r\n        const descript = row.description;\r\n\r\n        const trimString =\r\n          descript.length > length\r\n            ? descript.substring(0, length) + \"...\"\r\n            : descript.substring(0, length);\r\n\r\n        return <p style={{ fontWeight: 500 }}>{parse(trimString)}</p>;\r\n      }\r\n    },\r\n\r\n    {\r\n      name: \"Duration\",\r\n      selector: \"duration\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => <span style={{ fontWeight: 500 }}>{row.duration} min</span>\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/service/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      rounded\r\n    >\r\n      Service List\r\n    </DLabel>\r\n  );\r\n\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n  return (\r\n    <DSection height=\"100%\" width=\"90%\">\r\n      <Content width=\"100%\" flex justify=\"flex-end\" align=\"center\">\r\n        <DButton onClick={() => setOpen(true)}>New Service</DButton>\r\n      </Content>\r\n      {loading_services ? (\r\n        <Spinner medium />\r\n      ) : (\r\n        <Content width=\"100%\" margin=\"20px 0\">\r\n          <DataTable\r\n            title={title}\r\n            columns={columns}\r\n            data={services.map(service => service)}\r\n            responsive={true}\r\n            pagination\r\n            paginationPerPage={5}\r\n            paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n            progressComponent={<Spinner medium />}\r\n            customStyles={customStyles}\r\n            highlightOnHover\r\n            pointerOnHover\r\n          />\r\n        </Content>\r\n      )}\r\n\r\n      <NewService categoryId={categoryId} open={open} setOpen={setOpen} />\r\n    </DSection>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_CATEGORY_QUERY,\r\n  FETCH_ALL_CATEGORIES_QUERY\r\n} from \"../../util/graphql/service\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport {\r\n  Content,\r\n  DGrid,\r\n  DSection,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport CategoryDetails from \"../../components/admin/services/CategoryDetails\";\r\nimport ServiceList from \"../../components/admin/services/ServiceList\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport Spinner from \"../../components/Spinner\";\r\n\r\nconst Category = props => {\r\n  const categoryId = props.match.params._id;\r\n  const [category, setCategory] = useState({});\r\n\r\n  const { data, loading: dataLoading, error } = useQuery(FETCH_CATEGORY_QUERY, {\r\n    variables: {\r\n      categoryId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategory(data.category);\r\n    }\r\n  }, [data]);\r\n\r\n  // DROPZONE\r\n  const [addCategoryPhoto, { loading }] = useMutation(UPLOAD_CATEGORY_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_CATEGORIES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addCategoryPhoto({ variables: { categoryId, file } });\r\n    },\r\n    [addCategoryPhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  if (error) {\r\n    return (\r\n      <DSection>\r\n        <h2>Something went wrong</h2>\r\n      </DSection>\r\n    );\r\n  }\r\n\r\n  const historyCallback = () => {\r\n    props.history.push(\"/zeadmin/categories\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {dataLoading ? (\r\n        <>\r\n          <Skeleton width=\"100%\" />\r\n        </>\r\n      ) : (\r\n        <DSection margin=\"20px 0\">\r\n          <h2>{data.category.name}</h2>\r\n          <DGrid>\r\n            <DSection width=\"100%\" height=\"100%\">\r\n              <DGrid\r\n                custom=\"450px 1fr\"\r\n                gap=\"10px\"\r\n                style={{\r\n                  borderBottom: \"1px solid #ccc\",\r\n                  paddingBottom: \"20px\"\r\n                }}\r\n              >\r\n                <Content\r\n                  height=\"100%\"\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"center\"\r\n                  align=\"center\"\r\n                  imgHeight=\"350px\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {isDragActive ? (\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  ) : (\r\n                    <>\r\n                      {loading ? (\r\n                        <Spinner medium inverted />\r\n                      ) : (\r\n                        <img\r\n                          src={\r\n                            data.category.photo !== null\r\n                              ? `/images/category/${data.category.photo}`\r\n                              : // `/images/${photo}`\r\n                                \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                          }\r\n                          alt=\"Category\"\r\n                        />\r\n                      )}\r\n\r\n                      <Overlay\r\n                        opac=\"0\"\r\n                        hovOpac=\"1\"\r\n                        pointer\r\n                        className=\"dark\"\r\n                        flex\r\n                        justify=\"center\"\r\n                        align=\"center\"\r\n                        bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      >\r\n                        <h2>Click or Drop an Image</h2>\r\n                      </Overlay>\r\n                    </>\r\n                  )}\r\n                </Content>\r\n\r\n                <CategoryDetails\r\n                  category={data.category}\r\n                  historyCallback={historyCallback}\r\n                />\r\n              </DGrid>\r\n            </DSection>\r\n            <ServiceList categoryId={data.category._id} />\r\n          </DGrid>\r\n        </DSection>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_CATEGORY_PHOTO = gql`\r\n  mutation addCategoryPhoto($categoryId: ID!, $file: Upload) {\r\n    addCategoryPhoto(_id: $categoryId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { FETCH_SERVICES_QUERY } from \"../../../util/graphql/service\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { Modal, Header } from \"semantic-ui-react\";\r\nimport { DButton, DButtonCancel } from \"../../styled/utils\";\r\n\r\nconst ServiceConfirmDelete = ({\r\n  open,\r\n  setOpen,\r\n  service,\r\n  serviceHistoryCallback\r\n}) => {\r\n  const [deleteService] = useMutation(DELETE_SERVICE_MUTATION, {\r\n    update(cache) {\r\n      const data = cache.readQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        }\r\n      });\r\n\r\n      data.services = data.services.filter(serv => serv._id !== service._id);\r\n\r\n      cache.writeQuery({\r\n        query: FETCH_SERVICES_QUERY,\r\n        variables: {\r\n          categoryId: service.category._id\r\n        },\r\n        data: { services: [...data.services] }\r\n      });\r\n    },\r\n    onCompleted(data) {\r\n      serviceHistoryCallback();\r\n    },\r\n    variables: {\r\n      serviceId: service._id\r\n    }\r\n  });\r\n\r\n  const handleDeleteService = () => {\r\n    deleteService();\r\n  };\r\n\r\n  return (\r\n    <Modal basic size=\"small\" open={open}>\r\n      <Header\r\n        icon=\"archive\"\r\n        content={`Delete this service: ${service.name}?`}\r\n      />\r\n      <Modal.Content>\r\n        <p>\r\n          All containing details about this service will be remove. Are you sure\r\n          you want to continue?\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton basic onClick={() => setOpen(false)}>\r\n          No\r\n        </DButton>\r\n        <DButtonCancel basic onClick={handleDeleteService}>\r\n          Yes\r\n        </DButtonCancel>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SERVICE_MUTATION = gql`\r\n  mutation deleteService($serviceId: ID!) {\r\n    deleteService(_id: $serviceId)\r\n  }\r\n`;\r\n\r\nexport default ServiceConfirmDelete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport {\r\n  Toasted,\r\n  DButtonConfirm,\r\n  DButtonCancel,\r\n  DLabel\r\n} from \"../../../components/styled/utils\";\r\nimport toaster from \"toasted-notes\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content\r\n} from \"../../../components/styled/containers\";\r\nimport ServiceConfirmDelete from \"./ServiceConfirmDelete\";\r\n\r\nconst config = {\r\n  readonly: false\r\n};\r\n\r\nconst ServiceDetails = ({ service, serviceHistoryCallback }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState(service.description);\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(\r\n    updateServiceCallback,\r\n    {\r\n      title: service.name,\r\n      price: service.price\r\n    }\r\n  );\r\n\r\n  const [updateService, { loading }] = useMutation(UPDATE_SERVICE_DETAILS, {\r\n    variables: {\r\n      serviceId: service._id,\r\n      title: values.title,\r\n      price: parseFloat(values.price),\r\n      duration: parseInt(parseFloat(values.duration) * 60),\r\n      description: content\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Service Updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    }\r\n  });\r\n\r\n  function updateServiceCallback() {\r\n    updateService();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <>\r\n      <DSection pad=\"20px 0\" height=\"100%\">\r\n        <DGrid two gap=\"10px\">\r\n          <Content width=\"100%\">\r\n            <Form noValidate>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>ID</Label>\r\n                <input\r\n                  value={service._id}\r\n                  style={{ width: \"60%\", cursor: \"default\" }}\r\n                  readOnly\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Title</Label>\r\n                <input\r\n                  name=\"title\"\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Duration</Label>\r\n                <DLabel>{service.duration} min</DLabel>\r\n                <select\r\n                  name=\"duration\"\r\n                  value={values.duration}\r\n                  onChange={handleChange}\r\n                  className=\"ui dropdown\"\r\n                >\r\n                  <option></option>\r\n                  <option value=\"0.5\">30 mins</option>\r\n                  <option value=\"0.75\">45 mins</option>\r\n                  <option value=\"1\">60 mins</option>\r\n                  <option value=\"1.5\">90 mins</option>\r\n                  <option value=\"2\">120 mins</option>\r\n                  <option value=\"2.5\">180 mins</option>\r\n                  <option value=\"3\">210 mins</option>\r\n                </select>\r\n              </Form.Field>\r\n              <Form.Field inline>\r\n                <Label style={styles.label}>Price</Label>\r\n                <input\r\n                  name=\"price\"\r\n                  value={values.price}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"60%\" }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Content>\r\n          <Content width=\"100%\">\r\n            <JoditEditor\r\n              ref={editor}\r\n              value={content}\r\n              config={config}\r\n              tabIndex={1} // tabIndex of textarea\r\n              onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n              // onChange={newContent => {}}\r\n            />\r\n          </Content>\r\n        </DGrid>\r\n      </DSection>\r\n      <Content width=\"100%\" flex justify=\"flex-end\">\r\n        <DButtonConfirm onClick={handleSubmit}>\r\n          {loading ? \"Loading...\" : \"Save\"}\r\n        </DButtonConfirm>\r\n        <DButtonCancel onClick={() => setOpen(true)}>Delete</DButtonCancel>\r\n      </Content>\r\n      <ServiceConfirmDelete\r\n        open={open}\r\n        setOpen={setOpen}\r\n        service={service}\r\n        serviceHistoryCallback={serviceHistoryCallback}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  label: {\r\n    width: \"20%\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nexport const UPDATE_SERVICE_DETAILS = gql`\r\n  mutation updateService(\r\n    $serviceId: ID!\r\n    $title: String\r\n    $price: Float\r\n    $duration: Int\r\n    $description: String\r\n  ) {\r\n    updateService(\r\n      _id: $serviceId\r\n      name: $title\r\n      price: $price\r\n      duration: $duration\r\n      description: $description\r\n    ) {\r\n      _id\r\n      name\r\n      price\r\n      duration\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ServiceDetails;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  FETCH_ALL_SERVICES_QUERY,\r\n  FETCH_SINGLE_SERVICE_QUERY\r\n} from \"../../util/graphql/service\";\r\n\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport ServiceDetails from \"../../components/admin/services/ServiceDetails\";\r\n\r\nconst Service = props => {\r\n  const serviceId = props.match.params._id;\r\n  const [service, setService] = useState([]);\r\n\r\n  const { data: serviceData, loading: serviceLoading, error } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId\r\n      }\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    if (serviceData) {\r\n      setService(serviceData.service);\r\n    }\r\n  }, []);\r\n\r\n  // DROPZONE\r\n  const [addServicePhoto, { loading }] = useMutation(UPLOAD_SERVICE_PHOTO, {\r\n    refetchQueries: [{ query: FETCH_ALL_SERVICES_QUERY }]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addServicePhoto({ variables: { serviceId, file } });\r\n    },\r\n    [addServicePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const serviceHistoryCallback = () => {\r\n    const pus = props.history.replace(\r\n      `/zeadmin/category/${serviceData.service.category._id}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {serviceLoading ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <DGrid style={{ margin: \"20px 0\" }}>\r\n          <DSection\r\n            style={{ borderBottom: \"1px solid #ccc\" }}\r\n            height=\"100%\"\r\n            pad=\"0 0 20px 0\"\r\n          >\r\n            <DGrid three>\r\n              <Content\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <>\r\n                    <Content height=\"300px\"></Content>\r\n                    <Overlay\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                      className=\"dark\"\r\n                    >\r\n                      <h3>Drop Image</h3>\r\n                    </Overlay>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Spinner medium inverted />\r\n                    ) : (\r\n                      <img\r\n                        src={\r\n                          serviceData.service.photo !== null\r\n                            ? `/images/service/${serviceData.service.photo}`\r\n                            : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                        }\r\n                        alt=\"Category\"\r\n                        width=\"100%\"\r\n                        height=\"400px\"\r\n                        style={{ objectFit: \"contain\" }}\r\n                      />\r\n                    )}\r\n\r\n                    <Overlay\r\n                      opac=\"0\"\r\n                      hovOpac=\"1\"\r\n                      pointer\r\n                      className=\"dark\"\r\n                      flex\r\n                      justify=\"center\"\r\n                      align=\"center\"\r\n                      bg=\"rgba(0, 0, 0, 0.6)\"\r\n                    >\r\n                      <h4>Click or Drop an Image to upload</h4>\r\n                    </Overlay>\r\n                  </>\r\n                )}\r\n              </Content>\r\n              <Content></Content>\r\n            </DGrid>\r\n          </DSection>\r\n\r\n          <ServiceDetails\r\n            service={serviceData.service}\r\n            serviceHistoryCallback={serviceHistoryCallback}\r\n          />\r\n        </DGrid>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst UPLOAD_SERVICE_PHOTO = gql`\r\n  mutation addServicePhoto($serviceId: ID!, $file: Upload) {\r\n    addServicePhoto(_id: $serviceId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default Service;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_INQUIRY } from \"../../../util/graphql/inquiry\";\r\nimport { Modal, Icon, Dropdown, Form } from \"semantic-ui-react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst ReplyModal = ({ open, setOpen, inqId }) => {\r\n  const [displayMsg, setDisplayMsg] = useState(false);\r\n  const [isMessage, setIsMessage] = useState(\"\");\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: dataInq, loading: loadingInq } = useQuery(FETCH_INQUIRY, {\r\n    variables: {\r\n      inquiryId: inqId\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataInq) {\r\n      setInq(dataInq.inquiry);\r\n    }\r\n  }, [dataInq]);\r\n\r\n  // const [readInquiry, { loading: readLoading }] = useMutation(READ_INQ, {\r\n  //   variables: {\r\n  //     inqId: inqId\r\n  //   }\r\n  // });\r\n\r\n  const [replyInquiry, { loading }] = useMutation(REPLY_MESSAGE, {\r\n    variables: {\r\n      inquiryId: inq._id,\r\n      email: inq.email,\r\n      message: isMessage\r\n    },\r\n    update() {\r\n      isMessage = \"\";\r\n    },\r\n    onCompleted() {\r\n      toaster.notify(\"Message sent\");\r\n    }\r\n  });\r\n\r\n  const handleReply = () => {\r\n    setDisplayMsg(true);\r\n  };\r\n\r\n  const handleReplyMsg = e => {\r\n    setIsMessage(e.target.value);\r\n  };\r\n\r\n  function replyCallBack() {\r\n    replyInquiry();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => {\r\n        setOpen(false);\r\n        setDisplayMsg(false);\r\n      }}\r\n    >\r\n      <Modal.Header>Inquiry</Modal.Header>\r\n      <Modal.Content>\r\n        {loadingInq ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          <Content width=\"100%\" height=\"100%\">\r\n            <DGrid gap=\"20px\">\r\n              <Content width=\"90%\">\r\n                <Dropdown trigger={<strong>{inq.email}</strong>}>\r\n                  <Dropdown.Menu>\r\n                    <Dropdown.Item>\r\n                      <strong>email:</strong> {inq.email}\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item>\r\n                      <strong>name:</strong> {inq.name}\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Content>\r\n              <Content width=\"100%\" style={{ zIndex: 1 }}>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <label>Subject</label>\r\n                    <input\r\n                      value={inq.subject}\r\n                      readOnly\r\n                      style={{ width: \"auto\" }}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Message</label>\r\n                    <textarea value={inq.message} readOnly />\r\n                  </Form.Field>\r\n                </Form>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        )}\r\n\r\n        <Content\r\n          width=\"100%\"\r\n          flex\r\n          column\r\n          margin=\"20px 0\"\r\n          style={displayMsg ? { display: \"block\" } : { display: \"none\" }}\r\n        >\r\n          <Content width=\"100%\" flex justify=\"space-between\" align=\"center\">\r\n            <h3>Reply a message</h3>\r\n            <Icon name=\"close\" onClick={() => setDisplayMsg(false)} />\r\n          </Content>\r\n          <DCard dw=\"100%\" dh=\"100%\">\r\n            <Form>\r\n              <Form.Field>\r\n                <textarea\r\n                  value={isMessage}\r\n                  onChange={handleReplyMsg}\r\n                  name=\"reply\"\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </DCard>\r\n        </Content>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        {displayMsg ? (\r\n          <DButton onClick={replyCallBack}>\r\n            {loading ? (\r\n              <Spinner small inverted />\r\n            ) : (\r\n              <>\r\n                <Icon name=\"send\" />\r\n                Send\r\n              </>\r\n            )}\r\n          </DButton>\r\n        ) : (\r\n          <DButton onClick={handleReply}>\r\n            <Icon name=\"reply\" />\r\n            Reply\r\n          </DButton>\r\n        )}\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst REPLY_MESSAGE = gql`\r\n  mutation replyInquiry($inquiryId: ID!, $email: String, $message: String) {\r\n    replyInquiry(_id: $inquiryId, email: $email, message: $message) {\r\n      _id\r\n      message\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n// const READ_INQ = gql`\r\n//   mutation readInquiry($inqId: ID) {\r\n//     readInquiry(_id: $inqId)\r\n//   }\r\n// `;\r\n\r\nexport default ReplyModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { FETCH_INQUIRIES } from \"../../util/graphql/inquiry\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Popup, Icon } from \"semantic-ui-react\";\r\nimport ReplyModal from \"../../components/admin/inquiry/ReplyModal\";\r\n\r\nconst Inquiry = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inquiries, setInquiries] = useState([]);\r\n\r\n  const [inq, setInq] = useState({});\r\n\r\n  const { data: data_inquiries, loading: loading_inquiries, error } = useQuery(\r\n    FETCH_INQUIRIES\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_inquiries) {\r\n      setInquiries(data_inquiries.inquiries);\r\n    }\r\n  }, [data_inquiries]);\r\n\r\n  const handleRow = e => {\r\n    setInq(e.currentTarget.value);\r\n    setOpen(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Inquiry ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      wrap: true\r\n    },\r\n\r\n    {\r\n      name: \"Message\",\r\n      selector: \"message\",\r\n      format: row => {\r\n        const length = 50;\r\n        const msg = row.message;\r\n\r\n        const trimString =\r\n          msg.length > length\r\n            ? msg.substring(0, length) + \"...\"\r\n            : msg.substring(0, length);\r\n        return <span>{trimString}</span>;\r\n      }\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <Popup\r\n          trigger={\r\n            <DButton\r\n              height=\"32px\"\r\n              pad=\"2px 8px\"\r\n              value={row._id}\r\n              onClick={handleRow}\r\n            >\r\n              <Icon name=\"eye\" />\r\n            </DButton>\r\n          }\r\n          mouseEnterDelay={500}\r\n          mouseLeaveDelay={500}\r\n          content=\"View detailed appointment info.\"\r\n          position=\"left center\"\r\n          size=\"tiny\"\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      {loading_inquiries ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={inquiries.map(inq => inq)}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n        />\r\n      )}\r\n      {inq && <ReplyModal inqId={inq} open={open} setOpen={setOpen} />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"22px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    customStyles={customStyles}\r\n    rounded\r\n  >\r\n    Inquiry List\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default Inquiry;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { Camera } from \"@styled-icons/boxicons-solid/Camera\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({\r\n  id,\r\n  photo,\r\n  fetchEmployee,\r\n}) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  // DROPZONE\r\n  const [addEmployeePhoto, { loading }] = useMutation(UPLOAD_EMPLOYEE_PHOTO, {\r\n    refetchQueries: [\r\n      {\r\n        query: fetchEmployee,\r\n        variables: {\r\n          employeeId: id\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      addEmployeePhoto({ variables: { employeeId: id, file } });\r\n    },\r\n    [addEmployeePhoto]\r\n  );\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/employees/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"200px\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            {loading ? (\r\n              <Content flex justify=\"center\" align=\"center\" width=\"100%\">\r\n                <Spinner small />\r\n              </Content>\r\n            ) : (\r\n              <img\r\n                src={\r\n                  photo !== null\r\n                    ? `/images/employees/${photo}`\r\n                    : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n                alt=\"Avatar\"\r\n                onClick={openLightbox}\r\n              />\r\n            )}\r\n          </DImage>\r\n          <span className=\"camera\" {...getRootProps()}>\r\n            <Camera size=\"18px\" color=\"white\" />\r\n            <input {...getInputProps()} />\r\n          </span>\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n        {/* <DCard dh=\"100%\" flex fcol justifyBetween>\r\n          <DButton onClick={handleDetails} fluid>\r\n            Account Details\r\n          </DButton>\r\n          <DButton onClick={handleSchedule} fluid>\r\n            Schedule\r\n          </DButton>\r\n        </DCard> */}\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UPLOAD_EMPLOYEE_PHOTO = gql`\r\n  mutation addEmployeePhoto($employeeId: ID!, $file: Upload) {\r\n    addEmployeePhoto(_id: $employeeId, file: $file)\r\n  }\r\n`;\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst AccountModal = ({ employeeModal, setEmployeeModal, employee }) => {\r\n  const [isRole, setIsRole] = useState(employee.role);\r\n\r\n  const handleRoleChange = e => {\r\n    setIsRole(e.target.value);\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_ROLE, {\r\n    onCompleted(result) {\r\n      setEmployeeModal(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      userId: employee._id,\r\n      role: isRole\r\n    }\r\n  });\r\n\r\n  const updateEmployeeRole = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={employeeModal}\r\n      onClose={() => setEmployeeModal(false)}\r\n    >\r\n      <Modal.Header>Employee Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <select name=\"role\" value={isRole} onChange={handleRoleChange}>\r\n              <option>ADMIN</option>\r\n              <option>RECEPTIONIST</option>\r\n              <option>AESTHETICIAN</option>\r\n            </select>\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeRole}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_ROLE = gql`\r\n  mutation updateEmployee($employeeId: ID!, $role: String) {\r\n    updateEmployee(_id: $employeeId, role: $role) {\r\n      _id\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AccountModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst PersonalModal = ({ personalOpen, setPersonalOpen, employee }) => {\r\n  // const [errors, setErrors] = useState({});\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(parseInt(employee.dateOfBirth))\r\n  );\r\n\r\n  const [values, setValues] = useState({\r\n    title: employee.title,\r\n    firstName: employee.firstName,\r\n    lastName: employee.lastName,\r\n    contact: employee.contact,\r\n    email: employee.email\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE, {\r\n    onCompleted(result) {\r\n      setPersonalOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Updated Successfully</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      dateOfBirth: startDate,\r\n      ...values\r\n    }\r\n  });\r\n\r\n  const handleDateChanged = date => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const updateEmployeeCallBack = () => {\r\n    updateEmployee();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"small\"\r\n      open={personalOpen}\r\n      onClose={() => setPersonalOpen(false)}\r\n    >\r\n      <Modal.Header>Personal Details</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field>\r\n              <DLabel style={{ width: \"100px\" }}>Title</DLabel>\r\n              <select value={values.title} name=\"title\" onChange={handleChange}>\r\n                <option>Dr.</option>\r\n                <option>Mr.</option>\r\n                <option>Ms.</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>First Name</DLabel>\r\n              <input\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field inline>\r\n              <DLabel style={{ width: \"100px\" }}>Last Name</DLabel>\r\n              <input\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Date of Birth</DLabel>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={handleDateChanged}\r\n              showYearDropdown\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Contact</DLabel>\r\n            <input\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Email</DLabel>\r\n            <input name=\"email\" value={values.email} onChange={handleChange} />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeeCallBack}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $title: String\r\n    $firstName: String\r\n    $lastName: String\r\n    $dateOfBirth: String\r\n    $contact: String\r\n    $email: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      title: $title\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      dateOfBirth: $dateOfBirth\r\n      contact: $contact\r\n      email: $email\r\n    ) {\r\n      _id\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      dateOfBirth\r\n    }\r\n  }\r\n`;\r\n\r\nexport default PersonalModal;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { Modal, Form } from \"semantic-ui-react\";\r\nimport { DLabel, DButton, Toasted } from \"../../styled/utils\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\n\r\nconst SecurityModal = ({ securityOpen, setSecurityOpen, employee }) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [isPwds, setIsPwds] = useState({\r\n    newPassword: \"\",\r\n    oldPassword: \"\"\r\n  });\r\n\r\n  const handlePwdChange = e => {\r\n    setIsPwds({ ...isPwds, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const [updateEmployee, { loading }] = useMutation(UPDATE_EMPLOYEE_PWD, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    onCompleted(result) {\r\n      setSecurityOpen(false);\r\n      toaster.notify(({ onClose }) => (\r\n        <Toasted status={\"success\"}>\r\n          <span className=\"description\">Password updated</span>\r\n          <span className=\"close\" onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </Toasted>\r\n      ));\r\n    },\r\n    variables: {\r\n      employeeId: employee._id,\r\n      ...isPwds\r\n    }\r\n  });\r\n\r\n  function updateEmployeePassword() {\r\n    updateEmployee();\r\n  }\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"tiny\"\r\n      open={securityOpen}\r\n      onClose={() => setSecurityOpen(false)}\r\n    >\r\n      <Modal.Header>Password Change</Modal.Header>\r\n      <Modal.Content>\r\n        <Form noValidate>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>New Password</DLabel>\r\n            <input\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={isPwds.newPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field inline>\r\n            <DLabel style={{ width: \"100px\" }}>Old Password</DLabel>\r\n            <input\r\n              name=\"oldPassword\"\r\n              type=\"password\"\r\n              value={isPwds.oldPassword}\r\n              onChange={handlePwdChange}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton type=\"submit\" onClick={updateEmployeePassword}>\r\n          {loading ? <Spinner small inverted /> : \"Save Changes\"}\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UPDATE_EMPLOYEE_PWD = gql`\r\n  mutation updateEmployee(\r\n    $employeeId: ID!\r\n    $newPassword: String\r\n    $oldPassword: String\r\n  ) {\r\n    updateEmployee(\r\n      _id: $employeeId\r\n      password: $newPassword\r\n      oldpassword: $oldPassword\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SecurityModal;\r\n","import React, { useState } from \"react\";\r\nimport { DGrid, Content, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport PersonalModal from \"./PersonalModal\";\r\nimport SecurityModal from \"./SecurityModal\";\r\n\r\nconst AccountDetails = ({ employee, fetchEmployee }) => {\r\n  const [personalModal, setPersonalModal] = useState(false);\r\n  const [employeeModal, setEmployeeModal] = useState(false);\r\n  const [securityModal, setSecurityModal] = useState(false);\r\n\r\n  const handlePersonal = () => {\r\n    setPersonalModal(true);\r\n  };\r\n  const handleEmployee = () => {\r\n    setEmployeeModal(true);\r\n  };\r\n  const handleSecurity = () => {\r\n    setSecurityModal(true);\r\n  };\r\n\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n            <div className=\"content-edit\" onClick={handlePersonal}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.title} {employee.firstName} {employee.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(employee.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Employee Details</h3>\r\n            <div className=\"content-edit\">\r\n              {/* <Edit size=\"22px\" /> */}\r\n              {/* <span>Edit</span> */}\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Employee ID:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.empId}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Role:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {employee.role}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Security</h3>\r\n            <div className=\"content-edit\" onClick={handleSecurity}>\r\n              <Edit size=\"22px\" />\r\n              <span>Edit</span>\r\n            </div>\r\n          </Content>\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Password:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  <strong>**********</strong>\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n      <PersonalModal\r\n        employee={employee}\r\n        personalOpen={personalModal}\r\n        setPersonalOpen={setPersonalModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <AccountModal\r\n        employee={employee}\r\n        employeeModal={employeeModal}\r\n        setEmployeeModal={setEmployeeModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n      <SecurityModal\r\n        employee={employee}\r\n        securityOpen={securityModal}\r\n        setSecurityOpen={setSecurityModal}\r\n        fetchEmployee={fetchEmployee}\r\n      />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from \"react\";\r\n\r\nconst AccountSched = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default AccountSched;\r\n","import React from \"react\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport AccountSched from \"./AccountSched\";\r\nimport Page404 from \"../../../pages/Page404\";\r\n\r\nconst AccountInfo = ({ isAccount, employee, fetchEmployee }) => {\r\n  switch (isAccount) {\r\n    case \"details\":\r\n      return (\r\n        <AccountDetails employee={employee} fetchEmployee={fetchEmployee} />\r\n      );\r\n    case \"schedule\":\r\n      return <AccountSched />;\r\n    default:\r\n      return <Page404 />;\r\n  }\r\n};\r\n\r\nexport default AccountInfo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { AuthContext } from \"../../context/auth\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../util/graphql/employee\";\r\nimport { DSection, DGrid } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/accounts/PhotoBooth\";\r\nimport AccountInfo from \"../../components/admin/accounts/AccountInfo\";\r\n\r\nconst PersonalAccount = () => {\r\n  const { employeeAuth } = useContext(AuthContext);\r\n  const stored = localStorage.getItem(\"account\");\r\n  const [isAccount, setIsAccount] = useState(\r\n    stored === \"details\"\r\n      ? \"details\"\r\n      : stored === \"appointments\"\r\n      ? \"schedule\"\r\n      : \"details\"\r\n  );\r\n\r\n  const { data: empData, loading: empLoading } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeAuth.id\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleDetails = () => {\r\n    setIsAccount(\"details\");\r\n    localStorage.setItem(\"account\", \"details\");\r\n  };\r\n  const handleSchedule = () => {\r\n    setIsAccount(\"schedule\");\r\n    localStorage.setItem(\"account\", \"schedule\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {empData && empData.employee ? (\r\n            !empLoading ? (\r\n              <>\r\n                <PhotoBooth\r\n                  handleDetails={handleDetails}\r\n                  handleSchedule={handleSchedule}\r\n                  photo={empData.employee.photo}\r\n                  id={empData.employee._id}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                />\r\n                <AccountInfo\r\n                  employee={empData.employee}\r\n                  fetchEmployee={FETCH_EMPLOYEE_QUERY}\r\n                  isAccount={isAccount}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USERS_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport { DButton, DLabel } from \"../../components/styled/utils\";\r\nimport { Content, DSection } from \"../../components/styled/containers\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Skeleton from \"../../components/Skeleton\";\r\nimport NewEmployee from \"../../components/admin/employees/NewEmployee\";\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\nconst User = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const { employeeAuth } = useContext(AuthContext);\r\n\r\n  const { data: data_users, loading: loading_users, error } = useQuery(\r\n    FETCH_USERS_ACCOUNT\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data_users) {\r\n      setUsers(data_users.getUsers);\r\n    }\r\n  }, [data_users]);\r\n\r\n  if (error) {\r\n    return <p>Oops!</p>;\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"User ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Thumbnail\",\r\n      selector: \"photo\",\r\n      grow: 0,\r\n      cell: row => (\r\n        <img\r\n          height=\"80px\"\r\n          width=\"52px\"\r\n          alt={row.empId}\r\n          src={\r\n            row.photo !== null\r\n              ? `/images/${row.photo}`\r\n              : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        />\r\n      )\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span>\r\n          {row.title}. {row.firstName} {row.lastName}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/userInfo/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const customStyles = {\r\n    headRow: {\r\n      style: {\r\n        border: \"none\"\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        color: \"#202124\",\r\n        fontSize: \"14px\"\r\n      }\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n        fontWeight: \"700\",\r\n        color: \"#000\"\r\n      },\r\n      highlightOnHoverStyle: {\r\n        backgroundColor: \"rgb(230, 244, 244)\",\r\n        borderBottomColor: \"#FFFFFF\",\r\n        borderRadius: \"25px\",\r\n        outline: \"1px solid #FFFFFF\"\r\n      }\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"10px\",\r\n        border: \"none\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const title = (\r\n    <DLabel\r\n      size=\"22px\"\r\n      bgcolor=\"#6dd5ed\"\r\n      tt=\"uppercase\"\r\n      weight=\"700\"\r\n      pad=\"10px 25px\"\r\n      color=\"#fff\"\r\n      customStyles={customStyles}\r\n      rounded\r\n    >\r\n      Client List\r\n    </DLabel>\r\n  );\r\n  const paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection height=\"100%\" width=\"90%\">\r\n        {loading_users ? (\r\n          <Skeleton />\r\n        ) : (\r\n          <Content width=\"100%\" margin=\"20px 0\">\r\n            <DataTable\r\n              title={title}\r\n              columns={columns}\r\n              data={data_users.getUsers.map(getUser => getUser)}\r\n              responsive\r\n              customStyles={customStyles}\r\n              pagination={true}\r\n              paginationPerPage={5}\r\n              paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n              highlightOnHover\r\n              pointerOnHover\r\n            />\r\n          </Content>\r\n        )}\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { DGrid, Content, DCard, DImage } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport Spinner from \"../../Spinner\";\r\n\r\nconst PhotoBooth = ({ photo }) => {\r\n  // LIGHT BOX\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const openLightbox = () => {\r\n    setViewerIsOpen(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setViewerIsOpen(false);\r\n  };\r\n\r\n  const images = [\r\n    {\r\n      src: photo\r\n        ? `/images/users/${photo}`\r\n        : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Content width=\"100%\" height=\"auto\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dh=\"auto\" flex justifyBetween alignCenter fcol>\r\n          <DImage circle height=\"150px\" width=\"150px\">\r\n            <img\r\n              src={\r\n                photo !== null\r\n                  ? `/images/users/${photo}`\r\n                  : \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n              }\r\n              alt=\"Avatar\"\r\n              onClick={openLightbox}\r\n            />\r\n          </DImage>\r\n\r\n          <ModalGateway>\r\n            {viewerIsOpen ? (\r\n              <Modal onClose={closeLightbox}>\r\n                <Carousel views={images} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React, { useState } from \"react\";\r\nimport { Content, DGrid, DCard } from \"../../styled/containers\";\r\nimport { DLabel } from \"../../styled/utils\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\n\r\nconst ClientDetails = ({ userInfo }) => {\r\n  return (\r\n    <Content width=\"100%\">\r\n      <DGrid gap=\"15px\">\r\n        <DCard dw=\"100%\" dh=\"100%\" flex fcol justifyBetween>\r\n          <Content flex width=\"100%\" justify=\"space-between\" aling=\"center\">\r\n            <h3>Personal Details</h3>\r\n          </Content>\r\n\r\n          <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n            <DGrid>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Name:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.firstName} {userInfo.lastName}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Date of Birth:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {new Date(\r\n                    parseInt(userInfo.dateOfBirth)\r\n                  ).toLocaleDateString()}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Contact:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.contact}\r\n                </Content>\r\n              </Content>\r\n              <Content width=\"100%\" flex justify=\"center\">\r\n                <DLabel\r\n                  flex\r\n                  justifyEnd\r\n                  alignCenter\r\n                  weight={700}\r\n                  w={\"40%\"}\r\n                  size=\"14px\"\r\n                >\r\n                  Email:\r\n                </DLabel>\r\n                <Content\r\n                  width=\"100%\"\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                  pad=\"10px 15px\"\r\n                >\r\n                  {userInfo.email}\r\n                </Content>\r\n              </Content>\r\n            </DGrid>\r\n          </Content>\r\n        </DCard>\r\n      </DGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClientDetails;\r\n","import React, { useState } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FETCH_SINGLE_SERVICE_QUERY } from \"../../../util/graphql/service\";\r\nimport { FETCH_EMPLOYEE_QUERY } from \"../../../util/graphql/employee\";\r\nimport { FETCH_CURRENT_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton, DLabel, Toasted } from \"../../styled/utils\";\r\nimport { Content, DGrid } from \"../../styled/containers\";\r\nimport Spinner from \"../../Spinner\";\r\nimport toaster from \"toasted-notes\";\r\nimport moment from \"moment\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst NewConfirm = ({\r\n  serviceValue,\r\n  employeeVal,\r\n  startDate,\r\n  selectedTime,\r\n  setOpen,\r\n  clientId\r\n}) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [newConfirm, setNewConfirm] = useState(false);\r\n\r\n  const { data: data_service, loading: loading_service } = useQuery(\r\n    FETCH_SINGLE_SERVICE_QUERY,\r\n    {\r\n      variables: {\r\n        serviceId: serviceValue\r\n      }\r\n    }\r\n  );\r\n\r\n  const { data: data_employee, loading: loading_employee } = useQuery(\r\n    FETCH_EMPLOYEE_QUERY,\r\n    {\r\n      variables: {\r\n        employeeId: employeeVal\r\n      }\r\n    }\r\n  );\r\n\r\n  const [createUserExistAppointment, { loading }] = useMutation(\r\n    NEW_APPOINTMENT,\r\n    {\r\n      update(cache, result) {\r\n        const data = cache.readQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS\r\n        });\r\n\r\n        const newAppointment = result.data.createUserExistAppointment;\r\n\r\n        cache.writeQuery({\r\n          query: FETCH_CURRENT_APPOINTMENTS,\r\n          data: {\r\n            currentAppointments: [newAppointment, ...data.currentAppointments]\r\n          }\r\n        });\r\n      },\r\n      onCompleted(data) {\r\n        setNewConfirm(false);\r\n        setOpen(false);\r\n\r\n        if (data) {\r\n          toaster.notify(\r\n            ({ onClose }) => (\r\n              <Toasted status={\"success\"}>\r\n                <span className=\"description\">Success!</span>\r\n                <span className=\"close\" onClick={onClose}>\r\n                  &times;\r\n                </span>\r\n              </Toasted>\r\n            ),\r\n            { position: \"bottom-right\" }\r\n          );\r\n        }\r\n      },\r\n\r\n      variables: {\r\n        clientId,\r\n        serviceId: serviceValue,\r\n        employeeId: employeeVal,\r\n        date: new Date(startDate).toLocaleDateString(),\r\n        start: selectedTime,\r\n        message: \"\"\r\n      }\r\n    }\r\n  );\r\n\r\n  const handleNewAppointment = () => {\r\n    createUserExistAppointment();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DButton confirm onClick={() => setNewConfirm(true)}>\r\n        Confirm\r\n      </DButton>\r\n      <Modal open={newConfirm} size=\"tiny\" onClose={() => setNewConfirm(false)}>\r\n        <Modal.Header>Review Appointment Details</Modal.Header>\r\n        <Modal.Content>\r\n          {data_service && data_employee ? (\r\n            !loading_employee && !loading_service ? (\r\n              <Content width=\"80%\" height=\"100%\" margin=\"0 auto\">\r\n                <DGrid>\r\n                  <Content\r\n                    width=\"100%\"\r\n                    flex\r\n                    justify=\"space-between\"\r\n                    align=\"center\"\r\n                  >\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      <span>Service:</span>\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.name}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Aesthetician:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>\r\n                        {data_employee.employee.title}{\" \"}\r\n                        {data_employee.employee.firstName}{\" \"}\r\n                        {data_employee.employee.lastName}\r\n                      </h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Date:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{moment(startDate).format(\"LL\")}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Time:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{selectedTime}</h5>\r\n                    </Content>\r\n                  </Content>\r\n                  <Content width=\"100%\" flex justify=\"space-between\">\r\n                    <DLabel\r\n                      flex\r\n                      justifyCenter\r\n                      alignCenter\r\n                      weight={700}\r\n                      w={\"40%\"}\r\n                      size=\"16px\"\r\n                      bgcolor=\"#eee\"\r\n                      rounded\r\n                    >\r\n                      Duration:\r\n                    </DLabel>\r\n                    <Content\r\n                      width=\"50%\"\r\n                      flex\r\n                      justify=\"flex-start\"\r\n                      align=\"center\"\r\n                      pad=\"10px 15px\"\r\n                    >\r\n                      <h5>{data_service.service.duration} min</h5>\r\n                    </Content>\r\n                  </Content>\r\n                </DGrid>\r\n              </Content>\r\n            ) : (\r\n              <Skeleton count={5} />\r\n            )\r\n          ) : (\r\n            <Skeleton count={5} />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <DButton onClick={handleNewAppointment}>\r\n            {loading ? <Spinner small inverted /> : \"Make Appointment\"}\r\n          </DButton>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst NEW_APPOINTMENT = gql`\r\n  mutation createUserExistAppointment(\r\n    $clientId: ID!\r\n    $serviceId: ID!\r\n    $employeeId: ID!\r\n    $date: String!\r\n    $start: String!\r\n    $message: String\r\n  ) {\r\n    createUserExistAppointment(\r\n      userId: $clientId\r\n      appointmentInput: {\r\n        serviceId: $serviceId\r\n        employeeId: $employeeId\r\n        date: $date\r\n        slot_start: $start\r\n        message: $message\r\n      }\r\n    ) {\r\n      _id\r\n      user {\r\n        _id\r\n        firstName\r\n        lastName\r\n      }\r\n      employee {\r\n        _id\r\n        title\r\n        firstName\r\n        lastName\r\n        role\r\n      }\r\n      service {\r\n        _id\r\n        name\r\n        price\r\n        duration\r\n      }\r\n      slot_start\r\n      date\r\n      status\r\n      message\r\n      note\r\n      reschedule {\r\n        appointmentId\r\n        new\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NewConfirm;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { DGrid } from \"../../styled/containers\";\r\nimport AppointmentInputs from \"../../main/appointment/AppointmentInputs\";\r\nimport AppointDate from \"../../main/appointment/AppointDate\";\r\nimport NewConfirm from \"./NewConfirm\";\r\n\r\nconst AppointmentModal = ({ clientId }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [service, setService] = useState([]);\r\n  const [serviceEmp, setServiceEmp] = useState([]);\r\n  const [values, setValues] = useState({\r\n    category: \"\"\r\n  });\r\n  const [serviceValue, setServiceValue] = useState(\"\");\r\n  const [employeeVal, setEmployeeVal] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date().setDate(new Date().getDate() + 1)\r\n  );\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <DButton onClick={() => setOpen(true)}>New Appointment</DButton>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Modal.Header>New Appointment</Modal.Header>\r\n        <Modal.Content>\r\n          <DGrid two>\r\n            <AppointmentInputs\r\n              values={values}\r\n              setValues={setValues}\r\n              employeeVal={employeeVal}\r\n              setService={setService}\r\n              setServiceEmp={setServiceEmp}\r\n              serviceValue={serviceValue}\r\n              setServiceValue={setServiceValue}\r\n              setEmployeeVal={setEmployeeVal}\r\n            />\r\n            <AppointDate\r\n              setStartDate={setStartDate}\r\n              setSelectedTime={setSelectedTime}\r\n              selectedTime={selectedTime}\r\n              startDate={startDate}\r\n              employeeVal={employeeVal}\r\n              serviceValue={serviceValue}\r\n            />\r\n          </DGrid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <NewConfirm\r\n            clientId={clientId}\r\n            setOpen={setOpen}\r\n            serviceValue={serviceValue}\r\n            employeeVal={employeeVal}\r\n            startDate={startDate}\r\n            selectedTime={selectedTime}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { FETCH_USER_ACCOUNT } from \"../../util/graphql/user\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PhotoBooth from \"../../components/admin/client/PhotoBooth\";\r\nimport ClientDetails from \"../../components/admin/client/ClientDetails\";\r\nimport { Breadcrumb } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppointmentModal from \"../../components/admin/client/AppointmentModal\";\r\n\r\nconst UserInfo = props => {\r\n  const clientId = props.match.params._id;\r\n  const [isClient, setIsClient] = useState({});\r\n\r\n  const { data: dataClient, loading: loadingClient } = useQuery(\r\n    FETCH_USER_ACCOUNT,\r\n    {\r\n      variables: {\r\n        userId: clientId\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataClient) {\r\n      setIsClient(dataClient.user);\r\n    }\r\n  }, [dataClient]);\r\n\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" mcenter pad=\"40px 0\" height=\"100%\">\r\n        <Content\r\n          width=\"100%\"\r\n          margin=\"24px 0\"\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n        >\r\n          <Breadcrumb size={\"large\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/user\">\r\n              Clients\r\n            </Breadcrumb.Section>\r\n            <Breadcrumb.Divider icon=\"right chevron\" />\r\n            <Breadcrumb.Section>\r\n              {isClient && (\r\n                <span>\r\n                  {isClient.firstName} {isClient.lastName}'s\r\n                </span>\r\n              )}\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n          <AppointmentModal clientId={clientId} />\r\n        </Content>\r\n\r\n        <DGrid custom=\"300px 1fr\" gap=\"10px\">\r\n          {dataClient && dataClient.user ? (\r\n            !loadingClient ? (\r\n              <>\r\n                <PhotoBooth photo={dataClient.user.photo} />\r\n                <ClientDetails userInfo={dataClient.user} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={200} width={200} circle />\r\n                <Skeleton height={200} count={2} />\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              <Skeleton height={200} width={200} circle />\r\n              <Skeleton height={200} count={2} />\r\n            </>\r\n          )}\r\n        </DGrid>\r\n      </DSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useContext } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from \"../../../util/hooks/useForm\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton } from \"../../styled/utils\";\r\nimport { Form, Label, Dimmer, Loader, Input, Icon } from \"semantic-ui-react\";\r\n\r\nconst SigninForm = () => {\r\n  const [errors, setErrors] = useState({});\r\n  const context = useContext(AuthContext);\r\n  const { handleChange, handleSubmit, values } = useForm(adminLoginCallback, {\r\n    employeeId: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [loginEmployee, { loading }] = useMutation(EMPLOYEE_LOGIN_MUTATION, {\r\n    update(_, { data: { employeeLogin: employeeData } }) {\r\n      context.employeeLogin(employeeData);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n  });\r\n\r\n  function adminLoginCallback() {\r\n    loginEmployee();\r\n  }\r\n  return (\r\n    <Content width=\"100%\" height=\"100%\" flex justify=\"center\" align=\"center\">\r\n      <Form noValidate onSubmit={handleSubmit} style={{ width: \"80%\" }}>\r\n        <h2>\r\n          <Icon name=\"lock\" />\r\n          Account Signin\r\n        </h2>\r\n\r\n        <Form.Field error={errors.empId || errors.isNotEqual ? true : false}>\r\n          <label>Employee ID</label>\r\n\r\n          {errors.empId || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.empId || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"employeeId\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Employee ID\"\r\n            values={values.employeeId}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Field error={errors.password || errors.general ? true : false}>\r\n          <label>Password</label>\r\n\r\n          {errors.password || errors.isNotEqual ? (\r\n            <Label basic color=\"red\" style={{ border: \"none\" }}>\r\n              {errors.password || errors.isNotEqual}\r\n            </Label>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            values={values.password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <DButton type=\"submit\" fluid size=\"3rem\" fSize=\"18px\" text=\"uppercase\">\r\n          {loading ? (\r\n            <Dimmer active style={{ background: \"transparent\" }}>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </DButton>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst EMPLOYEE_LOGIN_MUTATION = gql`\r\n  mutation employeeLogin($employeeId: String!, $password: String!) {\r\n    employeeLogin(empId: $employeeId, password: $password) {\r\n      _id\r\n      empId\r\n      title\r\n      firstName\r\n      lastName\r\n      contact\r\n      email\r\n      role\r\n      level\r\n      employeeToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SigninForm;\r\n","import React from \"react\";\r\nimport {\r\n  DGrid,\r\n  DSection,\r\n  Content,\r\n  Overlay\r\n} from \"../../components/styled/containers\";\r\nimport SigninForm from \"../../components/admin/authentications/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <DGrid two>\r\n      <DSection\r\n        height=\"100vh\"\r\n        background={\r\n          \"https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n        }\r\n      >\r\n        <Overlay>\r\n          <Content\r\n            className=\"dark\"\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          >\r\n            <h1\r\n              style={{\r\n                fontFamily: \"Playfair Display\",\r\n                fontSize: \"48px\",\r\n                letterSpacing: \"20px\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              Z ESSENCE FACIAL & SPA\r\n            </h1>\r\n          </Content>\r\n        </Overlay>\r\n      </DSection>\r\n      <DSection height=\"100vh\">\r\n        <SigninForm />\r\n      </DSection>\r\n    </DGrid>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { FETCH_HISTORY_APPOINTMENTS } from \"../../../util/graphql/appointment\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Content } from \"../../styled/containers\";\r\nimport { DButton, DLabel } from \"../../styled/utils\";\r\nimport { Eye } from \"styled-icons/fa-regular/Eye\";\r\nimport moment from \"moment\";\r\n\r\nconst HistoryAppointments = () => {\r\n  const [historyAppointments, setHistoryAppointments] = useState([]);\r\n\r\n  const { loading, data: historyAppointmentData } = useQuery(\r\n    FETCH_HISTORY_APPOINTMENTS\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (historyAppointmentData) {\r\n      setHistoryAppointments(historyAppointmentData.appointmentHistory);\r\n    }\r\n  }, [historyAppointmentData]);\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function convertArrayOfObjectsToCSV(array, data) {\r\n    let result;\r\n\r\n    const columnDelimiter = \",\";\r\n    const lineDelimiter = \"\\n\";\r\n    const keys = Object.keys(data[0]);\r\n\r\n    result = \"\";\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr = 0;\r\n      keys.forEach(key => {\r\n        if (ctr > 0) result += columnDelimiter;\r\n\r\n        result += item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n  function downloadCSV(array) {\r\n    const link = document.createElement(\"a\");\r\n    let csv = convertArrayOfObjectsToCSV(array);\r\n    if (csv == null) return;\r\n\r\n    const filename = \"export.csv\";\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute(\"href\", encodeURI(csv));\r\n    link.setAttribute(\"download\", filename);\r\n    link.click();\r\n  }\r\n\r\n  const Export = ({ onExport }) => (\r\n    <DButton onClick={e => onExport(e.target.value)}>Export</DButton>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Appointment ID\",\r\n      selector: \"_id\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"Aesthetician\",\r\n      selector: \"employee\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.employee.firstName} ${row.employee.lastName}`\r\n    },\r\n    {\r\n      name: \"Service\",\r\n      selector: \"service\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${row.service.name}`\r\n    },\r\n    {\r\n      name: \"Date\",\r\n      selector: \"date\",\r\n      wrap: true,\r\n      sortable: true,\r\n      format: row => `${moment(parseInt(row.date)).format(\"LL\")}`\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: row => (\r\n        <span\r\n          style={\r\n            row.status === \"CANCELLED\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"firebrick\" }\r\n              : row.status === \"DONE\"\r\n              ? { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n              : { fontSize: 14, fontWeight: 500, color: \"blue\" }\r\n          }\r\n        >\r\n          {row.status}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n\r\n      cell: row => (\r\n        <DButton as={Link} to={`/zeadmin/appointment/${row._id}`}>\r\n          <Eye size=\"18px\" style={{ color: \"white\" }} />\r\n        </DButton>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const actionsMemo = useMemo(\r\n    () => <Export onExport={() => downloadCSV(historyAppointments)} />,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Content\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      margin=\"5vh 0\"\r\n    >\r\n      {!historyAppointmentData ? (\r\n        <h4>Loading..</h4>\r\n      ) : (\r\n        <DataTable\r\n          title={title}\r\n          columns={columns}\r\n          data={historyAppointmentData.appointmentHistory}\r\n          responsive\r\n          customStyles={customStyles}\r\n          pagination={true}\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={paginationRowsPerPageOptions}\r\n          highlightOnHover\r\n          pointerOnHover\r\n          actions={actionsMemo}\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst customStyles = {\r\n  headRow: {\r\n    style: {\r\n      border: \"none\"\r\n    }\r\n  },\r\n  headCells: {\r\n    style: {\r\n      color: \"#202124\",\r\n      fontSize: \"14px\"\r\n    }\r\n  },\r\n  rows: {\r\n    style: {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"700\",\r\n      color: \"#000\"\r\n    },\r\n    highlightOnHoverStyle: {\r\n      backgroundColor: \"rgb(230, 244, 244)\",\r\n      borderBottomColor: \"#FFFFFF\",\r\n      borderRadius: \"25px\",\r\n      outline: \"1px solid #FFFFFF\"\r\n    }\r\n  },\r\n  pagination: {\r\n    style: {\r\n      marginTop: \"10px\",\r\n      border: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst title = (\r\n  <DLabel\r\n    size=\"18px\"\r\n    bgcolor=\"#6dd5ed\"\r\n    tt=\"uppercase\"\r\n    weight=\"700\"\r\n    pad=\"10px 25px\"\r\n    color=\"#fff\"\r\n    style={{ marginTop: \"10vh\" }}\r\n    rounded\r\n  >\r\n    Appointment History\r\n  </DLabel>\r\n);\r\nconst paginationRowsPerPageOptions = [5, 10, 15, 20];\r\n\r\nexport default HistoryAppointments;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DSection, DGrid, Content } from \"../../components/styled/containers\";\r\nimport { DButton } from \"../../components/styled/utils\";\r\nimport { Breadcrumb, Divider } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/admin/layout/Layout\";\r\nimport CurrentAppointments from \"../../components/admin/appointment/CurrentAppointments\";\r\nimport HistoryAppointments from \"../../components/admin/appointment/HistoryAppointments\";\r\nimport NewModal from \"../../components/admin/appointment/NewModal\";\r\n\r\nconst FileReport = () => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Layout>\r\n      <DSection width=\"90%\" height=\"100%\">\r\n        <Content\r\n          flex\r\n          justify=\"space-between\"\r\n          align=\"center\"\r\n          width=\"100%\"\r\n          margin=\"24px auto\"\r\n        >\r\n          <Breadcrumb size={\"huge\"}>\r\n            <Breadcrumb.Section as={Link} to=\"/zeadmin/report\" active>\r\n              File Report\r\n            </Breadcrumb.Section>\r\n          </Breadcrumb>\r\n        </Content>\r\n        <DGrid>\r\n          <HistoryAppointments />\r\n        </DGrid>\r\n      </DSection>\r\n      <NewModal open={open} setOpen={setOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default FileReport;\r\n","import React from \"react\";\r\n\r\nimport { Modal } from \"semantic-ui-react\";\r\n\r\nconst ShowcaseModal = ({ open, setOpen, showcase }) => {\r\n  return (\r\n    <Modal size=\"small\" open={open} onClose={() => setOpen(false)}>\r\n      <Modal.Header></Modal.Header>\r\n      <Modal.Content>{showcase}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShowcaseModal;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../../util/graphql/cms\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { DButton } from \"../../../styled/utils\";\r\nimport Spinner from \"../../../Spinner\";\r\n\r\nconst DeleteShowcase = ({ openAlert, setOpenAlert, isDeleteShowCase }) => {\r\n  const [deleteShowcase, { loading: loadingDelete }] = useMutation(\r\n    DELETE_SHOWCASE,\r\n    {\r\n      refetchQueries: [\r\n        {\r\n          query: FETCH_SHOWCASE,\r\n          variables: {\r\n            section: \"SHOWCASE\"\r\n          }\r\n        }\r\n      ],\r\n      variables: {\r\n        _id: isDeleteShowCase\r\n      },\r\n      onCompleted(result) {\r\n        setOpenAlert(false);\r\n      }\r\n    }\r\n  );\r\n\r\n  function deleteShowcaseCB() {\r\n    deleteShowcase();\r\n  }\r\n\r\n  return (\r\n    <Modal basic open={openAlert} onClose={() => setOpenAlert(false)}>\r\n      <Modal.Header>Delete Showcase</Modal.Header>\r\n      <Modal.Content>\r\n        Are you sure you want to delete this Showcase Image?\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <DButton confirm basic onClick={deleteShowcaseCB}>\r\n          {loadingDelete ? <Spinner small /> : \"Yes\"}\r\n        </DButton>\r\n        <DButton alert basic>\r\n          No\r\n        </DButton>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DELETE_SHOWCASE = gql`\r\n  mutation deleteShowcase($_id: ID!) {\r\n    deleteShowcase(_id: $_id)\r\n  }\r\n`;\r\n\r\nexport default DeleteShowcase;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { FETCH_SHOWCASE } from \"../../../../util/graphql/cms\";\r\nimport {\r\n  DShowCase,\r\n  Overlay,\r\n  DSection,\r\n  DContainer\r\n} from \"../../../styled/containers\";\r\nimport { DButton } from \"../../../styled/utils\";\r\nimport ShowcaseModal from \"./ShowcaseModal\";\r\nimport DeleteShowcase from \"./DeleteShowcase\";\r\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Showcase = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const mql = window.matchMedia(\"(max-width: 768px)\");\r\n  const [showcase, setShowcase] = useState([]);\r\n  const [isShowCase, setIsShowCase] = useState({});\r\n  const [isDeleteShowCase, setIsDeleteShowCase] = useState({});\r\n\r\n  const { data: showcaseData, loading: dataLoading, error } = useQuery(\r\n    FETCH_SHOWCASE,\r\n    {\r\n      variables: {\r\n        section: \"SHOWCASE\"\r\n      }\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (showcaseData) {\r\n      setShowcase(showcaseData.contentManagements);\r\n    }\r\n  }, [showcaseData]);\r\n\r\n  // DROPZONE\r\n  const [addShowcase, { loading }] = useMutation(NEW_SHOWCASE, {\r\n    refetchQueries: [\r\n      {\r\n        query: FETCH_SHOWCASE,\r\n        variables: {\r\n          section: \"SHOWCASE\"\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const onDrop = useCallback(\r\n    ([file]) => {\r\n      addShowcase({ variables: { file } });\r\n    },\r\n    [addShowcase]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n    setIsShowCase(e.target.value);\r\n  };\r\n\r\n  const handleDelete = e => {\r\n    e.preventDefault();\r\n    setOpenAlert(true);\r\n    setIsDeleteShowCase(e.currentTarget.dataset.scvalue);\r\n    console.log(e.currentTarget.dataset.scvalue);\r\n  };\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    fade: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  return (\r\n    <DSection width=\"900px\" mcenter pad=\"20px 10px\">\r\n      <div\r\n        style={{ border: \"1px dashed #ccc\", width: \"100%\", height: \"150px\" }}\r\n        {...getRootProps()}\r\n      >\r\n        <input {...getInputProps()} />\r\n        {isDragActive ? (\r\n          <h3>Drop Image</h3>\r\n        ) : loading ? (\r\n          <h2>Loading</h2>\r\n        ) : (\r\n          \" Image Drop here\"\r\n        )}\r\n      </div>\r\n      {dataLoading ? (\r\n        <DShowCase\r\n          height=\"50vh\"\r\n          background={\r\n            \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          }\r\n        ></DShowCase>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {showcaseData &&\r\n            showcaseData.contentManagements.map(sc => (\r\n              <DShowCase\r\n                height=\"50vh\"\r\n                width=\"600px\"\r\n                key={sc._id}\r\n                background={\r\n                  sc.photo !== null || sc.photo !== undefined\r\n                    ? `/images/cms/home/${sc.photo}`\r\n                    : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                }\r\n              >\r\n                <Overlay\r\n                  bg={\r\n                    \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n                  }\r\n                  flex\r\n                  justify=\"flex-start\"\r\n                  align=\"center\"\r\n                >\r\n                  <div className=\"overlay-content\">\r\n                    <h3>Z Essence Facial & Spa</h3>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                      Quisquam, doloribus.\r\n                    </p>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      right: 20,\r\n                      display: \"flex\"\r\n                    }}\r\n                  >\r\n                    <DButton\r\n                      value={sc._id}\r\n                      onClick={handleEdit}\r\n                      style={{ width: \"50px\" }}\r\n                    >\r\n                      <Icon name=\"edit\" />\r\n                      <div style={{ visibility: \"hidden\" }}>{sc._id}</div>\r\n                    </DButton>\r\n                    <DButton\r\n                      alert\r\n                      value={sc._id}\r\n                      data-scvalue={sc._id}\r\n                      onClick={handleDelete}\r\n                      style={{ width: \"50px\" }}\r\n                    >\r\n                      <Icon name=\"trash\" />\r\n                      <div style={{ visibility: \"hidden\" }}>{sc._id}</div>\r\n                    </DButton>\r\n                  </div>\r\n                </Overlay>\r\n              </DShowCase>\r\n            ))}\r\n        </Slider>\r\n      )}\r\n\r\n      {isShowCase && (\r\n        <ShowcaseModal open={open} setOpen={setOpen} showcase={isShowCase} />\r\n      )}\r\n\r\n      {isDeleteShowCase && (\r\n        <DeleteShowcase\r\n          openAlert={openAlert}\r\n          setOpenAlert={setOpenAlert}\r\n          isDeleteShowCase={isDeleteShowCase}\r\n        />\r\n      )}\r\n    </DSection>\r\n\r\n    // <DSection height=\"100%\" width=\"100%\">\r\n    //   <h1>Showcase</h1>\r\n    //   <div\r\n    //     style={{ border: \"1px dashed #ccc\", width: \"100%\", height: \"150px\" }}\r\n    //     {...getRootProps()}\r\n    //   >\r\n    //     <input {...getInputProps()} />\r\n    //     {isDragActive ? (\r\n    //       <h3>Drop Image</h3>\r\n    //     ) : loading ? (\r\n    //       <h2>Loading</h2>\r\n    //     ) : (\r\n    //       \" Image Drop here\"\r\n    //     )}\r\n    //   </div>\r\n    //   <DSection height=\"100%\" width=\"100%\">\r\n    //     {dataLoading ? (\r\n    //       <h3>Loading...</h3>\r\n    //     ) : (\r\n    //       <Slider {...settings}>\r\n    //         {showcase.map(cms => (\r\n    //           <DShowCase\r\n    //             key={cms._id}\r\n    //             height=\"90vh\"\r\n    //             background={\r\n    //               cms.photo !== null || cms.photo !== undefined\r\n    //                 ? `/images/cms/home/${cms.photo}`\r\n    //                 : \"https://images.pexels.com/photos/3765134/pexels-photo-3765134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n    //             }\r\n    //           >\r\n    //             <Overlay\r\n    //               bg={\r\n    //                 \"linear-gradient(to right, rgba(0,0,0,0.7), rgba(255,255,255,0.1))\"\r\n    //               }\r\n    //               flex\r\n    //               justify=\"flex-start\"\r\n    //               align=\"center\"\r\n    //             >\r\n    //               <div className=\"overlay-content\">\r\n    //                 <h3>Z Essence Facial & Spa</h3>\r\n    //                 <p>\r\n    //                   Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n    //                   Quisquam, doloribus.\r\n    //                 </p>\r\n    //               </div>\r\n    //               <div\r\n    //                 style={{\r\n    //                   position: \"absolute\",\r\n    //                   top: 0,\r\n    //                   right: 20,\r\n    //                   display: \"flex\"\r\n    //                 }}\r\n    //               >\r\n    //                 <DButton\r\n    //                   value={cms._id}\r\n    //                   onClick={handleEdit}\r\n    //                   style={{ width: \"50px\" }}\r\n    //                 >\r\n    //                   <Icon name=\"edit\" />\r\n    //                   <div style={{ visibility: \"hidden\" }}>{cms._id}</div>\r\n    //                 </DButton>\r\n    //                 <DButton\r\n    //                   alert\r\n    //                   value={cms._id}\r\n    //                   onClick={handleDelete}\r\n    //                   style={{ width: \"50px\" }}\r\n    //                 >\r\n    //                   <Icon name=\"trash\" />\r\n    //                   <div style={{ visibility: \"hidden\" }}>{cms._id}</div>\r\n    //                 </DButton>\r\n    //               </div>\r\n    //             </Overlay>\r\n    //           </DShowCase>\r\n    //         ))}\r\n    //       </Slider>\r\n    //     )}\r\n    //   </DSection>\r\n    //   {isShowCase && (\r\n    //     <ShowcaseModal open={open} setOpen={setOpen} showcase={isShowCase} />\r\n    //   )}\r\n\r\n    //   {isDeleteShowCase && (\r\n    //     <DeleteShowcase\r\n    //       openAlert={openAlert}\r\n    //       setOpenAlert={setOpenAlert}\r\n    //       isDeleteShowCase={isDeleteShowCase}\r\n    //     />\r\n    //   )}\r\n    // </DSection>\r\n  );\r\n};\r\n\r\nconst NEW_SHOWCASE = gql`\r\n  mutation addShowcase($file: Upload) {\r\n    addShowcase(file: $file)\r\n  }\r\n`;\r\n\r\nexport default Showcase;\r\n","import React from \"react\";\r\nimport Layout from \"../../../components/admin/layout/Layout\";\r\nimport Showcase from \"../../../components/admin/cms/home/Showcase\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Layout>\r\n      <Showcase />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AdminAuthRoute } from \"../util/AuthRoute\";\r\nimport { PrivateRoute } from \"../util/PrivateRoute\";\r\n\r\nimport Dashboard from \"./admin/Dashboard\";\r\nimport Appointments from \"./admin/Appointments\";\r\nimport AppointmentDetails from \"./admin/AppointmentDetails\";\r\nimport NewAppointment from \"./admin/NewAppointment\";\r\nimport Employees from \"./admin/Employees\";\r\nimport Employee from \"./admin/Employee\";\r\nimport Categories from \"./admin/Categories\";\r\nimport Category from \"./admin/Category\";\r\nimport Service from \"./admin/Service\";\r\nimport Inquiry from \"./admin/Inquiry\";\r\nimport PersonalAccount from \"./admin/PersonalAccount\";\r\nimport User from \"./admin/User\";\r\nimport UserInfo from \"./admin/UserInfo\";\r\nimport Signin from \"./admin/Signin\";\r\nimport FileReport from \"./admin/FileReport\";\r\nimport Home from \"./admin/cms/Home\";\r\nimport Page404 from \"../pages/Page404\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Redirect from=\"/zeadmin\" to=\"/zeadmin/signin\" exact />\r\n        <AdminAuthRoute path=\"/zeadmin/signin\" component={Signin} exact />\r\n        <PrivateRoute exact path=\"/zeadmin/dashboard\" component={Dashboard} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointment/:_id\"\r\n          component={AppointmentDetails}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/appointments\"\r\n          component={Appointments}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/paccount\"\r\n          component={PersonalAccount}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/user\" component={User} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/userInfo/:_id\"\r\n          component={UserInfo}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/inquiry\" component={Inquiry} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/new_appointment\"\r\n          component={NewAppointment}\r\n        />\r\n\r\n        <PrivateRoute exact path=\"/zeadmin/employees\" component={Employees} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/employee/:_id\"\r\n          component={Employee}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/categories\" component={Categories} />\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/zeadmin/category/:_id\"\r\n          component={Category}\r\n        />\r\n        <PrivateRoute exact path=\"/zeadmin/service/:_id\" component={Service} />\r\n        <PrivateRoute exact path=\"/zeadmin/cms_home\" component={Home} />\r\n        <PrivateRoute exact path=\"/zeadmin/report\" component={FileReport} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","export const theme = {\r\n  primary: \"#6dd5ed\",\r\n  secondary: \"#fe8c00\",\r\n  dark: \"#203A43\",\r\n  light: \"#E9E4F0\",\r\n  red: \"#f12711\",\r\n  green: \"#0f9b0f\",\r\n  blue: \"#2193b0\",\r\n  bluer: \"#2980B9\",\r\n  yellow: \"#fffc00\"\r\n};\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Admin from \"./pages/Admin\";\nimport Page404 from \"./pages/Page404\";\nimport { AuthProvider } from \"./context/auth\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./components/theme\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Redirect from=\"/\" to=\"/zessence\" exact />\n            <Route path=\"/zessence\" component={Main} />\n            <Route path=\"/zeadmin\" component={Admin} />\n            <Route component={Page404} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\n\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\n\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst uploadLink = createUploadLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  const employeeToken = localStorage.getItem(\"jwtTokenEmployee\");\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    };\r\n  }\r\n\r\n  if (employeeToken) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Basic ${employeeToken}`\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(uploadLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"toasted-notes/src/styles.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"pretty-checkbox/dist/pretty-checkbox.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./css/slick-theme.custom.css\";\nimport \"./css/slick.custom.css\";\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}